{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pammi/Desktop/MERN/Dynamic-catalog/combination/PromptVision/app/catalog-editor/components/CatalogBuilder.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { SignedIn, SignedOut, UserButton } from '@clerk/nextjs';\r\nimport { Save, Plus, Image as ImageIcon, Layout, Wand2, Home, Download, Sparkles } from 'lucide-react';\r\nimport axios from 'axios';\r\nimport Link from 'next/link';\r\n\r\ninterface CatalogSection {\r\n  id: string;\r\n  type: 'header' | 'product' | 'grid' | 'featured';\r\n  content: {\r\n    title?: string;\r\n    description?: string;\r\n    image?: string;\r\n    price?: string;\r\n    layout?: 'single' | 'grid' | 'featured';\r\n  };\r\n}\r\n\r\nexport default function CatalogBuilder() {\r\n  const [sections, setSections] = useState<CatalogSection[]>([]);\r\n  const [prompt, setPrompt] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedSection, setSelectedSection] = useState<string | null>(null);\r\n  const [saveStatus, setSaveStatus] = useState<'idle' | 'saving' | 'saved' | 'error'>('idle');\r\n\r\n  const generateImage = async (prompt: string) => {\r\n    try {\r\n      const response = await axios.post('/api/generate-image', { prompt });\r\n      return response.data.imageUrl;\r\n    } catch (error) {\r\n      console.error('Error generating image:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handlePromptSubmit = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Generate a product image based on the prompt\r\n      const imageUrl = await generateImage(prompt);\r\n      \r\n      // Create a new section with the generated content\r\n      const newSection: CatalogSection = {\r\n        id: `section-${Date.now()}`,\r\n        type: 'product',\r\n        content: {\r\n          title: 'New Product',\r\n          description: prompt,\r\n          image: imageUrl,\r\n          price: '$99.99',\r\n          layout: 'single'\r\n        }\r\n      };\r\n\r\n      setSections([...sections, newSection]);\r\n      setPrompt('');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const addSection = (type: CatalogSection['type']) => {\r\n    const newSection: CatalogSection = {\r\n      id: `section-${Date.now()}`,\r\n      type,\r\n      content: {\r\n        title: type === 'header' ? 'Catalog Title' : 'New Product',\r\n        description: type === 'header' ? 'Catalog Description' : 'Product Description',\r\n        layout: type === 'grid' ? 'grid' : 'single'\r\n      }\r\n    };\r\n    setSections([...sections, newSection]);\r\n  };\r\n\r\n  const updateSection = (id: string, updates: Partial<CatalogSection['content']>) => {\r\n    setSections(sections.map(section => \r\n      section.id === id \r\n        ? { ...section, content: { ...section.content, ...updates } }\r\n        : section\r\n    ));\r\n  };\r\n\r\n  const handleImageUpload = async (sectionId: string, file: File) => {\r\n    setLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      const response = await axios.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        updateSection(sectionId, { image: response.data.url });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setSaveStatus('saving');\r\n    try {\r\n      const catalogData = {\r\n        id: `catalog-${Date.now()}`,\r\n        sections,\r\n        metadata: {\r\n          createdAt: new Date().toISOString(),\r\n          updatedAt: new Date().toISOString(),\r\n          version: '1.0'\r\n        }\r\n      };\r\n\r\n      const response = await axios.post('/api/catalog/save', catalogData);\r\n\r\n      if (response.data.success) {\r\n        setSaveStatus('saved');\r\n        // Reset status after 3 seconds\r\n        setTimeout(() => setSaveStatus('idle'), 3000);\r\n      } else {\r\n        console.error('Save failed:', response.data.error);\r\n        setSaveStatus('error');\r\n        alert('Failed to save catalog: ' + response.data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving catalog:', error);\r\n      setSaveStatus('error');\r\n      if (axios.isAxiosError(error)) {\r\n        alert('Failed to save catalog: ' + (error.response?.data?.details || error.message));\r\n      } else {\r\n        alert('Failed to save catalog. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-gradient-to-b from-blue-50 to-white\">\r\n      <header className=\"bg-gradient-to-r from-[#5046e6] to-[#6b64ff] shadow-lg p-4 flex justify-between items-center\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <Link \r\n            href=\"/\" \r\n            className=\"flex items-center gap-2 px-4 py-2 text-white/80 hover:text-white hover:bg-white/10 rounded-lg transition-colors\"\r\n          >\r\n            <Home className=\"w-5 h-5\" />\r\n            <span>Home</span>\r\n          </Link>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Layout className=\"w-6 h-6 text-white\" />\r\n            <h1 className=\"text-xl font-bold text-white\">\r\n              Catalog Editor\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center space-x-4\">\r\n          <button\r\n            onClick={handleSave}\r\n            disabled={loading || saveStatus === 'saving'}\r\n            className={`flex items-center gap-2 px-4 py-2 rounded-lg transition-all ${\r\n              saveStatus === 'saving' \r\n                ? 'bg-white/20 cursor-not-allowed'\r\n                : saveStatus === 'saved'\r\n                ? 'bg-green-500 hover:bg-green-600'\r\n                : saveStatus === 'error'\r\n                ? 'bg-red-500 hover:bg-red-600'\r\n                : 'bg-white/10 hover:bg-white/20'\r\n            } text-white`}\r\n          >\r\n            {saveStatus === 'saving' ? (\r\n              <>\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\" />\r\n                Saving...\r\n              </>\r\n            ) : saveStatus === 'saved' ? (\r\n              <>\r\n                <Save className=\"w-4 h-4\" />\r\n                Saved!\r\n              </>\r\n            ) : saveStatus === 'error' ? (\r\n              <>\r\n                <Save className=\"w-4 h-4\" />\r\n                Error Saving\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Save className=\"w-4 h-4\" />\r\n                Save\r\n              </>\r\n            )}\r\n          </button>\r\n          <SignedIn>\r\n            <UserButton afterSignOutUrl=\"/\" />\r\n          </SignedIn>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"flex-1 p-6\">\r\n        <div className=\"flex gap-6 max-w-7xl mx-auto\">\r\n          {/* Toolbar */}\r\n          <div className=\"w-72 space-y-6\">\r\n            <div className=\"bg-white/70 backdrop-blur-sm rounded-xl shadow-lg p-6 border border-white/20\">\r\n              <h2 className=\"text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2\">\r\n                <Plus className=\"w-5 h-5 text-[#5046e6]\" />\r\n                Add Sections\r\n              </h2>\r\n              <div className=\"space-y-3\">\r\n                <button\r\n                  onClick={() => addSection('header')}\r\n                  className=\"w-full flex items-center gap-2 p-3 hover:bg-[#5046e6]/5 rounded-lg transition-colors text-gray-700 hover:text-[#5046e6]\"\r\n                >\r\n                  <Layout className=\"w-4 h-4\" />\r\n                  Add Header\r\n                </button>\r\n                <button\r\n                  onClick={() => addSection('product')}\r\n                  className=\"w-full flex items-center gap-2 p-3 hover:bg-[#5046e6]/5 rounded-lg transition-colors text-gray-700 hover:text-[#5046e6]\"\r\n                >\r\n                  <ImageIcon className=\"w-4 h-4\" />\r\n                  Add Product\r\n                </button>\r\n                <button\r\n                  onClick={() => addSection('grid')}\r\n                  className=\"w-full flex items-center gap-2 p-3 hover:bg-[#5046e6]/5 rounded-lg transition-colors text-gray-700 hover:text-[#5046e6]\"\r\n                >\r\n                  <Layout className=\"w-4 h-4\" />\r\n                  Add Grid\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white/70 backdrop-blur-sm rounded-xl shadow-lg p-6 border border-white/20\">\r\n              <h2 className=\"text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2\">\r\n                <Wand2 className=\"w-5 h-5 text-[#5046e6]\" />\r\n                AI Generation\r\n              </h2>\r\n              <div className=\"space-y-4\">\r\n                <textarea\r\n                  value={prompt}\r\n                  onChange={(e) => setPrompt(e.target.value)}\r\n                  placeholder=\"Describe your product...\"\r\n                  className=\"w-full p-3 border border-gray-200 rounded-lg focus:border-[#5046e6] focus:ring-1 focus:ring-[#5046e6] bg-white/50\"\r\n                  rows={4}\r\n                />\r\n                <button\r\n                  onClick={handlePromptSubmit}\r\n                  disabled={loading || !prompt}\r\n                  className=\"w-full flex items-center justify-center gap-2 p-3 bg-[#5046e6] text-white rounded-lg hover:bg-[#6b64ff] disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                >\r\n                  {loading ? (\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent\" />\r\n                  ) : (\r\n                    <Sparkles className=\"w-4 h-4\" />\r\n                  )}\r\n                  Generate Section\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Canvas */}\r\n          <div className=\"flex-1 bg-white/70 backdrop-blur-sm rounded-xl shadow-lg p-8 border border-white/20 min-h-[calc(100vh-8rem)]\">\r\n            {sections.length === 0 ? (\r\n              <div className=\"flex flex-col items-center justify-center h-full text-gray-400\">\r\n                <Plus className=\"w-12 h-12 mb-4\" />\r\n                <p className=\"text-lg\">Add sections or use AI to generate content</p>\r\n                <p className=\"text-sm mt-2\">Click the buttons on the left to get started</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-8\">\r\n                {sections.map((section) => (\r\n                  <div\r\n                    key={section.id}\r\n                    className={`p-6 border rounded-xl transition-all ${\r\n                      selectedSection === section.id \r\n                        ? 'ring-2 ring-[#5046e6] border-transparent' \r\n                        : 'border-gray-200 hover:border-[#5046e6]/20'\r\n                    }`}\r\n                    onClick={() => setSelectedSection(section.id)}\r\n                  >\r\n                    {section.type === 'header' && (\r\n                      <div className=\"text-center\">\r\n                        <input\r\n                          type=\"text\"\r\n                          value={section.content.title}\r\n                          onChange={(e) => updateSection(section.id, { title: e.target.value })}\r\n                          className=\"text-3xl font-bold text-center w-full border-none focus:outline-none focus:ring-1 focus:ring-[#5046e6] rounded-lg px-4 py-2\"\r\n                          placeholder=\"Enter Title\"\r\n                        />\r\n                        <textarea\r\n                          value={section.content.description}\r\n                          onChange={(e) => updateSection(section.id, { description: e.target.value })}\r\n                          className=\"mt-4 text-gray-600 text-center w-full border-none focus:outline-none focus:ring-1 focus:ring-[#5046e6] rounded-lg px-4 py-2 resize-none\"\r\n                          placeholder=\"Enter Description\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    {section.type === 'product' && (\r\n                      <div className=\"flex gap-8\">\r\n                        <div className=\"w-1/2\">\r\n                          <label className=\"cursor-pointer block group relative\">\r\n                            {section.content.image ? (\r\n                              <div className=\"relative group\">\r\n                                <img\r\n                                  src={section.content.image}\r\n                                  alt={section.content.title}\r\n                                  className=\"w-full h-64 object-cover rounded-lg shadow-md group-hover:opacity-90 transition-opacity\"\r\n                                />\r\n                                <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity\">\r\n                                  <div className=\"bg-black/50 text-white px-4 py-2 rounded-lg backdrop-blur-sm\">\r\n                                    Click to change image\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"w-full h-64 bg-gray-100 rounded-lg flex flex-col items-center justify-center group-hover:bg-gray-200 transition-colors\">\r\n                                <ImageIcon className=\"w-8 h-8 text-gray-400 mb-2\" />\r\n                                <span className=\"text-sm text-gray-500\">Click to upload image</span>\r\n                              </div>\r\n                            )}\r\n                            <input\r\n                              type=\"file\"\r\n                              accept=\"image/*\"\r\n                              className=\"hidden\"\r\n                              onChange={(e) => {\r\n                                const file = e.target.files?.[0];\r\n                                if (file) {\r\n                                  handleImageUpload(section.id, file);\r\n                                }\r\n                              }}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"w-1/2 space-y-4\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={section.content.title}\r\n                            onChange={(e) => updateSection(section.id, { title: e.target.value })}\r\n                            className=\"text-2xl font-bold w-full border-none focus:outline-none focus:ring-1 focus:ring-[#5046e6] rounded-lg px-4 py-2\"\r\n                            placeholder=\"Product Title\"\r\n                          />\r\n                          <textarea\r\n                            value={section.content.description}\r\n                            onChange={(e) => updateSection(section.id, { description: e.target.value })}\r\n                            className=\"w-full h-32 border-none focus:outline-none focus:ring-1 focus:ring-[#5046e6] rounded-lg px-4 py-2 resize-none\"\r\n                            placeholder=\"Product Description\"\r\n                          />\r\n                          <input\r\n                            type=\"text\"\r\n                            value={section.content.price}\r\n                            onChange={(e) => updateSection(section.id, { price: e.target.value })}\r\n                            className=\"text-xl font-bold text-[#5046e6] w-full border-none focus:outline-none focus:ring-1 focus:ring-[#5046e6] rounded-lg px-4 py-2\"\r\n                            placeholder=\"Price\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {section.type === 'grid' && (\r\n                      <div className=\"grid grid-cols-2 gap-6\">\r\n                        {[1, 2, 3, 4].map((index) => (\r\n                          <div key={index} className=\"border border-gray-200 p-4 rounded-lg hover:border-[#5046e6]/20 transition-colors\">\r\n                            <div className=\"w-full h-32 bg-gray-100 rounded-lg flex items-center justify-center mb-4\">\r\n                              <ImageIcon className=\"w-6 h-6 text-gray-400\" />\r\n                            </div>\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Product Title\"\r\n                              className=\"text-lg font-semibold w-full border-none focus:outline-none focus:ring-1 focus:ring-[#5046e6] rounded-lg px-3 py-1.5\"\r\n                            />\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"$0.00\"\r\n                              className=\"text-sm text-[#5046e6] w-full border-none focus:outline-none focus:ring-1 focus:ring-[#5046e6] rounded-lg px-3 py-1.5 mt-2\"\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAIA;AADA;AADA;AAAA;AAAA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAJA;;;;;;AAoBe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IAC7D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAyC;IAEpF,MAAM,gBAAgB,OAAO;QAC3B,IAAI;YACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,uBAAuB;gBAAE;YAAO;YAClE,OAAO,SAAS,IAAI,CAAC,QAAQ;QAC/B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,OAAO;QACT;IACF;IAEA,MAAM,qBAAqB;QACzB,WAAW;QACX,IAAI;YACF,+CAA+C;YAC/C,MAAM,WAAW,MAAM,cAAc;YAErC,kDAAkD;YAClD,MAAM,aAA6B;gBACjC,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI;gBAC3B,MAAM;gBACN,SAAS;oBACP,OAAO;oBACP,aAAa;oBACb,OAAO;oBACP,OAAO;oBACP,QAAQ;gBACV;YACF;YAEA,YAAY;mBAAI;gBAAU;aAAW;YACrC,UAAU;QACZ,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,UAAU;QAC1B;QACA,WAAW;IACb;IAEA,MAAM,aAAa,CAAC;QAClB,MAAM,aAA6B;YACjC,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI;YAC3B;YACA,SAAS;gBACP,OAAO,SAAS,WAAW,kBAAkB;gBAC7C,aAAa,SAAS,WAAW,wBAAwB;gBACzD,QAAQ,SAAS,SAAS,SAAS;YACrC;QACF;QACA,YAAY;eAAI;YAAU;SAAW;IACvC;IAEA,MAAM,gBAAgB,CAAC,IAAY;QACjC,YAAY,SAAS,GAAG,CAAC,CAAA,UACvB,QAAQ,EAAE,KAAK,KACX;gBAAE,GAAG,OAAO;gBAAE,SAAS;oBAAE,GAAG,QAAQ,OAAO;oBAAE,GAAG,OAAO;gBAAC;YAAE,IAC1D;IAER;IAEA,MAAM,oBAAoB,OAAO,WAAmB;QAClD,WAAW;QACX,IAAI;YACF,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,QAAQ;YAExB,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,eAAe,UAAU;gBACzD,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAEA,IAAI,SAAS,IAAI,CAAC,OAAO,EAAE;gBACzB,cAAc,WAAW;oBAAE,OAAO,SAAS,IAAI,CAAC,GAAG;gBAAC;YACtD;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C;QACA,WAAW;IACb;IAEA,MAAM,aAAa;QACjB,cAAc;QACd,IAAI;YACF,MAAM,cAAc;gBAClB,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI;gBAC3B;gBACA,UAAU;oBACR,WAAW,IAAI,OAAO,WAAW;oBACjC,WAAW,IAAI,OAAO,WAAW;oBACjC,SAAS;gBACX;YACF;YAEA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,qBAAqB;YAEvD,IAAI,SAAS,IAAI,CAAC,OAAO,EAAE;gBACzB,cAAc;gBACd,+BAA+B;gBAC/B,WAAW,IAAM,cAAc,SAAS;YAC1C,OAAO;gBACL,QAAQ,KAAK,CAAC,gBAAgB,SAAS,IAAI,CAAC,KAAK;gBACjD,cAAc;gBACd,MAAM,6BAA6B,SAAS,IAAI,CAAC,KAAK;YACxD;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,cAAc;YACd,IAAI,wIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;gBAC7B,MAAM,6BAA6B,CAAC,MAAM,QAAQ,EAAE,MAAM,WAAW,MAAM,OAAO;YACpF,OAAO;gBACL,MAAM;YACR;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAO,WAAU;;kCAChB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+HAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAU;;kDAEV,6LAAC,sMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,6LAAC;kDAAK;;;;;;;;;;;;0CAER,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,wNAAA,CAAA,SAAM;wCAAC,WAAU;;;;;;kDAClB,6LAAC;wCAAG,WAAU;kDAA+B;;;;;;;;;;;;;;;;;;kCAKjD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAS;gCACT,UAAU,WAAW,eAAe;gCACpC,WAAW,CAAC,4DAA4D,EACtE,eAAe,WACX,mCACA,eAAe,UACf,oCACA,eAAe,UACf,gCACA,gCACL,WAAW,CAAC;0CAEZ,eAAe,yBACd;;sDACE,6LAAC;4CAAI,WAAU;;;;;;wCAAiF;;mDAGhG,eAAe,wBACjB;;sDACE,6LAAC,qMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;wCAAY;;mDAG5B,eAAe,wBACjB;;sDACE,6LAAC,qMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;wCAAY;;iEAI9B;;sDACE,6LAAC,qMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;wCAAY;;;;;;;;0CAKlC,6LAAC,4KAAA,CAAA,WAAQ;0CACP,cAAA,6LAAC,8KAAA,CAAA,aAAU;oCAAC,iBAAgB;;;;;;;;;;;;;;;;;;;;;;;0BAKlC,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC,qMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAA2B;;;;;;;sDAG7C,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDACC,SAAS,IAAM,WAAW;oDAC1B,WAAU;;sEAEV,6LAAC,wNAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;wDAAY;;;;;;;8DAGhC,6LAAC;oDACC,SAAS,IAAM,WAAW;oDAC1B,WAAU;;sEAEV,6LAAC,uMAAA,CAAA,QAAS;4DAAC,WAAU;;;;;;wDAAY;;;;;;;8DAGnC,6LAAC;oDACC,SAAS,IAAM,WAAW;oDAC1B,WAAU;;sEAEV,6LAAC,wNAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;wDAAY;;;;;;;;;;;;;;;;;;;8CAMpC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC,kNAAA,CAAA,QAAK;oDAAC,WAAU;;;;;;gDAA2B;;;;;;;sDAG9C,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDACC,OAAO;oDACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;oDACzC,aAAY;oDACZ,WAAU;oDACV,MAAM;;;;;;8DAER,6LAAC;oDACC,SAAS;oDACT,UAAU,WAAW,CAAC;oDACtB,WAAU;;wDAET,wBACC,6LAAC;4DAAI,WAAU;;;;;iFAEf,6LAAC,6MAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;wDACpB;;;;;;;;;;;;;;;;;;;;;;;;;sCAQV,6LAAC;4BAAI,WAAU;sCACZ,SAAS,MAAM,KAAK,kBACnB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,qMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,6LAAC;wCAAE,WAAU;kDAAU;;;;;;kDACvB,6LAAC;wCAAE,WAAU;kDAAe;;;;;;;;;;;qDAG9B,6LAAC;gCAAI,WAAU;0CACZ,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC;wCAEC,WAAW,CAAC,qCAAqC,EAC/C,oBAAoB,QAAQ,EAAE,GAC1B,6CACA,6CACJ;wCACF,SAAS,IAAM,mBAAmB,QAAQ,EAAE;;4CAE3C,QAAQ,IAAI,KAAK,0BAChB,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDACC,MAAK;wDACL,OAAO,QAAQ,OAAO,CAAC,KAAK;wDAC5B,UAAU,CAAC,IAAM,cAAc,QAAQ,EAAE,EAAE;gEAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4DAAC;wDACnE,WAAU;wDACV,aAAY;;;;;;kEAEd,6LAAC;wDACC,OAAO,QAAQ,OAAO,CAAC,WAAW;wDAClC,UAAU,CAAC,IAAM,cAAc,QAAQ,EAAE,EAAE;gEAAE,aAAa,EAAE,MAAM,CAAC,KAAK;4DAAC;wDACzE,WAAU;wDACV,aAAY;;;;;;;;;;;;4CAKjB,QAAQ,IAAI,KAAK,2BAChB,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;kEACb,cAAA,6LAAC;4DAAM,WAAU;;gEACd,QAAQ,OAAO,CAAC,KAAK,iBACpB,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EACC,KAAK,QAAQ,OAAO,CAAC,KAAK;4EAC1B,KAAK,QAAQ,OAAO,CAAC,KAAK;4EAC1B,WAAU;;;;;;sFAEZ,6LAAC;4EAAI,WAAU;sFACb,cAAA,6LAAC;gFAAI,WAAU;0FAA+D;;;;;;;;;;;;;;;;yFAMlF,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,uMAAA,CAAA,QAAS;4EAAC,WAAU;;;;;;sFACrB,6LAAC;4EAAK,WAAU;sFAAwB;;;;;;;;;;;;8EAG5C,6LAAC;oEACC,MAAK;oEACL,QAAO;oEACP,WAAU;oEACV,UAAU,CAAC;wEACT,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;wEAChC,IAAI,MAAM;4EACR,kBAAkB,QAAQ,EAAE,EAAE;wEAChC;oEACF;;;;;;;;;;;;;;;;;kEAIN,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEACC,MAAK;gEACL,OAAO,QAAQ,OAAO,CAAC,KAAK;gEAC5B,UAAU,CAAC,IAAM,cAAc,QAAQ,EAAE,EAAE;wEAAE,OAAO,EAAE,MAAM,CAAC,KAAK;oEAAC;gEACnE,WAAU;gEACV,aAAY;;;;;;0EAEd,6LAAC;gEACC,OAAO,QAAQ,OAAO,CAAC,WAAW;gEAClC,UAAU,CAAC,IAAM,cAAc,QAAQ,EAAE,EAAE;wEAAE,aAAa,EAAE,MAAM,CAAC,KAAK;oEAAC;gEACzE,WAAU;gEACV,aAAY;;;;;;0EAEd,6LAAC;gEACC,MAAK;gEACL,OAAO,QAAQ,OAAO,CAAC,KAAK;gEAC5B,UAAU,CAAC,IAAM,cAAc,QAAQ,EAAE,EAAE;wEAAE,OAAO,EAAE,MAAM,CAAC,KAAK;oEAAC;gEACnE,WAAU;gEACV,aAAY;;;;;;;;;;;;;;;;;;4CAMnB,QAAQ,IAAI,KAAK,wBAChB,6LAAC;gDAAI,WAAU;0DACZ;oDAAC;oDAAG;oDAAG;oDAAG;iDAAE,CAAC,GAAG,CAAC,CAAC,sBACjB,6LAAC;wDAAgB,WAAU;;0EACzB,6LAAC;gEAAI,WAAU;0EACb,cAAA,6LAAC,uMAAA,CAAA,QAAS;oEAAC,WAAU;;;;;;;;;;;0EAEvB,6LAAC;gEACC,MAAK;gEACL,aAAY;gEACZ,WAAU;;;;;;0EAEZ,6LAAC;gEACC,MAAK;gEACL,aAAY;gEACZ,WAAU;;;;;;;uDAZJ;;;;;;;;;;;uCA1FX,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHnC;GArXwB;KAAA"}},
    {"offset": {"line": 781, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}