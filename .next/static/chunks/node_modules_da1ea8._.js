(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_da1ea8._.js", {

"[project]/node_modules/@cesdk/engine/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "LogLevel": (()=>Cd),
    "MimeType": (()=>mu),
    "WorkerClient": (()=>xd),
    "_applyFallback": (()=>Tl),
    "_getBlockStream": (()=>yl),
    "_initWithDefaults": (()=>Cl),
    "_makeEngineChannel": (()=>wl),
    "_makeValueChannel": (()=>gl),
    "_memoizeResult": (()=>bl),
    "_migrateConfigObject": (()=>Al),
    "_streams": (()=>$d),
    "_warnKeys": (()=>kl),
    "default": (()=>CreativeEngine),
    "defaultLogger": (()=>El),
    "isCMYKColor": (()=>ar),
    "isRGBAColor": (()=>or),
    "isSpotColor": (()=>ir),
    "normalizeBaseURL": (()=>Sl),
    "supportsBrowser": (()=>Hd),
    "supportsVideo": (()=>jd),
    "supportsVideoExport": (()=>Ud),
    "supportsWasm": (()=>Dd)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var e1 = Object.create, t = Object.defineProperty, r = Object.getOwnPropertyDescriptor, n = Object.getOwnPropertyNames, o = Object.getPrototypeOf, i = Object.prototype.hasOwnProperty, a = (e1, t)=>(t = Symbol[e1]) ? t : Symbol.for("Symbol." + e1), s = (e1)=>{
    throw TypeError(e1);
}, u = (e1, r, n)=>r in e1 ? t(e1, r, {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: n
    }) : e1[r] = n, c = (e1, r)=>t(e1, "name", {
        value: r,
        configurable: !0
    }), l = (e1, t)=>function() {
        return t || (0, e1[n(e1)[0]])((t = {
            exports: {}
        }).exports, t), t.exports;
    }, d = (a, s, u)=>(u = null != a ? e1(o(a)) : {}, ((e1, o, a, s)=>{
        if (o && "object" == typeof o || "function" == typeof o) for (let u of n(o))i.call(e1, u) || u === a || t(e1, u, {
            get: ()=>o[u],
            enumerable: !(s = r(o, u)) || s.enumerable
        });
        return e1;
    })(!s && a && a.__esModule ? u : t(u, "default", {
        value: a,
        enumerable: !0
    }), a)), h = (t)=>[
        ,
        ,
        ,
        e1(t?.[a("metadata")] ?? null)
    ], f = [
    "class",
    "method",
    "getter",
    "setter",
    "accessor",
    "field",
    "value",
    "get",
    "set"
], p = (e1)=>void 0 !== e1 && "function" != typeof e1 ? s("Function expected") : e1, m = (e1, t, r, n, o)=>({
        kind: f[e1],
        name: t,
        metadata: n,
        addInitializer: (e1)=>r._ ? s("Already initialized") : o.push(p(e1 || null))
    }), g = (e1, t)=>u(t, a("metadata"), e1[3]), v = (e1, t, r, n)=>{
    for(var o = 0, i = e1[t >> 1], a = i && i.length; o < a; o++)1 & t ? i[o].call(r) : n = i[o].call(r, n);
    return n;
}, y = (e1, n, o, i, a, u)=>{
    var l, d, h, v, y, b = 7 & n, w = !!(8 & n), S = !!(16 & n), k = b > 3 ? e1.length + 1 : b ? w ? 1 : 2 : 0, T = f[b + 5], A = b > 3 && (e1[k - 1] = []), P = e1[k] || (e1[k] = []), F = b && (!S && !w && (a = a.prototype), b < 5 && (b > 3 || !S) && r(b < 4 ? a : {
        get [o] () {
            return E(this, u);
        },
        set [o] (e){
            return C(this, u, e);
        }
    }, o));
    b ? S && b < 4 && c(u, (b > 2 ? "set " : b > 1 ? "get " : "") + o) : c(a, o);
    for(var L = i.length - 1; L >= 0; L--)v = m(b, o, h = {}, e1[3], P), b && (v.static = w, v.private = S, y = v.access = {
        has: S ? (e1)=>_(a, e1) : (e1)=>o in e1
    }, 3 ^ b && (y.get = S ? (e1)=>(1 ^ b ? E : x)(e1, a, 4 ^ b ? u : F.get) : (e1)=>e1[o]), b > 2 && (y.set = S ? (e1, t)=>C(e1, a, t, 4 ^ b ? u : F.set) : (e1, t)=>e1[o] = t)), d = (0, i[L])(b ? b < 4 ? S ? u : F[T] : b > 4 ? void 0 : {
        get: F.get,
        set: F.set
    } : a, v), h._ = 1, 4 ^ b || void 0 === d ? p(d) && (b > 4 ? A.unshift(d) : b ? S ? u = d : F[T] = d : a = d) : "object" != typeof d || null === d ? s("Object expected") : (p(l = d.get) && (F.get = l), p(l = d.set) && (F.set = l), p(l = d.init) && A.unshift(l));
    return b || g(e1, a), F && t(a, o, F), S ? 4 ^ b ? u : F : a;
}, b = (e1, t, r)=>u(e1, "symbol" != typeof t ? t + "" : t, r), w = (e1, t, r)=>t.has(e1) || s("Cannot " + r), _ = (e1, t)=>Object(t) !== t ? s('Cannot use the "in" operator on this value') : e1.has(t), E = (e1, t, r)=>(w(e1, t, "read from private field"), r ? r.call(e1) : t.get(e1)), S = (e1, t, r)=>t.has(e1) ? s("Cannot add the same private member more than once") : t instanceof WeakSet ? t.add(e1) : t.set(e1, r), C = (e1, t, r, n)=>(w(e1, t, "write to private field"), n ? n.call(e1, r) : t.set(e1, r), r), x = (e1, t, r)=>(w(e1, t, "access private method"), r), k = l({
    "../../../node_modules/lodash/isObject.js" (e1, t) {
        t.exports = function(e1) {
            var t = typeof e1;
            return null != e1 && ("object" == t || "function" == t);
        };
    }
}), T = l({
    "../../../node_modules/lodash/_freeGlobal.js" (e1, t) {
        var r = "object" == typeof global && global && global.Object === Object && global;
        t.exports = r;
    }
}), A = l({
    "../../../node_modules/lodash/_root.js" (e1, t) {
        var r = T(), n = "object" == typeof self && self && self.Object === Object && self, o = r || n || Function("return this")();
        t.exports = o;
    }
}), P = l({
    "../../../node_modules/lodash/now.js" (e1, t) {
        var r = A();
        t.exports = function() {
            return r.Date.now();
        };
    }
}), F = l({
    "../../../node_modules/lodash/_trimmedEndIndex.js" (e1, t) {
        var r = /\s/;
        t.exports = function(e1) {
            for(var t = e1.length; t-- && r.test(e1.charAt(t)););
            return t;
        };
    }
}), L = l({
    "../../../node_modules/lodash/_baseTrim.js" (e1, t) {
        var r = F(), n = /^\s+/;
        t.exports = function(e1) {
            return e1 ? e1.slice(0, r(e1) + 1).replace(n, "") : e1;
        };
    }
}), D = l({
    "../../../node_modules/lodash/_Symbol.js" (e1, t) {
        var r = A().Symbol;
        t.exports = r;
    }
}), B = l({
    "../../../node_modules/lodash/_getRawTag.js" (e1, t) {
        var r = D(), n = Object.prototype, o = n.hasOwnProperty, i = n.toString, a = r ? r.toStringTag : void 0;
        t.exports = function(e1) {
            var t = o.call(e1, a), r = e1[a];
            try {
                e1[a] = void 0;
                var n = !0;
            } catch (e1) {}
            var s = i.call(e1);
            return n && (t ? e1[a] = r : delete e1[a]), s;
        };
    }
}), R = l({
    "../../../node_modules/lodash/_objectToString.js" (e1, t) {
        var r = Object.prototype.toString;
        t.exports = function(e1) {
            return r.call(e1);
        };
    }
}), M = l({
    "../../../node_modules/lodash/_baseGetTag.js" (e1, t) {
        var r = D(), n = B(), o = R(), i = r ? r.toStringTag : void 0;
        t.exports = function(e1) {
            return null == e1 ? void 0 === e1 ? "[object Undefined]" : "[object Null]" : i && i in Object(e1) ? n(e1) : o(e1);
        };
    }
}), I = l({
    "../../../node_modules/lodash/isObjectLike.js" (e1, t) {
        t.exports = function(e1) {
            return null != e1 && "object" == typeof e1;
        };
    }
}), O = l({
    "../../../node_modules/lodash/isSymbol.js" (e1, t) {
        var r = M(), n = I();
        t.exports = function(e1) {
            return "symbol" == typeof e1 || n(e1) && "[object Symbol]" == r(e1);
        };
    }
}), j = l({
    "../../../node_modules/lodash/toNumber.js" (e1, t) {
        var r = L(), n = k(), o = O(), i = /^[-+]0x[0-9a-f]+$/i, a = /^0b[01]+$/i, s = /^0o[0-7]+$/i, u = parseInt;
        t.exports = function(e1) {
            if ("number" == typeof e1) return e1;
            if (o(e1)) return NaN;
            if (n(e1)) {
                var t = "function" == typeof e1.valueOf ? e1.valueOf() : e1;
                e1 = n(t) ? t + "" : t;
            }
            if ("string" != typeof e1) return 0 === e1 ? e1 : +e1;
            e1 = r(e1);
            var c = a.test(e1);
            return c || s.test(e1) ? u(e1.slice(2), c ? 2 : 8) : i.test(e1) ? NaN : +e1;
        };
    }
}), U = l({
    "../../../node_modules/lodash/debounce.js" (e1, t) {
        var r = k(), n = P(), o = j(), i = Math.max, a = Math.min;
        t.exports = function(e1, t, s) {
            var u, c, l, d, h, f, p = 0, m = !1, g = !1, v = !0;
            if ("function" != typeof e1) throw new TypeError("Expected a function");
            function y(t) {
                var r = u, n = c;
                return u = c = void 0, p = t, d = e1.apply(n, r);
            }
            function b(e1) {
                var r = e1 - f;
                return void 0 === f || r >= t || r < 0 || g && e1 - p >= l;
            }
            function w() {
                var e1 = n();
                if (b(e1)) return _(e1);
                h = setTimeout(w, function(e1) {
                    var r = t - (e1 - f);
                    return g ? a(r, l - (e1 - p)) : r;
                }(e1));
            }
            function _(e1) {
                return h = void 0, v && u ? y(e1) : (u = c = void 0, d);
            }
            function E() {
                var e1 = n(), r = b(e1);
                if (u = arguments, c = this, f = e1, r) {
                    if (void 0 === h) return function(e1) {
                        return p = e1, h = setTimeout(w, t), m ? y(e1) : d;
                    }(f);
                    if (g) return clearTimeout(h), h = setTimeout(w, t), y(f);
                }
                return void 0 === h && (h = setTimeout(w, t)), d;
            }
            return t = o(t) || 0, r(s) && (m = !!s.leading, l = (g = "maxWait" in s) ? i(o(s.maxWait) || 0, t) : l, v = "trailing" in s ? !!s.trailing : v), E.cancel = function() {
                void 0 !== h && clearTimeout(h), p = 0, u = f = c = h = void 0;
            }, E.flush = function() {
                return void 0 === h ? d : _(n());
            }, E;
        };
    }
}), $ = l({
    "../../../node_modules/lodash/_listCacheClear.js" (e1, t) {
        t.exports = function() {
            this.__data__ = [], this.size = 0;
        };
    }
}), q = l({
    "../../../node_modules/lodash/eq.js" (e1, t) {
        t.exports = function(e1, t) {
            return e1 === t || e1 != e1 && t != t;
        };
    }
}), H = l({
    "../../../node_modules/lodash/_assocIndexOf.js" (e1, t) {
        var r = q();
        t.exports = function(e1, t) {
            for(var n = e1.length; n--;)if (r(e1[n][0], t)) return n;
            return -1;
        };
    }
}), N = l({
    "../../../node_modules/lodash/_listCacheDelete.js" (e1, t) {
        var r = H(), n = Array.prototype.splice;
        t.exports = function(e1) {
            var t = this.__data__, o = r(t, e1);
            return !(o < 0) && (o == t.length - 1 ? t.pop() : n.call(t, o, 1), --this.size, !0);
        };
    }
}), V = l({
    "../../../node_modules/lodash/_listCacheGet.js" (e1, t) {
        var r = H();
        t.exports = function(e1) {
            var t = this.__data__, n = r(t, e1);
            return n < 0 ? void 0 : t[n][1];
        };
    }
}), z = l({
    "../../../node_modules/lodash/_listCacheHas.js" (e1, t) {
        var r = H();
        t.exports = function(e1) {
            return r(this.__data__, e1) > -1;
        };
    }
}), W = l({
    "../../../node_modules/lodash/_listCacheSet.js" (e1, t) {
        var r = H();
        t.exports = function(e1, t) {
            var n = this.__data__, o = r(n, e1);
            return o < 0 ? (++this.size, n.push([
                e1,
                t
            ])) : n[o][1] = t, this;
        };
    }
}), G = l({
    "../../../node_modules/lodash/_ListCache.js" (e1, t) {
        var r = $(), n = N(), o = V(), i = z(), a = W();
        function s(e1) {
            var t = -1, r = null == e1 ? 0 : e1.length;
            for(this.clear(); ++t < r;){
                var n = e1[t];
                this.set(n[0], n[1]);
            }
        }
        s.prototype.clear = r, s.prototype.delete = n, s.prototype.get = o, s.prototype.has = i, s.prototype.set = a, t.exports = s;
    }
}), X = l({
    "../../../node_modules/lodash/_stackClear.js" (e1, t) {
        var r = G();
        t.exports = function() {
            this.__data__ = new r, this.size = 0;
        };
    }
}), Y = l({
    "../../../node_modules/lodash/_stackDelete.js" (e1, t) {
        t.exports = function(e1) {
            var t = this.__data__, r = t.delete(e1);
            return this.size = t.size, r;
        };
    }
}), K = l({
    "../../../node_modules/lodash/_stackGet.js" (e1, t) {
        t.exports = function(e1) {
            return this.__data__.get(e1);
        };
    }
}), Z = l({
    "../../../node_modules/lodash/_stackHas.js" (e1, t) {
        t.exports = function(e1) {
            return this.__data__.has(e1);
        };
    }
}), Q = l({
    "../../../node_modules/lodash/isFunction.js" (e1, t) {
        var r = M(), n = k();
        t.exports = function(e1) {
            if (!n(e1)) return !1;
            var t = r(e1);
            return "[object Function]" == t || "[object GeneratorFunction]" == t || "[object AsyncFunction]" == t || "[object Proxy]" == t;
        };
    }
}), J = l({
    "../../../node_modules/lodash/_coreJsData.js" (e1, t) {
        var r = A()["__core-js_shared__"];
        t.exports = r;
    }
}), ee = l({
    "../../../node_modules/lodash/_isMasked.js" (e1, t) {
        var r, n = J(), o = (r = /[^.]+$/.exec(n && n.keys && n.keys.IE_PROTO || "")) ? "Symbol(src)_1." + r : "";
        t.exports = function(e1) {
            return !!o && o in e1;
        };
    }
}), te = l({
    "../../../node_modules/lodash/_toSource.js" (e1, t) {
        var r = Function.prototype.toString;
        t.exports = function(e1) {
            if (null != e1) {
                try {
                    return r.call(e1);
                } catch (e1) {}
                try {
                    return e1 + "";
                } catch (e1) {}
            }
            return "";
        };
    }
}), re = l({
    "../../../node_modules/lodash/_baseIsNative.js" (e1, t) {
        var r = Q(), n = ee(), o = k(), i = te(), a = /^\[object .+?Constructor\]$/, s = Function.prototype, u = Object.prototype, c = s.toString, l = u.hasOwnProperty, d = RegExp("^" + c.call(l).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        t.exports = function(e1) {
            return !(!o(e1) || n(e1)) && (r(e1) ? d : a).test(i(e1));
        };
    }
}), ne = l({
    "../../../node_modules/lodash/_getValue.js" (e1, t) {
        t.exports = function(e1, t) {
            return null == e1 ? void 0 : e1[t];
        };
    }
}), oe = l({
    "../../../node_modules/lodash/_getNative.js" (e1, t) {
        var r = re(), n = ne();
        t.exports = function(e1, t) {
            var o = n(e1, t);
            return r(o) ? o : void 0;
        };
    }
}), ie = l({
    "../../../node_modules/lodash/_Map.js" (e1, t) {
        var r = oe()(A(), "Map");
        t.exports = r;
    }
}), ae = l({
    "../../../node_modules/lodash/_nativeCreate.js" (e1, t) {
        var r = oe()(Object, "create");
        t.exports = r;
    }
}), se = l({
    "../../../node_modules/lodash/_hashClear.js" (e1, t) {
        var r = ae();
        t.exports = function() {
            this.__data__ = r ? r(null) : {}, this.size = 0;
        };
    }
}), ue = l({
    "../../../node_modules/lodash/_hashDelete.js" (e1, t) {
        t.exports = function(e1) {
            var t = this.has(e1) && delete this.__data__[e1];
            return this.size -= t ? 1 : 0, t;
        };
    }
}), ce = l({
    "../../../node_modules/lodash/_hashGet.js" (e1, t) {
        var r = ae(), n = Object.prototype.hasOwnProperty;
        t.exports = function(e1) {
            var t = this.__data__;
            if (r) {
                var o = t[e1];
                return "__lodash_hash_undefined__" === o ? void 0 : o;
            }
            return n.call(t, e1) ? t[e1] : void 0;
        };
    }
}), le = l({
    "../../../node_modules/lodash/_hashHas.js" (e1, t) {
        var r = ae(), n = Object.prototype.hasOwnProperty;
        t.exports = function(e1) {
            var t = this.__data__;
            return r ? void 0 !== t[e1] : n.call(t, e1);
        };
    }
}), de = l({
    "../../../node_modules/lodash/_hashSet.js" (e1, t) {
        var r = ae();
        t.exports = function(e1, t) {
            var n = this.__data__;
            return this.size += this.has(e1) ? 0 : 1, n[e1] = r && void 0 === t ? "__lodash_hash_undefined__" : t, this;
        };
    }
}), he = l({
    "../../../node_modules/lodash/_Hash.js" (e1, t) {
        var r = se(), n = ue(), o = ce(), i = le(), a = de();
        function s(e1) {
            var t = -1, r = null == e1 ? 0 : e1.length;
            for(this.clear(); ++t < r;){
                var n = e1[t];
                this.set(n[0], n[1]);
            }
        }
        s.prototype.clear = r, s.prototype.delete = n, s.prototype.get = o, s.prototype.has = i, s.prototype.set = a, t.exports = s;
    }
}), fe = l({
    "../../../node_modules/lodash/_mapCacheClear.js" (e1, t) {
        var r = he(), n = G(), o = ie();
        t.exports = function() {
            this.size = 0, this.__data__ = {
                hash: new r,
                map: new (o || n),
                string: new r
            };
        };
    }
}), pe = l({
    "../../../node_modules/lodash/_isKeyable.js" (e1, t) {
        t.exports = function(e1) {
            var t = typeof e1;
            return "string" == t || "number" == t || "symbol" == t || "boolean" == t ? "__proto__" !== e1 : null === e1;
        };
    }
}), me = l({
    "../../../node_modules/lodash/_getMapData.js" (e1, t) {
        var r = pe();
        t.exports = function(e1, t) {
            var n = e1.__data__;
            return r(t) ? n["string" == typeof t ? "string" : "hash"] : n.map;
        };
    }
}), ge = l({
    "../../../node_modules/lodash/_mapCacheDelete.js" (e1, t) {
        var r = me();
        t.exports = function(e1) {
            var t = r(this, e1).delete(e1);
            return this.size -= t ? 1 : 0, t;
        };
    }
}), ve = l({
    "../../../node_modules/lodash/_mapCacheGet.js" (e1, t) {
        var r = me();
        t.exports = function(e1) {
            return r(this, e1).get(e1);
        };
    }
}), ye = l({
    "../../../node_modules/lodash/_mapCacheHas.js" (e1, t) {
        var r = me();
        t.exports = function(e1) {
            return r(this, e1).has(e1);
        };
    }
}), be = l({
    "../../../node_modules/lodash/_mapCacheSet.js" (e1, t) {
        var r = me();
        t.exports = function(e1, t) {
            var n = r(this, e1), o = n.size;
            return n.set(e1, t), this.size += n.size == o ? 0 : 1, this;
        };
    }
}), we = l({
    "../../../node_modules/lodash/_MapCache.js" (e1, t) {
        var r = fe(), n = ge(), o = ve(), i = ye(), a = be();
        function s(e1) {
            var t = -1, r = null == e1 ? 0 : e1.length;
            for(this.clear(); ++t < r;){
                var n = e1[t];
                this.set(n[0], n[1]);
            }
        }
        s.prototype.clear = r, s.prototype.delete = n, s.prototype.get = o, s.prototype.has = i, s.prototype.set = a, t.exports = s;
    }
}), _e = l({
    "../../../node_modules/lodash/_stackSet.js" (e1, t) {
        var r = G(), n = ie(), o = we();
        t.exports = function(e1, t) {
            var i = this.__data__;
            if (i instanceof r) {
                var a = i.__data__;
                if (!n || a.length < 199) return a.push([
                    e1,
                    t
                ]), this.size = ++i.size, this;
                i = this.__data__ = new o(a);
            }
            return i.set(e1, t), this.size = i.size, this;
        };
    }
}), Ee = l({
    "../../../node_modules/lodash/_Stack.js" (e1, t) {
        var r = G(), n = X(), o = Y(), i = K(), a = Z(), s = _e();
        function u(e1) {
            var t = this.__data__ = new r(e1);
            this.size = t.size;
        }
        u.prototype.clear = n, u.prototype.delete = o, u.prototype.get = i, u.prototype.has = a, u.prototype.set = s, t.exports = u;
    }
}), Se = l({
    "../../../node_modules/lodash/_setCacheAdd.js" (e1, t) {
        t.exports = function(e1) {
            return this.__data__.set(e1, "__lodash_hash_undefined__"), this;
        };
    }
}), Ce = l({
    "../../../node_modules/lodash/_setCacheHas.js" (e1, t) {
        t.exports = function(e1) {
            return this.__data__.has(e1);
        };
    }
}), xe = l({
    "../../../node_modules/lodash/_SetCache.js" (e1, t) {
        var r = we(), n = Se(), o = Ce();
        function i(e1) {
            var t = -1, n = null == e1 ? 0 : e1.length;
            for(this.__data__ = new r; ++t < n;)this.add(e1[t]);
        }
        i.prototype.add = i.prototype.push = n, i.prototype.has = o, t.exports = i;
    }
}), ke = l({
    "../../../node_modules/lodash/_arraySome.js" (e1, t) {
        t.exports = function(e1, t) {
            for(var r = -1, n = null == e1 ? 0 : e1.length; ++r < n;)if (t(e1[r], r, e1)) return !0;
            return !1;
        };
    }
}), Te = l({
    "../../../node_modules/lodash/_cacheHas.js" (e1, t) {
        t.exports = function(e1, t) {
            return e1.has(t);
        };
    }
}), Ae = l({
    "../../../node_modules/lodash/_equalArrays.js" (e1, t) {
        var r = xe(), n = ke(), o = Te();
        t.exports = function(e1, t, i, a, s, u) {
            var c = 1 & i, l = e1.length, d = t.length;
            if (l != d && !(c && d > l)) return !1;
            var h = u.get(e1), f = u.get(t);
            if (h && f) return h == t && f == e1;
            var p = -1, m = !0, g = 2 & i ? new r : void 0;
            for(u.set(e1, t), u.set(t, e1); ++p < l;){
                var v = e1[p], y = t[p];
                if (a) var b = c ? a(y, v, p, t, e1, u) : a(v, y, p, e1, t, u);
                if (void 0 !== b) {
                    if (b) continue;
                    m = !1;
                    break;
                }
                if (g) {
                    if (!n(t, function(e1, t) {
                        if (!o(g, t) && (v === e1 || s(v, e1, i, a, u))) return g.push(t);
                    })) {
                        m = !1;
                        break;
                    }
                } else if (v !== y && !s(v, y, i, a, u)) {
                    m = !1;
                    break;
                }
            }
            return u.delete(e1), u.delete(t), m;
        };
    }
}), Pe = l({
    "../../../node_modules/lodash/_Uint8Array.js" (e1, t) {
        var r = A().Uint8Array;
        t.exports = r;
    }
}), Fe = l({
    "../../../node_modules/lodash/_mapToArray.js" (e1, t) {
        t.exports = function(e1) {
            var t = -1, r = Array(e1.size);
            return e1.forEach(function(e1, n) {
                r[++t] = [
                    n,
                    e1
                ];
            }), r;
        };
    }
}), Le = l({
    "../../../node_modules/lodash/_setToArray.js" (e1, t) {
        t.exports = function(e1) {
            var t = -1, r = Array(e1.size);
            return e1.forEach(function(e1) {
                r[++t] = e1;
            }), r;
        };
    }
}), De = l({
    "../../../node_modules/lodash/_equalByTag.js" (e1, t) {
        var r = D(), n = Pe(), o = q(), i = Ae(), a = Fe(), s = Le(), u = r ? r.prototype : void 0, c = u ? u.valueOf : void 0;
        t.exports = function(e1, t, r, u, l, d, h) {
            switch(r){
                case "[object DataView]":
                    if (e1.byteLength != t.byteLength || e1.byteOffset != t.byteOffset) return !1;
                    e1 = e1.buffer, t = t.buffer;
                case "[object ArrayBuffer]":
                    return !(e1.byteLength != t.byteLength || !d(new n(e1), new n(t)));
                case "[object Boolean]":
                case "[object Date]":
                case "[object Number]":
                    return o(+e1, +t);
                case "[object Error]":
                    return e1.name == t.name && e1.message == t.message;
                case "[object RegExp]":
                case "[object String]":
                    return e1 == t + "";
                case "[object Map]":
                    var f = a;
                case "[object Set]":
                    var p = 1 & u;
                    if (f || (f = s), e1.size != t.size && !p) return !1;
                    var m = h.get(e1);
                    if (m) return m == t;
                    u |= 2, h.set(e1, t);
                    var g = i(f(e1), f(t), u, l, d, h);
                    return h.delete(e1), g;
                case "[object Symbol]":
                    if (c) return c.call(e1) == c.call(t);
            }
            return !1;
        };
    }
}), Be = l({
    "../../../node_modules/lodash/_arrayPush.js" (e1, t) {
        t.exports = function(e1, t) {
            for(var r = -1, n = t.length, o = e1.length; ++r < n;)e1[o + r] = t[r];
            return e1;
        };
    }
}), Re = l({
    "../../../node_modules/lodash/isArray.js" (e1, t) {
        var r = Array.isArray;
        t.exports = r;
    }
}), Me = l({
    "../../../node_modules/lodash/_baseGetAllKeys.js" (e1, t) {
        var r = Be(), n = Re();
        t.exports = function(e1, t, o) {
            var i = t(e1);
            return n(e1) ? i : r(i, o(e1));
        };
    }
}), Ie = l({
    "../../../node_modules/lodash/_arrayFilter.js" (e1, t) {
        t.exports = function(e1, t) {
            for(var r = -1, n = null == e1 ? 0 : e1.length, o = 0, i = []; ++r < n;){
                var a = e1[r];
                t(a, r, e1) && (i[o++] = a);
            }
            return i;
        };
    }
}), Oe = l({
    "../../../node_modules/lodash/stubArray.js" (e1, t) {
        t.exports = function() {
            return [];
        };
    }
}), je = l({
    "../../../node_modules/lodash/_getSymbols.js" (e1, t) {
        var r = Ie(), n = Oe(), o = Object.prototype.propertyIsEnumerable, i = Object.getOwnPropertySymbols, a = i ? function(e1) {
            return null == e1 ? [] : (e1 = Object(e1), r(i(e1), function(t) {
                return o.call(e1, t);
            }));
        } : n;
        t.exports = a;
    }
}), Ue = l({
    "../../../node_modules/lodash/_baseTimes.js" (e1, t) {
        t.exports = function(e1, t) {
            for(var r = -1, n = Array(e1); ++r < e1;)n[r] = t(r);
            return n;
        };
    }
}), $e = l({
    "../../../node_modules/lodash/_baseIsArguments.js" (e1, t) {
        var r = M(), n = I();
        t.exports = function(e1) {
            return n(e1) && "[object Arguments]" == r(e1);
        };
    }
}), qe = l({
    "../../../node_modules/lodash/isArguments.js" (e1, t) {
        var r = $e(), n = I(), o = Object.prototype, i = o.hasOwnProperty, a = o.propertyIsEnumerable, s = r(function() {
            return arguments;
        }()) ? r : function(e1) {
            return n(e1) && i.call(e1, "callee") && !a.call(e1, "callee");
        };
        t.exports = s;
    }
}), He = l({
    "../../../node_modules/lodash/stubFalse.js" (e1, t) {
        t.exports = function() {
            return !1;
        };
    }
}), Ne = l({
    "../../../node_modules/lodash/isBuffer.js" (e1, t) {
        var r = A(), n = He(), o = "object" == typeof e1 && e1 && !e1.nodeType && e1, i = o && "object" == typeof t && t && !t.nodeType && t, a = i && i.exports === o ? r.Buffer : void 0, s = (a ? a.isBuffer : void 0) || n;
        t.exports = s;
    }
}), Ve = l({
    "../../../node_modules/lodash/_isIndex.js" (e1, t) {
        var r = /^(?:0|[1-9]\d*)$/;
        t.exports = function(e1, t) {
            var n = typeof e1;
            return !!(t = null == t ? 9007199254740991 : t) && ("number" == n || "symbol" != n && r.test(e1)) && e1 > -1 && e1 % 1 == 0 && e1 < t;
        };
    }
}), ze = l({
    "../../../node_modules/lodash/isLength.js" (e1, t) {
        t.exports = function(e1) {
            return "number" == typeof e1 && e1 > -1 && e1 % 1 == 0 && e1 <= 9007199254740991;
        };
    }
}), We = l({
    "../../../node_modules/lodash/_baseIsTypedArray.js" (e1, t) {
        var r = M(), n = ze(), o = I(), i = {};
        i["[object Float32Array]"] = i["[object Float64Array]"] = i["[object Int8Array]"] = i["[object Int16Array]"] = i["[object Int32Array]"] = i["[object Uint8Array]"] = i["[object Uint8ClampedArray]"] = i["[object Uint16Array]"] = i["[object Uint32Array]"] = !0, i["[object Arguments]"] = i["[object Array]"] = i["[object ArrayBuffer]"] = i["[object Boolean]"] = i["[object DataView]"] = i["[object Date]"] = i["[object Error]"] = i["[object Function]"] = i["[object Map]"] = i["[object Number]"] = i["[object Object]"] = i["[object RegExp]"] = i["[object Set]"] = i["[object String]"] = i["[object WeakMap]"] = !1, t.exports = function(e1) {
            return o(e1) && n(e1.length) && !!i[r(e1)];
        };
    }
}), Ge = l({
    "../../../node_modules/lodash/_baseUnary.js" (e1, t) {
        t.exports = function(e1) {
            return function(t) {
                return e1(t);
            };
        };
    }
}), Xe = l({
    "../../../node_modules/lodash/_nodeUtil.js" (e1, t) {
        var r = T(), n = "object" == typeof e1 && e1 && !e1.nodeType && e1, o = n && "object" == typeof t && t && !t.nodeType && t, i = o && o.exports === n && r.process, a = function() {
            try {
                var e1 = o && o.require && o.require("util").types;
                return e1 || i && i.binding && i.binding("util");
            } catch (e1) {}
        }();
        t.exports = a;
    }
}), Ye = l({
    "../../../node_modules/lodash/isTypedArray.js" (e1, t) {
        var r = We(), n = Ge(), o = Xe(), i = o && o.isTypedArray, a = i ? n(i) : r;
        t.exports = a;
    }
}), Ke = l({
    "../../../node_modules/lodash/_arrayLikeKeys.js" (e1, t) {
        var r = Ue(), n = qe(), o = Re(), i = Ne(), a = Ve(), s = Ye(), u = Object.prototype.hasOwnProperty;
        t.exports = function(e1, t) {
            var c = o(e1), l = !c && n(e1), d = !c && !l && i(e1), h = !c && !l && !d && s(e1), f = c || l || d || h, p = f ? r(e1.length, String) : [], m = p.length;
            for(var g in e1)!t && !u.call(e1, g) || f && ("length" == g || d && ("offset" == g || "parent" == g) || h && ("buffer" == g || "byteLength" == g || "byteOffset" == g) || a(g, m)) || p.push(g);
            return p;
        };
    }
}), Ze = l({
    "../../../node_modules/lodash/_isPrototype.js" (e1, t) {
        var r = Object.prototype;
        t.exports = function(e1) {
            var t = e1 && e1.constructor;
            return e1 === ("function" == typeof t && t.prototype || r);
        };
    }
}), Qe = l({
    "../../../node_modules/lodash/_overArg.js" (e1, t) {
        t.exports = function(e1, t) {
            return function(r) {
                return e1(t(r));
            };
        };
    }
}), Je = l({
    "../../../node_modules/lodash/_nativeKeys.js" (e1, t) {
        var r = Qe()(Object.keys, Object);
        t.exports = r;
    }
}), et = l({
    "../../../node_modules/lodash/_baseKeys.js" (e1, t) {
        var r = Ze(), n = Je(), o = Object.prototype.hasOwnProperty;
        t.exports = function(e1) {
            if (!r(e1)) return n(e1);
            var t = [];
            for(var i in Object(e1))o.call(e1, i) && "constructor" != i && t.push(i);
            return t;
        };
    }
}), tt = l({
    "../../../node_modules/lodash/isArrayLike.js" (e1, t) {
        var r = Q(), n = ze();
        t.exports = function(e1) {
            return null != e1 && n(e1.length) && !r(e1);
        };
    }
}), rt = l({
    "../../../node_modules/lodash/keys.js" (e1, t) {
        var r = Ke(), n = et(), o = tt();
        t.exports = function(e1) {
            return o(e1) ? r(e1) : n(e1);
        };
    }
}), nt = l({
    "../../../node_modules/lodash/_getAllKeys.js" (e1, t) {
        var r = Me(), n = je(), o = rt();
        t.exports = function(e1) {
            return r(e1, o, n);
        };
    }
}), ot = l({
    "../../../node_modules/lodash/_equalObjects.js" (e1, t) {
        var r = nt(), n = Object.prototype.hasOwnProperty;
        t.exports = function(e1, t, o, i, a, s) {
            var u = 1 & o, c = r(e1), l = c.length;
            if (l != r(t).length && !u) return !1;
            for(var d = l; d--;){
                var h = c[d];
                if (!(u ? h in t : n.call(t, h))) return !1;
            }
            var f = s.get(e1), p = s.get(t);
            if (f && p) return f == t && p == e1;
            var m = !0;
            s.set(e1, t), s.set(t, e1);
            for(var g = u; ++d < l;){
                var v = e1[h = c[d]], y = t[h];
                if (i) var b = u ? i(y, v, h, t, e1, s) : i(v, y, h, e1, t, s);
                if (!(void 0 === b ? v === y || a(v, y, o, i, s) : b)) {
                    m = !1;
                    break;
                }
                g || (g = "constructor" == h);
            }
            if (m && !g) {
                var w = e1.constructor, _ = t.constructor;
                w == _ || !("constructor" in e1) || !("constructor" in t) || "function" == typeof w && w instanceof w && "function" == typeof _ && _ instanceof _ || (m = !1);
            }
            return s.delete(e1), s.delete(t), m;
        };
    }
}), it = l({
    "../../../node_modules/lodash/_DataView.js" (e1, t) {
        var r = oe()(A(), "DataView");
        t.exports = r;
    }
}), at = l({
    "../../../node_modules/lodash/_Promise.js" (e1, t) {
        var r = oe()(A(), "Promise");
        t.exports = r;
    }
}), st = l({
    "../../../node_modules/lodash/_Set.js" (e1, t) {
        var r = oe()(A(), "Set");
        t.exports = r;
    }
}), ut = l({
    "../../../node_modules/lodash/_WeakMap.js" (e1, t) {
        var r = oe()(A(), "WeakMap");
        t.exports = r;
    }
}), ct = l({
    "../../../node_modules/lodash/_getTag.js" (e1, t) {
        var r = it(), n = ie(), o = at(), i = st(), a = ut(), s = M(), u = te(), c = "[object Map]", l = "[object Promise]", d = "[object Set]", h = "[object WeakMap]", f = "[object DataView]", p = u(r), m = u(n), g = u(o), v = u(i), y = u(a), b = s;
        (r && b(new r(new ArrayBuffer(1))) != f || n && b(new n) != c || o && b(o.resolve()) != l || i && b(new i) != d || a && b(new a) != h) && (b = function(e1) {
            var t = s(e1), r = "[object Object]" == t ? e1.constructor : void 0, n = r ? u(r) : "";
            if (n) switch(n){
                case p:
                    return f;
                case m:
                    return c;
                case g:
                    return l;
                case v:
                    return d;
                case y:
                    return h;
            }
            return t;
        }), t.exports = b;
    }
}), lt = l({
    "../../../node_modules/lodash/_baseIsEqualDeep.js" (e1, t) {
        var r = Ee(), n = Ae(), o = De(), i = ot(), a = ct(), s = Re(), u = Ne(), c = Ye(), l = "[object Arguments]", d = "[object Array]", h = "[object Object]", f = Object.prototype.hasOwnProperty;
        t.exports = function(e1, t, p, m, g, v) {
            var y = s(e1), b = s(t), w = y ? d : a(e1), _ = b ? d : a(t), E = (w = w == l ? h : w) == h, S = (_ = _ == l ? h : _) == h, C = w == _;
            if (C && u(e1)) {
                if (!u(t)) return !1;
                y = !0, E = !1;
            }
            if (C && !E) return v || (v = new r), y || c(e1) ? n(e1, t, p, m, g, v) : o(e1, t, w, p, m, g, v);
            if (!(1 & p)) {
                var x = E && f.call(e1, "__wrapped__"), k = S && f.call(t, "__wrapped__");
                if (x || k) {
                    var T = x ? e1.value() : e1, A = k ? t.value() : t;
                    return v || (v = new r), g(T, A, p, m, v);
                }
            }
            return !!C && (v || (v = new r), i(e1, t, p, m, g, v));
        };
    }
}), dt = l({
    "../../../node_modules/lodash/_baseIsEqual.js" (e1, t) {
        var r = lt(), n = I();
        t.exports = function e1(t, o, i, a, s) {
            return t === o || (null == t || null == o || !n(t) && !n(o) ? t != t && o != o : r(t, o, i, a, e1, s));
        };
    }
}), ht = l({
    "../../../node_modules/lodash/isEqual.js" (e1, t) {
        var r = dt();
        t.exports = function(e1, t) {
            return r(e1, t);
        };
    }
}), ft = l({
    "../../../node_modules/base64-js/index.js" (e1) {
        e1.byteLength = function(e1) {
            var t = a(e1), r = t[0], n = t[1];
            return 3 * (r + n) / 4 - n;
        }, e1.toByteArray = function(e1) {
            var t, r, i = a(e1), s = i[0], u = i[1], c = new o(function(e1, t, r) {
                return 3 * (t + r) / 4 - r;
            }(0, s, u)), l = 0, d = u > 0 ? s - 4 : s;
            for(r = 0; r < d; r += 4)t = n[e1.charCodeAt(r)] << 18 | n[e1.charCodeAt(r + 1)] << 12 | n[e1.charCodeAt(r + 2)] << 6 | n[e1.charCodeAt(r + 3)], c[l++] = t >> 16 & 255, c[l++] = t >> 8 & 255, c[l++] = 255 & t;
            2 === u && (t = n[e1.charCodeAt(r)] << 2 | n[e1.charCodeAt(r + 1)] >> 4, c[l++] = 255 & t);
            1 === u && (t = n[e1.charCodeAt(r)] << 10 | n[e1.charCodeAt(r + 1)] << 4 | n[e1.charCodeAt(r + 2)] >> 2, c[l++] = t >> 8 & 255, c[l++] = 255 & t);
            return c;
        }, e1.fromByteArray = function(e1) {
            for(var t, n = e1.length, o = n % 3, i = [], a = 16383, u = 0, c = n - o; u < c; u += a)i.push(s(e1, u, u + a > c ? c : u + a));
            1 === o ? (t = e1[n - 1], i.push(r[t >> 2] + r[t << 4 & 63] + "==")) : 2 === o && (t = (e1[n - 2] << 8) + e1[n - 1], i.push(r[t >> 10] + r[t >> 4 & 63] + r[t << 2 & 63] + "="));
            return i.join("");
        };
        var t, r = [], n = [], o = "undefined" != typeof Uint8Array ? Uint8Array : Array, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        for(t = 0, 64; t < 64; ++t)r[t] = i[t], n[i.charCodeAt(t)] = t;
        function a(e1) {
            var t = e1.length;
            if (t % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
            var r = e1.indexOf("=");
            return -1 === r && (r = t), [
                r,
                r === t ? 0 : 4 - r % 4
            ];
        }
        function s(e1, t, n) {
            for(var o, i, a = [], s = t; s < n; s += 3)o = (e1[s] << 16 & 16711680) + (e1[s + 1] << 8 & 65280) + (255 & e1[s + 2]), a.push(r[(i = o) >> 18 & 63] + r[i >> 12 & 63] + r[i >> 6 & 63] + r[63 & i]);
            return a.join("");
        }
        n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63;
    }
}), pt = l({
    "../../../node_modules/ieee754/index.js" (e1) {
        e1.read = function(e1, t, r, n, o) {
            var i, a, s = 8 * o - n - 1, u = (1 << s) - 1, c = u >> 1, l = -7, d = r ? o - 1 : 0, h = r ? -1 : 1, f = e1[t + d];
            for(d += h, i = f & (1 << -l) - 1, f >>= -l, l += s; l > 0; i = 256 * i + e1[t + d], d += h, l -= 8);
            for(a = i & (1 << -l) - 1, i >>= -l, l += n; l > 0; a = 256 * a + e1[t + d], d += h, l -= 8);
            if (0 === i) i = 1 - c;
            else {
                if (i === u) return a ? NaN : 1 / 0 * (f ? -1 : 1);
                a += Math.pow(2, n), i -= c;
            }
            return (f ? -1 : 1) * a * Math.pow(2, i - n);
        }, e1.write = function(e1, t, r, n, o, i) {
            var a, s, u, c = 8 * i - o - 1, l = (1 << c) - 1, d = l >> 1, h = 23 === o ? Math.pow(2, -24) - Math.pow(2, -77) : 0, f = n ? 0 : i - 1, p = n ? 1 : -1, m = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
            for(t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (s = isNaN(t) ? 1 : 0, a = l) : (a = Math.floor(Math.log(t) / Math.LN2), t * (u = Math.pow(2, -a)) < 1 && (a--, u *= 2), (t += a + d >= 1 ? h / u : h * Math.pow(2, 1 - d)) * u >= 2 && (a++, u /= 2), a + d >= l ? (s = 0, a = l) : a + d >= 1 ? (s = (t * u - 1) * Math.pow(2, o), a += d) : (s = t * Math.pow(2, d - 1) * Math.pow(2, o), a = 0)); o >= 8; e1[r + f] = 255 & s, f += p, s /= 256, o -= 8);
            for(a = a << o | s, c += o; c > 0; e1[r + f] = 255 & a, f += p, a /= 256, c -= 8);
            e1[r + f - p] |= 128 * m;
        };
    }
}), mt = l({
    "../../../node_modules/buffer/index.js" (e1) {
        var t = ft(), r = pt(), n = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
        e1.Buffer = a, e1.SlowBuffer = function(e1) {
            +e1 != e1 && (e1 = 0);
            return a.alloc(+e1);
        }, e1.INSPECT_MAX_BYTES = 50;
        var o = 2147483647;
        function i(e1) {
            if (e1 > o) throw new RangeError('The value "' + e1 + '" is invalid for option "size"');
            var t = new Uint8Array(e1);
            return Object.setPrototypeOf(t, a.prototype), t;
        }
        function a(e1, t, r) {
            if ("number" == typeof e1) {
                if ("string" == typeof t) throw new TypeError('The "string" argument must be of type string. Received type number');
                return c(e1);
            }
            return s(e1, t, r);
        }
        function s(e1, t, r) {
            if ("string" == typeof e1) return function(e1, t) {
                "string" == typeof t && "" !== t || (t = "utf8");
                if (!a.isEncoding(t)) throw new TypeError("Unknown encoding: " + t);
                var r = 0 | f(e1, t), n = i(r), o = n.write(e1, t);
                o !== r && (n = n.slice(0, o));
                return n;
            }(e1, t);
            if (ArrayBuffer.isView(e1)) return function(e1) {
                if (U(e1, Uint8Array)) {
                    var t = new Uint8Array(e1);
                    return d(t.buffer, t.byteOffset, t.byteLength);
                }
                return l(e1);
            }(e1);
            if (null == e1) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e1);
            if (U(e1, ArrayBuffer) || e1 && U(e1.buffer, ArrayBuffer)) return d(e1, t, r);
            if ("undefined" != typeof SharedArrayBuffer && (U(e1, SharedArrayBuffer) || e1 && U(e1.buffer, SharedArrayBuffer))) return d(e1, t, r);
            if ("number" == typeof e1) throw new TypeError('The "value" argument must not be of type number. Received type number');
            var n = e1.valueOf && e1.valueOf();
            if (null != n && n !== e1) return a.from(n, t, r);
            var o = function(e1) {
                if (a.isBuffer(e1)) {
                    var t = 0 | h(e1.length), r = i(t);
                    return 0 === r.length || e1.copy(r, 0, 0, t), r;
                }
                if (void 0 !== e1.length) return "number" != typeof e1.length || $(e1.length) ? i(0) : l(e1);
                if ("Buffer" === e1.type && Array.isArray(e1.data)) return l(e1.data);
            }(e1);
            if (o) return o;
            if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e1[Symbol.toPrimitive]) return a.from(e1[Symbol.toPrimitive]("string"), t, r);
            throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e1);
        }
        function u(e1) {
            if ("number" != typeof e1) throw new TypeError('"size" argument must be of type number');
            if (e1 < 0) throw new RangeError('The value "' + e1 + '" is invalid for option "size"');
        }
        function c(e1) {
            return u(e1), i(e1 < 0 ? 0 : 0 | h(e1));
        }
        function l(e1) {
            for(var t = e1.length < 0 ? 0 : 0 | h(e1.length), r = i(t), n = 0; n < t; n += 1)r[n] = 255 & e1[n];
            return r;
        }
        function d(e1, t, r) {
            if (t < 0 || e1.byteLength < t) throw new RangeError('"offset" is outside of buffer bounds');
            if (e1.byteLength < t + (r || 0)) throw new RangeError('"length" is outside of buffer bounds');
            var n;
            return n = void 0 === t && void 0 === r ? new Uint8Array(e1) : void 0 === r ? new Uint8Array(e1, t) : new Uint8Array(e1, t, r), Object.setPrototypeOf(n, a.prototype), n;
        }
        function h(e1) {
            if (e1 >= o) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + o.toString(16) + " bytes");
            return 0 | e1;
        }
        function f(e1, t) {
            if (a.isBuffer(e1)) return e1.length;
            if (ArrayBuffer.isView(e1) || U(e1, ArrayBuffer)) return e1.byteLength;
            if ("string" != typeof e1) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e1);
            var r = e1.length, n = arguments.length > 2 && !0 === arguments[2];
            if (!n && 0 === r) return 0;
            for(var o = !1;;)switch(t){
                case "ascii":
                case "latin1":
                case "binary":
                    return r;
                case "utf8":
                case "utf-8":
                    return I(e1).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return 2 * r;
                case "hex":
                    return r >>> 1;
                case "base64":
                    return O(e1).length;
                default:
                    if (o) return n ? -1 : I(e1).length;
                    t = ("" + t).toLowerCase(), o = !0;
            }
        }
        function p(e1, t, r) {
            var n = !1;
            if ((void 0 === t || t < 0) && (t = 0), t > this.length) return "";
            if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
            if ((r >>>= 0) <= (t >>>= 0)) return "";
            for(e1 || (e1 = "utf8");;)switch(e1){
                case "hex":
                    return A(this, t, r);
                case "utf8":
                case "utf-8":
                    return C(this, t, r);
                case "ascii":
                    return k(this, t, r);
                case "latin1":
                case "binary":
                    return T(this, t, r);
                case "base64":
                    return S(this, t, r);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return P(this, t, r);
                default:
                    if (n) throw new TypeError("Unknown encoding: " + e1);
                    e1 = (e1 + "").toLowerCase(), n = !0;
            }
        }
        function m(e1, t, r) {
            var n = e1[t];
            e1[t] = e1[r], e1[r] = n;
        }
        function g(e1, t, r, n, o) {
            if (0 === e1.length) return -1;
            if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), $(r = +r) && (r = o ? 0 : e1.length - 1), r < 0 && (r = e1.length + r), r >= e1.length) {
                if (o) return -1;
                r = e1.length - 1;
            } else if (r < 0) {
                if (!o) return -1;
                r = 0;
            }
            if ("string" == typeof t && (t = a.from(t, n)), a.isBuffer(t)) return 0 === t.length ? -1 : v(e1, t, r, n, o);
            if ("number" == typeof t) return t &= 255, "function" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(e1, t, r) : Uint8Array.prototype.lastIndexOf.call(e1, t, r) : v(e1, [
                t
            ], r, n, o);
            throw new TypeError("val must be string, number or Buffer");
        }
        function v(e1, t, r, n, o) {
            var i, a = 1, s = e1.length, u = t.length;
            if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                if (e1.length < 2 || t.length < 2) return -1;
                a = 2, s /= 2, u /= 2, r /= 2;
            }
            function c(e1, t) {
                return 1 === a ? e1[t] : e1.readUInt16BE(t * a);
            }
            if (o) {
                var l = -1;
                for(i = r; i < s; i++)if (c(e1, i) === c(t, -1 === l ? 0 : i - l)) {
                    if (-1 === l && (l = i), i - l + 1 === u) return l * a;
                } else -1 !== l && (i -= i - l), l = -1;
            } else for(r + u > s && (r = s - u), i = r; i >= 0; i--){
                for(var d = !0, h = 0; h < u; h++)if (c(e1, i + h) !== c(t, h)) {
                    d = !1;
                    break;
                }
                if (d) return i;
            }
            return -1;
        }
        function y(e1, t, r, n) {
            r = Number(r) || 0;
            var o = e1.length - r;
            n ? (n = Number(n)) > o && (n = o) : n = o;
            var i = t.length;
            n > i / 2 && (n = i / 2);
            for(var a = 0; a < n; ++a){
                var s = parseInt(t.substr(2 * a, 2), 16);
                if ($(s)) return a;
                e1[r + a] = s;
            }
            return a;
        }
        function b(e1, t, r, n) {
            return j(I(t, e1.length - r), e1, r, n);
        }
        function w(e1, t, r, n) {
            return j(function(e1) {
                for(var t = [], r = 0; r < e1.length; ++r)t.push(255 & e1.charCodeAt(r));
                return t;
            }(t), e1, r, n);
        }
        function _(e1, t, r, n) {
            return j(O(t), e1, r, n);
        }
        function E(e1, t, r, n) {
            return j(function(e1, t) {
                for(var r, n, o, i = [], a = 0; a < e1.length && !((t -= 2) < 0); ++a)n = (r = e1.charCodeAt(a)) >> 8, o = r % 256, i.push(o), i.push(n);
                return i;
            }(t, e1.length - r), e1, r, n);
        }
        function S(e1, r, n) {
            return 0 === r && n === e1.length ? t.fromByteArray(e1) : t.fromByteArray(e1.slice(r, n));
        }
        function C(e1, t, r) {
            r = Math.min(e1.length, r);
            for(var n = [], o = t; o < r;){
                var i, a, s, u, c = e1[o], l = null, d = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
                if (o + d <= r) switch(d){
                    case 1:
                        c < 128 && (l = c);
                        break;
                    case 2:
                        128 == (192 & (i = e1[o + 1])) && (u = (31 & c) << 6 | 63 & i) > 127 && (l = u);
                        break;
                    case 3:
                        i = e1[o + 1], a = e1[o + 2], 128 == (192 & i) && 128 == (192 & a) && (u = (15 & c) << 12 | (63 & i) << 6 | 63 & a) > 2047 && (u < 55296 || u > 57343) && (l = u);
                        break;
                    case 4:
                        i = e1[o + 1], a = e1[o + 2], s = e1[o + 3], 128 == (192 & i) && 128 == (192 & a) && 128 == (192 & s) && (u = (15 & c) << 18 | (63 & i) << 12 | (63 & a) << 6 | 63 & s) > 65535 && u < 1114112 && (l = u);
                }
                null === l ? (l = 65533, d = 1) : l > 65535 && (l -= 65536, n.push(l >>> 10 & 1023 | 55296), l = 56320 | 1023 & l), n.push(l), o += d;
            }
            return function(e1) {
                var t = e1.length;
                if (t <= x) return String.fromCharCode.apply(String, e1);
                var r = "", n = 0;
                for(; n < t;)r += String.fromCharCode.apply(String, e1.slice(n, n += x));
                return r;
            }(n);
        }
        e1.kMaxLength = o, a.TYPED_ARRAY_SUPPORT = function() {
            try {
                var e1 = new Uint8Array(1), t = {
                    foo: function() {
                        return 42;
                    }
                };
                return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e1, t), 42 === e1.foo();
            } catch (e1) {
                return !1;
            }
        }(), a.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(a.prototype, "parent", {
            enumerable: !0,
            get: function() {
                if (a.isBuffer(this)) return this.buffer;
            }
        }), Object.defineProperty(a.prototype, "offset", {
            enumerable: !0,
            get: function() {
                if (a.isBuffer(this)) return this.byteOffset;
            }
        }), a.poolSize = 8192, a.from = function(e1, t, r) {
            return s(e1, t, r);
        }, Object.setPrototypeOf(a.prototype, Uint8Array.prototype), Object.setPrototypeOf(a, Uint8Array), a.alloc = function(e1, t, r) {
            return function(e1, t, r) {
                return u(e1), e1 <= 0 ? i(e1) : void 0 !== t ? "string" == typeof r ? i(e1).fill(t, r) : i(e1).fill(t) : i(e1);
            }(e1, t, r);
        }, a.allocUnsafe = function(e1) {
            return c(e1);
        }, a.allocUnsafeSlow = function(e1) {
            return c(e1);
        }, a.isBuffer = function(e1) {
            return null != e1 && !0 === e1._isBuffer && e1 !== a.prototype;
        }, a.compare = function(e1, t) {
            if (U(e1, Uint8Array) && (e1 = a.from(e1, e1.offset, e1.byteLength)), U(t, Uint8Array) && (t = a.from(t, t.offset, t.byteLength)), !a.isBuffer(e1) || !a.isBuffer(t)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
            if (e1 === t) return 0;
            for(var r = e1.length, n = t.length, o = 0, i = Math.min(r, n); o < i; ++o)if (e1[o] !== t[o]) {
                r = e1[o], n = t[o];
                break;
            }
            return r < n ? -1 : n < r ? 1 : 0;
        }, a.isEncoding = function(e1) {
            switch(String(e1).toLowerCase()){
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return !0;
                default:
                    return !1;
            }
        }, a.concat = function(e1, t) {
            if (!Array.isArray(e1)) throw new TypeError('"list" argument must be an Array of Buffers');
            if (0 === e1.length) return a.alloc(0);
            var r;
            if (void 0 === t) for(t = 0, r = 0; r < e1.length; ++r)t += e1[r].length;
            var n = a.allocUnsafe(t), o = 0;
            for(r = 0; r < e1.length; ++r){
                var i = e1[r];
                if (U(i, Uint8Array)) o + i.length > n.length ? a.from(i).copy(n, o) : Uint8Array.prototype.set.call(n, i, o);
                else {
                    if (!a.isBuffer(i)) throw new TypeError('"list" argument must be an Array of Buffers');
                    i.copy(n, o);
                }
                o += i.length;
            }
            return n;
        }, a.byteLength = f, a.prototype._isBuffer = !0, a.prototype.swap16 = function() {
            var e1 = this.length;
            if (e1 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
            for(var t = 0; t < e1; t += 2)m(this, t, t + 1);
            return this;
        }, a.prototype.swap32 = function() {
            var e1 = this.length;
            if (e1 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
            for(var t = 0; t < e1; t += 4)m(this, t, t + 3), m(this, t + 1, t + 2);
            return this;
        }, a.prototype.swap64 = function() {
            var e1 = this.length;
            if (e1 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
            for(var t = 0; t < e1; t += 8)m(this, t, t + 7), m(this, t + 1, t + 6), m(this, t + 2, t + 5), m(this, t + 3, t + 4);
            return this;
        }, a.prototype.toString = function() {
            var e1 = this.length;
            return 0 === e1 ? "" : 0 === arguments.length ? C(this, 0, e1) : p.apply(this, arguments);
        }, a.prototype.toLocaleString = a.prototype.toString, a.prototype.equals = function(e1) {
            if (!a.isBuffer(e1)) throw new TypeError("Argument must be a Buffer");
            return this === e1 || 0 === a.compare(this, e1);
        }, a.prototype.inspect = function() {
            var t = "", r = e1.INSPECT_MAX_BYTES;
            return t = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (t += " ... "), "<Buffer " + t + ">";
        }, n && (a.prototype[n] = a.prototype.inspect), a.prototype.compare = function(e1, t, r, n, o) {
            if (U(e1, Uint8Array) && (e1 = a.from(e1, e1.offset, e1.byteLength)), !a.isBuffer(e1)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e1);
            if (void 0 === t && (t = 0), void 0 === r && (r = e1 ? e1.length : 0), void 0 === n && (n = 0), void 0 === o && (o = this.length), t < 0 || r > e1.length || n < 0 || o > this.length) throw new RangeError("out of range index");
            if (n >= o && t >= r) return 0;
            if (n >= o) return -1;
            if (t >= r) return 1;
            if (this === e1) return 0;
            for(var i = (o >>>= 0) - (n >>>= 0), s = (r >>>= 0) - (t >>>= 0), u = Math.min(i, s), c = this.slice(n, o), l = e1.slice(t, r), d = 0; d < u; ++d)if (c[d] !== l[d]) {
                i = c[d], s = l[d];
                break;
            }
            return i < s ? -1 : s < i ? 1 : 0;
        }, a.prototype.includes = function(e1, t, r) {
            return -1 !== this.indexOf(e1, t, r);
        }, a.prototype.indexOf = function(e1, t, r) {
            return g(this, e1, t, r, !0);
        }, a.prototype.lastIndexOf = function(e1, t, r) {
            return g(this, e1, t, r, !1);
        }, a.prototype.write = function(e1, t, r, n) {
            if (void 0 === t) n = "utf8", r = this.length, t = 0;
            else if (void 0 === r && "string" == typeof t) n = t, r = this.length, t = 0;
            else {
                if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                t >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0);
            }
            var o = this.length - t;
            if ((void 0 === r || r > o) && (r = o), e1.length > 0 && (r < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
            n || (n = "utf8");
            for(var i = !1;;)switch(n){
                case "hex":
                    return y(this, e1, t, r);
                case "utf8":
                case "utf-8":
                    return b(this, e1, t, r);
                case "ascii":
                case "latin1":
                case "binary":
                    return w(this, e1, t, r);
                case "base64":
                    return _(this, e1, t, r);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return E(this, e1, t, r);
                default:
                    if (i) throw new TypeError("Unknown encoding: " + n);
                    n = ("" + n).toLowerCase(), i = !0;
            }
        }, a.prototype.toJSON = function() {
            return {
                type: "Buffer",
                data: Array.prototype.slice.call(this._arr || this, 0)
            };
        };
        var x = 4096;
        function k(e1, t, r) {
            var n = "";
            r = Math.min(e1.length, r);
            for(var o = t; o < r; ++o)n += String.fromCharCode(127 & e1[o]);
            return n;
        }
        function T(e1, t, r) {
            var n = "";
            r = Math.min(e1.length, r);
            for(var o = t; o < r; ++o)n += String.fromCharCode(e1[o]);
            return n;
        }
        function A(e1, t, r) {
            var n = e1.length;
            (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
            for(var o = "", i = t; i < r; ++i)o += q[e1[i]];
            return o;
        }
        function P(e1, t, r) {
            for(var n = e1.slice(t, r), o = "", i = 0; i < n.length - 1; i += 2)o += String.fromCharCode(n[i] + 256 * n[i + 1]);
            return o;
        }
        function F(e1, t, r) {
            if (e1 % 1 != 0 || e1 < 0) throw new RangeError("offset is not uint");
            if (e1 + t > r) throw new RangeError("Trying to access beyond buffer length");
        }
        function L(e1, t, r, n, o, i) {
            if (!a.isBuffer(e1)) throw new TypeError('"buffer" argument must be a Buffer instance');
            if (t > o || t < i) throw new RangeError('"value" argument is out of bounds');
            if (r + n > e1.length) throw new RangeError("Index out of range");
        }
        function D(e1, t, r, n, o, i) {
            if (r + n > e1.length) throw new RangeError("Index out of range");
            if (r < 0) throw new RangeError("Index out of range");
        }
        function B(e1, t, n, o, i) {
            return t = +t, n >>>= 0, i || D(e1, 0, n, 4), r.write(e1, t, n, o, 23, 4), n + 4;
        }
        function R(e1, t, n, o, i) {
            return t = +t, n >>>= 0, i || D(e1, 0, n, 8), r.write(e1, t, n, o, 52, 8), n + 8;
        }
        a.prototype.slice = function(e1, t) {
            var r = this.length;
            (e1 = ~~e1) < 0 ? (e1 += r) < 0 && (e1 = 0) : e1 > r && (e1 = r), (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r), t < e1 && (t = e1);
            var n = this.subarray(e1, t);
            return Object.setPrototypeOf(n, a.prototype), n;
        }, a.prototype.readUintLE = a.prototype.readUIntLE = function(e1, t, r) {
            e1 >>>= 0, t >>>= 0, r || F(e1, t, this.length);
            for(var n = this[e1], o = 1, i = 0; ++i < t && (o *= 256);)n += this[e1 + i] * o;
            return n;
        }, a.prototype.readUintBE = a.prototype.readUIntBE = function(e1, t, r) {
            e1 >>>= 0, t >>>= 0, r || F(e1, t, this.length);
            for(var n = this[e1 + --t], o = 1; t > 0 && (o *= 256);)n += this[e1 + --t] * o;
            return n;
        }, a.prototype.readUint8 = a.prototype.readUInt8 = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 1, this.length), this[e1];
        }, a.prototype.readUint16LE = a.prototype.readUInt16LE = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 2, this.length), this[e1] | this[e1 + 1] << 8;
        }, a.prototype.readUint16BE = a.prototype.readUInt16BE = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 2, this.length), this[e1] << 8 | this[e1 + 1];
        }, a.prototype.readUint32LE = a.prototype.readUInt32LE = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 4, this.length), (this[e1] | this[e1 + 1] << 8 | this[e1 + 2] << 16) + 16777216 * this[e1 + 3];
        }, a.prototype.readUint32BE = a.prototype.readUInt32BE = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 4, this.length), 16777216 * this[e1] + (this[e1 + 1] << 16 | this[e1 + 2] << 8 | this[e1 + 3]);
        }, a.prototype.readIntLE = function(e1, t, r) {
            e1 >>>= 0, t >>>= 0, r || F(e1, t, this.length);
            for(var n = this[e1], o = 1, i = 0; ++i < t && (o *= 256);)n += this[e1 + i] * o;
            return n >= (o *= 128) && (n -= Math.pow(2, 8 * t)), n;
        }, a.prototype.readIntBE = function(e1, t, r) {
            e1 >>>= 0, t >>>= 0, r || F(e1, t, this.length);
            for(var n = t, o = 1, i = this[e1 + --n]; n > 0 && (o *= 256);)i += this[e1 + --n] * o;
            return i >= (o *= 128) && (i -= Math.pow(2, 8 * t)), i;
        }, a.prototype.readInt8 = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 1, this.length), 128 & this[e1] ? -1 * (255 - this[e1] + 1) : this[e1];
        }, a.prototype.readInt16LE = function(e1, t) {
            e1 >>>= 0, t || F(e1, 2, this.length);
            var r = this[e1] | this[e1 + 1] << 8;
            return 32768 & r ? 4294901760 | r : r;
        }, a.prototype.readInt16BE = function(e1, t) {
            e1 >>>= 0, t || F(e1, 2, this.length);
            var r = this[e1 + 1] | this[e1] << 8;
            return 32768 & r ? 4294901760 | r : r;
        }, a.prototype.readInt32LE = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 4, this.length), this[e1] | this[e1 + 1] << 8 | this[e1 + 2] << 16 | this[e1 + 3] << 24;
        }, a.prototype.readInt32BE = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 4, this.length), this[e1] << 24 | this[e1 + 1] << 16 | this[e1 + 2] << 8 | this[e1 + 3];
        }, a.prototype.readFloatLE = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 4, this.length), r.read(this, e1, !0, 23, 4);
        }, a.prototype.readFloatBE = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 4, this.length), r.read(this, e1, !1, 23, 4);
        }, a.prototype.readDoubleLE = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 8, this.length), r.read(this, e1, !0, 52, 8);
        }, a.prototype.readDoubleBE = function(e1, t) {
            return e1 >>>= 0, t || F(e1, 8, this.length), r.read(this, e1, !1, 52, 8);
        }, a.prototype.writeUintLE = a.prototype.writeUIntLE = function(e1, t, r, n) {
            (e1 = +e1, t >>>= 0, r >>>= 0, n) || L(this, e1, t, r, Math.pow(2, 8 * r) - 1, 0);
            var o = 1, i = 0;
            for(this[t] = 255 & e1; ++i < r && (o *= 256);)this[t + i] = e1 / o & 255;
            return t + r;
        }, a.prototype.writeUintBE = a.prototype.writeUIntBE = function(e1, t, r, n) {
            (e1 = +e1, t >>>= 0, r >>>= 0, n) || L(this, e1, t, r, Math.pow(2, 8 * r) - 1, 0);
            var o = r - 1, i = 1;
            for(this[t + o] = 255 & e1; --o >= 0 && (i *= 256);)this[t + o] = e1 / i & 255;
            return t + r;
        }, a.prototype.writeUint8 = a.prototype.writeUInt8 = function(e1, t, r) {
            return e1 = +e1, t >>>= 0, r || L(this, e1, t, 1, 255, 0), this[t] = 255 & e1, t + 1;
        }, a.prototype.writeUint16LE = a.prototype.writeUInt16LE = function(e1, t, r) {
            return e1 = +e1, t >>>= 0, r || L(this, e1, t, 2, 65535, 0), this[t] = 255 & e1, this[t + 1] = e1 >>> 8, t + 2;
        }, a.prototype.writeUint16BE = a.prototype.writeUInt16BE = function(e1, t, r) {
            return e1 = +e1, t >>>= 0, r || L(this, e1, t, 2, 65535, 0), this[t] = e1 >>> 8, this[t + 1] = 255 & e1, t + 2;
        }, a.prototype.writeUint32LE = a.prototype.writeUInt32LE = function(e1, t, r) {
            return e1 = +e1, t >>>= 0, r || L(this, e1, t, 4, 4294967295, 0), this[t + 3] = e1 >>> 24, this[t + 2] = e1 >>> 16, this[t + 1] = e1 >>> 8, this[t] = 255 & e1, t + 4;
        }, a.prototype.writeUint32BE = a.prototype.writeUInt32BE = function(e1, t, r) {
            return e1 = +e1, t >>>= 0, r || L(this, e1, t, 4, 4294967295, 0), this[t] = e1 >>> 24, this[t + 1] = e1 >>> 16, this[t + 2] = e1 >>> 8, this[t + 3] = 255 & e1, t + 4;
        }, a.prototype.writeIntLE = function(e1, t, r, n) {
            if (e1 = +e1, t >>>= 0, !n) {
                var o = Math.pow(2, 8 * r - 1);
                L(this, e1, t, r, o - 1, -o);
            }
            var i = 0, a = 1, s = 0;
            for(this[t] = 255 & e1; ++i < r && (a *= 256);)e1 < 0 && 0 === s && 0 !== this[t + i - 1] && (s = 1), this[t + i] = (e1 / a >> 0) - s & 255;
            return t + r;
        }, a.prototype.writeIntBE = function(e1, t, r, n) {
            if (e1 = +e1, t >>>= 0, !n) {
                var o = Math.pow(2, 8 * r - 1);
                L(this, e1, t, r, o - 1, -o);
            }
            var i = r - 1, a = 1, s = 0;
            for(this[t + i] = 255 & e1; --i >= 0 && (a *= 256);)e1 < 0 && 0 === s && 0 !== this[t + i + 1] && (s = 1), this[t + i] = (e1 / a >> 0) - s & 255;
            return t + r;
        }, a.prototype.writeInt8 = function(e1, t, r) {
            return e1 = +e1, t >>>= 0, r || L(this, e1, t, 1, 127, -128), e1 < 0 && (e1 = 255 + e1 + 1), this[t] = 255 & e1, t + 1;
        }, a.prototype.writeInt16LE = function(e1, t, r) {
            return e1 = +e1, t >>>= 0, r || L(this, e1, t, 2, 32767, -32768), this[t] = 255 & e1, this[t + 1] = e1 >>> 8, t + 2;
        }, a.prototype.writeInt16BE = function(e1, t, r) {
            return e1 = +e1, t >>>= 0, r || L(this, e1, t, 2, 32767, -32768), this[t] = e1 >>> 8, this[t + 1] = 255 & e1, t + 2;
        }, a.prototype.writeInt32LE = function(e1, t, r) {
            return e1 = +e1, t >>>= 0, r || L(this, e1, t, 4, 2147483647, -2147483648), this[t] = 255 & e1, this[t + 1] = e1 >>> 8, this[t + 2] = e1 >>> 16, this[t + 3] = e1 >>> 24, t + 4;
        }, a.prototype.writeInt32BE = function(e1, t, r) {
            return e1 = +e1, t >>>= 0, r || L(this, e1, t, 4, 2147483647, -2147483648), e1 < 0 && (e1 = 4294967295 + e1 + 1), this[t] = e1 >>> 24, this[t + 1] = e1 >>> 16, this[t + 2] = e1 >>> 8, this[t + 3] = 255 & e1, t + 4;
        }, a.prototype.writeFloatLE = function(e1, t, r) {
            return B(this, e1, t, !0, r);
        }, a.prototype.writeFloatBE = function(e1, t, r) {
            return B(this, e1, t, !1, r);
        }, a.prototype.writeDoubleLE = function(e1, t, r) {
            return R(this, e1, t, !0, r);
        }, a.prototype.writeDoubleBE = function(e1, t, r) {
            return R(this, e1, t, !1, r);
        }, a.prototype.copy = function(e1, t, r, n) {
            if (!a.isBuffer(e1)) throw new TypeError("argument should be a Buffer");
            if (r || (r = 0), n || 0 === n || (n = this.length), t >= e1.length && (t = e1.length), t || (t = 0), n > 0 && n < r && (n = r), n === r) return 0;
            if (0 === e1.length || 0 === this.length) return 0;
            if (t < 0) throw new RangeError("targetStart out of bounds");
            if (r < 0 || r >= this.length) throw new RangeError("Index out of range");
            if (n < 0) throw new RangeError("sourceEnd out of bounds");
            n > this.length && (n = this.length), e1.length - t < n - r && (n = e1.length - t + r);
            var o = n - r;
            return this === e1 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t, r, n) : Uint8Array.prototype.set.call(e1, this.subarray(r, n), t), o;
        }, a.prototype.fill = function(e1, t, r, n) {
            if ("string" == typeof e1) {
                if ("string" == typeof t ? (n = t, t = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
                if ("string" == typeof n && !a.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);
                if (1 === e1.length) {
                    var o = e1.charCodeAt(0);
                    ("utf8" === n && o < 128 || "latin1" === n) && (e1 = o);
                }
            } else "number" == typeof e1 ? e1 &= 255 : "boolean" == typeof e1 && (e1 = Number(e1));
            if (t < 0 || this.length < t || this.length < r) throw new RangeError("Out of range index");
            if (r <= t) return this;
            var i;
            if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, e1 || (e1 = 0), "number" == typeof e1) for(i = t; i < r; ++i)this[i] = e1;
            else {
                var s = a.isBuffer(e1) ? e1 : a.from(e1, n), u = s.length;
                if (0 === u) throw new TypeError('The value "' + e1 + '" is invalid for argument "value"');
                for(i = 0; i < r - t; ++i)this[i + t] = s[i % u];
            }
            return this;
        };
        var M = /[^+/0-9A-Za-z-_]/g;
        function I(e1, t) {
            var r;
            t = t || 1 / 0;
            for(var n = e1.length, o = null, i = [], a = 0; a < n; ++a){
                if ((r = e1.charCodeAt(a)) > 55295 && r < 57344) {
                    if (!o) {
                        if (r > 56319) {
                            (t -= 3) > -1 && i.push(239, 191, 189);
                            continue;
                        }
                        if (a + 1 === n) {
                            (t -= 3) > -1 && i.push(239, 191, 189);
                            continue;
                        }
                        o = r;
                        continue;
                    }
                    if (r < 56320) {
                        (t -= 3) > -1 && i.push(239, 191, 189), o = r;
                        continue;
                    }
                    r = 65536 + (o - 55296 << 10 | r - 56320);
                } else o && (t -= 3) > -1 && i.push(239, 191, 189);
                if (o = null, r < 128) {
                    if ((t -= 1) < 0) break;
                    i.push(r);
                } else if (r < 2048) {
                    if ((t -= 2) < 0) break;
                    i.push(r >> 6 | 192, 63 & r | 128);
                } else if (r < 65536) {
                    if ((t -= 3) < 0) break;
                    i.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
                } else {
                    if (!(r < 1114112)) throw new Error("Invalid code point");
                    if ((t -= 4) < 0) break;
                    i.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
                }
            }
            return i;
        }
        function O(e1) {
            return t.toByteArray(function(e1) {
                if ((e1 = (e1 = e1.split("=")[0]).trim().replace(M, "")).length < 2) return "";
                for(; e1.length % 4 != 0;)e1 += "=";
                return e1;
            }(e1));
        }
        function j(e1, t, r, n) {
            for(var o = 0; o < n && !(o + r >= t.length || o >= e1.length); ++o)t[o + r] = e1[o];
            return o;
        }
        function U(e1, t) {
            return e1 instanceof t || null != e1 && null != e1.constructor && null != e1.constructor.name && e1.constructor.name === t.name;
        }
        function $(e1) {
            return e1 != e1;
        }
        var q = function() {
            for(var e1 = "0123456789abcdef", t = new Array(256), r = 0; r < 16; ++r)for(var n = 16 * r, o = 0; o < 16; ++o)t[n + o] = e1[r] + e1[o];
            return t;
        }();
    }
}), gt = l({
    "../../../node_modules/lodash/toFinite.js" (e1, t) {
        var r = j(), n = 1 / 0;
        t.exports = function(e1) {
            return e1 ? (e1 = r(e1)) === n || e1 === -1 / 0 ? 17976931348623157e292 * (e1 < 0 ? -1 : 1) : e1 == e1 ? e1 : 0 : 0 === e1 ? e1 : 0;
        };
    }
}), vt = l({
    "../../../node_modules/lodash/toInteger.js" (e1, t) {
        var r = gt();
        t.exports = function(e1) {
            var t = r(e1), n = t % 1;
            return t == t ? n ? t - n : t : 0;
        };
    }
}), yt = l({
    "../../../node_modules/lodash/before.js" (e1, t) {
        var r = vt();
        t.exports = function(e1, t) {
            var n;
            if ("function" != typeof t) throw new TypeError("Expected a function");
            return e1 = r(e1), function() {
                return --e1 > 0 && (n = t.apply(this, arguments)), e1 <= 1 && (t = void 0), n;
            };
        };
    }
}), bt = l({
    "../../../node_modules/lodash/once.js" (e1, t) {
        var r = yt();
        t.exports = function(e1) {
            return r(2, e1);
        };
    }
}), wt = l({
    "../../../esbuild/polyfill.noop.js" () {}
}), _t = l({
    "../../../_builds/cesdk/wasm32-unknown-emscripten/Release/cesdk.js" (e1, t) {
        var r, n = (r = "undefined" != typeof document && document.currentScript ? document.currentScript.src : void 0, "undefined" != typeof __filename && (r ||= __filename), function(e1 = {}) {
            var t, n, o, i, a, s, u = e1;
            u.ready = new Promise((e1, r)=>{
                t = e1, n = r;
            }), u.expectedDataFileDownloads || (u.expectedDataFileDownloads = 0), u.expectedDataFileDownloads++, u.ENVIRONMENT_IS_PTHREAD || u.$ww || function(e1) {
                "object" == typeof window ? window.encodeURIComponent(window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf("/")) + "/") : "undefined" == typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] && "undefined" != typeof location && encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf("/")) + "/");
                var t = "cesdk.data";
                "function" != typeof u.locateFilePackage || u.locateFile || (u.locateFile = u.locateFilePackage, x("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)"));
                var r = u.locateFile ? u.locateFile(t, "") : t, n = e1.remote_package_size, o = null, i = u.getPreloadedPackage ? u.getPreloadedPackage(r, n) : null;
                function a() {
                    function t(e1, t) {
                        if (!e1) throw t + (new Error).stack;
                    }
                    function r(e1, t, r) {
                        this.start = e1, this.end = t, this.audio = r;
                    }
                    u.FS_createPath("/", "ly.img.cesdk", !0, !0), u.FS_createPath("/ly.img.cesdk", "fonts", !0, !0), u.FS_createPath("/ly.img.cesdk", "icons", !0, !0), u.FS_createPath("/ly.img.cesdk", "icu", !0, !0), u.FS_createPath("/ly.img.cesdk", "presets", !0, !0), u.FS_createPath("/ly.img.cesdk", "shaders", !0, !0), u.FS_createPath("/ly.img.cesdk/shaders", "common", !0, !0), r.prototype = {
                        requests: {},
                        open: function(e1, t) {
                            this.name = t, this.requests[t] = this, u.addRunDependency(`fp ${this.name}`);
                        },
                        send: function() {},
                        onload: function() {
                            var e1 = this.byteArray.subarray(this.start, this.end);
                            this.finish(e1);
                        },
                        finish: function(e1) {
                            u.FS_createDataFile(this.name, null, e1, !0, !0, !0), u.removeRunDependency(`fp ${this.name}`), this.requests[this.name] = null;
                        }
                    };
                    for(var n = e1.files, a = 0; a < n.length; ++a)new r(n[a].start, n[a].end, n[a].audio || 0).open("GET", n[a].filename);
                    function s(n) {
                        t(n, "Loading data file failed."), t(n.constructor.name === ArrayBuffer.name, "bad input to processPackageData");
                        var o = new Uint8Array(n);
                        r.prototype.byteArray = o;
                        for(var i = e1.files, a = 0; a < i.length; ++a)r.prototype.requests[i[a].filename].onload();
                        u.removeRunDependency("datafile_cesdk.data");
                    }
                    u.addRunDependency("datafile_cesdk.data"), u.preloadResults || (u.preloadResults = {}), u.preloadResults["cesdk.data"] = {
                        fromCache: !1
                    }, i ? (s(i), i = null) : o = s;
                }
                i || function(e1, t, r, n) {
                    if ("object" != typeof process || "object" != typeof process.versions || "string" != typeof process.versions.node) {
                        var o = new XMLHttpRequest;
                        o.open("GET", e1, !0), o.responseType = "arraybuffer", o.onprogress = function(r) {
                            var n = e1, i = t;
                            if (r.total && (i = r.total), r.loaded) {
                                o.addedTotal ? u.dataFileDownloads[n].loaded = r.loaded : (o.addedTotal = !0, u.dataFileDownloads || (u.dataFileDownloads = {}), u.dataFileDownloads[n] = {
                                    loaded: r.loaded,
                                    total: i
                                });
                                var a = 0, s = 0, c = 0;
                                for(var l in u.dataFileDownloads){
                                    var d = u.dataFileDownloads[l];
                                    a += d.total, s += d.loaded, c++;
                                }
                                a = Math.ceil(a * u.expectedDataFileDownloads / c), u.setStatus && u.setStatus(`Downloading data... (${s}/${a})`);
                            } else u.dataFileDownloads || u.setStatus && u.setStatus("Downloading data...");
                        }, o.onerror = function(t) {
                            throw new Error("NetworkError for: " + e1);
                        }, o.onload = function(e1) {
                            if (!(200 == o.status || 304 == o.status || 206 == o.status || 0 == o.status && o.response)) throw new Error(o.statusText + " : " + o.responseURL);
                            var t = o.response;
                            r(t);
                        }, o.send(null);
                    } else wt().readFile(e1, function(e1, t) {
                        e1 ? n(e1) : r(t.buffer);
                    });
                }(r, n, function(e1) {
                    o ? (o(e1), o = null) : i = e1;
                }, function(e1) {
                    console.error("package error:", e1);
                }), u.calledRun ? a() : (u.preRun || (u.preRun = []), u.preRun.push(a));
            }({
                files: [
                    {
                        filename: "/ly.img.cesdk/fonts/imgly_font_inter_semibold.otf",
                        start: 0,
                        end: 270760
                    },
                    {
                        filename: "/ly.img.cesdk/icons/ErrorAudio.svg",
                        start: 270760,
                        end: 271672
                    },
                    {
                        filename: "/ly.img.cesdk/icons/ErrorConnection.svg",
                        start: 271672,
                        end: 272620
                    },
                    {
                        filename: "/ly.img.cesdk/icons/ErrorVideo.svg",
                        start: 272620,
                        end: 273473
                    },
                    {
                        filename: "/ly.img.cesdk/icons/Move.svg",
                        start: 273473,
                        end: 274413
                    },
                    {
                        filename: "/ly.img.cesdk/icons/RotateIndicator.svg",
                        start: 274413,
                        end: 275394
                    },
                    {
                        filename: "/ly.img.cesdk/icu/icudt74l.dat",
                        start: 275394,
                        end: 810498
                    },
                    {
                        filename: "/ly.img.cesdk/presets/.keep",
                        start: 810498,
                        end: 810498
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/adjustments.sksl",
                        start: 810498,
                        end: 814387
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/black_and_white_color_mixer.sksl",
                        start: 814387,
                        end: 820704
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/common/ubq_adjustments.sksl",
                        start: 820704,
                        end: 825295
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/common/ubq_color_conversions.sksl",
                        start: 825295,
                        end: 835280
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/common/ubq_constants.sksl",
                        start: 835280,
                        end: 835770
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/common/ubq_hue_constants.sksl",
                        start: 835770,
                        end: 838937
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/common/ubq_noise.sksl",
                        start: 838937,
                        end: 841575
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/cross_cut.sksl",
                        start: 841575,
                        end: 842522
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/dot_pattern.sksl",
                        start: 842522,
                        end: 843600
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/duotone_filter.sksl",
                        start: 843600,
                        end: 844564
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/extrude_blur.sksl",
                        start: 844564,
                        end: 846681
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/glow.sksl",
                        start: 846681,
                        end: 847648
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/half_tone.sksl",
                        start: 847648,
                        end: 848142
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/hsp_selective_adjustments.sksl",
                        start: 848142,
                        end: 861742
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/linocut.sksl",
                        start: 861742,
                        end: 862527
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/liquid.sksl",
                        start: 862527,
                        end: 863009
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/lut_filter.sksl",
                        start: 863009,
                        end: 865872
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/mask_color.sksl",
                        start: 865872,
                        end: 866377
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/mirror.sksl",
                        start: 866377,
                        end: 866831
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/outliner.sksl",
                        start: 866831,
                        end: 868468
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/pixelize.sksl",
                        start: 868468,
                        end: 868768
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/placeholder_overlay_lines.sksl",
                        start: 868768,
                        end: 869456
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/posterize.sksl",
                        start: 869456,
                        end: 869668
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/radial_pixel.sksl",
                        start: 869668,
                        end: 870231
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/recolor.sksl",
                        start: 870231,
                        end: 872432
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/sharpie.sksl",
                        start: 872432,
                        end: 874737
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/shifter.sksl",
                        start: 874737,
                        end: 875421
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/tiltshift.sksl",
                        start: 875421,
                        end: 876003
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/tv_glitch.sksl",
                        start: 876003,
                        end: 876721
                    },
                    {
                        filename: "/ly.img.cesdk/shaders/vignette.sksl",
                        start: 876721,
                        end: 877093
                    }
                ],
                remote_package_size: 877093
            }), "object" == typeof window && "object" == typeof window.performance ? u.performance = performance : "object" == typeof global && "object" == typeof global.perf_hooks && "object" == typeof global.perf_hooks.performance ? u.performance = global.perf_hooks.performance : u.performance = {
                mark: function() {},
                measure: function() {}
            }, (i = o || (o = {}))[i.PENDING = 0] = "PENDING", i[i.FINISHED = 1] = "FINISHED", i[i.ALLOCATED = 2] = "ALLOCATED", i[i.ERROR = 3] = "ERROR", (s = a || (a = {}))[s.GET = 0] = "GET", s[s.POST = 1] = "POST";
            class FetchProcess {
                constructor(e1, t){
                    this.state = o.PENDING, this.totalBytes = 0, this.receivedLength = 0, this.handle = e1, this.uri = t, this.abortController = new AbortController, this.abortSignal = this.abortController.signal;
                }
                async readChunks(e1) {
                    let t = 0;
                    const r = [], n = (e1)=>{
                        r.push(e1), t += e1.length, this.receivedLength = t;
                    };
                    if (null == e1) ;
                    else if ("getReader" in e1) {
                        const t = e1.getReader();
                        for(;;){
                            const { done: e1, value: r } = await t.read();
                            if (e1) break;
                            if (this.abortSignal.aborted) throw await t.cancel(), t.releaseLock(), new Error(this.abortSignal.reason);
                            n(r);
                        }
                        t.releaseLock();
                    } else {
                        const t = ()=>e1.destroy(new Error(this.abortSignal.reason));
                        this.abortSignal.addEventListener("abort", t, {
                            once: !0
                        });
                        try {
                            await new Promise((t, r)=>{
                                e1.on("data", n), e1.on("end", ()=>t()), e1.on("error", (e1)=>r(e1));
                            });
                        } finally{
                            this.abortSignal.removeEventListener("abort", t);
                        }
                    }
                    const o = new Uint8Array(t);
                    let i = 0;
                    for (const e1 of r)o.set(e1, i), i += e1.length;
                    return this.finish(o);
                }
                abort() {
                    this.isPending() && this.abortController.abort("Fetch aborted");
                }
                isPending() {
                    return this.state === o.PENDING;
                }
                isError() {
                    return this.state === o.ERROR;
                }
                isFinished() {
                    return this.state === o.FINISHED;
                }
                isAllocated() {
                    return this.state === o.ALLOCATED;
                }
                allocate() {
                    if (this.isAllocated()) return this;
                    if (this.isFinished()) {
                        const e1 = this.result.length, t = u._malloc(e1);
                        u.HEAPU8.set(this.result, t);
                        const r = Object.assign(Object.assign({}, this), {
                            state: o.ALLOCATED,
                            resultAddress: t,
                            resultLength: e1
                        });
                        return Object.assign(this, r), r;
                    }
                    return null;
                }
                finish(e1) {
                    const t = Object.assign(Object.assign({}, this), {
                        state: o.FINISHED,
                        result: e1,
                        totalBytes: e1.length
                    });
                    return Object.assign(this, t);
                }
                fail(e1) {
                    const t = Object.assign(Object.assign({}, this), {
                        state: o.ERROR,
                        error: e1
                    });
                    return Object.assign(this, t);
                }
            }
            u.emscripten_ubq_asyncFetchManager = new class AsyncFetchManager {
                constructor(){
                    this._nextHandle = 0, this._nextHeaderHandle = 0, this._processes = new Map, this._headers = new Map, this._fetchImpl = null;
                }
                _fetch(e1, t) {
                    return this._fetchImpl ? this._fetchImpl(e1, t) : fetch(e1, t);
                }
                setFetch(e1) {
                    this._fetchImpl = e1;
                }
                getProcess(e1) {
                    return this._processes.get(e1);
                }
                deleteProcess(e1) {
                    const t = this._processes.get(e1);
                    return (null == t ? void 0 : t.isPending()) && t.abort(), this._processes.delete(e1);
                }
                clear() {
                    for (const e1 of this._processes.values())e1.isPending() && e1.abort();
                    this._processes.clear(), this._headers.clear();
                }
                fetch(e1, t, r, n, o, i, a, s, c) {
                    const l = u.UTF8ToString(t, r), d = this._nextHandle++, h = new FetchProcess(d, l);
                    return this._processes.set(d, h), l.match(/^file:/) ? this._fetchFile(h).catch((e1)=>{
                        h.fail(e1);
                    }) : this._fetchRemote(h, e1, n, o, i, a, s, c).catch((e1)=>{
                        h.fail(e1);
                    }), h;
                }
                async _fetchFile(e1) {
                    if ("undefined" != typeof window) throw new Error("File URLs supported only in Node.JS");
                    const t = wt(), { fileURLToPath: r } = wt(), n = t.createReadStream(r(e1.uri));
                    return e1.readChunks(n);
                }
                async _fetchRemote(e1, t, r, n, o, i, s, c) {
                    const l = u.UTF8ToString(s, c), d = this.getHeaders(r, n), h = t === a.POST ? new Uint8Array(new Uint8Array(u.HEAPU8.buffer, o, i)) : void 0, f = await this._fetch(e1.uri, {
                        method: a[t],
                        headers: d,
                        body: h,
                        mode: "cors",
                        credentials: l,
                        signal: e1.abortSignal
                    });
                    if (f.status >= 200 && f.status <= 209) {
                        let t = 0;
                        return f.headers.has("Content-Length") && (t = +f.headers.get("Content-Length")), e1.totalBytes = t, e1.readChunks(f.body);
                    }
                    return e1.fail(f.statusText);
                }
                getHeaders(e1, t) {
                    const r = {};
                    for(let n = 0; n < t; n++){
                        const t = u.getValue(e1 + 4 * n, "i32"), o = this._headers.get(t);
                        r[o.key] = o.value;
                    }
                    return r;
                }
                createHeader(e1, t, r, n) {
                    const o = u.UTF8ToString(e1, t), i = u.UTF8ToString(r, n), a = this._nextHeaderHandle++;
                    return this._headers.set(a, {
                        key: o,
                        value: i
                    }), a;
                }
                deleteHeader(e1) {
                    return this._headers.delete(e1);
                }
            }, u.emscripten_ubq_codec_videoDecoders = new Map, u.emscripten_ubq_codec_audioDecoders = new Map, u.emscripten_ubq_codec_videoEncoders = new Map, u.emscripten_ubq_codec_audioEncoders = new Map, u.emscripten_ubq_codec_videoDecoderNextHandle = 1, u.emscripten_ubq_codec_audioDecoderNextHandle = 1, u.emscripten_ubq_codec_videoEncoderNextHandle = 1, u.emscripten_ubq_codec_audioEncoderNextHandle = 1, u.emscripten_ubq_codec_createNativeResult = function(e1) {
                const t = u._malloc(8), r = u.HEAPU32.subarray(t / 4, t / 4 + 2);
                if (r[0] = e1.handle ? e1.handle : e1.code ? e1.code : 0, e1.error) {
                    const t = (new TextEncoder).encode(e1.error), n = u._malloc(t.length + 1), o = u.HEAPU8.subarray(n, n + t.length + 1);
                    for(let e1 = 0; e1 < t.length; e1++)o[e1] = t[e1];
                    o[t.length] = 0, r[1] = n;
                } else r[1] = 0;
                return t;
            }, u.emscripten_ubq_codec_createVideoDecoder = function(e1, t) {
                const r = new VideoDecoder({
                    output: (n)=>{
                        const o = r.textures;
                        let i = !1;
                        if ((r.shouldDropFrames || r.decodedFrames < r.requestedFrame || r.decodeQueueSize >= o.length) && (i = !0), !i) {
                            var a = u.ctx;
                            const e1 = r.decodedFrames % o.length, t = a.getParameter(a.TEXTURE_BINDING_2D);
                            a.bindTexture(a.TEXTURE_2D, o[e1]), a.texImage2D(a.TEXTURE_2D, 0, a.RGBA, a.RGBA, a.UNSIGNED_BYTE, n), a.bindTexture(a.TEXTURE_2D, t);
                        }
                        n.close(), r.decodedFrames++, u.emscripten_ubq_codec_onOutputDecodedVideoFrame(e1, r.decodedFrames, i, t);
                    },
                    error: (e1)=>{
                        r.unexpectedError = e1, console.error(e1);
                    }
                });
                return r.decodedFrames = 0, r.requestedFrame = 0, r.shouldDropFrames = !1, r;
            }, u.emscripten_ubq_codec_createAudioDecoder = function(e1, t, r) {
                const n = new AudioDecoder({
                    output: (o)=>{
                        if (n.flushing) return void o.close();
                        const i = u.HEAPF32.subarray(e1 / 4, e1 / 4 + r), a = u.HEAPF32.subarray(t / 4, t / 4 + r), s = 1 === o.numberOfChannels ? 0 : 1;
                        if ("f32-planar" === o.format) {
                            let e1 = n.writtenFrames % r;
                            if (e1 + o.numberOfFrames <= r) o.copyTo(i.subarray(e1), {
                                planeIndex: 0,
                                frameCount: o.numberOfFrames
                            }), o.copyTo(a.subarray(e1), {
                                planeIndex: s,
                                frameCount: o.numberOfFrames
                            });
                            else {
                                const t = r - e1;
                                o.copyTo(i.subarray(e1), {
                                    planeIndex: 0,
                                    frameCount: t
                                }), o.copyTo(a.subarray(e1), {
                                    planeIndex: s,
                                    frameCount: t
                                }), o.copyTo(i, {
                                    planeIndex: 0,
                                    frameOffset: t
                                }), o.copyTo(a, {
                                    planeIndex: s,
                                    frameOffset: t
                                });
                            }
                            n.writtenFrames += o.numberOfFrames;
                        } else if ("s16-planar" === o.format) if (1 === o.numberOfChannels) {
                            const e1 = new Int16Array(o.numberOfFrames);
                            o.copyTo(e1, {
                                planeIndex: 0
                            });
                            for(let t = 0; t < o.numberOfFrames; t++){
                                const o = e1[t] / 32768;
                                let s = n.writtenFrames % r;
                                i[s] = o, a[s] = o, n.writtenFrames++;
                            }
                        } else {
                            const e1 = new Int16Array(o.numberOfFrames), t = new Int16Array(o.numberOfFrames);
                            o.copyTo(e1, {
                                planeIndex: 0
                            }), o.copyTo(t, {
                                planeIndex: 1
                            });
                            for(let s = 0; s < o.numberOfFrames; s++){
                                let o = n.writtenFrames % r;
                                i[o] = e1[s] / 32768, a[o] = t[s] / 32768, n.writtenFrames++;
                            }
                        }
                        else if ("s16" === o.format) {
                            const e1 = new Int16Array(o.numberOfFrames * o.numberOfChannels);
                            if (o.copyTo(e1, {
                                planeIndex: 0
                            }), 1 === o.numberOfChannels) for(let t = 0; t < o.numberOfFrames; t++){
                                const o = e1[t] / 32768;
                                let s = n.writtenFrames % r;
                                i[s] = o, a[s] = o, n.writtenFrames++;
                            }
                            else for(let t = 0; t < o.numberOfFrames; t++){
                                let s = n.writtenFrames % r;
                                i[s] = e1[t * o.numberOfChannels + 0] / 32768, a[s] = e1[t * o.numberOfChannels + 1] / 32768, n.writtenFrames++;
                            }
                        } else console.error("Unsupported audio format:", o.format);
                        o.close();
                    },
                    error: (e1)=>{
                        n.unexpectedError = e1, console.error(e1);
                    }
                });
                return n.writtenFrames = 0, n;
            }, u.emscripten_ubq_settings_forceWebGL1 = !1;
            var c, l, d, h = Object.assign({}, u), f = [], p = "./this.program", m = (e1, t)=>{
                throw t;
            }, g = "object" == typeof window, v = "function" == typeof importScripts, y = "object" == typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] && "object" == typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions && "string" == typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions.node, b = "";
            if (y) {
                var w = wt(), _ = wt();
                b = v ? _.dirname(b) + "/" : __dirname + "/", c = (e1, t)=>(e1 = ee(e1) ? new URL(e1) : _.normalize(e1), w.readFileSync(e1, t ? void 0 : "utf8")), d = (e1)=>{
                    var t = c(e1, !0);
                    return t.buffer || (t = new Uint8Array(t)), t;
                }, l = (e1, t, r, n = !0)=>{
                    e1 = ee(e1) ? new URL(e1) : _.normalize(e1), w.readFile(e1, n ? void 0 : "utf8", (e1, o)=>{
                        e1 ? r(e1) : t(n ? o.buffer : o);
                    });
                }, !u.thisProgram && process.argv.length > 1 && (p = process.argv[1].replace(/\\/g, "/")), f = process.argv.slice(2), m = (e1, t)=>{
                    throw process.exitCode = e1, t;
                };
            } else (g || v) && (v ? b = self.location.href : "undefined" != typeof document && document.currentScript && (b = document.currentScript.src), r && (b = r), b = b.startsWith("blob:") ? "" : b.substr(0, b.replace(/[?#].*/, "").lastIndexOf("/") + 1), c = (e1)=>{
                var t = new XMLHttpRequest;
                return t.open("GET", e1, !1), t.send(null), t.responseText;
            }, v && (d = (e1)=>{
                var t = new XMLHttpRequest;
                return t.open("GET", e1, !1), t.responseType = "arraybuffer", t.send(null), new Uint8Array(t.response);
            }), l = (e1, t, r)=>{
                var n = new XMLHttpRequest;
                n.open("GET", e1, !0), n.responseType = "arraybuffer", n.onload = ()=>{
                    200 == n.status || 0 == n.status && n.response ? t(n.response) : r();
                }, n.onerror = r, n.send(null);
            });
            var E, S, C = u.print || console.log.bind(console), x = u.printErr || console.error.bind(console);
            Object.assign(u, h), h = null, u.arguments && (f = u.arguments), u.thisProgram && (p = u.thisProgram), u.quit && (m = u.quit), u.wasmBinary && (E = u.wasmBinary), "object" != typeof WebAssembly && K("no native wasm support detected");
            var k, T, A, P, F, L, D, B, R, M, I, O = !1;
            function j(e1, t) {
                e1 || K(t);
            }
            function U() {
                var e1 = S.buffer;
                u.HEAP8 = T = new Int8Array(e1), u.HEAP16 = P = new Int16Array(e1), u.HEAPU8 = A = new Uint8Array(e1), u.HEAPU16 = F = new Uint16Array(e1), u.HEAP32 = L = new Int32Array(e1), u.HEAPU32 = D = new Uint32Array(e1), u.HEAPF32 = B = new Float32Array(e1), u.HEAPF64 = I = new Float64Array(e1), u.HEAP64 = R = new BigInt64Array(e1), u.HEAPU64 = M = new BigUint64Array(e1);
            }
            var $ = u.INITIAL_MEMORY || 16777216;
            S = u.wasmMemory ? u.wasmMemory : new WebAssembly.Memory({
                initial: $ / 65536,
                maximum: 32768
            }), U(), $ = S.buffer.byteLength;
            var q = [], H = [], N = [], V = [], z = 0, W = null, G = null;
            function X(e1) {
                z++, u.monitorRunDependencies?.(z);
            }
            function Y(e1) {
                if (z--, u.monitorRunDependencies?.(z), 0 == z && (null !== W && (clearInterval(W), W = null), G)) {
                    var t = G;
                    G = null, t();
                }
            }
            function K(e1) {
                u.onAbort?.(e1), x(e1 = "Aborted(" + e1 + ")"), O = !0, k = 1, e1 += ". Build with -sASSERTIONS for more info.";
                var t = new WebAssembly.RuntimeError(e1);
                throw n(t), t;
            }
            var Z, Q, J = (e1)=>e1.startsWith("data:application/octet-stream;base64,"), ee = (e1)=>e1.startsWith("file://");
            function te(e1) {
                if (e1 == Z && E) return new Uint8Array(E);
                if (d) return d(e1);
                throw "both async and sync fetching of the wasm failed";
            }
            function re(e1, t, r) {
                return (function(e1) {
                    return E || !g && !v || "function" != typeof fetch ? Promise.resolve().then(()=>te(e1)) : fetch(e1, {
                        credentials: "same-origin"
                    }).then((t)=>{
                        if (!t.ok) throw `failed to load wasm binary file at '${e1}'`;
                        return t.arrayBuffer();
                    }).catch(()=>te(e1));
                })(e1).then((e1)=>WebAssembly.instantiate(e1, t)).then((e1)=>e1).then(r, (e1)=>{
                    x(`failed to asynchronously prepare wasm: ${e1}`), K(e1);
                });
            }
            J(Z = "cesdk.wasm") || (Q = Z, Z = u.locateFile ? u.locateFile(Q, b) : b + Q);
            var ne = {
                2527892: (e1, t, r, n, o)=>"undefined" == typeof window || void 0 === (window.AudioContext || window.webkitAudioContext) ? 0 : (void 0 === window.miniaudio && (window.miniaudio = {
                        referenceCount: 0
                    }, window.miniaudio.device_type = {}, window.miniaudio.device_type.playback = e1, window.miniaudio.device_type.capture = t, window.miniaudio.device_type.duplex = r, window.miniaudio.device_state = {}, window.miniaudio.device_state.stopped = n, window.miniaudio.device_state.started = o, miniaudio.devices = [], miniaudio.track_device = function(e1) {
                        for(var t = 0; t < miniaudio.devices.length; ++t)if (null == miniaudio.devices[t]) return miniaudio.devices[t] = e1, t;
                        return miniaudio.devices.push(e1), miniaudio.devices.length - 1;
                    }, miniaudio.untrack_device_by_index = function(e1) {
                        for(miniaudio.devices[e1] = null; miniaudio.devices.length > 0 && null == miniaudio.devices[miniaudio.devices.length - 1];)miniaudio.devices.pop();
                    }, miniaudio.untrack_device = function(e1) {
                        for(var t = 0; t < miniaudio.devices.length; ++t)if (miniaudio.devices[t] == e1) return miniaudio.untrack_device_by_index(t);
                    }, miniaudio.get_device_by_index = function(e1) {
                        return miniaudio.devices[e1];
                    }, miniaudio.unlock_event_types = function() {
                        return [
                            "touchstart",
                            "touchend",
                            "click"
                        ];
                    }(), miniaudio.unlock = function() {
                        for(var e1 = 0; e1 < miniaudio.devices.length; ++e1){
                            var t = miniaudio.devices[e1];
                            null != t && null != t.webaudio && 2 === t.state && t.webaudio.resume();
                        }
                        miniaudio.unlock_event_types.map(function(e1) {
                            document.removeEventListener(e1, miniaudio.unlock, !0);
                        });
                    }, miniaudio.unlock_event_types.map(function(e1) {
                        document.addEventListener(e1, miniaudio.unlock, !0);
                    })), window.miniaudio.referenceCount += 1, 1),
                2529882: ()=>{
                    void 0 !== window.miniaudio && (window.miniaudio.referenceCount -= 1, 0 === window.miniaudio.referenceCount && delete window.miniaudio);
                },
                2530046: ()=>void 0 !== navigator.mediaDevices && void 0 !== navigator.mediaDevices.getUserMedia,
                2530150: ()=>{
                    try {
                        var e1 = new (window.AudioContext || window.webkitAudioContext), t = e1.sampleRate;
                        return e1.close(), t;
                    } catch (e1) {
                        return 0;
                    }
                },
                2530321: (e1, t, r, n, o, i)=>{
                    var a = e1, s = t, c = r, l = n, d = o, h = i;
                    if (void 0 === window.miniaudio) return -1;
                    var f = {}, p = {};
                    a == window.miniaudio.device_type.playback && (p.sampleRate = c), f.webaudio = new (window.AudioContext || window.webkitAudioContext)(p), f.webaudio.suspend(), f.state = window.miniaudio.device_state.stopped;
                    var m = 0, g = s;
                    return a != window.miniaudio.device_type.playback && (m = s), f.scriptNode = f.webaudio.createScriptProcessor(l, m, g), f.scriptNode.onaudioprocess = function(e1) {
                        if (null != f.intermediaryBufferView && 0 != f.intermediaryBufferView.length || (f.intermediaryBufferView = new Float32Array(u.HEAPF32.buffer, d, l * s)), a == miniaudio.device_type.capture || a == miniaudio.device_type.duplex) {
                            for(var t = 0; t < s; t += 1)for(var r = e1.inputBuffer.getChannelData(t), n = f.intermediaryBufferView, o = 0; o < l; o += 1)n[o * s + t] = r[o];
                            Du(h, l, d);
                        }
                        if (a == miniaudio.device_type.playback || a == miniaudio.device_type.duplex) for(Bu(h, l, d), t = 0; t < e1.outputBuffer.numberOfChannels; ++t){
                            var i = e1.outputBuffer.getChannelData(t);
                            for(n = f.intermediaryBufferView, o = 0; o < l; o += 1)i[o] = n[o * s + t];
                        }
                        else for(t = 0; t < e1.outputBuffer.numberOfChannels; ++t)e1.outputBuffer.getChannelData(t).fill(0);
                    }, a != miniaudio.device_type.capture && a != miniaudio.device_type.duplex || navigator.mediaDevices.getUserMedia({
                        audio: !0,
                        video: !1
                    }).then(function(e1) {
                        f.streamNode = f.webaudio.createMediaStreamSource(e1), f.streamNode.connect(f.scriptNode), f.scriptNode.connect(f.webaudio.destination);
                    }).catch(function(e1) {
                        console.log("Failed to get user media: " + e1);
                    }), a == miniaudio.device_type.playback && f.scriptNode.connect(f.webaudio.destination), miniaudio.track_device(f);
                },
                2533104: (e1)=>miniaudio.get_device_by_index(e1).webaudio.sampleRate,
                2533170: (e1)=>{
                    var t = miniaudio.get_device_by_index(e1);
                    void 0 !== t.scriptNode && (t.scriptNode.onaudioprocess = function(e1) {}, t.scriptNode.disconnect(), t.scriptNode = void 0), void 0 !== t.streamNode && (t.streamNode.disconnect(), t.streamNode = void 0), t.webaudio.close(), t.webaudio = void 0;
                },
                2533535: (e1)=>{
                    miniaudio.untrack_device_by_index(e1);
                },
                2533578: (e1)=>{
                    var t = miniaudio.get_device_by_index(e1);
                    t.webaudio.resume(), t.state = miniaudio.device_state.started;
                },
                2533703: (e1)=>{
                    var t = miniaudio.get_device_by_index(e1);
                    t.webaudio.suspend(), t.state = miniaudio.device_state.stopped;
                },
                2533829: ()=>!!globalThis.ubq_browserTabHidden
            };
            function oe(e1) {
                this.name = "ExitStatus", this.message = `Program terminated with exit(${e1})`, this.status = e1;
            }
            var ie = (e1)=>{
                for(; e1.length > 0;)e1.shift()(u);
            }, ae = u.noExitRuntime || !0, se = [], ue = 0;
            class ExceptionInfo {
                constructor(e1){
                    this.excPtr = e1, this.ptr = e1 - 24;
                }
                set_type(e1) {
                    D[this.ptr + 4 >> 2] = e1;
                }
                get_type() {
                    return D[this.ptr + 4 >> 2];
                }
                set_destructor(e1) {
                    D[this.ptr + 8 >> 2] = e1;
                }
                get_destructor() {
                    return D[this.ptr + 8 >> 2];
                }
                set_caught(e1) {
                    e1 = e1 ? 1 : 0, T[this.ptr + 12 >> 0] = e1;
                }
                get_caught() {
                    return 0 != T[this.ptr + 12 >> 0];
                }
                set_rethrown(e1) {
                    e1 = e1 ? 1 : 0, T[this.ptr + 13 >> 0] = e1;
                }
                get_rethrown() {
                    return 0 != T[this.ptr + 13 >> 0];
                }
                init(e1, t) {
                    this.set_adjusted_ptr(0), this.set_type(e1), this.set_destructor(t);
                }
                set_adjusted_ptr(e1) {
                    D[this.ptr + 16 >> 2] = e1;
                }
                get_adjusted_ptr() {
                    return D[this.ptr + 16 >> 2];
                }
                get_exception_ptr() {
                    if (Vu(this.get_type())) return D[this.excPtr >> 2];
                    var e1 = this.get_adjusted_ptr();
                    return 0 !== e1 ? e1 : this.excPtr;
                }
            }
            var ce = (e1)=>{
                var t = ue;
                if (!t) return Ru(0), 0;
                var r = new ExceptionInfo(t);
                r.set_adjusted_ptr(t);
                var n = r.get_type();
                if (!n) return Ru(0), t;
                for(var o in e1){
                    var i = e1[o];
                    if (0 === i || i === n) break;
                    var a = r.ptr + 16;
                    if (Nu(i, n, a)) return Ru(i), t;
                }
                return Ru(n), t;
            }, le = {
                isAbs: (e1)=>"/" === e1.charAt(0),
                splitPath: (e1)=>/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e1).slice(1),
                normalizeArray: (e1, t)=>{
                    for(var r = 0, n = e1.length - 1; n >= 0; n--){
                        var o = e1[n];
                        "." === o ? e1.splice(n, 1) : ".." === o ? (e1.splice(n, 1), r++) : r && (e1.splice(n, 1), r--);
                    }
                    if (t) for(; r; r--)e1.unshift("..");
                    return e1;
                },
                normalize: (e1)=>{
                    var t = le.isAbs(e1), r = "/" === e1.substr(-1);
                    return (e1 = le.normalizeArray(e1.split("/").filter((e1)=>!!e1), !t).join("/")) || t || (e1 = "."), e1 && r && (e1 += "/"), (t ? "/" : "") + e1;
                },
                dirname: (e1)=>{
                    var t = le.splitPath(e1), r = t[0], n = t[1];
                    return r || n ? (n && (n = n.substr(0, n.length - 1)), r + n) : ".";
                },
                basename: (e1)=>{
                    if ("/" === e1) return "/";
                    var t = (e1 = (e1 = le.normalize(e1)).replace(/\/$/, "")).lastIndexOf("/");
                    return -1 === t ? e1 : e1.substr(t + 1);
                },
                join: function() {
                    var e1 = Array.prototype.slice.call(arguments);
                    return le.normalize(e1.join("/"));
                },
                join2: (e1, t)=>le.normalize(e1 + "/" + t)
            }, de = (e1)=>(de = (()=>{
                    if ("object" == typeof crypto && "function" == typeof crypto.getRandomValues) return (e1)=>crypto.getRandomValues(e1);
                    if (y) try {
                        var e1 = wt();
                        if (e1.randomFillSync) return (t)=>e1.randomFillSync(t);
                        var t = e1.randomBytes;
                        return (e1)=>(e1.set(t(e1.byteLength)), e1);
                    } catch (e1) {}
                    K("initRandomDevice");
                })())(e1), he = {
                resolve: function() {
                    for(var e1 = "", t = !1, r = arguments.length - 1; r >= -1 && !t; r--){
                        var n = r >= 0 ? arguments[r] : Ce.cwd();
                        if ("string" != typeof n) throw new TypeError("Arguments to path.resolve must be strings");
                        if (!n) return "";
                        e1 = n + "/" + e1, t = le.isAbs(n);
                    }
                    return (t ? "/" : "") + (e1 = le.normalizeArray(e1.split("/").filter((e1)=>!!e1), !t).join("/")) || ".";
                },
                relative: (e1, t)=>{
                    function r(e1) {
                        for(var t = 0; t < e1.length && "" === e1[t]; t++);
                        for(var r = e1.length - 1; r >= 0 && "" === e1[r]; r--);
                        return t > r ? [] : e1.slice(t, r - t + 1);
                    }
                    e1 = he.resolve(e1).substr(1), t = he.resolve(t).substr(1);
                    for(var n = r(e1.split("/")), o = r(t.split("/")), i = Math.min(n.length, o.length), a = i, s = 0; s < i; s++)if (n[s] !== o[s]) {
                        a = s;
                        break;
                    }
                    var u = [];
                    for(s = a; s < n.length; s++)u.push("..");
                    return (u = u.concat(o.slice(a))).join("/");
                }
            }, fe = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0, pe = (e1, t, r)=>{
                for(var n = t + r, o = t; e1[o] && !(o >= n);)++o;
                if (o - t > 16 && e1.buffer && fe) return fe.decode(e1.subarray(t, o));
                for(var i = ""; t < o;){
                    var a = e1[t++];
                    if (128 & a) {
                        var s = 63 & e1[t++];
                        if (192 != (224 & a)) {
                            var u = 63 & e1[t++];
                            if ((a = 224 == (240 & a) ? (15 & a) << 12 | s << 6 | u : (7 & a) << 18 | s << 12 | u << 6 | 63 & e1[t++]) < 65536) i += String.fromCharCode(a);
                            else {
                                var c = a - 65536;
                                i += String.fromCharCode(55296 | c >> 10, 56320 | 1023 & c);
                            }
                        } else i += String.fromCharCode((31 & a) << 6 | s);
                    } else i += String.fromCharCode(a);
                }
                return i;
            }, me = [], ge = (e1)=>{
                for(var t = 0, r = 0; r < e1.length; ++r){
                    var n = e1.charCodeAt(r);
                    n <= 127 ? t++ : n <= 2047 ? t += 2 : n >= 55296 && n <= 57343 ? (t += 4, ++r) : t += 3;
                }
                return t;
            }, ve = (e1, t, r, n)=>{
                if (!(n > 0)) return 0;
                for(var o = r, i = r + n - 1, a = 0; a < e1.length; ++a){
                    var s = e1.charCodeAt(a);
                    if (s >= 55296 && s <= 57343 && (s = 65536 + ((1023 & s) << 10) | 1023 & e1.charCodeAt(++a)), s <= 127) {
                        if (r >= i) break;
                        t[r++] = s;
                    } else if (s <= 2047) {
                        if (r + 1 >= i) break;
                        t[r++] = 192 | s >> 6, t[r++] = 128 | 63 & s;
                    } else if (s <= 65535) {
                        if (r + 2 >= i) break;
                        t[r++] = 224 | s >> 12, t[r++] = 128 | s >> 6 & 63, t[r++] = 128 | 63 & s;
                    } else {
                        if (r + 3 >= i) break;
                        t[r++] = 240 | s >> 18, t[r++] = 128 | s >> 12 & 63, t[r++] = 128 | s >> 6 & 63, t[r++] = 128 | 63 & s;
                    }
                }
                return t[r] = 0, r - o;
            };
            function ye(e1, t, r) {
                var n = r > 0 ? r : ge(e1) + 1, o = new Array(n), i = ve(e1, o, 0, o.length);
                return t && (o.length = i), o;
            }
            var be = {
                ttys: [],
                init () {},
                shutdown () {},
                register (e1, t) {
                    be.ttys[e1] = {
                        input: [],
                        output: [],
                        ops: t
                    }, Ce.registerDevice(e1, be.stream_ops);
                },
                stream_ops: {
                    open (e1) {
                        var t = be.ttys[e1.node.rdev];
                        if (!t) throw new Ce.ErrnoError(43);
                        e1.tty = t, e1.seekable = !1;
                    },
                    close (e1) {
                        e1.tty.ops.fsync(e1.tty);
                    },
                    fsync (e1) {
                        e1.tty.ops.fsync(e1.tty);
                    },
                    read (e1, t, r, n, o) {
                        if (!e1.tty || !e1.tty.ops.get_char) throw new Ce.ErrnoError(60);
                        for(var i = 0, a = 0; a < n; a++){
                            var s;
                            try {
                                s = e1.tty.ops.get_char(e1.tty);
                            } catch (e1) {
                                throw new Ce.ErrnoError(29);
                            }
                            if (void 0 === s && 0 === i) throw new Ce.ErrnoError(6);
                            if (null == s) break;
                            i++, t[r + a] = s;
                        }
                        return i && (e1.node.timestamp = Date.now()), i;
                    },
                    write (e1, t, r, n, o) {
                        if (!e1.tty || !e1.tty.ops.put_char) throw new Ce.ErrnoError(60);
                        try {
                            for(var i = 0; i < n; i++)e1.tty.ops.put_char(e1.tty, t[r + i]);
                        } catch (e1) {
                            throw new Ce.ErrnoError(29);
                        }
                        return n && (e1.node.timestamp = Date.now()), i;
                    }
                },
                default_tty_ops: {
                    get_char: (e1)=>(()=>{
                            if (!me.length) {
                                var e1 = null;
                                if (y) {
                                    var t = Buffer.alloc(256), r = 0, n = process.stdin.fd;
                                    try {
                                        r = w.readSync(n, t);
                                    } catch (e1) {
                                        if (!e1.toString().includes("EOF")) throw e1;
                                        r = 0;
                                    }
                                    e1 = r > 0 ? t.slice(0, r).toString("utf-8") : null;
                                } else "undefined" != typeof window && "function" == typeof window.prompt ? null !== (e1 = window.prompt("Input: ")) && (e1 += "\n") : "function" == typeof readline && null !== (e1 = readline()) && (e1 += "\n");
                                if (!e1) return null;
                                me = ye(e1, !0);
                            }
                            return me.shift();
                        })(),
                    put_char (e1, t) {
                        null === t || 10 === t ? (C(pe(e1.output, 0)), e1.output = []) : 0 != t && e1.output.push(t);
                    },
                    fsync (e1) {
                        e1.output && e1.output.length > 0 && (C(pe(e1.output, 0)), e1.output = []);
                    },
                    ioctl_tcgets: (e1)=>({
                            c_iflag: 25856,
                            c_oflag: 5,
                            c_cflag: 191,
                            c_lflag: 35387,
                            c_cc: [
                                3,
                                28,
                                127,
                                21,
                                4,
                                0,
                                1,
                                0,
                                17,
                                19,
                                26,
                                0,
                                18,
                                15,
                                23,
                                22,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0
                            ]
                        }),
                    ioctl_tcsets: (e1, t, r)=>0,
                    ioctl_tiocgwinsz: (e1)=>[
                            24,
                            80
                        ]
                },
                default_tty1_ops: {
                    put_char (e1, t) {
                        null === t || 10 === t ? (x(pe(e1.output, 0)), e1.output = []) : 0 != t && e1.output.push(t);
                    },
                    fsync (e1) {
                        e1.output && e1.output.length > 0 && (x(pe(e1.output, 0)), e1.output = []);
                    }
                }
            }, we = (e1)=>{
                e1 = ((e1, t)=>Math.ceil(e1 / t) * t)(e1, 65536);
                var t = Iu(65536, e1);
                return t ? ((e1, t)=>(A.fill(0, e1, e1 + t), e1))(t, e1) : 0;
            }, _e = {
                ops_table: null,
                mount: (e1)=>_e.createNode(null, "/", 16895, 0),
                createNode (e1, t, r, n) {
                    if (Ce.isBlkdev(r) || Ce.isFIFO(r)) throw new Ce.ErrnoError(63);
                    _e.ops_table ||= {
                        dir: {
                            node: {
                                getattr: _e.node_ops.getattr,
                                setattr: _e.node_ops.setattr,
                                lookup: _e.node_ops.lookup,
                                mknod: _e.node_ops.mknod,
                                rename: _e.node_ops.rename,
                                unlink: _e.node_ops.unlink,
                                rmdir: _e.node_ops.rmdir,
                                readdir: _e.node_ops.readdir,
                                symlink: _e.node_ops.symlink
                            },
                            stream: {
                                llseek: _e.stream_ops.llseek
                            }
                        },
                        file: {
                            node: {
                                getattr: _e.node_ops.getattr,
                                setattr: _e.node_ops.setattr
                            },
                            stream: {
                                llseek: _e.stream_ops.llseek,
                                read: _e.stream_ops.read,
                                write: _e.stream_ops.write,
                                allocate: _e.stream_ops.allocate,
                                mmap: _e.stream_ops.mmap,
                                msync: _e.stream_ops.msync
                            }
                        },
                        link: {
                            node: {
                                getattr: _e.node_ops.getattr,
                                setattr: _e.node_ops.setattr,
                                readlink: _e.node_ops.readlink
                            },
                            stream: {}
                        },
                        chrdev: {
                            node: {
                                getattr: _e.node_ops.getattr,
                                setattr: _e.node_ops.setattr
                            },
                            stream: Ce.chrdev_stream_ops
                        }
                    };
                    var o = Ce.createNode(e1, t, r, n);
                    return Ce.isDir(o.mode) ? (o.node_ops = _e.ops_table.dir.node, o.stream_ops = _e.ops_table.dir.stream, o.contents = {}) : Ce.isFile(o.mode) ? (o.node_ops = _e.ops_table.file.node, o.stream_ops = _e.ops_table.file.stream, o.usedBytes = 0, o.contents = null) : Ce.isLink(o.mode) ? (o.node_ops = _e.ops_table.link.node, o.stream_ops = _e.ops_table.link.stream) : Ce.isChrdev(o.mode) && (o.node_ops = _e.ops_table.chrdev.node, o.stream_ops = _e.ops_table.chrdev.stream), o.timestamp = Date.now(), e1 && (e1.contents[t] = o, e1.timestamp = o.timestamp), o;
                },
                getFileDataAsTypedArray: (e1)=>e1.contents ? e1.contents.subarray ? e1.contents.subarray(0, e1.usedBytes) : new Uint8Array(e1.contents) : new Uint8Array(0),
                expandFileStorage (e1, t) {
                    var r = e1.contents ? e1.contents.length : 0;
                    if (!(r >= t)) {
                        t = Math.max(t, r * (r < 1048576 ? 2 : 1.125) >>> 0), 0 != r && (t = Math.max(t, 256));
                        var n = e1.contents;
                        e1.contents = new Uint8Array(t), e1.usedBytes > 0 && e1.contents.set(n.subarray(0, e1.usedBytes), 0);
                    }
                },
                resizeFileStorage (e1, t) {
                    if (e1.usedBytes != t) if (0 == t) e1.contents = null, e1.usedBytes = 0;
                    else {
                        var r = e1.contents;
                        e1.contents = new Uint8Array(t), r && e1.contents.set(r.subarray(0, Math.min(t, e1.usedBytes))), e1.usedBytes = t;
                    }
                },
                node_ops: {
                    getattr (e1) {
                        var t = {};
                        return t.dev = Ce.isChrdev(e1.mode) ? e1.id : 1, t.ino = e1.id, t.mode = e1.mode, t.nlink = 1, t.uid = 0, t.gid = 0, t.rdev = e1.rdev, Ce.isDir(e1.mode) ? t.size = 4096 : Ce.isFile(e1.mode) ? t.size = e1.usedBytes : Ce.isLink(e1.mode) ? t.size = e1.link.length : t.size = 0, t.atime = new Date(e1.timestamp), t.mtime = new Date(e1.timestamp), t.ctime = new Date(e1.timestamp), t.blksize = 4096, t.blocks = Math.ceil(t.size / t.blksize), t;
                    },
                    setattr (e1, t) {
                        void 0 !== t.mode && (e1.mode = t.mode), void 0 !== t.timestamp && (e1.timestamp = t.timestamp), void 0 !== t.size && _e.resizeFileStorage(e1, t.size);
                    },
                    lookup (e1, t) {
                        throw Ce.genericErrors[44];
                    },
                    mknod: (e1, t, r, n)=>_e.createNode(e1, t, r, n),
                    rename (e1, t, r) {
                        if (Ce.isDir(e1.mode)) {
                            var n;
                            try {
                                n = Ce.lookupNode(t, r);
                            } catch (e1) {}
                            if (n) for(var o in n.contents)throw new Ce.ErrnoError(55);
                        }
                        delete e1.parent.contents[e1.name], e1.parent.timestamp = Date.now(), e1.name = r, t.contents[r] = e1, t.timestamp = e1.parent.timestamp, e1.parent = t;
                    },
                    unlink (e1, t) {
                        delete e1.contents[t], e1.timestamp = Date.now();
                    },
                    rmdir (e1, t) {
                        var r = Ce.lookupNode(e1, t);
                        for(var n in r.contents)throw new Ce.ErrnoError(55);
                        delete e1.contents[t], e1.timestamp = Date.now();
                    },
                    readdir (e1) {
                        var t = [
                            ".",
                            ".."
                        ];
                        for (var r of Object.keys(e1.contents))t.push(r);
                        return t;
                    },
                    symlink (e1, t, r) {
                        var n = _e.createNode(e1, t, 41471, 0);
                        return n.link = r, n;
                    },
                    readlink (e1) {
                        if (!Ce.isLink(e1.mode)) throw new Ce.ErrnoError(28);
                        return e1.link;
                    }
                },
                stream_ops: {
                    read (e1, t, r, n, o) {
                        var i = e1.node.contents;
                        if (o >= e1.node.usedBytes) return 0;
                        var a = Math.min(e1.node.usedBytes - o, n);
                        if (a > 8 && i.subarray) t.set(i.subarray(o, o + a), r);
                        else for(var s = 0; s < a; s++)t[r + s] = i[o + s];
                        return a;
                    },
                    write (e1, t, r, n, o, i) {
                        if (t.buffer === T.buffer && (i = !1), !n) return 0;
                        var a = e1.node;
                        if (a.timestamp = Date.now(), t.subarray && (!a.contents || a.contents.subarray)) {
                            if (i) return a.contents = t.subarray(r, r + n), a.usedBytes = n, n;
                            if (0 === a.usedBytes && 0 === o) return a.contents = t.slice(r, r + n), a.usedBytes = n, n;
                            if (o + n <= a.usedBytes) return a.contents.set(t.subarray(r, r + n), o), n;
                        }
                        if (_e.expandFileStorage(a, o + n), a.contents.subarray && t.subarray) a.contents.set(t.subarray(r, r + n), o);
                        else for(var s = 0; s < n; s++)a.contents[o + s] = t[r + s];
                        return a.usedBytes = Math.max(a.usedBytes, o + n), n;
                    },
                    llseek (e1, t, r) {
                        var n = t;
                        if (1 === r ? n += e1.position : 2 === r && Ce.isFile(e1.node.mode) && (n += e1.node.usedBytes), n < 0) throw new Ce.ErrnoError(28);
                        return n;
                    },
                    allocate (e1, t, r) {
                        _e.expandFileStorage(e1.node, t + r), e1.node.usedBytes = Math.max(e1.node.usedBytes, t + r);
                    },
                    mmap (e1, t, r, n, o) {
                        if (!Ce.isFile(e1.node.mode)) throw new Ce.ErrnoError(43);
                        var i, a, s = e1.node.contents;
                        if (2 & o || s.buffer !== T.buffer) {
                            if ((r > 0 || r + t < s.length) && (s = s.subarray ? s.subarray(r, r + t) : Array.prototype.slice.call(s, r, r + t)), a = !0, !(i = we(t))) throw new Ce.ErrnoError(48);
                            T.set(s, i);
                        } else a = !1, i = s.byteOffset;
                        return {
                            ptr: i,
                            allocated: a
                        };
                    },
                    msync: (e1, t, r, n, o)=>(_e.stream_ops.write(e1, t, 0, n, r, !1), 0)
                }
            }, Ee = u.preloadPlugins || [], Se = (e1, t)=>{
                var r = 0;
                return e1 && (r |= 365), t && (r |= 146), r;
            }, Ce = {
                root: null,
                mounts: [],
                devices: {},
                streams: [],
                nextInode: 1,
                nameTable: null,
                currentPath: "/",
                initialized: !1,
                ignorePermissions: !0,
                ErrnoError: class {
                    constructor(e1){
                        this.name = "ErrnoError", this.errno = e1;
                    }
                },
                genericErrors: {},
                filesystems: null,
                syncFSRequests: 0,
                lookupPath (e1, t = {}) {
                    if (!(e1 = he.resolve(e1))) return {
                        path: "",
                        node: null
                    };
                    if ((t = Object.assign({
                        follow_mount: !0,
                        recurse_count: 0
                    }, t)).recurse_count > 8) throw new Ce.ErrnoError(32);
                    for(var r = e1.split("/").filter((e1)=>!!e1), n = Ce.root, o = "/", i = 0; i < r.length; i++){
                        var a = i === r.length - 1;
                        if (a && t.parent) break;
                        if (n = Ce.lookupNode(n, r[i]), o = le.join2(o, r[i]), Ce.isMountpoint(n) && (!a || a && t.follow_mount) && (n = n.mounted.root), !a || t.follow) for(var s = 0; Ce.isLink(n.mode);){
                            var u = Ce.readlink(o);
                            if (o = he.resolve(le.dirname(o), u), n = Ce.lookupPath(o, {
                                recurse_count: t.recurse_count + 1
                            }).node, s++ > 40) throw new Ce.ErrnoError(32);
                        }
                    }
                    return {
                        path: o,
                        node: n
                    };
                },
                getPath (e1) {
                    for(var t;;){
                        if (Ce.isRoot(e1)) {
                            var r = e1.mount.mountpoint;
                            return t ? "/" !== r[r.length - 1] ? `${r}/${t}` : r + t : r;
                        }
                        t = t ? `${e1.name}/${t}` : e1.name, e1 = e1.parent;
                    }
                },
                hashName (e1, t) {
                    for(var r = 0, n = 0; n < t.length; n++)r = (r << 5) - r + t.charCodeAt(n) | 0;
                    return (e1 + r >>> 0) % Ce.nameTable.length;
                },
                hashAddNode (e1) {
                    var t = Ce.hashName(e1.parent.id, e1.name);
                    e1.name_next = Ce.nameTable[t], Ce.nameTable[t] = e1;
                },
                hashRemoveNode (e1) {
                    var t = Ce.hashName(e1.parent.id, e1.name);
                    if (Ce.nameTable[t] === e1) Ce.nameTable[t] = e1.name_next;
                    else for(var r = Ce.nameTable[t]; r;){
                        if (r.name_next === e1) {
                            r.name_next = e1.name_next;
                            break;
                        }
                        r = r.name_next;
                    }
                },
                lookupNode (e1, t) {
                    var r = Ce.mayLookup(e1);
                    if (r) throw new Ce.ErrnoError(r);
                    for(var n = Ce.hashName(e1.id, t), o = Ce.nameTable[n]; o; o = o.name_next){
                        var i = o.name;
                        if (o.parent.id === e1.id && i === t) return o;
                    }
                    return Ce.lookup(e1, t);
                },
                createNode (e1, t, r, n) {
                    var o = new Ce.FSNode(e1, t, r, n);
                    return Ce.hashAddNode(o), o;
                },
                destroyNode (e1) {
                    Ce.hashRemoveNode(e1);
                },
                isRoot: (e1)=>e1 === e1.parent,
                isMountpoint: (e1)=>!!e1.mounted,
                isFile: (e1)=>32768 == (61440 & e1),
                isDir: (e1)=>16384 == (61440 & e1),
                isLink: (e1)=>40960 == (61440 & e1),
                isChrdev: (e1)=>8192 == (61440 & e1),
                isBlkdev: (e1)=>24576 == (61440 & e1),
                isFIFO: (e1)=>4096 == (61440 & e1),
                isSocket: (e1)=>49152 == (49152 & e1),
                flagsToPermissionString (e1) {
                    var t = [
                        "r",
                        "w",
                        "rw"
                    ][3 & e1];
                    return 512 & e1 && (t += "w"), t;
                },
                nodePermissions: (e1, t)=>Ce.ignorePermissions || (!t.includes("r") || 292 & e1.mode) && (!t.includes("w") || 146 & e1.mode) && (!t.includes("x") || 73 & e1.mode) ? 0 : 2,
                mayLookup (e1) {
                    if (!Ce.isDir(e1.mode)) return 54;
                    var t = Ce.nodePermissions(e1, "x");
                    return t || (e1.node_ops.lookup ? 0 : 2);
                },
                mayCreate (e1, t) {
                    try {
                        return Ce.lookupNode(e1, t), 20;
                    } catch (e1) {}
                    return Ce.nodePermissions(e1, "wx");
                },
                mayDelete (e1, t, r) {
                    var n;
                    try {
                        n = Ce.lookupNode(e1, t);
                    } catch (e1) {
                        return e1.errno;
                    }
                    var o = Ce.nodePermissions(e1, "wx");
                    if (o) return o;
                    if (r) {
                        if (!Ce.isDir(n.mode)) return 54;
                        if (Ce.isRoot(n) || Ce.getPath(n) === Ce.cwd()) return 10;
                    } else if (Ce.isDir(n.mode)) return 31;
                    return 0;
                },
                mayOpen: (e1, t)=>e1 ? Ce.isLink(e1.mode) ? 32 : Ce.isDir(e1.mode) && ("r" !== Ce.flagsToPermissionString(t) || 512 & t) ? 31 : Ce.nodePermissions(e1, Ce.flagsToPermissionString(t)) : 44,
                MAX_OPEN_FDS: 4096,
                nextfd () {
                    for(var e1 = 0; e1 <= Ce.MAX_OPEN_FDS; e1++)if (!Ce.streams[e1]) return e1;
                    throw new Ce.ErrnoError(33);
                },
                getStreamChecked (e1) {
                    var t = Ce.getStream(e1);
                    if (!t) throw new Ce.ErrnoError(8);
                    return t;
                },
                getStream: (e1)=>Ce.streams[e1],
                createStream: (e1, t = -1)=>(Ce.FSStream || (Ce.FSStream = function() {
                        this.shared = {};
                    }, Ce.FSStream.prototype = {}, Object.defineProperties(Ce.FSStream.prototype, {
                        object: {
                            get () {
                                return this.node;
                            },
                            set (e1) {
                                this.node = e1;
                            }
                        },
                        isRead: {
                            get () {
                                return 1 != (2097155 & this.flags);
                            }
                        },
                        isWrite: {
                            get () {
                                return 0 != (2097155 & this.flags);
                            }
                        },
                        isAppend: {
                            get () {
                                return 1024 & this.flags;
                            }
                        },
                        flags: {
                            get () {
                                return this.shared.flags;
                            },
                            set (e1) {
                                this.shared.flags = e1;
                            }
                        },
                        position: {
                            get () {
                                return this.shared.position;
                            },
                            set (e1) {
                                this.shared.position = e1;
                            }
                        }
                    })), e1 = Object.assign(new Ce.FSStream, e1), -1 == t && (t = Ce.nextfd()), e1.fd = t, Ce.streams[t] = e1, e1),
                closeStream (e1) {
                    Ce.streams[e1] = null;
                },
                chrdev_stream_ops: {
                    open (e1) {
                        var t = Ce.getDevice(e1.node.rdev);
                        e1.stream_ops = t.stream_ops, e1.stream_ops.open?.(e1);
                    },
                    llseek () {
                        throw new Ce.ErrnoError(70);
                    }
                },
                major: (e1)=>e1 >> 8,
                minor: (e1)=>255 & e1,
                makedev: (e1, t)=>e1 << 8 | t,
                registerDevice (e1, t) {
                    Ce.devices[e1] = {
                        stream_ops: t
                    };
                },
                getDevice: (e1)=>Ce.devices[e1],
                getMounts (e1) {
                    for(var t = [], r = [
                        e1
                    ]; r.length;){
                        var n = r.pop();
                        t.push(n), r.push.apply(r, n.mounts);
                    }
                    return t;
                },
                syncfs (e1, t) {
                    "function" == typeof e1 && (t = e1, e1 = !1), Ce.syncFSRequests++, Ce.syncFSRequests > 1 && x(`warning: ${Ce.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);
                    var r = Ce.getMounts(Ce.root.mount), n = 0;
                    function o(e1) {
                        return Ce.syncFSRequests--, t(e1);
                    }
                    function i(e1) {
                        if (e1) return i.errored ? void 0 : (i.errored = !0, o(e1));
                        ++n >= r.length && o(null);
                    }
                    r.forEach((t)=>{
                        if (!t.type.syncfs) return i(null);
                        t.type.syncfs(t, e1, i);
                    });
                },
                mount (e1, t, r) {
                    var n, o = "/" === r, i = !r;
                    if (o && Ce.root) throw new Ce.ErrnoError(10);
                    if (!o && !i) {
                        var a = Ce.lookupPath(r, {
                            follow_mount: !1
                        });
                        if (r = a.path, n = a.node, Ce.isMountpoint(n)) throw new Ce.ErrnoError(10);
                        if (!Ce.isDir(n.mode)) throw new Ce.ErrnoError(54);
                    }
                    var s = {
                        type: e1,
                        opts: t,
                        mountpoint: r,
                        mounts: []
                    }, u = e1.mount(s);
                    return u.mount = s, s.root = u, o ? Ce.root = u : n && (n.mounted = s, n.mount && n.mount.mounts.push(s)), u;
                },
                unmount (e1) {
                    var t = Ce.lookupPath(e1, {
                        follow_mount: !1
                    });
                    if (!Ce.isMountpoint(t.node)) throw new Ce.ErrnoError(28);
                    var r = t.node, n = r.mounted, o = Ce.getMounts(n);
                    Object.keys(Ce.nameTable).forEach((e1)=>{
                        for(var t = Ce.nameTable[e1]; t;){
                            var r = t.name_next;
                            o.includes(t.mount) && Ce.destroyNode(t), t = r;
                        }
                    }), r.mounted = null;
                    var i = r.mount.mounts.indexOf(n);
                    r.mount.mounts.splice(i, 1);
                },
                lookup: (e1, t)=>e1.node_ops.lookup(e1, t),
                mknod (e1, t, r) {
                    var n = Ce.lookupPath(e1, {
                        parent: !0
                    }).node, o = le.basename(e1);
                    if (!o || "." === o || ".." === o) throw new Ce.ErrnoError(28);
                    var i = Ce.mayCreate(n, o);
                    if (i) throw new Ce.ErrnoError(i);
                    if (!n.node_ops.mknod) throw new Ce.ErrnoError(63);
                    return n.node_ops.mknod(n, o, t, r);
                },
                create: (e1, t)=>(t = void 0 !== t ? t : 438, t &= 4095, t |= 32768, Ce.mknod(e1, t, 0)),
                mkdir: (e1, t)=>(t = void 0 !== t ? t : 511, t &= 1023, t |= 16384, Ce.mknod(e1, t, 0)),
                mkdirTree (e1, t) {
                    for(var r = e1.split("/"), n = "", o = 0; o < r.length; ++o)if (r[o]) {
                        n += "/" + r[o];
                        try {
                            Ce.mkdir(n, t);
                        } catch (e1) {
                            if (20 != e1.errno) throw e1;
                        }
                    }
                },
                mkdev: (e1, t, r)=>(void 0 === r && (r = t, t = 438), t |= 8192, Ce.mknod(e1, t, r)),
                symlink (e1, t) {
                    if (!he.resolve(e1)) throw new Ce.ErrnoError(44);
                    var r = Ce.lookupPath(t, {
                        parent: !0
                    }).node;
                    if (!r) throw new Ce.ErrnoError(44);
                    var n = le.basename(t), o = Ce.mayCreate(r, n);
                    if (o) throw new Ce.ErrnoError(o);
                    if (!r.node_ops.symlink) throw new Ce.ErrnoError(63);
                    return r.node_ops.symlink(r, n, e1);
                },
                rename (e1, t) {
                    var r, n, o = le.dirname(e1), i = le.dirname(t), a = le.basename(e1), s = le.basename(t);
                    if (r = Ce.lookupPath(e1, {
                        parent: !0
                    }).node, n = Ce.lookupPath(t, {
                        parent: !0
                    }).node, !r || !n) throw new Ce.ErrnoError(44);
                    if (r.mount !== n.mount) throw new Ce.ErrnoError(75);
                    var u, c = Ce.lookupNode(r, a), l = he.relative(e1, i);
                    if ("." !== l.charAt(0)) throw new Ce.ErrnoError(28);
                    if ("." !== (l = he.relative(t, o)).charAt(0)) throw new Ce.ErrnoError(55);
                    try {
                        u = Ce.lookupNode(n, s);
                    } catch (e1) {}
                    if (c !== u) {
                        var d = Ce.isDir(c.mode), h = Ce.mayDelete(r, a, d);
                        if (h) throw new Ce.ErrnoError(h);
                        if (h = u ? Ce.mayDelete(n, s, d) : Ce.mayCreate(n, s)) throw new Ce.ErrnoError(h);
                        if (!r.node_ops.rename) throw new Ce.ErrnoError(63);
                        if (Ce.isMountpoint(c) || u && Ce.isMountpoint(u)) throw new Ce.ErrnoError(10);
                        if (n !== r && (h = Ce.nodePermissions(r, "w"))) throw new Ce.ErrnoError(h);
                        Ce.hashRemoveNode(c);
                        try {
                            r.node_ops.rename(c, n, s);
                        } catch (e1) {
                            throw e1;
                        } finally{
                            Ce.hashAddNode(c);
                        }
                    }
                },
                rmdir (e1) {
                    var t = Ce.lookupPath(e1, {
                        parent: !0
                    }).node, r = le.basename(e1), n = Ce.lookupNode(t, r), o = Ce.mayDelete(t, r, !0);
                    if (o) throw new Ce.ErrnoError(o);
                    if (!t.node_ops.rmdir) throw new Ce.ErrnoError(63);
                    if (Ce.isMountpoint(n)) throw new Ce.ErrnoError(10);
                    t.node_ops.rmdir(t, r), Ce.destroyNode(n);
                },
                readdir (e1) {
                    var t = Ce.lookupPath(e1, {
                        follow: !0
                    }).node;
                    if (!t.node_ops.readdir) throw new Ce.ErrnoError(54);
                    return t.node_ops.readdir(t);
                },
                unlink (e1) {
                    var t = Ce.lookupPath(e1, {
                        parent: !0
                    }).node;
                    if (!t) throw new Ce.ErrnoError(44);
                    var r = le.basename(e1), n = Ce.lookupNode(t, r), o = Ce.mayDelete(t, r, !1);
                    if (o) throw new Ce.ErrnoError(o);
                    if (!t.node_ops.unlink) throw new Ce.ErrnoError(63);
                    if (Ce.isMountpoint(n)) throw new Ce.ErrnoError(10);
                    t.node_ops.unlink(t, r), Ce.destroyNode(n);
                },
                readlink (e1) {
                    var t = Ce.lookupPath(e1).node;
                    if (!t) throw new Ce.ErrnoError(44);
                    if (!t.node_ops.readlink) throw new Ce.ErrnoError(28);
                    return he.resolve(Ce.getPath(t.parent), t.node_ops.readlink(t));
                },
                stat (e1, t) {
                    var r = Ce.lookupPath(e1, {
                        follow: !t
                    }).node;
                    if (!r) throw new Ce.ErrnoError(44);
                    if (!r.node_ops.getattr) throw new Ce.ErrnoError(63);
                    return r.node_ops.getattr(r);
                },
                lstat: (e1)=>Ce.stat(e1, !0),
                chmod (e1, t, r) {
                    var n;
                    if (!(n = "string" == typeof e1 ? Ce.lookupPath(e1, {
                        follow: !r
                    }).node : e1).node_ops.setattr) throw new Ce.ErrnoError(63);
                    n.node_ops.setattr(n, {
                        mode: 4095 & t | -4096 & n.mode,
                        timestamp: Date.now()
                    });
                },
                lchmod (e1, t) {
                    Ce.chmod(e1, t, !0);
                },
                fchmod (e1, t) {
                    var r = Ce.getStreamChecked(e1);
                    Ce.chmod(r.node, t);
                },
                chown (e1, t, r, n) {
                    var o;
                    if (!(o = "string" == typeof e1 ? Ce.lookupPath(e1, {
                        follow: !n
                    }).node : e1).node_ops.setattr) throw new Ce.ErrnoError(63);
                    o.node_ops.setattr(o, {
                        timestamp: Date.now()
                    });
                },
                lchown (e1, t, r) {
                    Ce.chown(e1, t, r, !0);
                },
                fchown (e1, t, r) {
                    var n = Ce.getStreamChecked(e1);
                    Ce.chown(n.node, t, r);
                },
                truncate (e1, t) {
                    if (t < 0) throw new Ce.ErrnoError(28);
                    var r;
                    if (!(r = "string" == typeof e1 ? Ce.lookupPath(e1, {
                        follow: !0
                    }).node : e1).node_ops.setattr) throw new Ce.ErrnoError(63);
                    if (Ce.isDir(r.mode)) throw new Ce.ErrnoError(31);
                    if (!Ce.isFile(r.mode)) throw new Ce.ErrnoError(28);
                    var n = Ce.nodePermissions(r, "w");
                    if (n) throw new Ce.ErrnoError(n);
                    r.node_ops.setattr(r, {
                        size: t,
                        timestamp: Date.now()
                    });
                },
                ftruncate (e1, t) {
                    var r = Ce.getStreamChecked(e1);
                    if (0 == (2097155 & r.flags)) throw new Ce.ErrnoError(28);
                    Ce.truncate(r.node, t);
                },
                utime (e1, t, r) {
                    var n = Ce.lookupPath(e1, {
                        follow: !0
                    }).node;
                    n.node_ops.setattr(n, {
                        timestamp: Math.max(t, r)
                    });
                },
                open (e1, t, r) {
                    if ("" === e1) throw new Ce.ErrnoError(44);
                    var n;
                    if (r = void 0 === r ? 438 : r, r = 64 & (t = "string" == typeof t ? ((e1)=>{
                        var t = {
                            r: 0,
                            "r+": 2,
                            w: 577,
                            "w+": 578,
                            a: 1089,
                            "a+": 1090
                        }[e1];
                        if (void 0 === t) throw new Error(`Unknown file open mode: ${e1}`);
                        return t;
                    })(t) : t) ? 4095 & r | 32768 : 0, "object" == typeof e1) n = e1;
                    else {
                        e1 = le.normalize(e1);
                        try {
                            n = Ce.lookupPath(e1, {
                                follow: !(131072 & t)
                            }).node;
                        } catch (e1) {}
                    }
                    var o = !1;
                    if (64 & t) if (n) {
                        if (128 & t) throw new Ce.ErrnoError(20);
                    } else n = Ce.mknod(e1, r, 0), o = !0;
                    if (!n) throw new Ce.ErrnoError(44);
                    if (Ce.isChrdev(n.mode) && (t &= -513), 65536 & t && !Ce.isDir(n.mode)) throw new Ce.ErrnoError(54);
                    if (!o) {
                        var i = Ce.mayOpen(n, t);
                        if (i) throw new Ce.ErrnoError(i);
                    }
                    512 & t && !o && Ce.truncate(n, 0), t &= -131713;
                    var a = Ce.createStream({
                        node: n,
                        path: Ce.getPath(n),
                        flags: t,
                        seekable: !0,
                        position: 0,
                        stream_ops: n.stream_ops,
                        ungotten: [],
                        error: !1
                    });
                    return a.stream_ops.open && a.stream_ops.open(a), !u.logReadFiles || 1 & t || (Ce.readFiles || (Ce.readFiles = {}), e1 in Ce.readFiles || (Ce.readFiles[e1] = 1)), a;
                },
                close (e1) {
                    if (Ce.isClosed(e1)) throw new Ce.ErrnoError(8);
                    e1.getdents && (e1.getdents = null);
                    try {
                        e1.stream_ops.close && e1.stream_ops.close(e1);
                    } catch (e1) {
                        throw e1;
                    } finally{
                        Ce.closeStream(e1.fd);
                    }
                    e1.fd = null;
                },
                isClosed: (e1)=>null === e1.fd,
                llseek (e1, t, r) {
                    if (Ce.isClosed(e1)) throw new Ce.ErrnoError(8);
                    if (!e1.seekable || !e1.stream_ops.llseek) throw new Ce.ErrnoError(70);
                    if (0 != r && 1 != r && 2 != r) throw new Ce.ErrnoError(28);
                    return e1.position = e1.stream_ops.llseek(e1, t, r), e1.ungotten = [], e1.position;
                },
                read (e1, t, r, n, o) {
                    if (n < 0 || o < 0) throw new Ce.ErrnoError(28);
                    if (Ce.isClosed(e1)) throw new Ce.ErrnoError(8);
                    if (1 == (2097155 & e1.flags)) throw new Ce.ErrnoError(8);
                    if (Ce.isDir(e1.node.mode)) throw new Ce.ErrnoError(31);
                    if (!e1.stream_ops.read) throw new Ce.ErrnoError(28);
                    var i = void 0 !== o;
                    if (i) {
                        if (!e1.seekable) throw new Ce.ErrnoError(70);
                    } else o = e1.position;
                    var a = e1.stream_ops.read(e1, t, r, n, o);
                    return i || (e1.position += a), a;
                },
                write (e1, t, r, n, o, i) {
                    if (n < 0 || o < 0) throw new Ce.ErrnoError(28);
                    if (Ce.isClosed(e1)) throw new Ce.ErrnoError(8);
                    if (0 == (2097155 & e1.flags)) throw new Ce.ErrnoError(8);
                    if (Ce.isDir(e1.node.mode)) throw new Ce.ErrnoError(31);
                    if (!e1.stream_ops.write) throw new Ce.ErrnoError(28);
                    e1.seekable && 1024 & e1.flags && Ce.llseek(e1, 0, 2);
                    var a = void 0 !== o;
                    if (a) {
                        if (!e1.seekable) throw new Ce.ErrnoError(70);
                    } else o = e1.position;
                    var s = e1.stream_ops.write(e1, t, r, n, o, i);
                    return a || (e1.position += s), s;
                },
                allocate (e1, t, r) {
                    if (Ce.isClosed(e1)) throw new Ce.ErrnoError(8);
                    if (t < 0 || r <= 0) throw new Ce.ErrnoError(28);
                    if (0 == (2097155 & e1.flags)) throw new Ce.ErrnoError(8);
                    if (!Ce.isFile(e1.node.mode) && !Ce.isDir(e1.node.mode)) throw new Ce.ErrnoError(43);
                    if (!e1.stream_ops.allocate) throw new Ce.ErrnoError(138);
                    e1.stream_ops.allocate(e1, t, r);
                },
                mmap (e1, t, r, n, o) {
                    if (0 != (2 & n) && 0 == (2 & o) && 2 != (2097155 & e1.flags)) throw new Ce.ErrnoError(2);
                    if (1 == (2097155 & e1.flags)) throw new Ce.ErrnoError(2);
                    if (!e1.stream_ops.mmap) throw new Ce.ErrnoError(43);
                    return e1.stream_ops.mmap(e1, t, r, n, o);
                },
                msync: (e1, t, r, n, o)=>e1.stream_ops.msync ? e1.stream_ops.msync(e1, t, r, n, o) : 0,
                munmap: (e1)=>0,
                ioctl (e1, t, r) {
                    if (!e1.stream_ops.ioctl) throw new Ce.ErrnoError(59);
                    return e1.stream_ops.ioctl(e1, t, r);
                },
                readFile (e1, t = {}) {
                    if (t.flags = t.flags || 0, t.encoding = t.encoding || "binary", "utf8" !== t.encoding && "binary" !== t.encoding) throw new Error(`Invalid encoding type "${t.encoding}"`);
                    var r, n = Ce.open(e1, t.flags), o = Ce.stat(e1).size, i = new Uint8Array(o);
                    return Ce.read(n, i, 0, o, 0), "utf8" === t.encoding ? r = pe(i, 0) : "binary" === t.encoding && (r = i), Ce.close(n), r;
                },
                writeFile (e1, t, r = {}) {
                    r.flags = r.flags || 577;
                    var n = Ce.open(e1, r.flags, r.mode);
                    if ("string" == typeof t) {
                        var o = new Uint8Array(ge(t) + 1), i = ve(t, o, 0, o.length);
                        Ce.write(n, o, 0, i, void 0, r.canOwn);
                    } else {
                        if (!ArrayBuffer.isView(t)) throw new Error("Unsupported data type");
                        Ce.write(n, t, 0, t.byteLength, void 0, r.canOwn);
                    }
                    Ce.close(n);
                },
                cwd: ()=>Ce.currentPath,
                chdir (e1) {
                    var t = Ce.lookupPath(e1, {
                        follow: !0
                    });
                    if (null === t.node) throw new Ce.ErrnoError(44);
                    if (!Ce.isDir(t.node.mode)) throw new Ce.ErrnoError(54);
                    var r = Ce.nodePermissions(t.node, "x");
                    if (r) throw new Ce.ErrnoError(r);
                    Ce.currentPath = t.path;
                },
                createDefaultDirectories () {
                    Ce.mkdir("/tmp"), Ce.mkdir("/home"), Ce.mkdir("/home/web_user");
                },
                createDefaultDevices () {
                    Ce.mkdir("/dev"), Ce.registerDevice(Ce.makedev(1, 3), {
                        read: ()=>0,
                        write: (e1, t, r, n, o)=>n
                    }), Ce.mkdev("/dev/null", Ce.makedev(1, 3)), be.register(Ce.makedev(5, 0), be.default_tty_ops), be.register(Ce.makedev(6, 0), be.default_tty1_ops), Ce.mkdev("/dev/tty", Ce.makedev(5, 0)), Ce.mkdev("/dev/tty1", Ce.makedev(6, 0));
                    var e1 = new Uint8Array(1024), t = 0, r = ()=>(0 === t && (t = de(e1).byteLength), e1[--t]);
                    Ce.createDevice("/dev", "random", r), Ce.createDevice("/dev", "urandom", r), Ce.mkdir("/dev/shm"), Ce.mkdir("/dev/shm/tmp");
                },
                createSpecialDirectories () {
                    Ce.mkdir("/proc");
                    var e1 = Ce.mkdir("/proc/self");
                    Ce.mkdir("/proc/self/fd"), Ce.mount({
                        mount () {
                            var t = Ce.createNode(e1, "fd", 16895, 73);
                            return t.node_ops = {
                                lookup (e1, t) {
                                    var r = +t, n = Ce.getStreamChecked(r), o = {
                                        parent: null,
                                        mount: {
                                            mountpoint: "fake"
                                        },
                                        node_ops: {
                                            readlink: ()=>n.path
                                        }
                                    };
                                    return o.parent = o, o;
                                }
                            }, t;
                        }
                    }, {}, "/proc/self/fd");
                },
                createStandardStreams () {
                    u.stdin ? Ce.createDevice("/dev", "stdin", u.stdin) : Ce.symlink("/dev/tty", "/dev/stdin"), u.stdout ? Ce.createDevice("/dev", "stdout", null, u.stdout) : Ce.symlink("/dev/tty", "/dev/stdout"), u.stderr ? Ce.createDevice("/dev", "stderr", null, u.stderr) : Ce.symlink("/dev/tty1", "/dev/stderr"), Ce.open("/dev/stdin", 0), Ce.open("/dev/stdout", 1), Ce.open("/dev/stderr", 1);
                },
                staticInit () {
                    [
                        44
                    ].forEach((e1)=>{
                        Ce.genericErrors[e1] = new Ce.ErrnoError(e1), Ce.genericErrors[e1].stack = "<generic error, no stack>";
                    }), Ce.nameTable = new Array(4096), Ce.mount(_e, {}, "/"), Ce.createDefaultDirectories(), Ce.createDefaultDevices(), Ce.createSpecialDirectories(), Ce.filesystems = {
                        MEMFS: _e
                    };
                },
                init (e1, t, r) {
                    Ce.init.initialized = !0, u.stdin = e1 || u.stdin, u.stdout = t || u.stdout, u.stderr = r || u.stderr, Ce.createStandardStreams();
                },
                quit () {
                    Ce.init.initialized = !1;
                    for(var e1 = 0; e1 < Ce.streams.length; e1++){
                        var t = Ce.streams[e1];
                        t && Ce.close(t);
                    }
                },
                findObject (e1, t) {
                    var r = Ce.analyzePath(e1, t);
                    return r.exists ? r.object : null;
                },
                analyzePath (e1, t) {
                    try {
                        e1 = (n = Ce.lookupPath(e1, {
                            follow: !t
                        })).path;
                    } catch (e1) {}
                    var r = {
                        isRoot: !1,
                        exists: !1,
                        error: 0,
                        name: null,
                        path: null,
                        object: null,
                        parentExists: !1,
                        parentPath: null,
                        parentObject: null
                    };
                    try {
                        var n = Ce.lookupPath(e1, {
                            parent: !0
                        });
                        r.parentExists = !0, r.parentPath = n.path, r.parentObject = n.node, r.name = le.basename(e1), n = Ce.lookupPath(e1, {
                            follow: !t
                        }), r.exists = !0, r.path = n.path, r.object = n.node, r.name = n.node.name, r.isRoot = "/" === n.path;
                    } catch (e1) {
                        r.error = e1.errno;
                    }
                    return r;
                },
                createPath (e1, t, r, n) {
                    e1 = "string" == typeof e1 ? e1 : Ce.getPath(e1);
                    for(var o = t.split("/").reverse(); o.length;){
                        var i = o.pop();
                        if (i) {
                            var a = le.join2(e1, i);
                            try {
                                Ce.mkdir(a);
                            } catch (e1) {}
                            e1 = a;
                        }
                    }
                    return a;
                },
                createFile (e1, t, r, n, o) {
                    var i = le.join2("string" == typeof e1 ? e1 : Ce.getPath(e1), t), a = Se(n, o);
                    return Ce.create(i, a);
                },
                createDataFile (e1, t, r, n, o, i) {
                    var a = t;
                    e1 && (e1 = "string" == typeof e1 ? e1 : Ce.getPath(e1), a = t ? le.join2(e1, t) : e1);
                    var s = Se(n, o), u = Ce.create(a, s);
                    if (r) {
                        if ("string" == typeof r) {
                            for(var c = new Array(r.length), l = 0, d = r.length; l < d; ++l)c[l] = r.charCodeAt(l);
                            r = c;
                        }
                        Ce.chmod(u, 146 | s);
                        var h = Ce.open(u, 577);
                        Ce.write(h, r, 0, r.length, 0, i), Ce.close(h), Ce.chmod(u, s);
                    }
                },
                createDevice (e1, t, r, n) {
                    var o = le.join2("string" == typeof e1 ? e1 : Ce.getPath(e1), t), i = Se(!!r, !!n);
                    Ce.createDevice.major || (Ce.createDevice.major = 64);
                    var a = Ce.makedev(Ce.createDevice.major++, 0);
                    return Ce.registerDevice(a, {
                        open (e1) {
                            e1.seekable = !1;
                        },
                        close (e1) {
                            n?.buffer?.length && n(10);
                        },
                        read (e1, t, n, o, i) {
                            for(var a = 0, s = 0; s < o; s++){
                                var u;
                                try {
                                    u = r();
                                } catch (e1) {
                                    throw new Ce.ErrnoError(29);
                                }
                                if (void 0 === u && 0 === a) throw new Ce.ErrnoError(6);
                                if (null == u) break;
                                a++, t[n + s] = u;
                            }
                            return a && (e1.node.timestamp = Date.now()), a;
                        },
                        write (e1, t, r, o, i) {
                            for(var a = 0; a < o; a++)try {
                                n(t[r + a]);
                            } catch (e1) {
                                throw new Ce.ErrnoError(29);
                            }
                            return o && (e1.node.timestamp = Date.now()), a;
                        }
                    }), Ce.mkdev(o, i, a);
                },
                forceLoadFile (e1) {
                    if (e1.isDevice || e1.isFolder || e1.link || e1.contents) return !0;
                    if ("undefined" != typeof XMLHttpRequest) throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
                    if (!c) throw new Error("Cannot load without read() or XMLHttpRequest.");
                    try {
                        e1.contents = ye(c(e1.url), !0), e1.usedBytes = e1.contents.length;
                    } catch (e1) {
                        throw new Ce.ErrnoError(29);
                    }
                },
                createLazyFile (e1, t, r, n, o) {
                    function i() {
                        this.lengthKnown = !1, this.chunks = [];
                    }
                    if (i.prototype.get = function(e1) {
                        if (!(e1 > this.length - 1 || e1 < 0)) {
                            var t = e1 % this.chunkSize, r = e1 / this.chunkSize | 0;
                            return this.getter(r)[t];
                        }
                    }, i.prototype.setDataGetter = function(e1) {
                        this.getter = e1;
                    }, i.prototype.cacheLength = function() {
                        var e1 = new XMLHttpRequest;
                        if (e1.open("HEAD", r, !1), e1.send(null), !(e1.status >= 200 && e1.status < 300 || 304 === e1.status)) throw new Error("Couldn't load " + r + ". Status: " + e1.status);
                        var t, n = Number(e1.getResponseHeader("Content-length")), o = (t = e1.getResponseHeader("Accept-Ranges")) && "bytes" === t, i = (t = e1.getResponseHeader("Content-Encoding")) && "gzip" === t, a = 1048576;
                        o || (a = n);
                        var s = this;
                        s.setDataGetter((e1)=>{
                            var t = e1 * a, o = (e1 + 1) * a - 1;
                            if (o = Math.min(o, n - 1), void 0 === s.chunks[e1] && (s.chunks[e1] = ((e1, t)=>{
                                if (e1 > t) throw new Error("invalid range (" + e1 + ", " + t + ") or no bytes requested!");
                                if (t > n - 1) throw new Error("only " + n + " bytes available! programmer error!");
                                var o = new XMLHttpRequest;
                                if (o.open("GET", r, !1), n !== a && o.setRequestHeader("Range", "bytes=" + e1 + "-" + t), o.responseType = "arraybuffer", o.overrideMimeType && o.overrideMimeType("text/plain; charset=x-user-defined"), o.send(null), !(o.status >= 200 && o.status < 300 || 304 === o.status)) throw new Error("Couldn't load " + r + ". Status: " + o.status);
                                return void 0 !== o.response ? new Uint8Array(o.response || []) : ye(o.responseText || "", !0);
                            })(t, o)), void 0 === s.chunks[e1]) throw new Error("doXHR failed!");
                            return s.chunks[e1];
                        }), !i && n || (a = n = 1, n = this.getter(0).length, a = n, C("LazyFiles on gzip forces download of the whole file when length is accessed")), this._length = n, this._chunkSize = a, this.lengthKnown = !0;
                    }, "undefined" != typeof XMLHttpRequest) {
                        if (!v) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
                        var a = new i;
                        Object.defineProperties(a, {
                            length: {
                                get: function() {
                                    return this.lengthKnown || this.cacheLength(), this._length;
                                }
                            },
                            chunkSize: {
                                get: function() {
                                    return this.lengthKnown || this.cacheLength(), this._chunkSize;
                                }
                            }
                        });
                        var s = {
                            isDevice: !1,
                            contents: a
                        };
                    } else s = {
                        isDevice: !1,
                        url: r
                    };
                    var u = Ce.createFile(e1, t, s, n, o);
                    s.contents ? u.contents = s.contents : s.url && (u.contents = null, u.url = s.url), Object.defineProperties(u, {
                        usedBytes: {
                            get: function() {
                                return this.contents.length;
                            }
                        }
                    });
                    var c = {};
                    function l(e1, t, r, n, o) {
                        var i = e1.node.contents;
                        if (o >= i.length) return 0;
                        var a = Math.min(i.length - o, n);
                        if (i.slice) for(var s = 0; s < a; s++)t[r + s] = i[o + s];
                        else for(s = 0; s < a; s++)t[r + s] = i.get(o + s);
                        return a;
                    }
                    return Object.keys(u.stream_ops).forEach((e1)=>{
                        var t = u.stream_ops[e1];
                        c[e1] = function() {
                            return Ce.forceLoadFile(u), t.apply(null, arguments);
                        };
                    }), c.read = (e1, t, r, n, o)=>(Ce.forceLoadFile(u), l(e1, t, r, n, o)), c.mmap = (e1, t, r, n, o)=>{
                        Ce.forceLoadFile(u);
                        var i = we(t);
                        if (!i) throw new Ce.ErrnoError(48);
                        return l(e1, T, i, t, r), {
                            ptr: i,
                            allocated: !0
                        };
                    }, u.stream_ops = c, u;
                }
            }, xe = (e1, t)=>e1 ? pe(A, e1, t) : "", ke = {
                DEFAULT_POLLMASK: 5,
                calculateAt (e1, t, r) {
                    if (le.isAbs(t)) return t;
                    var n;
                    if (n = -100 === e1 ? Ce.cwd() : ke.getStreamFromFD(e1).path, 0 == t.length) {
                        if (!r) throw new Ce.ErrnoError(44);
                        return n;
                    }
                    return le.join2(n, t);
                },
                doStat (e1, t, r) {
                    var n = e1(t);
                    L[r >> 2] = n.dev, L[r + 4 >> 2] = n.mode, D[r + 8 >> 2] = n.nlink, L[r + 12 >> 2] = n.uid, L[r + 16 >> 2] = n.gid, L[r + 20 >> 2] = n.rdev, R[r + 24 >> 3] = BigInt(n.size), L[r + 32 >> 2] = 4096, L[r + 36 >> 2] = n.blocks;
                    var o = n.atime.getTime(), i = n.mtime.getTime(), a = n.ctime.getTime();
                    return R[r + 40 >> 3] = BigInt(Math.floor(o / 1e3)), D[r + 48 >> 2] = o % 1e3 * 1e3, R[r + 56 >> 3] = BigInt(Math.floor(i / 1e3)), D[r + 64 >> 2] = i % 1e3 * 1e3, R[r + 72 >> 3] = BigInt(Math.floor(a / 1e3)), D[r + 80 >> 2] = a % 1e3 * 1e3, R[r + 88 >> 3] = BigInt(n.ino), 0;
                },
                doMsync (e1, t, r, n, o) {
                    if (!Ce.isFile(t.node.mode)) throw new Ce.ErrnoError(43);
                    if (2 & n) return 0;
                    var i = A.slice(e1, e1 + r);
                    Ce.msync(t, i, o, r, n);
                },
                varargs: void 0,
                get () {
                    var e1 = L[+ke.varargs >> 2];
                    return ke.varargs += 4, e1;
                },
                getp: ()=>ke.get(),
                getStr: (e1)=>xe(e1),
                getStreamFromFD: (e1)=>Ce.getStreamChecked(e1)
            }, Te = {}, Ae = (e1)=>{
                for(; e1.length;){
                    var t = e1.pop();
                    e1.pop()(t);
                }
            };
            function Pe(e1) {
                return this.fromWireType(L[e1 >> 2]);
            }
            var Fe, Le, De, Be = {}, Re = {}, Me = {}, Ie = (e1)=>{
                throw new Fe(e1);
            }, Oe = (e1, t, r)=>{
                function n(t) {
                    var n = r(t);
                    n.length !== e1.length && Ie("Mismatched type converter count");
                    for(var o = 0; o < e1.length; ++o)He(e1[o], n[o]);
                }
                e1.forEach(function(e1) {
                    Me[e1] = t;
                });
                var o = new Array(t.length), i = [], a = 0;
                t.forEach((e1, t)=>{
                    Re.hasOwnProperty(e1) ? o[t] = Re[e1] : (i.push(e1), Be.hasOwnProperty(e1) || (Be[e1] = []), Be[e1].push(()=>{
                        o[t] = Re[e1], ++a === i.length && n(o);
                    }));
                }), 0 === i.length && n(o);
            }, je = {}, Ue = (e1)=>{
                if (null === e1) return "null";
                var t = typeof e1;
                return "object" === t || "array" === t || "function" === t ? e1.toString() : "" + e1;
            }, $e = (e1)=>{
                for(var t = "", r = e1; A[r];)t += Le[A[r++]];
                return t;
            }, qe = (e1)=>{
                throw new De(e1);
            };
            function He(e1, t, r = {}) {
                if (!("argPackAdvance" in t)) throw new TypeError("registerType registeredInstance requires argPackAdvance");
                return function(e1, t, r = {}) {
                    var n = t.name;
                    if (e1 || qe(`type "${n}" must have a positive integer typeid pointer`), Re.hasOwnProperty(e1)) {
                        if (r.ignoreDuplicateRegistrations) return;
                        qe(`Cannot register type '${n}' twice`);
                    }
                    if (Re[e1] = t, delete Me[e1], Be.hasOwnProperty(e1)) {
                        var o = Be[e1];
                        delete Be[e1], o.forEach((e1)=>e1());
                    }
                }(e1, t, r);
            }
            var Ne, Ve = (e1, t, r)=>{
                switch(t){
                    case 1:
                        return r ? (e1)=>T[e1 >> 0] : (e1)=>A[e1 >> 0];
                    case 2:
                        return r ? (e1)=>P[e1 >> 1] : (e1)=>F[e1 >> 1];
                    case 4:
                        return r ? (e1)=>L[e1 >> 2] : (e1)=>D[e1 >> 2];
                    case 8:
                        return r ? (e1)=>R[e1 >> 3] : (e1)=>M[e1 >> 3];
                    default:
                        throw new TypeError(`invalid integer width (${t}): ${e1}`);
                }
            }, ze = 8, We = (e1)=>{
                qe(e1.$$.ptrType.registeredClass.name + " instance already deleted");
            }, Ge = !1, Xe = (e1)=>{}, Ye = (e1)=>{
                e1.count.value -= 1, 0 === e1.count.value && ((e1)=>{
                    e1.smartPtr ? e1.smartPtrType.rawDestructor(e1.smartPtr) : e1.ptrType.registeredClass.rawDestructor(e1.ptr);
                })(e1);
            }, Ke = (e1, t, r)=>{
                if (t === r) return e1;
                if (void 0 === r.baseClass) return null;
                var n = Ke(e1, t, r.baseClass);
                return null === n ? null : r.downcast(n);
            }, Ze = {}, Qe = ()=>Object.keys(nt).length, Je = ()=>{
                var e1 = [];
                for(var t in nt)nt.hasOwnProperty(t) && e1.push(nt[t]);
                return e1;
            }, et = [], tt = ()=>{
                for(; et.length;){
                    var e1 = et.pop();
                    e1.$$.deleteScheduled = !1, e1.delete();
                }
            }, rt = (e1)=>{
                Ne = e1, et.length && Ne && Ne(tt);
            }, nt = {}, ot = (e1, t)=>(t = ((e1, t)=>{
                    for(void 0 === t && qe("ptr should not be undefined"); e1.baseClass;)t = e1.upcast(t), e1 = e1.baseClass;
                    return t;
                })(e1, t), nt[t]), it = (e1, t)=>(t.ptrType && t.ptr || Ie("makeClassHandle requires ptr and ptrType"), !!t.smartPtrType != !!t.smartPtr && Ie("Both smartPtrType and smartPtr must be specified"), t.count = {
                    value: 1
                }, st(Object.create(e1, {
                    $$: {
                        value: t,
                        writable: !0
                    }
                })));
            function at(e1) {
                var t = this.getPointee(e1);
                if (!t) return this.destructor(e1), null;
                var r = ot(this.registeredClass, t);
                if (void 0 !== r) {
                    if (0 === r.$$.count.value) return r.$$.ptr = t, r.$$.smartPtr = e1, r.clone();
                    var n = r.clone();
                    return this.destructor(e1), n;
                }
                function o() {
                    return this.isSmartPointer ? it(this.registeredClass.instancePrototype, {
                        ptrType: this.pointeeType,
                        ptr: t,
                        smartPtrType: this,
                        smartPtr: e1
                    }) : it(this.registeredClass.instancePrototype, {
                        ptrType: this,
                        ptr: e1
                    });
                }
                var i, a = this.registeredClass.getActualType(t), s = Ze[a];
                if (!s) return o.call(this);
                i = this.isConst ? s.constPointerType : s.pointerType;
                var u = Ke(t, this.registeredClass, i.registeredClass);
                return null === u ? o.call(this) : this.isSmartPointer ? it(i.registeredClass.instancePrototype, {
                    ptrType: i,
                    ptr: u,
                    smartPtrType: this,
                    smartPtr: e1
                }) : it(i.registeredClass.instancePrototype, {
                    ptrType: i,
                    ptr: u
                });
            }
            var st = (e1)=>"undefined" == typeof FinalizationRegistry ? (st = (e1)=>e1, e1) : (Ge = new FinalizationRegistry((e1)=>{
                    Ye(e1.$$);
                }), Xe = (e1)=>Ge.unregister(e1), (st = (e1)=>{
                    var t = e1.$$;
                    if (t.smartPtr) {
                        var r = {
                            $$: t
                        };
                        Ge.register(e1, r, e1);
                    }
                    return e1;
                })(e1));
            function ut() {}
            var ct = (e1, t)=>Object.defineProperty(t, "name", {
                    value: e1
                }), lt = (e1, t, r)=>{
                if (void 0 === e1[t].overloadTable) {
                    var n = e1[t];
                    e1[t] = function() {
                        return e1[t].overloadTable.hasOwnProperty(arguments.length) || qe(`Function '${r}' called with an invalid number of arguments (${arguments.length}) - expects one of (${e1[t].overloadTable})!`), e1[t].overloadTable[arguments.length].apply(this, arguments);
                    }, e1[t].overloadTable = [], e1[t].overloadTable[n.argCount] = n;
                }
            }, dt = (e1, t, r)=>{
                u.hasOwnProperty(e1) ? ((void 0 === r || void 0 !== u[e1].overloadTable && void 0 !== u[e1].overloadTable[r]) && qe(`Cannot register public name '${e1}' twice`), lt(u, e1, e1), u.hasOwnProperty(r) && qe(`Cannot register multiple overloads of a function with the same number of arguments (${r})!`), u[e1].overloadTable[r] = t) : (u[e1] = t, void 0 !== r && (u[e1].numArguments = r));
            };
            function ht(e1, t, r, n, o, i, a, s) {
                this.name = e1, this.constructor = t, this.instancePrototype = r, this.rawDestructor = n, this.baseClass = o, this.getActualType = i, this.upcast = a, this.downcast = s, this.pureVirtualFunctions = [];
            }
            var ft = (e1, t, r)=>{
                for(; t !== r;)t.upcast || qe(`Expected null or instance of ${r.name}, got an instance of ${t.name}`), e1 = t.upcast(e1), t = t.baseClass;
                return e1;
            };
            function pt(e1, t) {
                if (null === t) return this.isReference && qe(`null is not a valid ${this.name}`), 0;
                t.$$ || qe(`Cannot pass "${Ue(t)}" as a ${this.name}`), t.$$.ptr || qe(`Cannot pass deleted object as a pointer of type ${this.name}`);
                var r = t.$$.ptrType.registeredClass;
                return ft(t.$$.ptr, r, this.registeredClass);
            }
            function mt(e1, t) {
                var r;
                if (null === t) return this.isReference && qe(`null is not a valid ${this.name}`), this.isSmartPointer ? (r = this.rawConstructor(), null !== e1 && e1.push(this.rawDestructor, r), r) : 0;
                t && t.$$ || qe(`Cannot pass "${Ue(t)}" as a ${this.name}`), t.$$.ptr || qe(`Cannot pass deleted object as a pointer of type ${this.name}`), !this.isConst && t.$$.ptrType.isConst && qe(`Cannot convert argument of type ${t.$$.smartPtrType ? t.$$.smartPtrType.name : t.$$.ptrType.name} to parameter type ${this.name}`);
                var n = t.$$.ptrType.registeredClass;
                if (r = ft(t.$$.ptr, n, this.registeredClass), this.isSmartPointer) switch(void 0 === t.$$.smartPtr && qe("Passing raw pointer to smart pointer is illegal"), this.sharingPolicy){
                    case 0:
                        t.$$.smartPtrType === this ? r = t.$$.smartPtr : qe(`Cannot convert argument of type ${t.$$.smartPtrType ? t.$$.smartPtrType.name : t.$$.ptrType.name} to parameter type ${this.name}`);
                        break;
                    case 1:
                        r = t.$$.smartPtr;
                        break;
                    case 2:
                        if (t.$$.smartPtrType === this) r = t.$$.smartPtr;
                        else {
                            var o = t.clone();
                            r = this.rawShare(r, Mt.toHandle(()=>o.delete())), null !== e1 && e1.push(this.rawDestructor, r);
                        }
                        break;
                    default:
                        qe("Unsupporting sharing policy");
                }
                return r;
            }
            function gt(e1, t) {
                if (null === t) return this.isReference && qe(`null is not a valid ${this.name}`), 0;
                t.$$ || qe(`Cannot pass "${Ue(t)}" as a ${this.name}`), t.$$.ptr || qe(`Cannot pass deleted object as a pointer of type ${this.name}`), t.$$.ptrType.isConst && qe(`Cannot convert argument of type ${t.$$.ptrType.name} to parameter type ${this.name}`);
                var r = t.$$.ptrType.registeredClass;
                return ft(t.$$.ptr, r, this.registeredClass);
            }
            function vt(e1) {
                return this.fromWireType(D[e1 >> 2]);
            }
            function yt(e1, t, r, n, o, i, a, s, u, c, l) {
                this.name = e1, this.registeredClass = t, this.isReference = r, this.isConst = n, this.isSmartPointer = o, this.pointeeType = i, this.sharingPolicy = a, this.rawGetPointee = s, this.rawConstructor = u, this.rawShare = c, this.rawDestructor = l, o || void 0 !== t.baseClass ? this.toWireType = mt : n ? (this.toWireType = pt, this.destructorFunction = null) : (this.toWireType = gt, this.destructorFunction = null);
            }
            var bt, _t, Et = (e1, t, r)=>{
                u.hasOwnProperty(e1) || Ie("Replacing nonexistant public symbol"), void 0 !== u[e1].overloadTable && void 0 !== r ? u[e1].overloadTable[r] = t : (u[e1] = t, u[e1].argCount = r);
            }, St = [], Ct = (e1)=>{
                var t = St[e1];
                return t || (e1 >= St.length && (St.length = e1 + 1), St[e1] = t = bt.get(e1)), t;
            }, xt = (e1, t)=>{
                e1 = $e(e1);
                var r = Ct(t);
                return "function" != typeof r && qe(`unknown function pointer with signature ${e1}: ${t}`), r;
            }, kt = (e1)=>{
                var t = Mu(e1), r = $e(t);
                return Lu(t), r;
            }, Tt = (e1, t)=>{
                var r = [], n = {};
                throw t.forEach(function e1(t) {
                    n[t] || Re[t] || (Me[t] ? Me[t].forEach(e1) : (r.push(t), n[t] = !0));
                }), new _t(`${e1}: ` + r.map(kt).join([
                    ", "
                ]));
            }, At = (e1, t)=>{
                for(var r = [], n = 0; n < e1; n++)r.push(D[t + 4 * n >> 2]);
                return r;
            };
            function Pt(e1, t, r, n, o, i) {
                var a = t.length;
                a < 2 && qe("argTypes array size mismatch! Must at least get return value and 'this' types!");
                var s = null !== t[1] && null !== r, u = function(e1) {
                    for(var t = 1; t < e1.length; ++t)if (null !== e1[t] && void 0 === e1[t].destructorFunction) return !0;
                    return !1;
                }(t), c = "void" !== t[0].name, l = a - 2, d = new Array(l), h = [], f = [];
                return ct(e1, function() {
                    var r;
                    arguments.length !== l && qe(`function ${e1} called with ${arguments.length} arguments, expected ${l}`), f.length = 0, h.length = s ? 2 : 1, h[0] = o, s && (r = t[1].toWireType(f, this), h[1] = r);
                    for(var i = 0; i < l; ++i)d[i] = t[i + 2].toWireType(f, arguments[i]), h.push(d[i]);
                    return function(e1) {
                        if (u) Ae(f);
                        else for(var n = s ? 1 : 2; n < t.length; n++){
                            var o = 1 === n ? r : d[n - 2];
                            null !== t[n].destructorFunction && t[n].destructorFunction(o);
                        }
                        if (c) return t[0].fromWireType(e1);
                    }(n.apply(null, h));
                });
            }
            var Ft, Lt = (e1)=>{
                const t = (e1 = e1.trim()).indexOf("(");
                return -1 !== t ? e1.substr(0, t) : e1;
            }, Dt = new class HandleAllocator {
                constructor(){
                    this.allocated = [
                        void 0
                    ], this.freelist = [];
                }
                get(e1) {
                    return this.allocated[e1];
                }
                has(e1) {
                    return void 0 !== this.allocated[e1];
                }
                allocate(e1) {
                    var t = this.freelist.pop() || this.allocated.length;
                    return this.allocated[t] = e1, t;
                }
                free(e1) {
                    this.allocated[e1] = void 0, this.freelist.push(e1);
                }
            }, Bt = (e1)=>{
                e1 >= Dt.reserved && 0 == --Dt.get(e1).refcount && Dt.free(e1);
            }, Rt = ()=>{
                for(var e1 = 0, t = Dt.reserved; t < Dt.allocated.length; ++t)void 0 !== Dt.allocated[t] && ++e1;
                return e1;
            }, Mt = {
                toValue: (e1)=>(e1 || qe("Cannot use deleted val. handle = " + e1), Dt.get(e1).value),
                toHandle: (e1)=>{
                    switch(e1){
                        case void 0:
                            return 1;
                        case null:
                            return 2;
                        case !0:
                            return 3;
                        case !1:
                            return 4;
                        default:
                            return Dt.allocate({
                                refcount: 1,
                                value: e1
                            });
                    }
                }
            }, It = {
                name: "emscripten::val",
                fromWireType: (e1)=>{
                    var t = Mt.toValue(e1);
                    return Bt(e1), t;
                },
                toWireType: (e1, t)=>Mt.toHandle(t),
                argPackAdvance: ze,
                readValueFromPointer: Pe,
                destructorFunction: null
            }, Ot = (e1, t, r)=>{
                switch(t){
                    case 1:
                        return r ? function(e1) {
                            return this.fromWireType(T[e1 >> 0]);
                        } : function(e1) {
                            return this.fromWireType(A[e1 >> 0]);
                        };
                    case 2:
                        return r ? function(e1) {
                            return this.fromWireType(P[e1 >> 1]);
                        } : function(e1) {
                            return this.fromWireType(F[e1 >> 1]);
                        };
                    case 4:
                        return r ? function(e1) {
                            return this.fromWireType(L[e1 >> 2]);
                        } : function(e1) {
                            return this.fromWireType(D[e1 >> 2]);
                        };
                    default:
                        throw new TypeError(`invalid integer width (${t}): ${e1}`);
                }
            }, jt = (e1, t)=>{
                var r = Re[e1];
                return void 0 === r && qe(t + " has unknown type " + kt(e1)), r;
            }, Ut = (e1, t)=>{
                switch(t){
                    case 4:
                        return function(e1) {
                            return this.fromWireType(B[e1 >> 2]);
                        };
                    case 8:
                        return function(e1) {
                            return this.fromWireType(I[e1 >> 3]);
                        };
                    default:
                        throw new TypeError(`invalid float width (${t}): ${e1}`);
                }
            }, $t = (e1, t, r)=>ve(e1, A, t, r), qt = "undefined" != typeof TextDecoder ? new TextDecoder("utf-16le") : void 0, Ht = (e1, t)=>{
                for(var r = e1, n = r >> 1, o = n + t / 2; !(n >= o) && F[n];)++n;
                if ((r = n << 1) - e1 > 32 && qt) return qt.decode(A.subarray(e1, r));
                for(var i = "", a = 0; !(a >= t / 2); ++a){
                    var s = P[e1 + 2 * a >> 1];
                    if (0 == s) break;
                    i += String.fromCharCode(s);
                }
                return i;
            }, Nt = (e1, t, r)=>{
                if (r ??= 2147483647, r < 2) return 0;
                for(var n = t, o = (r -= 2) < 2 * e1.length ? r / 2 : e1.length, i = 0; i < o; ++i){
                    var a = e1.charCodeAt(i);
                    P[t >> 1] = a, t += 2;
                }
                return P[t >> 1] = 0, t - n;
            }, Vt = (e1)=>2 * e1.length, zt = (e1, t)=>{
                for(var r = 0, n = ""; !(r >= t / 4);){
                    var o = L[e1 + 4 * r >> 2];
                    if (0 == o) break;
                    if (++r, o >= 65536) {
                        var i = o - 65536;
                        n += String.fromCharCode(55296 | i >> 10, 56320 | 1023 & i);
                    } else n += String.fromCharCode(o);
                }
                return n;
            }, Wt = (e1, t, r)=>{
                if (r ??= 2147483647, r < 4) return 0;
                for(var n = t, o = n + r - 4, i = 0; i < e1.length; ++i){
                    var a = e1.charCodeAt(i);
                    if (a >= 55296 && a <= 57343 && (a = 65536 + ((1023 & a) << 10) | 1023 & e1.charCodeAt(++i)), L[t >> 2] = a, (t += 4) + 4 > o) break;
                }
                return L[t >> 2] = 0, t - n;
            }, Gt = (e1)=>{
                for(var t = 0, r = 0; r < e1.length; ++r){
                    var n = e1.charCodeAt(r);
                    n >= 55296 && n <= 57343 && ++r, t += 4;
                }
                return t;
            }, Xt = (e1, t, r)=>{
                var n = [], o = e1.toWireType(n, r);
                return n.length && (D[t >> 2] = Mt.toHandle(n)), o;
            }, Yt = [], Kt = {}, Zt = (e1)=>{
                var t = Kt[e1];
                return void 0 === t ? $e(e1) : t;
            }, Qt = ()=>{
                if ("object" == typeof globalThis) return globalThis;
                function e1(e1) {
                    e1.$$$embind_global$$$ = e1;
                    var t = "object" == typeof $$$embind_global$$$ && e1.$$$embind_global$$$ == e1;
                    return t || delete e1.$$$embind_global$$$, t;
                }
                if ("object" == typeof $$$embind_global$$$) return $$$embind_global$$$;
                if ("object" == typeof global && e1(global) ? $$$embind_global$$$ = global : "object" == typeof self && e1(self) && ($$$embind_global$$$ = self), "object" == typeof $$$embind_global$$$) return $$$embind_global$$$;
                throw Error("unable to get global object.");
            }, Jt = Reflect.construct, er = (e1)=>e1 < -9007199254740992 || e1 > 9007199254740992 ? NaN : Number(e1), tr = (e1)=>e1 % 4 == 0 && (e1 % 100 != 0 || e1 % 400 == 0), rr = [
                0,
                31,
                60,
                91,
                121,
                152,
                182,
                213,
                244,
                274,
                305,
                335
            ], nr = [
                0,
                31,
                59,
                90,
                120,
                151,
                181,
                212,
                243,
                273,
                304,
                334
            ], or = (e1)=>(tr(e1.getFullYear()) ? rr : nr)[e1.getMonth()] + e1.getDate() - 1, ir = (e1)=>{
                var t = ge(e1) + 1, r = Pu(t);
                return r && $t(e1, r, t), r;
            }, ar = (e1, t)=>{
                if (fr.mainLoop.timingMode = e1, fr.mainLoop.timingValue = t, !fr.mainLoop.func) return 1;
                if (fr.mainLoop.running || (fr.mainLoop.running = !0), 0 == e1) fr.mainLoop.scheduler = function() {
                    var e1 = 0 | Math.max(0, fr.mainLoop.tickStartTime + t - Ft());
                    setTimeout(fr.mainLoop.runner, e1);
                }, fr.mainLoop.method = "timeout";
                else if (1 == e1) fr.mainLoop.scheduler = function() {
                    fr.requestAnimationFrame(fr.mainLoop.runner);
                }, fr.mainLoop.method = "rAF";
                else if (2 == e1) {
                    if (void 0 === fr.setImmediate) if ("undefined" == typeof setImmediate) {
                        var r = [], n = "setimmediate";
                        addEventListener("message", (e1)=>{
                            e1.data !== n && e1.data.target !== n || (e1.stopPropagation(), r.shift()());
                        }, !0), fr.setImmediate = function(e1) {
                            r.push(e1), v ? (void 0 === u.setImmediates && (u.setImmediates = []), u.setImmediates.push(e1), postMessage({
                                target: n
                            })) : postMessage(n, "*");
                        };
                    } else fr.setImmediate = setImmediate;
                    fr.mainLoop.scheduler = function() {
                        fr.setImmediate(fr.mainLoop.runner);
                    }, fr.mainLoop.method = "immediate";
                }
                return 0;
            };
            Ft = ()=>performance.now();
            var sr = (e1)=>{
                if (e1 instanceof oe || "unwind" == e1) return k;
                m(1, e1);
            }, ur = ()=>ae || !1, cr = (e1, t)=>{
                var r;
                k = e1, k = r = e1, ur() || (u.onExit?.(r), O = !0), m(r, new oe(r));
            }, lr = cr, dr = (e1)=>{
                if (!O) try {
                    e1(), (()=>{
                        if ("TURBOPACK compile-time falsy", 0) {
                            "TURBOPACK unreachable";
                        }
                    })();
                } catch (e1) {
                    sr(e1);
                }
            }, hr = (e1, t)=>setTimeout(()=>{
                    dr(e1);
                }, t), fr = {
                mainLoop: {
                    running: !1,
                    scheduler: null,
                    method: "",
                    currentlyRunningMainloop: 0,
                    func: null,
                    arg: 0,
                    timingMode: 0,
                    timingValue: 0,
                    currentFrameNumber: 0,
                    queue: [],
                    pause () {
                        fr.mainLoop.scheduler = null, fr.mainLoop.currentlyRunningMainloop++;
                    },
                    resume () {
                        fr.mainLoop.currentlyRunningMainloop++;
                        var e1 = fr.mainLoop.timingMode, t = fr.mainLoop.timingValue, r = fr.mainLoop.func;
                        fr.mainLoop.func = null, ((e1, t, r, n, o)=>{
                            j(!fr.mainLoop.func, "emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters."), fr.mainLoop.func = e1, fr.mainLoop.arg = n;
                            var i = fr.mainLoop.currentlyRunningMainloop;
                            function a() {
                                return !(i < fr.mainLoop.currentlyRunningMainloop);
                            }
                            if (fr.mainLoop.running = !1, fr.mainLoop.runner = function() {
                                if (!O) if (fr.mainLoop.queue.length > 0) {
                                    Date.now();
                                    var t = fr.mainLoop.queue.shift();
                                    if (t.func(t.arg), fr.mainLoop.remainingBlockers) {
                                        var r = fr.mainLoop.remainingBlockers, n = r % 1 == 0 ? r - 1 : Math.floor(r);
                                        t.counted ? fr.mainLoop.remainingBlockers = n : (n += .5, fr.mainLoop.remainingBlockers = (8 * r + n) / 9);
                                    }
                                    if (fr.mainLoop.updateStatus(), !a()) return;
                                    setTimeout(fr.mainLoop.runner, 0);
                                } else a() && (fr.mainLoop.currentFrameNumber = fr.mainLoop.currentFrameNumber + 1 | 0, 1 == fr.mainLoop.timingMode && fr.mainLoop.timingValue > 1 && fr.mainLoop.currentFrameNumber % fr.mainLoop.timingValue != 0 ? fr.mainLoop.scheduler() : (0 == fr.mainLoop.timingMode && (fr.mainLoop.tickStartTime = Ft()), fr.mainLoop.runIter(e1), a() && ("object" == typeof SDL && SDL.audio?.queueNewAudioData?.(), fr.mainLoop.scheduler())));
                            }, o || (("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : ar(1, 1), fr.mainLoop.scheduler()), r) throw "unwind";
                        })(r, 0, !1, fr.mainLoop.arg, !0), ar(e1, t), fr.mainLoop.scheduler();
                    },
                    updateStatus () {
                        if (u.setStatus) {
                            var e1 = u.statusMessage || "Please wait...", t = fr.mainLoop.remainingBlockers, r = fr.mainLoop.expectedBlockers;
                            t ? t < r ? u.setStatus(e1 + " (" + (r - t) + "/" + r + ")") : u.setStatus(e1) : u.setStatus("");
                        }
                    },
                    runIter (e1) {
                        if (!O) {
                            if (u.preMainLoop && !1 === u.preMainLoop()) return;
                            dr(e1), u.postMainLoop?.();
                        }
                    }
                },
                isFullscreen: !1,
                pointerLock: !1,
                moduleContextCreatedCallbacks: [],
                workers: [],
                init () {
                    if (!fr.initted) {
                        fr.initted = !0;
                        var e1 = {
                            canHandle: function(e1) {
                                return !u.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(e1);
                            },
                            handle: function(e1, t, r, n) {
                                var o = new Blob([
                                    e1
                                ], {
                                    type: fr.getMimetype(t)
                                });
                                o.size !== e1.length && (o = new Blob([
                                    new Uint8Array(e1).buffer
                                ], {
                                    type: fr.getMimetype(t)
                                }));
                                var i = URL.createObjectURL(o), a = new Image;
                                a.onload = ()=>{
                                    j(a.complete, `Image ${t} could not be decoded`);
                                    var n = document.createElement("canvas");
                                    n.width = a.width, n.height = a.height, n.getContext("2d").drawImage(a, 0, 0), _u[t] = n, URL.revokeObjectURL(i), r?.(e1);
                                }, a.onerror = (e1)=>{
                                    x(`Image ${i} could not be decoded`), n?.();
                                }, a.src = i;
                            }
                        };
                        Ee.push(e1);
                        var t = {
                            canHandle: function(e1) {
                                return !u.noAudioDecoding && e1.substr(-4) in {
                                    ".ogg": 1,
                                    ".wav": 1,
                                    ".mp3": 1
                                };
                            },
                            handle: function(e1, t, r, n) {
                                var o = !1;
                                function i(n) {
                                    o || (o = !0, Eu[t] = n, r?.(e1));
                                }
                                var a = new Blob([
                                    e1
                                ], {
                                    type: fr.getMimetype(t)
                                }), s = URL.createObjectURL(a), u = new Audio;
                                u.addEventListener("canplaythrough", ()=>i(u), !1), u.onerror = function(r) {
                                    o || (x(`warning: browser could not fully decode audio ${t}, trying slower base64 approach`), u.src = "data:audio/x-" + t.substr(-3) + ";base64," + function(e1) {
                                        for(var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", r = "", n = 0, o = 0, i = 0; i < e1.length; i++)for(n = n << 8 | e1[i], o += 8; o >= 6;){
                                            var a = n >> o - 6 & 63;
                                            o -= 6, r += t[a];
                                        }
                                        return 2 == o ? (r += t[(3 & n) << 4], r += "==") : 4 == o && (r += t[(15 & n) << 2], r += "="), r;
                                    }(e1), i(u));
                                }, u.src = s, hr(()=>{
                                    i(u);
                                }, 1e4);
                            }
                        };
                        Ee.push(t);
                        var r = u.canvas;
                        r && (r.requestPointerLock = r.requestPointerLock || r.mozRequestPointerLock || r.webkitRequestPointerLock || r.msRequestPointerLock || (()=>{}), r.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock || document.webkitExitPointerLock || document.msExitPointerLock || (()=>{}), r.exitPointerLock = r.exitPointerLock.bind(document), document.addEventListener("pointerlockchange", n, !1), document.addEventListener("mozpointerlockchange", n, !1), document.addEventListener("webkitpointerlockchange", n, !1), document.addEventListener("mspointerlockchange", n, !1), u.elementPointerLock && r.addEventListener("click", (e1)=>{
                            !fr.pointerLock && u.canvas.requestPointerLock && (u.canvas.requestPointerLock(), e1.preventDefault());
                        }, !1));
                    }
                    function n() {
                        fr.pointerLock = document.pointerLockElement === u.canvas || document.mozPointerLockElement === u.canvas || document.webkitPointerLockElement === u.canvas || document.msPointerLockElement === u.canvas;
                    }
                },
                createContext (e1, t, r, n) {
                    if (t && u.ctx && e1 == u.canvas) return u.ctx;
                    var o, i;
                    if (t) {
                        var a = {
                            antialias: !1,
                            alpha: !1,
                            majorVersion: "undefined" != typeof WebGL2RenderingContext ? 2 : 1
                        };
                        if (n) for(var s in n)a[s] = n[s];
                        void 0 !== mr && (i = mr.createContext(e1, a)) && (o = mr.getContext(i).GLctx);
                    } else o = e1.getContext("2d");
                    return o ? (r && (t || j(void 0 === wu, "cannot set in module if GLctx is used, but we are a non-GL context that would replace it"), u.ctx = o, t && mr.makeContextCurrent(i), u.useWebGL = t, fr.moduleContextCreatedCallbacks.forEach((e1)=>e1()), fr.init()), o) : null;
                },
                destroyContext (e1, t, r) {},
                fullscreenHandlersInstalled: !1,
                lockPointer: void 0,
                resizeCanvas: void 0,
                requestFullscreen (e1, t) {
                    fr.lockPointer = e1, fr.resizeCanvas = t, void 0 === fr.lockPointer && (fr.lockPointer = !0), void 0 === fr.resizeCanvas && (fr.resizeCanvas = !1);
                    var r = u.canvas;
                    function n() {
                        fr.isFullscreen = !1;
                        var e1 = r.parentNode;
                        (document.fullscreenElement || document.mozFullScreenElement || document.msFullscreenElement || document.webkitFullscreenElement || document.webkitCurrentFullScreenElement) === e1 ? (r.exitFullscreen = fr.exitFullscreen, fr.lockPointer && r.requestPointerLock(), fr.isFullscreen = !0, fr.resizeCanvas ? fr.setFullscreenCanvasSize() : fr.updateCanvasDimensions(r)) : (e1.parentNode.insertBefore(r, e1), e1.parentNode.removeChild(e1), fr.resizeCanvas ? fr.setWindowedCanvasSize() : fr.updateCanvasDimensions(r)), u.onFullScreen?.(fr.isFullscreen), u.onFullscreen?.(fr.isFullscreen);
                    }
                    fr.fullscreenHandlersInstalled || (fr.fullscreenHandlersInstalled = !0, document.addEventListener("fullscreenchange", n, !1), document.addEventListener("mozfullscreenchange", n, !1), document.addEventListener("webkitfullscreenchange", n, !1), document.addEventListener("MSFullscreenChange", n, !1));
                    var o = document.createElement("div");
                    r.parentNode.insertBefore(o, r), o.appendChild(r), o.requestFullscreen = o.requestFullscreen || o.mozRequestFullScreen || o.msRequestFullscreen || (o.webkitRequestFullscreen ? ()=>o.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT) : null) || (o.webkitRequestFullScreen ? ()=>o.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT) : null), o.requestFullscreen();
                },
                exitFullscreen: ()=>!!fr.isFullscreen && ((document.exitFullscreen || document.cancelFullScreen || document.mozCancelFullScreen || document.msExitFullscreen || document.webkitCancelFullScreen || (()=>{})).apply(document, []), !0),
                nextRAF: 0,
                fakeRequestAnimationFrame (e1) {
                    var t = Date.now();
                    if (0 === fr.nextRAF) fr.nextRAF = t + 1e3 / 60;
                    else for(; t + 2 >= fr.nextRAF;)fr.nextRAF += 1e3 / 60;
                    var r = Math.max(fr.nextRAF - t, 0);
                    setTimeout(e1, r);
                },
                requestAnimationFrame (e1) {
                    "function" != typeof requestAnimationFrame ? (0, fr.fakeRequestAnimationFrame)(e1) : requestAnimationFrame(e1);
                },
                safeSetTimeout: (e1, t)=>hr(e1, t),
                safeRequestAnimationFrame: (e1)=>fr.requestAnimationFrame(()=>{
                        dr(e1);
                    }),
                getMimetype: (e1)=>({
                        jpg: "image/jpeg",
                        jpeg: "image/jpeg",
                        png: "image/png",
                        bmp: "image/bmp",
                        ogg: "audio/ogg",
                        wav: "audio/wav",
                        mp3: "audio/mpeg"
                    })[e1.substr(e1.lastIndexOf(".") + 1)],
                getUserMedia (e1) {
                    window.getUserMedia ||= navigator.getUserMedia || navigator.mozGetUserMedia, window.getUserMedia(e1);
                },
                getMovementX: (e1)=>e1.movementX || e1.mozMovementX || e1.webkitMovementX || 0,
                getMovementY: (e1)=>e1.movementY || e1.mozMovementY || e1.webkitMovementY || 0,
                getMouseWheelDelta (e1) {
                    var t = 0;
                    switch(e1.type){
                        case "DOMMouseScroll":
                            t = e1.detail / 3;
                            break;
                        case "mousewheel":
                            t = e1.wheelDelta / 120;
                            break;
                        case "wheel":
                            switch(t = e1.deltaY, e1.deltaMode){
                                case 0:
                                    t /= 100;
                                    break;
                                case 1:
                                    t /= 3;
                                    break;
                                case 2:
                                    t *= 80;
                                    break;
                                default:
                                    throw "unrecognized mouse wheel delta mode: " + e1.deltaMode;
                            }
                            break;
                        default:
                            throw "unrecognized mouse wheel event: " + e1.type;
                    }
                    return t;
                },
                mouseX: 0,
                mouseY: 0,
                mouseMovementX: 0,
                mouseMovementY: 0,
                touches: {},
                lastTouches: {},
                calculateMouseCoords (e1, t) {
                    var r = u.canvas.getBoundingClientRect(), n = u.canvas.width, o = u.canvas.height, i = void 0 !== window.scrollX ? window.scrollX : window.pageXOffset, a = void 0 !== window.scrollY ? window.scrollY : window.pageYOffset, s = e1 - (i + r.left), c = t - (a + r.top);
                    return {
                        x: s *= n / r.width,
                        y: c *= o / r.height
                    };
                },
                setMouseCoords (e1, t) {
                    const { x: r, y: n } = fr.calculateMouseCoords(e1, t);
                    fr.mouseMovementX = r - fr.mouseX, fr.mouseMovementY = n - fr.mouseY, fr.mouseX = r, fr.mouseY = n;
                },
                calculateMouseEvent (e1) {
                    if (fr.pointerLock) "mousemove" != e1.type && "mozMovementX" in e1 ? fr.mouseMovementX = fr.mouseMovementY = 0 : (fr.mouseMovementX = fr.getMovementX(e1), fr.mouseMovementY = fr.getMovementY(e1)), "undefined" != typeof SDL ? (fr.mouseX = SDL.mouseX + fr.mouseMovementX, fr.mouseY = SDL.mouseY + fr.mouseMovementY) : (fr.mouseX += fr.mouseMovementX, fr.mouseY += fr.mouseMovementY);
                    else {
                        if ("touchstart" === e1.type || "touchend" === e1.type || "touchmove" === e1.type) {
                            var t = e1.touch;
                            if (void 0 === t) return;
                            var r = fr.calculateMouseCoords(t.pageX, t.pageY);
                            if ("touchstart" === e1.type) fr.lastTouches[t.identifier] = r, fr.touches[t.identifier] = r;
                            else if ("touchend" === e1.type || "touchmove" === e1.type) {
                                var n = fr.touches[t.identifier];
                                n ||= r, fr.lastTouches[t.identifier] = n, fr.touches[t.identifier] = r;
                            }
                            return;
                        }
                        fr.setMouseCoords(e1.pageX, e1.pageY);
                    }
                },
                resizeListeners: [],
                updateResizeListeners () {
                    var e1 = u.canvas;
                    fr.resizeListeners.forEach((t)=>t(e1.width, e1.height));
                },
                setCanvasSize (e1, t, r) {
                    var n = u.canvas;
                    fr.updateCanvasDimensions(n, e1, t), r || fr.updateResizeListeners();
                },
                windowedWidth: 0,
                windowedHeight: 0,
                setFullscreenCanvasSize () {
                    if ("undefined" != typeof SDL) {
                        var e1 = D[SDL.screen >> 2];
                        e1 |= 8388608, L[SDL.screen >> 2] = e1;
                    }
                    fr.updateCanvasDimensions(u.canvas), fr.updateResizeListeners();
                },
                setWindowedCanvasSize () {
                    if ("undefined" != typeof SDL) {
                        var e1 = D[SDL.screen >> 2];
                        e1 &= -8388609, L[SDL.screen >> 2] = e1;
                    }
                    fr.updateCanvasDimensions(u.canvas), fr.updateResizeListeners();
                },
                updateCanvasDimensions (e1, t, r) {
                    t && r ? (e1.widthNative = t, e1.heightNative = r) : (t = e1.widthNative, r = e1.heightNative);
                    var n = t, o = r;
                    if (u.forcedAspectRatio && u.forcedAspectRatio > 0 && (n / o < u.forcedAspectRatio ? n = Math.round(o * u.forcedAspectRatio) : o = Math.round(n / u.forcedAspectRatio)), (document.fullscreenElement || document.mozFullScreenElement || document.msFullscreenElement || document.webkitFullscreenElement || document.webkitCurrentFullScreenElement) === e1.parentNode && "undefined" != typeof screen) {
                        var i = Math.min(screen.width / n, screen.height / o);
                        n = Math.round(n * i), o = Math.round(o * i);
                    }
                    fr.resizeCanvas ? (e1.width != n && (e1.width = n), e1.height != o && (e1.height = o), void 0 !== e1.style && (e1.style.removeProperty("width"), e1.style.removeProperty("height"))) : (e1.width != t && (e1.width = t), e1.height != r && (e1.height = r), void 0 !== e1.style && (n != t || o != r ? (e1.style.setProperty("width", n + "px", "important"), e1.style.setProperty("height", o + "px", "important")) : (e1.style.removeProperty("width"), e1.style.removeProperty("height"))));
                }
            }, pr = {
                errorCode: 12288,
                defaultDisplayInitialized: !1,
                currentContext: 0,
                currentReadSurface: 0,
                currentDrawSurface: 0,
                contextAttributes: {
                    alpha: !1,
                    depth: !1,
                    stencil: !1,
                    antialias: !1
                },
                stringCache: {},
                setErrorCode (e1) {
                    pr.errorCode = e1;
                },
                chooseConfig (e1, t, r, n, o) {
                    if (62e3 != e1) return pr.setErrorCode(12296), 0;
                    if (t) for(;;){
                        var i = L[t >> 2];
                        if (12321 == i) {
                            var a = L[t + 4 >> 2];
                            pr.contextAttributes.alpha = a > 0;
                        } else if (12325 == i) {
                            var s = L[t + 4 >> 2];
                            pr.contextAttributes.depth = s > 0;
                        } else if (12326 == i) {
                            var u = L[t + 4 >> 2];
                            pr.contextAttributes.stencil = u > 0;
                        } else if (12337 == i) {
                            var c = L[t + 4 >> 2];
                            pr.contextAttributes.antialias = c > 0;
                        } else if (12338 == i) c = L[t + 4 >> 2], pr.contextAttributes.antialias = 1 == c;
                        else if (12544 == i) {
                            var l = L[t + 4 >> 2];
                            pr.contextAttributes.lowLatency = 12547 != l;
                        } else if (12344 == i) break;
                        t += 8;
                    }
                    return r && n || o ? (o && (L[o >> 2] = 1), r && n > 0 && (D[r >> 2] = 62002), pr.setErrorCode(12288), 1) : (pr.setErrorCode(12300), 0);
                }
            }, mr = {
                counter: 1,
                buffers: [],
                programs: [],
                framebuffers: [],
                renderbuffers: [],
                textures: [],
                shaders: [],
                vaos: [],
                contexts: [],
                offscreenCanvases: {},
                queries: [],
                samplers: [],
                transformFeedbacks: [],
                syncs: [],
                stringCache: {},
                stringiCache: {},
                unpackAlignment: 4,
                recordError: function(e1) {
                    mr.lastError || (mr.lastError = e1);
                },
                getNewId: (e1)=>{
                    for(var t = mr.counter++, r = e1.length; r < t; r++)e1[r] = null;
                    return t;
                },
                getSource: (e1, t, r, n)=>{
                    for(var o = "", i = 0; i < t; ++i){
                        var a = n ? D[n + 4 * i >> 2] : void 0;
                        o += xe(D[r + 4 * i >> 2], a);
                    }
                    return o;
                },
                createContext: (e1, t)=>{
                    if (!e1.getContextSafariWebGL2Fixed) {
                        let t = function(t, r) {
                            var n = e1.getContextSafariWebGL2Fixed(t, r);
                            return "webgl" == t == n instanceof WebGLRenderingContext ? n : null;
                        };
                        e1.getContextSafariWebGL2Fixed = e1.getContext, e1.getContext = t;
                    }
                    var r = t.majorVersion > 1 ? e1.getContext("webgl2", t) : e1.getContext("webgl", t);
                    return r ? mr.registerContext(r, t) : 0;
                },
                registerContext: (e1, t)=>{
                    var r = mr.getNewId(mr.contexts), n = {
                        handle: r,
                        attributes: t,
                        version: t.majorVersion,
                        GLctx: e1
                    };
                    return e1.canvas && (e1.canvas.GLctxObject = n), mr.contexts[r] = n, r;
                },
                makeContextCurrent: (e1)=>(mr.currentContext = mr.contexts[e1], u.ctx = wu = mr.currentContext?.GLctx, !(e1 && !wu)),
                getContext: (e1)=>mr.contexts[e1],
                deleteContext: (e1)=>{
                    mr.currentContext === mr.contexts[e1] && (mr.currentContext = null), "object" == typeof ou && ou.removeAllHandlersOnTarget(mr.contexts[e1].GLctx.canvas), mr.contexts[e1] && mr.contexts[e1].GLctx.canvas && (mr.contexts[e1].GLctx.canvas.GLctxObject = void 0), mr.contexts[e1] = null;
                }
            }, gr = [], vr = (e1, t, r)=>{
                var n = ((e1, t)=>{
                    var r;
                    for(gr.length = 0; r = A[e1++];){
                        var n = 105 != r;
                        t += (n &= 112 != r) && t % 8 ? 4 : 0, gr.push(112 == r ? D[t >> 2] : 106 == r ? R[t >> 3] : 105 == r ? L[t >> 2] : I[t >> 3]), t += n ? 8 : 4;
                    }
                    return gr;
                })(t, r);
                return ne[e1].apply(null, n);
            }, yr = function(e1) {
                wu.activeTexture(e1);
            }, br = (e1, t)=>{
                wu.attachShader(mr.programs[e1], mr.shaders[t]);
            }, wr = (e1, t)=>{
                wu.beginQuery(e1, mr.queries[t]);
            }, _r = (e1, t)=>{
                wu.disjointTimerQueryExt.beginQueryEXT(e1, mr.queries[t]);
            }, Er = function(e1) {
                wu.beginTransformFeedback(e1);
            }, Sr = (e1, t, r)=>{
                wu.bindAttribLocation(mr.programs[e1], t, xe(r));
            }, Cr = (e1, t)=>{
                35051 == e1 ? wu.currentPixelPackBufferBinding = t : 35052 == e1 && (wu.currentPixelUnpackBufferBinding = t), wu.bindBuffer(e1, mr.buffers[t]);
            }, xr = (e1, t, r)=>{
                wu.bindBufferBase(e1, t, mr.buffers[r]);
            }, kr = (e1, t, r, n, o)=>{
                wu.bindBufferRange(e1, t, mr.buffers[r], n, o);
            }, Tr = (e1, t)=>{
                wu.bindFramebuffer(e1, mr.framebuffers[t]);
            }, Ar = (e1, t)=>{
                wu.bindRenderbuffer(e1, mr.renderbuffers[t]);
            }, Pr = (e1, t)=>{
                wu.bindSampler(e1, mr.samplers[t]);
            }, Fr = (e1, t)=>{
                wu.bindTexture(e1, mr.textures[t]);
            }, Lr = (e1, t)=>{
                wu.bindTransformFeedback(e1, mr.transformFeedbacks[t]);
            }, Dr = (e1)=>{
                wu.bindVertexArray(mr.vaos[e1]);
            }, Br = Dr, Rr = Dr, Mr = function(e1, t, r, n) {
                wu.blendColor(e1, t, r, n);
            }, Ir = function(e1) {
                wu.blendEquation(e1);
            }, Or = function(e1, t) {
                wu.blendEquationSeparate(e1, t);
            }, jr = function(e1, t) {
                wu.blendFunc(e1, t);
            }, Ur = function(e1, t, r, n) {
                wu.blendFuncSeparate(e1, t, r, n);
            }, $r = function(e1, t, r, n, o, i, a, s, u, c) {
                wu.blitFramebuffer(e1, t, r, n, o, i, a, s, u, c);
            }, qr = (e1, t, r, n)=>{
                mr.currentContext.version >= 2 ? r && t ? wu.bufferData(e1, A, n, r, t) : wu.bufferData(e1, t, n) : wu.bufferData(e1, r ? A.subarray(r, r + t) : t, n);
            }, Hr = (e1, t, r, n)=>{
                mr.currentContext.version >= 2 ? r && wu.bufferSubData(e1, t, A, n, r) : wu.bufferSubData(e1, t, A.subarray(n, n + r));
            }, Nr = function(e1) {
                return wu.checkFramebufferStatus(e1);
            }, Vr = function(e1) {
                wu.clear(e1);
            }, zr = function(e1, t, r, n) {
                wu.clearBufferfi(e1, t, r, n);
            }, Wr = (e1, t, r)=>{
                wu.clearBufferfv(e1, t, B, r >> 2);
            }, Gr = (e1, t, r)=>{
                wu.clearBufferiv(e1, t, L, r >> 2);
            }, Xr = (e1, t, r)=>{
                wu.clearBufferuiv(e1, t, D, r >> 2);
            }, Yr = function(e1, t, r, n) {
                wu.clearColor(e1, t, r, n);
            }, Kr = function(e1) {
                wu.clearDepth(e1);
            }, Zr = function(e1) {
                wu.clearStencil(e1);
            }, Qr = (e1, t, r)=>(r = Number(r), wu.clientWaitSync(mr.syncs[e1], t, r)), Jr = (e1, t, r, n)=>{
                wu.colorMask(!!e1, !!t, !!r, !!n);
            }, en = (e1)=>{
                wu.compileShader(mr.shaders[e1]);
            }, tn = (e1, t, r, n, o, i, a, s)=>{
                mr.currentContext.version >= 2 ? wu.currentPixelUnpackBufferBinding || !a ? wu.compressedTexImage2D(e1, t, r, n, o, i, a, s) : wu.compressedTexImage2D(e1, t, r, n, o, i, A, s, a) : wu.compressedTexImage2D(e1, t, r, n, o, i, s ? A.subarray(s, s + a) : null);
            }, rn = (e1, t, r, n, o, i, a, s, u)=>{
                wu.currentPixelUnpackBufferBinding ? wu.compressedTexImage3D(e1, t, r, n, o, i, a, s, u) : wu.compressedTexImage3D(e1, t, r, n, o, i, a, A, u, s);
            }, nn = (e1, t, r, n, o, i, a, s, u)=>{
                mr.currentContext.version >= 2 ? wu.currentPixelUnpackBufferBinding || !s ? wu.compressedTexSubImage2D(e1, t, r, n, o, i, a, s, u) : wu.compressedTexSubImage2D(e1, t, r, n, o, i, a, A, u, s) : wu.compressedTexSubImage2D(e1, t, r, n, o, i, a, u ? A.subarray(u, u + s) : null);
            }, on = (e1, t, r, n, o, i, a, s, u, c, l)=>{
                wu.currentPixelUnpackBufferBinding ? wu.compressedTexSubImage3D(e1, t, r, n, o, i, a, s, u, c, l) : wu.compressedTexSubImage3D(e1, t, r, n, o, i, a, s, u, A, l, c);
            }, an = function(e1, t, r, n, o) {
                wu.copyBufferSubData(e1, t, r, n, o);
            }, sn = function(e1, t, r, n, o, i, a, s) {
                wu.copyTexImage2D(e1, t, r, n, o, i, a, s);
            }, un = function(e1, t, r, n, o, i, a, s) {
                wu.copyTexSubImage2D(e1, t, r, n, o, i, a, s);
            }, cn = function(e1, t, r, n, o, i, a, s, u) {
                wu.copyTexSubImage3D(e1, t, r, n, o, i, a, s, u);
            }, ln = ()=>{
                var e1 = mr.getNewId(mr.programs), t = wu.createProgram();
                return t.name = e1, t.maxUniformLength = t.maxAttributeLength = t.maxUniformBlockNameLength = 0, t.uniformIdCounter = 1, mr.programs[e1] = t, e1;
            }, dn = (e1)=>{
                var t = mr.getNewId(mr.shaders);
                return mr.shaders[t] = wu.createShader(e1), t;
            }, hn = function(e1) {
                wu.cullFace(e1);
            }, fn = (e1, t)=>{
                for(var r = 0; r < e1; r++){
                    var n = L[t + 4 * r >> 2], o = mr.buffers[n];
                    o && (wu.deleteBuffer(o), o.name = 0, mr.buffers[n] = null, n == wu.currentPixelPackBufferBinding && (wu.currentPixelPackBufferBinding = 0), n == wu.currentPixelUnpackBufferBinding && (wu.currentPixelUnpackBufferBinding = 0));
                }
            }, pn = (e1, t)=>{
                for(var r = 0; r < e1; ++r){
                    var n = L[t + 4 * r >> 2], o = mr.framebuffers[n];
                    o && (wu.deleteFramebuffer(o), o.name = 0, mr.framebuffers[n] = null);
                }
            }, mn = (e1)=>{
                if (e1) {
                    var t = mr.programs[e1];
                    t ? (wu.deleteProgram(t), t.name = 0, mr.programs[e1] = null) : mr.recordError(1281);
                }
            }, gn = (e1, t)=>{
                for(var r = 0; r < e1; r++){
                    var n = L[t + 4 * r >> 2], o = mr.queries[n];
                    o && (wu.deleteQuery(o), mr.queries[n] = null);
                }
            }, vn = (e1, t)=>{
                for(var r = 0; r < e1; r++){
                    var n = L[t + 4 * r >> 2], o = mr.queries[n];
                    o && (wu.disjointTimerQueryExt.deleteQueryEXT(o), mr.queries[n] = null);
                }
            }, yn = (e1, t)=>{
                for(var r = 0; r < e1; r++){
                    var n = L[t + 4 * r >> 2], o = mr.renderbuffers[n];
                    o && (wu.deleteRenderbuffer(o), o.name = 0, mr.renderbuffers[n] = null);
                }
            }, bn = (e1, t)=>{
                for(var r = 0; r < e1; r++){
                    var n = L[t + 4 * r >> 2], o = mr.samplers[n];
                    o && (wu.deleteSampler(o), o.name = 0, mr.samplers[n] = null);
                }
            }, wn = (e1)=>{
                if (e1) {
                    var t = mr.shaders[e1];
                    t ? (wu.deleteShader(t), mr.shaders[e1] = null) : mr.recordError(1281);
                }
            }, _n = (e1)=>{
                if (e1) {
                    var t = mr.syncs[e1];
                    t ? (wu.deleteSync(t), t.name = 0, mr.syncs[e1] = null) : mr.recordError(1281);
                }
            }, En = (e1, t)=>{
                for(var r = 0; r < e1; r++){
                    var n = L[t + 4 * r >> 2], o = mr.textures[n];
                    o && (wu.deleteTexture(o), o.name = 0, mr.textures[n] = null);
                }
            }, Sn = (e1, t)=>{
                for(var r = 0; r < e1; r++){
                    var n = L[t + 4 * r >> 2], o = mr.transformFeedbacks[n];
                    o && (wu.deleteTransformFeedback(o), o.name = 0, mr.transformFeedbacks[n] = null);
                }
            }, Cn = (e1, t)=>{
                for(var r = 0; r < e1; r++){
                    var n = L[t + 4 * r >> 2];
                    wu.deleteVertexArray(mr.vaos[n]), mr.vaos[n] = null;
                }
            }, xn = Cn, kn = Cn, Tn = function(e1) {
                wu.depthFunc(e1);
            }, An = (e1)=>{
                wu.depthMask(!!e1);
            }, Pn = function(e1, t) {
                wu.depthRange(e1, t);
            }, Fn = (e1, t)=>{
                wu.detachShader(mr.programs[e1], mr.shaders[t]);
            }, Ln = function(e1) {
                wu.disable(e1);
            }, Dn = (e1)=>{
                wu.disableVertexAttribArray(e1);
            }, Bn = (e1, t, r)=>{
                wu.drawArrays(e1, t, r);
            }, Rn = (e1, t, r, n)=>{
                wu.drawArraysInstanced(e1, t, r, n);
            }, Mn = Rn, In = Rn, On = Rn, jn = (e1, t, r, n, o)=>{
                wu.dibvbi.drawArraysInstancedBaseInstanceWEBGL(e1, t, r, n, o);
            }, Un = Rn, $n = Rn, qn = [], Hn = (e1, t)=>{
                for(var r = qn[e1], n = 0; n < e1; n++)r[n] = L[t + 4 * n >> 2];
                wu.drawBuffers(r);
            }, Nn = Hn, Vn = Hn, zn = Hn, Wn = (e1, t, r, n)=>{
                wu.drawElements(e1, t, r, n);
            }, Gn = Wn, Xn = (e1, t, r, n, o)=>{
                wu.drawElementsInstanced(e1, t, r, n, o);
            }, Yn = Xn, Kn = Xn, Zn = Xn, Qn = (e1, t, r, n, o, i, a)=>{
                wu.dibvbi.drawElementsInstancedBaseVertexBaseInstanceWEBGL(e1, t, r, n, o, i, a);
            }, Jn = Xn, eo = Xn, to = (e1, t, r, n, o, i)=>{
                Wn(e1, n, o, i);
            }, ro = function(e1) {
                wu.enable(e1);
            }, no = (e1)=>{
                wu.enableVertexAttribArray(e1);
            }, oo = function(e1) {
                wu.endQuery(e1);
            }, io = (e1)=>{
                wu.disjointTimerQueryExt.endQueryEXT(e1);
            }, ao = function() {
                wu.endTransformFeedback();
            }, so = (e1, t)=>{
                var r = wu.fenceSync(e1, t);
                if (r) {
                    var n = mr.getNewId(mr.syncs);
                    return r.name = n, mr.syncs[n] = r, n;
                }
                return 0;
            }, uo = function() {
                wu.finish();
            }, co = function() {
                wu.flush();
            }, lo = (e1, t, r, n)=>{
                wu.framebufferRenderbuffer(e1, t, r, mr.renderbuffers[n]);
            }, ho = (e1, t, r, n, o)=>{
                wu.framebufferTexture2D(e1, t, r, mr.textures[n], o);
            }, fo = (e1, t, r, n, o)=>{
                wu.framebufferTextureLayer(e1, t, mr.textures[r], n, o);
            }, po = function(e1) {
                wu.frontFace(e1);
            }, mo = (e1, t, r, n)=>{
                for(var o = 0; o < e1; o++){
                    var i = wu[r](), a = i && mr.getNewId(n);
                    i ? (i.name = a, n[a] = i) : mr.recordError(1282), L[t + 4 * o >> 2] = a;
                }
            }, go = (e1, t)=>{
                mo(e1, t, "createBuffer", mr.buffers);
            }, vo = (e1, t)=>{
                mo(e1, t, "createFramebuffer", mr.framebuffers);
            }, yo = (e1, t)=>{
                mo(e1, t, "createQuery", mr.queries);
            }, bo = (e1, t)=>{
                for(var r = 0; r < e1; r++){
                    var n = wu.disjointTimerQueryExt.createQueryEXT();
                    if (!n) {
                        for(mr.recordError(1282); r < e1;)L[t + 4 * r++ >> 2] = 0;
                        return;
                    }
                    var o = mr.getNewId(mr.queries);
                    n.name = o, mr.queries[o] = n, L[t + 4 * r >> 2] = o;
                }
            }, wo = (e1, t)=>{
                mo(e1, t, "createRenderbuffer", mr.renderbuffers);
            }, _o = (e1, t)=>{
                mo(e1, t, "createSampler", mr.samplers);
            }, Eo = (e1, t)=>{
                mo(e1, t, "createTexture", mr.textures);
            }, So = (e1, t)=>{
                mo(e1, t, "createTransformFeedback", mr.transformFeedbacks);
            };
            function Co(e1, t) {
                mo(e1, t, "createVertexArray", mr.vaos);
            }
            var xo, ko, To, Ao = Co, Po = Co, Fo = function(e1) {
                wu.generateMipmap(e1);
            }, Lo = (e1, t, r, n, o, i, a, s)=>{
                t = mr.programs[t];
                var u = wu[e1](t, r);
                if (u) {
                    var c = s && $t(u.name, s, n);
                    o && (L[o >> 2] = c), i && (L[i >> 2] = u.size), a && (L[a >> 2] = u.type);
                }
            }, Do = (e1, t, r, n, o, i, a)=>{
                Lo("getActiveAttrib", e1, t, r, n, o, i, a);
            }, Bo = (e1, t, r, n, o, i, a)=>{
                Lo("getActiveUniform", e1, t, r, n, o, i, a);
            }, Ro = (e1, t, r, n, o)=>{
                e1 = mr.programs[e1];
                var i = wu.getActiveUniformBlockName(e1, t);
                if (i) if (o && r > 0) {
                    var a = $t(i, o, r);
                    n && (L[n >> 2] = a);
                } else n && (L[n >> 2] = 0);
            }, Mo = (e1, t, r, n)=>{
                if (n) if (e1 = mr.programs[e1], 35393 != r) {
                    var o = wu.getActiveUniformBlockParameter(e1, t, r);
                    if (null !== o) if (35395 == r) for(var i = 0; i < o.length; i++)L[n + 4 * i >> 2] = o[i];
                    else L[n >> 2] = o;
                } else {
                    var a = wu.getActiveUniformBlockName(e1, t);
                    L[n >> 2] = a.length + 1;
                }
                else mr.recordError(1281);
            }, Io = (e1, t, r, n, o)=>{
                if (o) if (t > 0 && 0 == r) mr.recordError(1281);
                else {
                    e1 = mr.programs[e1];
                    for(var i = [], a = 0; a < t; a++)i.push(L[r + 4 * a >> 2]);
                    var s = wu.getActiveUniforms(e1, i, n);
                    if (s) {
                        var u = s.length;
                        for(a = 0; a < u; a++)L[o + 4 * a >> 2] = s[a];
                    }
                }
                else mr.recordError(1281);
            }, Oo = (e1, t, r, n)=>{
                var o = wu.getAttachedShaders(mr.programs[e1]), i = o.length;
                i > t && (i = t), L[r >> 2] = i;
                for(var a = 0; a < i; ++a){
                    var s = mr.shaders.indexOf(o[a]);
                    L[n + 4 * a >> 2] = s;
                }
            }, jo = (e1, t)=>wu.getAttribLocation(mr.programs[e1], xe(t)), Uo = (e1, t)=>{
                D[e1 >> 2] = t;
                var r = D[e1 >> 2];
                D[e1 + 4 >> 2] = (t - r) / 4294967296;
            }, $o = function() {
                var e1, t = (e1 = [
                    "ANGLE_instanced_arrays",
                    "EXT_blend_minmax",
                    "EXT_disjoint_timer_query",
                    "EXT_frag_depth",
                    "EXT_shader_texture_lod",
                    "EXT_sRGB",
                    "OES_element_index_uint",
                    "OES_fbo_render_mipmap",
                    "OES_standard_derivatives",
                    "OES_texture_float",
                    "OES_texture_half_float",
                    "OES_texture_half_float_linear",
                    "OES_vertex_array_object",
                    "WEBGL_color_buffer_float",
                    "WEBGL_depth_texture",
                    "WEBGL_draw_buffers",
                    "EXT_color_buffer_float",
                    "EXT_disjoint_timer_query_webgl2",
                    "EXT_texture_norm16",
                    "WEBGL_clip_cull_distance",
                    "EXT_color_buffer_half_float",
                    "EXT_float_blend",
                    "EXT_texture_compression_bptc",
                    "EXT_texture_compression_rgtc",
                    "EXT_texture_filter_anisotropic",
                    "KHR_parallel_shader_compile",
                    "OES_texture_float_linear",
                    "WEBGL_compressed_texture_s3tc",
                    "WEBGL_compressed_texture_s3tc_srgb",
                    "WEBGL_debug_renderer_info",
                    "WEBGL_debug_shaders",
                    "WEBGL_lose_context",
                    "WEBGL_multi_draw"
                ], (wu.getSupportedExtensions() || []).filter((t)=>e1.includes(t)));
                return t = t.concat(t.map((e1)=>"GL_" + e1));
            }, qo = (e1, t, r)=>{
                if (t) {
                    var n = void 0;
                    switch(e1){
                        case 36346:
                            n = 1;
                            break;
                        case 36344:
                            return void (0 != r && 1 != r && mr.recordError(1280));
                        case 34814:
                        case 36345:
                            n = 0;
                            break;
                        case 34466:
                            var o = wu.getParameter(34467);
                            n = o ? o.length : 0;
                            break;
                        case 33309:
                            if (mr.currentContext.version < 2) return void mr.recordError(1282);
                            n = $o().length;
                            break;
                        case 33307:
                        case 33308:
                            if (mr.currentContext.version < 2) return void mr.recordError(1280);
                            n = 33307 == e1 ? 3 : 0;
                    }
                    if (void 0 === n) {
                        var i = wu.getParameter(e1);
                        switch(typeof i){
                            case "number":
                                n = i;
                                break;
                            case "boolean":
                                n = i ? 1 : 0;
                                break;
                            case "string":
                                return void mr.recordError(1280);
                            case "object":
                                if (null === i) switch(e1){
                                    case 34964:
                                    case 35725:
                                    case 34965:
                                    case 36006:
                                    case 36007:
                                    case 32873:
                                    case 34229:
                                    case 36662:
                                    case 36663:
                                    case 35053:
                                    case 35055:
                                    case 36010:
                                    case 35097:
                                    case 35869:
                                    case 32874:
                                    case 36389:
                                    case 35983:
                                    case 35368:
                                    case 34068:
                                        n = 0;
                                        break;
                                    default:
                                        return void mr.recordError(1280);
                                }
                                else {
                                    if (i instanceof Float32Array || i instanceof Uint32Array || i instanceof Int32Array || i instanceof Array) {
                                        for(var a = 0; a < i.length; ++a)switch(r){
                                            case 0:
                                                L[t + 4 * a >> 2] = i[a];
                                                break;
                                            case 2:
                                                B[t + 4 * a >> 2] = i[a];
                                                break;
                                            case 4:
                                                T[t + a >> 0] = i[a] ? 1 : 0;
                                        }
                                        return;
                                    }
                                    try {
                                        n = 0 | i.name;
                                    } catch (t) {
                                        return mr.recordError(1280), void x(`GL_INVALID_ENUM in glGet${r}v: Unknown object returned from WebGL getParameter(${e1})! (error: ${t})`);
                                    }
                                }
                                break;
                            default:
                                return mr.recordError(1280), void x(`GL_INVALID_ENUM in glGet${r}v: Native code calling glGet${r}v(${e1}) and it returns ${i} of type ${typeof i}!`);
                        }
                    }
                    switch(r){
                        case 1:
                            Uo(t, n);
                            break;
                        case 0:
                            L[t >> 2] = n;
                            break;
                        case 2:
                            B[t >> 2] = n;
                            break;
                        case 4:
                            T[t >> 0] = n ? 1 : 0;
                    }
                } else mr.recordError(1281);
            }, Ho = (e1, t)=>qo(e1, t, 4), No = (e1, t, r)=>{
                r ? Uo(r, wu.getBufferParameter(e1, t)) : mr.recordError(1281);
            }, Vo = (e1, t, r)=>{
                r ? L[r >> 2] = wu.getBufferParameter(e1, t) : mr.recordError(1281);
            }, zo = ()=>{
                var e1 = wu.getError() || mr.lastError;
                return mr.lastError = 0, e1;
            }, Wo = (e1, t)=>qo(e1, t, 2), Go = (e1, t)=>wu.getFragDataLocation(mr.programs[e1], xe(t)), Xo = (e1, t, r, n)=>{
                var o = wu.getFramebufferAttachmentParameter(e1, t, r);
                (o instanceof WebGLRenderbuffer || o instanceof WebGLTexture) && (o = 0 | o.name), L[n >> 2] = o;
            }, Yo = (e1, t, r, n)=>{
                if (r) {
                    var o, i = wu.getIndexedParameter(e1, t);
                    switch(typeof i){
                        case "boolean":
                            o = i ? 1 : 0;
                            break;
                        case "number":
                            o = i;
                            break;
                        case "object":
                            if (null === i) switch(e1){
                                case 35983:
                                case 35368:
                                    o = 0;
                                    break;
                                default:
                                    return void mr.recordError(1280);
                            }
                            else {
                                if (!(i instanceof WebGLBuffer)) return void mr.recordError(1280);
                                o = 0 | i.name;
                            }
                            break;
                        default:
                            return void mr.recordError(1280);
                    }
                    switch(n){
                        case 1:
                            Uo(r, o);
                            break;
                        case 0:
                            L[r >> 2] = o;
                            break;
                        case 2:
                            B[r >> 2] = o;
                            break;
                        case 4:
                            T[r >> 0] = o ? 1 : 0;
                            break;
                        default:
                            throw "internal emscriptenWebGLGetIndexed() error, bad type: " + n;
                    }
                } else mr.recordError(1281);
            }, Ko = (e1, t, r)=>Yo(e1, t, r, 1), Zo = (e1, t)=>{
                qo(e1, t, 1);
            }, Qo = (e1, t, r)=>Yo(e1, t, r, 0), Jo = (e1, t)=>qo(e1, t, 0), ei = (e1, t, r, n, o)=>{
                if (n < 0) mr.recordError(1281);
                else if (o) {
                    var i = wu.getInternalformatParameter(e1, t, r);
                    if (null !== i) for(var a = 0; a < i.length && a < n; ++a)L[o + 4 * a >> 2] = i[a];
                } else mr.recordError(1281);
            }, ti = (e1, t, r, n, o)=>{
                mr.recordError(1282);
            }, ri = (e1, t, r, n)=>{
                var o = wu.getProgramInfoLog(mr.programs[e1]);
                null === o && (o = "(unknown error)");
                var i = t > 0 && n ? $t(o, n, t) : 0;
                r && (L[r >> 2] = i);
            }, ni = (e1, t, r)=>{
                if (r) if (e1 >= mr.counter) mr.recordError(1281);
                else if (e1 = mr.programs[e1], 35716 == t) {
                    var n = wu.getProgramInfoLog(e1);
                    null === n && (n = "(unknown error)"), L[r >> 2] = n.length + 1;
                } else if (35719 == t) {
                    if (!e1.maxUniformLength) for(var o = 0; o < wu.getProgramParameter(e1, 35718); ++o)e1.maxUniformLength = Math.max(e1.maxUniformLength, wu.getActiveUniform(e1, o).name.length + 1);
                    L[r >> 2] = e1.maxUniformLength;
                } else if (35722 == t) {
                    if (!e1.maxAttributeLength) for(o = 0; o < wu.getProgramParameter(e1, 35721); ++o)e1.maxAttributeLength = Math.max(e1.maxAttributeLength, wu.getActiveAttrib(e1, o).name.length + 1);
                    L[r >> 2] = e1.maxAttributeLength;
                } else if (35381 == t) {
                    if (!e1.maxUniformBlockNameLength) for(o = 0; o < wu.getProgramParameter(e1, 35382); ++o)e1.maxUniformBlockNameLength = Math.max(e1.maxUniformBlockNameLength, wu.getActiveUniformBlockName(e1, o).length + 1);
                    L[r >> 2] = e1.maxUniformBlockNameLength;
                } else L[r >> 2] = wu.getProgramParameter(e1, t);
                else mr.recordError(1281);
            }, oi = (e1, t, r)=>{
                if (r) {
                    var n, o = mr.queries[e1];
                    n = mr.currentContext.version < 2 ? wu.disjointTimerQueryExt.getQueryObjectEXT(o, t) : wu.getQueryParameter(o, t), Uo(r, "boolean" == typeof n ? n ? 1 : 0 : n);
                } else mr.recordError(1281);
            }, ii = oi, ai = (e1, t, r)=>{
                if (r) {
                    var n, o = mr.queries[e1], i = wu.disjointTimerQueryExt.getQueryObjectEXT(o, t);
                    n = "boolean" == typeof i ? i ? 1 : 0 : i, L[r >> 2] = n;
                } else mr.recordError(1281);
            }, si = ai, ui = oi, ci = (e1, t, r)=>{
                if (r) {
                    var n, o = mr.queries[e1], i = wu.getQueryParameter(o, t);
                    n = "boolean" == typeof i ? i ? 1 : 0 : i, L[r >> 2] = n;
                } else mr.recordError(1281);
            }, li = ai, di = (e1, t, r)=>{
                r ? L[r >> 2] = wu.getQuery(e1, t) : mr.recordError(1281);
            }, hi = (e1, t, r)=>{
                r ? L[r >> 2] = wu.disjointTimerQueryExt.getQueryEXT(e1, t) : mr.recordError(1281);
            }, fi = (e1, t, r)=>{
                r ? L[r >> 2] = wu.getRenderbufferParameter(e1, t) : mr.recordError(1281);
            }, pi = (e1, t, r)=>{
                r ? B[r >> 2] = wu.getSamplerParameter(mr.samplers[e1], t) : mr.recordError(1281);
            }, mi = (e1, t, r)=>{
                r ? L[r >> 2] = wu.getSamplerParameter(mr.samplers[e1], t) : mr.recordError(1281);
            }, gi = (e1, t, r, n)=>{
                var o = wu.getShaderInfoLog(mr.shaders[e1]);
                null === o && (o = "(unknown error)");
                var i = t > 0 && n ? $t(o, n, t) : 0;
                r && (L[r >> 2] = i);
            }, vi = (e1, t, r, n)=>{
                var o = wu.getShaderPrecisionFormat(e1, t);
                L[r >> 2] = o.rangeMin, L[r + 4 >> 2] = o.rangeMax, L[n >> 2] = o.precision;
            }, yi = (e1, t, r, n)=>{
                var o = wu.getShaderSource(mr.shaders[e1]);
                if (o) {
                    var i = t > 0 && n ? $t(o, n, t) : 0;
                    r && (L[r >> 2] = i);
                }
            }, bi = (e1, t, r)=>{
                if (r) if (35716 == t) {
                    var n = wu.getShaderInfoLog(mr.shaders[e1]);
                    null === n && (n = "(unknown error)");
                    var o = n ? n.length + 1 : 0;
                    L[r >> 2] = o;
                } else if (35720 == t) {
                    var i = wu.getShaderSource(mr.shaders[e1]), a = i ? i.length + 1 : 0;
                    L[r >> 2] = a;
                } else L[r >> 2] = wu.getShaderParameter(mr.shaders[e1], t);
                else mr.recordError(1281);
            }, wi = (e1)=>{
                var t = mr.stringCache[e1];
                if (!t) {
                    switch(e1){
                        case 7939:
                            t = ir($o().join(" "));
                            break;
                        case 7936:
                        case 7937:
                        case 37445:
                        case 37446:
                            var r = wu.getParameter(e1);
                            r || mr.recordError(1280), t = r ? ir(r) : 0;
                            break;
                        case 7938:
                            var n = wu.getParameter(7938);
                            n = mr.currentContext.version >= 2 ? `OpenGL ES 3.0 (${n})` : `OpenGL ES 2.0 (${n})`, t = ir(n);
                            break;
                        case 35724:
                            var o = wu.getParameter(35724), i = o.match(/^WebGL GLSL ES ([0-9]\.[0-9][0-9]?)(?:$| .*)/);
                            null !== i && (3 == i[1].length && (i[1] = i[1] + "0"), o = `OpenGL ES GLSL ES ${i[1]} (${o})`), t = ir(o);
                            break;
                        default:
                            mr.recordError(1280);
                    }
                    mr.stringCache[e1] = t;
                }
                return t;
            }, _i = (e1, t)=>{
                if (mr.currentContext.version < 2) return mr.recordError(1282), 0;
                var r = mr.stringiCache[e1];
                if (r) return t < 0 || t >= r.length ? (mr.recordError(1281), 0) : r[t];
                if (7939 === e1) {
                    var n = $o().map(ir);
                    return r = mr.stringiCache[e1] = n, t < 0 || t >= r.length ? (mr.recordError(1281), 0) : r[t];
                }
                return mr.recordError(1280), 0;
            }, Ei = (e1, t, r, n, o)=>{
                if (r < 0) mr.recordError(1281);
                else if (o) {
                    var i = wu.getSyncParameter(mr.syncs[e1], t);
                    null !== i && (L[o >> 2] = i, n && (L[n >> 2] = 1));
                } else mr.recordError(1281);
            }, Si = (e1, t, r)=>{
                r ? B[r >> 2] = wu.getTexParameter(e1, t) : mr.recordError(1281);
            }, Ci = (e1, t, r)=>{
                r ? L[r >> 2] = wu.getTexParameter(e1, t) : mr.recordError(1281);
            }, xi = (e1, t, r, n, o, i, a)=>{
                e1 = mr.programs[e1];
                var s = wu.getTransformFeedbackVarying(e1, t);
                if (s) {
                    if (a && r > 0) {
                        var u = $t(s.name, a, r);
                        n && (L[n >> 2] = u);
                    } else n && (L[n >> 2] = 0);
                    o && (L[o >> 2] = s.size), i && (L[i >> 2] = s.type);
                }
            }, ki = (e1, t)=>wu.getUniformBlockIndex(mr.programs[e1], xe(t)), Ti = (e1, t, r, n)=>{
                if (n) if (t > 0 && (0 == r || 0 == n)) mr.recordError(1281);
                else {
                    e1 = mr.programs[e1];
                    for(var o = [], i = 0; i < t; i++)o.push(xe(L[r + 4 * i >> 2]));
                    var a = wu.getUniformIndices(e1, o);
                    if (a) {
                        var s = a.length;
                        for(i = 0; i < s; i++)L[n + 4 * i >> 2] = a[i];
                    }
                }
                else mr.recordError(1281);
            }, Ai = (e1)=>"]" == e1.slice(-1) && e1.lastIndexOf("["), Pi = (e1)=>{
                var t, r, n = e1.uniformLocsById, o = e1.uniformSizeAndIdsByName;
                if (!n) for(e1.uniformLocsById = n = {}, e1.uniformArrayNamesById = {}, t = 0; t < wu.getProgramParameter(e1, 35718); ++t){
                    var i = wu.getActiveUniform(e1, t), a = i.name, s = i.size, u = Ai(a), c = u > 0 ? a.slice(0, u) : a, l = e1.uniformIdCounter;
                    for(e1.uniformIdCounter += s, o[c] = [
                        s,
                        l
                    ], r = 0; r < s; ++r)n[l] = r, e1.uniformArrayNamesById[l++] = c;
                }
            }, Fi = (e1, t)=>{
                if (t = xe(t), e1 = mr.programs[e1]) {
                    Pi(e1);
                    var r = e1.uniformLocsById, n = 0, o = t, i = Ai(t);
                    i > 0 && (s = t.slice(i + 1), n = parseInt(s) >>> 0, o = t.slice(0, i));
                    var a = e1.uniformSizeAndIdsByName[o];
                    if (a && n < a[0] && (r[n += a[1]] = r[n] || wu.getUniformLocation(e1, t))) return n;
                } else mr.recordError(1281);
                var s;
                return -1;
            }, Li = (e1)=>{
                var t = wu.currentProgram;
                if (t) {
                    var r = t.uniformLocsById[e1];
                    return "number" == typeof r && (t.uniformLocsById[e1] = r = wu.getUniformLocation(t, t.uniformArrayNamesById[e1] + (r > 0 ? `[${r}]` : ""))), r;
                }
                mr.recordError(1282);
            }, Di = (e1, t, r, n)=>{
                if (r) {
                    e1 = mr.programs[e1], Pi(e1);
                    var o = wu.getUniform(e1, Li(t));
                    if ("number" == typeof o || "boolean" == typeof o) switch(n){
                        case 0:
                            L[r >> 2] = o;
                            break;
                        case 2:
                            B[r >> 2] = o;
                    }
                    else for(var i = 0; i < o.length; i++)switch(n){
                        case 0:
                            L[r + 4 * i >> 2] = o[i];
                            break;
                        case 2:
                            B[r + 4 * i >> 2] = o[i];
                    }
                } else mr.recordError(1281);
            }, Bi = (e1, t, r)=>{
                Di(e1, t, r, 2);
            }, Ri = (e1, t, r)=>{
                Di(e1, t, r, 0);
            }, Mi = (e1, t, r)=>Di(e1, t, r, 0), Ii = (e1, t, r, n)=>{
                if (r) {
                    var o = wu.getVertexAttrib(e1, t);
                    if (34975 == t) L[r >> 2] = o && o.name;
                    else if ("number" == typeof o || "boolean" == typeof o) switch(n){
                        case 0:
                            L[r >> 2] = o;
                            break;
                        case 2:
                            B[r >> 2] = o;
                            break;
                        case 5:
                            L[r >> 2] = Math.fround(o);
                    }
                    else for(var i = 0; i < o.length; i++)switch(n){
                        case 0:
                            L[r + 4 * i >> 2] = o[i];
                            break;
                        case 2:
                            B[r + 4 * i >> 2] = o[i];
                            break;
                        case 5:
                            L[r + 4 * i >> 2] = Math.fround(o[i]);
                    }
                } else mr.recordError(1281);
            }, Oi = (e1, t, r)=>{
                Ii(e1, t, r, 0);
            }, ji = Oi, Ui = Oi, $i = (e1, t, r)=>{
                r ? L[r >> 2] = wu.getVertexAttribOffset(e1, t) : mr.recordError(1281);
            }, qi = (e1, t, r)=>{
                Ii(e1, t, r, 2);
            }, Hi = (e1, t, r)=>{
                Ii(e1, t, r, 5);
            }, Ni = function(e1, t) {
                wu.hint(e1, t);
            }, Vi = (e1, t, r)=>{
                for(var n = qn[t], o = 0; o < t; o++)n[o] = L[r + 4 * o >> 2];
                wu.invalidateFramebuffer(e1, n);
            }, zi = (e1, t, r, n, o, i, a)=>{
                for(var s = qn[t], u = 0; u < t; u++)s[u] = L[r + 4 * u >> 2];
                wu.invalidateSubFramebuffer(e1, s, n, o, i, a);
            }, Wi = (e1)=>{
                var t = mr.buffers[e1];
                return t ? wu.isBuffer(t) : 0;
            }, Gi = function(e1) {
                return wu.isEnabled(e1);
            }, Xi = (e1)=>{
                var t = mr.framebuffers[e1];
                return t ? wu.isFramebuffer(t) : 0;
            }, Yi = (e1)=>(e1 = mr.programs[e1]) ? wu.isProgram(e1) : 0, Ki = (e1)=>{
                var t = mr.queries[e1];
                return t ? wu.isQuery(t) : 0;
            }, Zi = (e1)=>{
                var t = mr.queries[e1];
                return t ? wu.disjointTimerQueryExt.isQueryEXT(t) : 0;
            }, Qi = (e1)=>{
                var t = mr.renderbuffers[e1];
                return t ? wu.isRenderbuffer(t) : 0;
            }, Ji = (e1)=>{
                var t = mr.samplers[e1];
                return t ? wu.isSampler(t) : 0;
            }, ea = (e1)=>{
                var t = mr.shaders[e1];
                return t ? wu.isShader(t) : 0;
            }, ta = (e1)=>wu.isSync(mr.syncs[e1]), ra = (e1)=>{
                var t = mr.textures[e1];
                return t ? wu.isTexture(t) : 0;
            }, na = (e1)=>wu.isTransformFeedback(mr.transformFeedbacks[e1]), oa = (e1)=>{
                var t = mr.vaos[e1];
                return t ? wu.isVertexArray(t) : 0;
            }, ia = oa, aa = oa, sa = function(e1) {
                wu.lineWidth(e1);
            }, ua = (e1)=>{
                e1 = mr.programs[e1], wu.linkProgram(e1), e1.uniformLocsById = 0, e1.uniformSizeAndIdsByName = {};
            }, ca = (e1, t, r, n, o, i)=>{
                wu.mdibvbi.multiDrawArraysInstancedBaseInstanceWEBGL(e1, L, t >> 2, L, r >> 2, L, n >> 2, D, o >> 2, i);
            }, la = (e1, t, r, n, o, i, a, s)=>{
                wu.mdibvbi.multiDrawElementsInstancedBaseVertexBaseInstanceWEBGL(e1, L, t >> 2, r, L, n >> 2, L, o >> 2, L, i >> 2, D, a >> 2, s);
            }, da = function() {
                wu.pauseTransformFeedback();
            }, ha = (e1, t)=>{
                3317 == e1 && (mr.unpackAlignment = t), wu.pixelStorei(e1, t);
            }, fa = function(e1, t) {
                wu.polygonOffset(e1, t);
            }, pa = (e1, t, r, n)=>{
                mr.recordError(1280);
            }, ma = (e1, t, r)=>{
                mr.recordError(1280);
            }, ga = (e1, t)=>{
                wu.disjointTimerQueryExt.queryCounterEXT(mr.queries[e1], t);
            }, va = function(e1) {
                wu.readBuffer(e1);
            }, ya = (e1)=>0 == (e1 -= 5120) ? T : 1 == e1 ? A : 2 == e1 ? P : 4 == e1 ? L : 6 == e1 ? B : 5 == e1 || 28922 == e1 || 28520 == e1 || 30779 == e1 || 30782 == e1 ? D : F, ba = (e1)=>31 - Math.clz32(e1.BYTES_PER_ELEMENT), wa = (e1, t, r, n, o, i)=>{
                var a = ya(e1), s = ba(a), u = 1 << s, c = ((e1)=>({
                        5: 3,
                        6: 4,
                        8: 2,
                        29502: 3,
                        29504: 4,
                        26917: 2,
                        26918: 2,
                        29846: 3,
                        29847: 4
                    })[e1 - 6402] || 1)(t) * u, l = ((e1, t, r, n)=>{
                    var o;
                    return t * (e1 * r + (o = n) - 1 & -o);
                })(r, n, c, mr.unpackAlignment);
                return a.subarray(o >> s, o + l >> s);
            }, _a = (e1, t, r, n, o, i, a)=>{
                if (mr.currentContext.version >= 2) if (wu.currentPixelPackBufferBinding) wu.readPixels(e1, t, r, n, o, i, a);
                else {
                    var s = ya(i);
                    wu.readPixels(e1, t, r, n, o, i, s, a >> ba(s));
                }
                else {
                    var u = wa(i, o, r, n, a);
                    u ? wu.readPixels(e1, t, r, n, o, i, u) : mr.recordError(1280);
                }
            }, Ea = ()=>{}, Sa = function(e1, t, r, n) {
                wu.renderbufferStorage(e1, t, r, n);
            }, Ca = function(e1, t, r, n, o) {
                wu.renderbufferStorageMultisample(e1, t, r, n, o);
            }, xa = function() {
                wu.resumeTransformFeedback();
            }, ka = (e1, t)=>{
                wu.sampleCoverage(e1, !!t);
            }, Ta = (e1, t, r)=>{
                wu.samplerParameterf(mr.samplers[e1], t, r);
            }, Aa = (e1, t, r)=>{
                var n = B[r >> 2];
                wu.samplerParameterf(mr.samplers[e1], t, n);
            }, Pa = (e1, t, r)=>{
                wu.samplerParameteri(mr.samplers[e1], t, r);
            }, Fa = (e1, t, r)=>{
                var n = L[r >> 2];
                wu.samplerParameteri(mr.samplers[e1], t, n);
            }, La = function(e1, t, r, n) {
                wu.scissor(e1, t, r, n);
            }, Da = (e1, t, r, n, o)=>{
                mr.recordError(1280);
            }, Ba = (e1, t, r, n)=>{
                var o = mr.getSource(e1, t, r, n);
                if (mr.currentContext.version >= 2 && o.includes("#version 100")) {
                    var i = "";
                    (o = (o = o.replace(/#extension GL_OES_standard_derivatives : enable/g, "")).replace(/#extension GL_EXT_shader_texture_lod : enable/g, "")).includes("gl_FragColor") && (i += "out mediump vec4 GL_FragColor;\n", o = o.replace(/gl_FragColor/g, "GL_FragColor")), o = (o = (o = (o = (o = (o = (o = (o = (o = (o = (o = (o = o.includes("attribute") ? (o = o.replace(/attribute/g, "in")).replace(/varying/g, "out") : o.replace(/varying/g, "in")).replace(/textureCubeLodEXT/g, "textureCubeLod")).replace(/texture2DLodEXT/g, "texture2DLod")).replace(/texture2DProjLodEXT/g, "texture2DProjLod")).replace(/texture2DGradEXT/g, "texture2DGrad")).replace(/texture2DProjGradEXT/g, "texture2DProjGrad")).replace(/textureCubeGradEXT/g, "textureCubeGrad")).replace(/textureCube/g, "texture")).replace(/texture1D/g, "texture")).replace(/texture2D/g, "texture")).replace(/texture3D/g, "texture")).replace(/#version 100/g, "#version 300 es\n" + i);
                }
                wu.shaderSource(mr.shaders[e1], o);
            }, Ra = function(e1, t, r) {
                wu.stencilFunc(e1, t, r);
            }, Ma = function(e1, t, r, n) {
                wu.stencilFuncSeparate(e1, t, r, n);
            }, Ia = function(e1) {
                wu.stencilMask(e1);
            }, Oa = function(e1, t) {
                wu.stencilMaskSeparate(e1, t);
            }, ja = function(e1, t, r) {
                wu.stencilOp(e1, t, r);
            }, Ua = function(e1, t, r, n) {
                wu.stencilOpSeparate(e1, t, r, n);
            }, $a = (e1, t, r, n, o, i, a, s, u)=>{
                if (mr.currentContext.version >= 2 && (6402 == a && 6402 == r && 5125 == s && (r = 33190), 36193 == s && (s = 5131, 6408 == a && 6408 == r && (r = 34842)), 34041 == r && (r = 35056)), mr.currentContext.version >= 2) if (wu.currentPixelUnpackBufferBinding) wu.texImage2D(e1, t, r, n, o, i, a, s, u);
                else if (u) {
                    var c = ya(s);
                    wu.texImage2D(e1, t, r, n, o, i, a, s, c, u >> ba(c));
                } else wu.texImage2D(e1, t, r, n, o, i, a, s, null);
                else wu.texImage2D(e1, t, r, n, o, i, a, s, u ? wa(s, a, n, o, u) : null);
            }, qa = (e1, t, r, n, o, i, a, s, u, c)=>{
                if (wu.currentPixelUnpackBufferBinding) wu.texImage3D(e1, t, r, n, o, i, a, s, u, c);
                else if (c) {
                    var l = ya(u);
                    wu.texImage3D(e1, t, r, n, o, i, a, s, u, l, c >> ba(l));
                } else wu.texImage3D(e1, t, r, n, o, i, a, s, u, null);
            }, Ha = function(e1, t, r) {
                wu.texParameterf(e1, t, r);
            }, Na = (e1, t, r)=>{
                var n = B[r >> 2];
                wu.texParameterf(e1, t, n);
            }, Va = function(e1, t, r) {
                wu.texParameteri(e1, t, r);
            }, za = (e1, t, r)=>{
                var n = L[r >> 2];
                wu.texParameteri(e1, t, n);
            }, Wa = function(e1, t, r, n, o) {
                wu.texStorage2D(e1, t, r, n, o);
            }, Ga = function(e1, t, r, n, o, i) {
                wu.texStorage3D(e1, t, r, n, o, i);
            }, Xa = (e1, t, r, n, o, i, a, s, u)=>{
                if (mr.currentContext.version >= 2 && 36193 == s && (s = 5131), mr.currentContext.version >= 2) if (wu.currentPixelUnpackBufferBinding) wu.texSubImage2D(e1, t, r, n, o, i, a, s, u);
                else if (u) {
                    var c = ya(s);
                    wu.texSubImage2D(e1, t, r, n, o, i, a, s, c, u >> ba(c));
                } else wu.texSubImage2D(e1, t, r, n, o, i, a, s, null);
                else {
                    var l = null;
                    u && (l = wa(s, a, o, i, u)), wu.texSubImage2D(e1, t, r, n, o, i, a, s, l);
                }
            }, Ya = (e1, t, r, n, o, i, a, s, u, c, l)=>{
                if (wu.currentPixelUnpackBufferBinding) wu.texSubImage3D(e1, t, r, n, o, i, a, s, u, c, l);
                else if (l) {
                    var d = ya(c);
                    wu.texSubImage3D(e1, t, r, n, o, i, a, s, u, c, d, l >> ba(d));
                } else wu.texSubImage3D(e1, t, r, n, o, i, a, s, u, c, null);
            }, Ka = (e1, t, r, n)=>{
                e1 = mr.programs[e1];
                for(var o = [], i = 0; i < t; i++)o.push(xe(L[r + 4 * i >> 2]));
                wu.transformFeedbackVaryings(e1, o, n);
            }, Za = (e1, t)=>{
                wu.uniform1f(Li(e1), t);
            }, Qa = [], Ja = (e1, t, r)=>{
                if (mr.currentContext.version >= 2) t && wu.uniform1fv(Li(e1), B, r >> 2, t);
                else {
                    if (t <= 288) for(var n = Qa[t - 1], o = 0; o < t; ++o)n[o] = B[r + 4 * o >> 2];
                    else n = B.subarray(r >> 2, r + 4 * t >> 2);
                    wu.uniform1fv(Li(e1), n);
                }
            }, es = (e1, t)=>{
                wu.uniform1i(Li(e1), t);
            }, ts = [], rs = (e1, t, r)=>{
                if (mr.currentContext.version >= 2) t && wu.uniform1iv(Li(e1), L, r >> 2, t);
                else {
                    if (t <= 288) for(var n = ts[t - 1], o = 0; o < t; ++o)n[o] = L[r + 4 * o >> 2];
                    else n = L.subarray(r >> 2, r + 4 * t >> 2);
                    wu.uniform1iv(Li(e1), n);
                }
            }, ns = (e1, t)=>{
                wu.uniform1ui(Li(e1), t);
            }, os = (e1, t, r)=>{
                t && wu.uniform1uiv(Li(e1), D, r >> 2, t);
            }, is = (e1, t, r)=>{
                wu.uniform2f(Li(e1), t, r);
            }, as = (e1, t, r)=>{
                if (mr.currentContext.version >= 2) t && wu.uniform2fv(Li(e1), B, r >> 2, 2 * t);
                else {
                    if (t <= 144) for(var n = Qa[2 * t - 1], o = 0; o < 2 * t; o += 2)n[o] = B[r + 4 * o >> 2], n[o + 1] = B[r + (4 * o + 4) >> 2];
                    else n = B.subarray(r >> 2, r + 8 * t >> 2);
                    wu.uniform2fv(Li(e1), n);
                }
            }, ss = (e1, t, r)=>{
                wu.uniform2i(Li(e1), t, r);
            }, us = (e1, t, r)=>{
                if (mr.currentContext.version >= 2) t && wu.uniform2iv(Li(e1), L, r >> 2, 2 * t);
                else {
                    if (t <= 144) for(var n = ts[2 * t - 1], o = 0; o < 2 * t; o += 2)n[o] = L[r + 4 * o >> 2], n[o + 1] = L[r + (4 * o + 4) >> 2];
                    else n = L.subarray(r >> 2, r + 8 * t >> 2);
                    wu.uniform2iv(Li(e1), n);
                }
            }, cs = (e1, t, r)=>{
                wu.uniform2ui(Li(e1), t, r);
            }, ls = (e1, t, r)=>{
                t && wu.uniform2uiv(Li(e1), D, r >> 2, 2 * t);
            }, ds = (e1, t, r, n)=>{
                wu.uniform3f(Li(e1), t, r, n);
            }, hs = (e1, t, r)=>{
                if (mr.currentContext.version >= 2) t && wu.uniform3fv(Li(e1), B, r >> 2, 3 * t);
                else {
                    if (t <= 96) for(var n = Qa[3 * t - 1], o = 0; o < 3 * t; o += 3)n[o] = B[r + 4 * o >> 2], n[o + 1] = B[r + (4 * o + 4) >> 2], n[o + 2] = B[r + (4 * o + 8) >> 2];
                    else n = B.subarray(r >> 2, r + 12 * t >> 2);
                    wu.uniform3fv(Li(e1), n);
                }
            }, fs = (e1, t, r, n)=>{
                wu.uniform3i(Li(e1), t, r, n);
            }, ps = (e1, t, r)=>{
                if (mr.currentContext.version >= 2) t && wu.uniform3iv(Li(e1), L, r >> 2, 3 * t);
                else {
                    if (t <= 96) for(var n = ts[3 * t - 1], o = 0; o < 3 * t; o += 3)n[o] = L[r + 4 * o >> 2], n[o + 1] = L[r + (4 * o + 4) >> 2], n[o + 2] = L[r + (4 * o + 8) >> 2];
                    else n = L.subarray(r >> 2, r + 12 * t >> 2);
                    wu.uniform3iv(Li(e1), n);
                }
            }, ms = (e1, t, r, n)=>{
                wu.uniform3ui(Li(e1), t, r, n);
            }, gs = (e1, t, r)=>{
                t && wu.uniform3uiv(Li(e1), D, r >> 2, 3 * t);
            }, vs = (e1, t, r, n, o)=>{
                wu.uniform4f(Li(e1), t, r, n, o);
            }, ys = (e1, t, r)=>{
                if (mr.currentContext.version >= 2) t && wu.uniform4fv(Li(e1), B, r >> 2, 4 * t);
                else {
                    if (t <= 72) {
                        var n = Qa[4 * t - 1], o = B;
                        r >>= 2;
                        for(var i = 0; i < 4 * t; i += 4){
                            var a = r + i;
                            n[i] = o[a], n[i + 1] = o[a + 1], n[i + 2] = o[a + 2], n[i + 3] = o[a + 3];
                        }
                    } else n = B.subarray(r >> 2, r + 16 * t >> 2);
                    wu.uniform4fv(Li(e1), n);
                }
            }, bs = (e1, t, r, n, o)=>{
                wu.uniform4i(Li(e1), t, r, n, o);
            }, ws = (e1, t, r)=>{
                if (mr.currentContext.version >= 2) t && wu.uniform4iv(Li(e1), L, r >> 2, 4 * t);
                else {
                    if (t <= 72) for(var n = ts[4 * t - 1], o = 0; o < 4 * t; o += 4)n[o] = L[r + 4 * o >> 2], n[o + 1] = L[r + (4 * o + 4) >> 2], n[o + 2] = L[r + (4 * o + 8) >> 2], n[o + 3] = L[r + (4 * o + 12) >> 2];
                    else n = L.subarray(r >> 2, r + 16 * t >> 2);
                    wu.uniform4iv(Li(e1), n);
                }
            }, _s = (e1, t, r, n, o)=>{
                wu.uniform4ui(Li(e1), t, r, n, o);
            }, Es = (e1, t, r)=>{
                t && wu.uniform4uiv(Li(e1), D, r >> 2, 4 * t);
            }, Ss = (e1, t, r)=>{
                e1 = mr.programs[e1], wu.uniformBlockBinding(e1, t, r);
            }, Cs = (e1, t, r, n)=>{
                if (mr.currentContext.version >= 2) t && wu.uniformMatrix2fv(Li(e1), !!r, B, n >> 2, 4 * t);
                else {
                    if (t <= 72) for(var o = Qa[4 * t - 1], i = 0; i < 4 * t; i += 4)o[i] = B[n + 4 * i >> 2], o[i + 1] = B[n + (4 * i + 4) >> 2], o[i + 2] = B[n + (4 * i + 8) >> 2], o[i + 3] = B[n + (4 * i + 12) >> 2];
                    else o = B.subarray(n >> 2, n + 16 * t >> 2);
                    wu.uniformMatrix2fv(Li(e1), !!r, o);
                }
            }, xs = (e1, t, r, n)=>{
                t && wu.uniformMatrix2x3fv(Li(e1), !!r, B, n >> 2, 6 * t);
            }, ks = (e1, t, r, n)=>{
                t && wu.uniformMatrix2x4fv(Li(e1), !!r, B, n >> 2, 8 * t);
            }, Ts = (e1, t, r, n)=>{
                if (mr.currentContext.version >= 2) t && wu.uniformMatrix3fv(Li(e1), !!r, B, n >> 2, 9 * t);
                else {
                    if (t <= 32) for(var o = Qa[9 * t - 1], i = 0; i < 9 * t; i += 9)o[i] = B[n + 4 * i >> 2], o[i + 1] = B[n + (4 * i + 4) >> 2], o[i + 2] = B[n + (4 * i + 8) >> 2], o[i + 3] = B[n + (4 * i + 12) >> 2], o[i + 4] = B[n + (4 * i + 16) >> 2], o[i + 5] = B[n + (4 * i + 20) >> 2], o[i + 6] = B[n + (4 * i + 24) >> 2], o[i + 7] = B[n + (4 * i + 28) >> 2], o[i + 8] = B[n + (4 * i + 32) >> 2];
                    else o = B.subarray(n >> 2, n + 36 * t >> 2);
                    wu.uniformMatrix3fv(Li(e1), !!r, o);
                }
            }, As = (e1, t, r, n)=>{
                t && wu.uniformMatrix3x2fv(Li(e1), !!r, B, n >> 2, 6 * t);
            }, Ps = (e1, t, r, n)=>{
                t && wu.uniformMatrix3x4fv(Li(e1), !!r, B, n >> 2, 12 * t);
            }, Fs = (e1, t, r, n)=>{
                if (mr.currentContext.version >= 2) t && wu.uniformMatrix4fv(Li(e1), !!r, B, n >> 2, 16 * t);
                else {
                    if (t <= 18) {
                        var o = Qa[16 * t - 1], i = B;
                        n >>= 2;
                        for(var a = 0; a < 16 * t; a += 16){
                            var s = n + a;
                            o[a] = i[s], o[a + 1] = i[s + 1], o[a + 2] = i[s + 2], o[a + 3] = i[s + 3], o[a + 4] = i[s + 4], o[a + 5] = i[s + 5], o[a + 6] = i[s + 6], o[a + 7] = i[s + 7], o[a + 8] = i[s + 8], o[a + 9] = i[s + 9], o[a + 10] = i[s + 10], o[a + 11] = i[s + 11], o[a + 12] = i[s + 12], o[a + 13] = i[s + 13], o[a + 14] = i[s + 14], o[a + 15] = i[s + 15];
                        }
                    } else o = B.subarray(n >> 2, n + 64 * t >> 2);
                    wu.uniformMatrix4fv(Li(e1), !!r, o);
                }
            }, Ls = (e1, t, r, n)=>{
                t && wu.uniformMatrix4x2fv(Li(e1), !!r, B, n >> 2, 8 * t);
            }, Ds = (e1, t, r, n)=>{
                t && wu.uniformMatrix4x3fv(Li(e1), !!r, B, n >> 2, 12 * t);
            }, Bs = (e1)=>{
                e1 = mr.programs[e1], wu.useProgram(e1), wu.currentProgram = e1;
            }, Rs = (e1)=>{
                wu.validateProgram(mr.programs[e1]);
            }, Ms = function(e1, t) {
                wu.vertexAttrib1f(e1, t);
            }, Is = (e1, t)=>{
                wu.vertexAttrib1f(e1, B[t >> 2]);
            }, Os = function(e1, t, r) {
                wu.vertexAttrib2f(e1, t, r);
            }, js = (e1, t)=>{
                wu.vertexAttrib2f(e1, B[t >> 2], B[t + 4 >> 2]);
            }, Us = function(e1, t, r, n) {
                wu.vertexAttrib3f(e1, t, r, n);
            }, $s = (e1, t)=>{
                wu.vertexAttrib3f(e1, B[t >> 2], B[t + 4 >> 2], B[t + 8 >> 2]);
            }, qs = function(e1, t, r, n, o) {
                wu.vertexAttrib4f(e1, t, r, n, o);
            }, Hs = (e1, t)=>{
                wu.vertexAttrib4f(e1, B[t >> 2], B[t + 4 >> 2], B[t + 8 >> 2], B[t + 12 >> 2]);
            }, Ns = (e1, t)=>{
                wu.vertexAttribDivisor(e1, t);
            }, Vs = Ns, zs = Ns, Ws = Ns, Gs = Ns, Xs = Ns, Ys = function(e1, t, r, n, o) {
                wu.vertexAttribI4i(e1, t, r, n, o);
            }, Ks = (e1, t)=>{
                wu.vertexAttribI4i(e1, L[t >> 2], L[t + 4 >> 2], L[t + 8 >> 2], L[t + 12 >> 2]);
            }, Zs = function(e1, t, r, n, o) {
                wu.vertexAttribI4ui(e1, t, r, n, o);
            }, Qs = (e1, t)=>{
                wu.vertexAttribI4ui(e1, D[t >> 2], D[t + 4 >> 2], D[t + 8 >> 2], D[t + 12 >> 2]);
            }, Js = (e1, t, r, n, o)=>{
                wu.vertexAttribIPointer(e1, t, r, n, o);
            }, eu = (e1, t, r, n, o, i)=>{
                wu.vertexAttribPointer(e1, t, r, !!n, o, i);
            }, tu = function(e1, t, r, n) {
                wu.viewport(e1, t, r, n);
            }, ru = (e1, t, r)=>{
                r = Number(r), wu.waitSync(mr.syncs[e1], t, r);
            }, nu = (e1)=>{
                var t = (e1 - S.buffer.byteLength + 65535) / 65536;
                try {
                    return S.grow(t), U(), 1;
                } catch (e1) {}
            }, ou = {
                removeAllEventListeners () {
                    for(; ou.eventHandlers.length;)ou._removeHandler(ou.eventHandlers.length - 1);
                    ou.deferredCalls = [];
                },
                inEventHandler: 0,
                deferredCalls: [],
                deferCall (e1, t, r) {
                    function n(e1, t) {
                        if (e1.length != t.length) return !1;
                        for(var r in e1)if (e1[r] != t[r]) return !1;
                        return !0;
                    }
                    for(var o in ou.deferredCalls){
                        var i = ou.deferredCalls[o];
                        if (i.targetFunction == e1 && n(i.argsList, r)) return;
                    }
                    ou.deferredCalls.push({
                        targetFunction: e1,
                        precedence: t,
                        argsList: r
                    }), ou.deferredCalls.sort((e1, t)=>e1.precedence < t.precedence);
                },
                removeDeferredCalls (e1) {
                    for(var t = 0; t < ou.deferredCalls.length; ++t)ou.deferredCalls[t].targetFunction == e1 && (ou.deferredCalls.splice(t, 1), --t);
                },
                canPerformEventHandlerRequests: ()=>navigator.userActivation ? navigator.userActivation.isActive : ou.inEventHandler && ou.currentEventHandler.allowsDeferredCalls,
                runDeferredCalls () {
                    if (ou.canPerformEventHandlerRequests()) for(var e1 = 0; e1 < ou.deferredCalls.length; ++e1){
                        var t = ou.deferredCalls[e1];
                        ou.deferredCalls.splice(e1, 1), --e1, t.targetFunction.apply(null, t.argsList);
                    }
                },
                eventHandlers: [],
                removeAllHandlersOnTarget: (e1, t)=>{
                    for(var r = 0; r < ou.eventHandlers.length; ++r)ou.eventHandlers[r].target != e1 || t && t != ou.eventHandlers[r].eventTypeString || ou._removeHandler(r--);
                },
                _removeHandler (e1) {
                    var t = ou.eventHandlers[e1];
                    t.target.removeEventListener(t.eventTypeString, t.eventListenerFunc, t.useCapture), ou.eventHandlers.splice(e1, 1);
                },
                registerOrRemoveHandler (e1) {
                    if (!e1.target) return -4;
                    if (e1.callbackfunc) e1.eventListenerFunc = function(t) {
                        ++ou.inEventHandler, ou.currentEventHandler = e1, ou.runDeferredCalls(), e1.handlerFunc(t), ou.runDeferredCalls(), --ou.inEventHandler;
                    }, e1.target.addEventListener(e1.eventTypeString, e1.eventListenerFunc, e1.useCapture), ou.eventHandlers.push(e1);
                    else for(var t = 0; t < ou.eventHandlers.length; ++t)ou.eventHandlers[t].target == e1.target && ou.eventHandlers[t].eventTypeString == e1.eventTypeString && ou._removeHandler(t--);
                    return 0;
                },
                getNodeNameForTarget: (e1)=>e1 ? e1 == window ? "#window" : e1 == screen ? "#screen" : e1?.nodeName || "" : "",
                fullscreenEnabled: ()=>document.fullscreenEnabled || document.webkitFullscreenEnabled
            }, iu = [
                "default",
                "low-power",
                "high-performance"
            ], au = [
                0,
                "undefined" != typeof document ? document : 0,
                "undefined" != typeof window ? window : 0
            ], su = (e1)=>{
                var t;
                return e1 = (t = e1) > 2 ? xe(t) : t, au[e1] || ("undefined" != typeof document ? document.querySelector(e1) : void 0);
            }, uu = (e1, t)=>{
                var r = t >> 2, n = L[r + 6], o = {
                    alpha: !!L[r + 0],
                    depth: !!L[r + 1],
                    stencil: !!L[r + 2],
                    antialias: !!L[r + 3],
                    premultipliedAlpha: !!L[r + 4],
                    preserveDrawingBuffer: !!L[r + 5],
                    powerPreference: iu[n],
                    failIfMajorPerformanceCaveat: !!L[r + 7],
                    majorVersion: L[r + 8],
                    minorVersion: L[r + 9],
                    enableExtensionsByDefault: L[r + 10],
                    explicitSwapControl: L[r + 11],
                    proxyContextToMainThread: L[r + 12],
                    renderViaOffscreenBackBuffer: L[r + 13]
                }, i = su(e1);
                return i ? o.explicitSwapControl ? 0 : mr.createContext(i, o) : 0;
            }, cu = {}, lu = ()=>{
                if (!lu.strings) {
                    var e1 = {
                        USER: "web_user",
                        LOGNAME: "web_user",
                        PATH: "/",
                        PWD: "/",
                        HOME: "/home/web_user",
                        LANG: ("object" == typeof navigator && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8",
                        _: p || "./this.program"
                    };
                    for(var t in cu)void 0 === cu[t] ? delete e1[t] : e1[t] = cu[t];
                    var r = [];
                    for(var t in e1)r.push(`${t}=${e1[t]}`);
                    lu.strings = r;
                }
                return lu.strings;
            }, du = (e1, t, r, n)=>{
                for(var o = 0, i = 0; i < r; i++){
                    var a = D[t >> 2], s = D[t + 4 >> 2];
                    t += 8;
                    var u = Ce.read(e1, T, a, s, n);
                    if (u < 0) return -1;
                    if (o += u, u < s) break;
                    void 0 !== n && (n += u);
                }
                return o;
            }, hu = [
                31,
                29,
                31,
                30,
                31,
                30,
                31,
                31,
                30,
                31,
                30,
                31
            ], fu = [
                31,
                28,
                31,
                30,
                31,
                30,
                31,
                31,
                30,
                31,
                30,
                31
            ], pu = (e1, t)=>{
                T.set(e1, t);
            }, mu = (e1, t, r, n)=>{
                var o = D[n + 40 >> 2], i = {
                    tm_sec: L[n >> 2],
                    tm_min: L[n + 4 >> 2],
                    tm_hour: L[n + 8 >> 2],
                    tm_mday: L[n + 12 >> 2],
                    tm_mon: L[n + 16 >> 2],
                    tm_year: L[n + 20 >> 2],
                    tm_wday: L[n + 24 >> 2],
                    tm_yday: L[n + 28 >> 2],
                    tm_isdst: L[n + 32 >> 2],
                    tm_gmtoff: L[n + 36 >> 2],
                    tm_zone: o ? xe(o) : ""
                }, a = xe(r), s = {
                    "%c": "%a %b %d %H:%M:%S %Y",
                    "%D": "%m/%d/%y",
                    "%F": "%Y-%m-%d",
                    "%h": "%b",
                    "%r": "%I:%M:%S %p",
                    "%R": "%H:%M",
                    "%T": "%H:%M:%S",
                    "%x": "%m/%d/%y",
                    "%X": "%H:%M:%S",
                    "%Ec": "%c",
                    "%EC": "%C",
                    "%Ex": "%m/%d/%y",
                    "%EX": "%H:%M:%S",
                    "%Ey": "%y",
                    "%EY": "%Y",
                    "%Od": "%d",
                    "%Oe": "%e",
                    "%OH": "%H",
                    "%OI": "%I",
                    "%Om": "%m",
                    "%OM": "%M",
                    "%OS": "%S",
                    "%Ou": "%u",
                    "%OU": "%U",
                    "%OV": "%V",
                    "%Ow": "%w",
                    "%OW": "%W",
                    "%Oy": "%y"
                };
                for(var u in s)a = a.replace(new RegExp(u, "g"), s[u]);
                var c = [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday"
                ], l = [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                ];
                function d(e1, t, r) {
                    for(var n = "number" == typeof e1 ? e1.toString() : e1 || ""; n.length < t;)n = r[0] + n;
                    return n;
                }
                function h(e1, t) {
                    return d(e1, t, "0");
                }
                function f(e1, t) {
                    function r(e1) {
                        return e1 < 0 ? -1 : e1 > 0 ? 1 : 0;
                    }
                    var n;
                    return 0 === (n = r(e1.getFullYear() - t.getFullYear())) && 0 === (n = r(e1.getMonth() - t.getMonth())) && (n = r(e1.getDate() - t.getDate())), n;
                }
                function p(e1) {
                    switch(e1.getDay()){
                        case 0:
                            return new Date(e1.getFullYear() - 1, 11, 29);
                        case 1:
                            return e1;
                        case 2:
                            return new Date(e1.getFullYear(), 0, 3);
                        case 3:
                            return new Date(e1.getFullYear(), 0, 2);
                        case 4:
                            return new Date(e1.getFullYear(), 0, 1);
                        case 5:
                            return new Date(e1.getFullYear() - 1, 11, 31);
                        case 6:
                            return new Date(e1.getFullYear() - 1, 11, 30);
                    }
                }
                function m(e1) {
                    var t = ((e1, t)=>{
                        for(var r = new Date(e1.getTime()); t > 0;){
                            var n = tr(r.getFullYear()), o = r.getMonth(), i = (n ? hu : fu)[o];
                            if (!(t > i - r.getDate())) return r.setDate(r.getDate() + t), r;
                            t -= i - r.getDate() + 1, r.setDate(1), o < 11 ? r.setMonth(o + 1) : (r.setMonth(0), r.setFullYear(r.getFullYear() + 1));
                        }
                        return r;
                    })(new Date(e1.tm_year + 1900, 0, 1), e1.tm_yday), r = new Date(t.getFullYear(), 0, 4), n = new Date(t.getFullYear() + 1, 0, 4), o = p(r), i = p(n);
                    return f(o, t) <= 0 ? f(i, t) <= 0 ? t.getFullYear() + 1 : t.getFullYear() : t.getFullYear() - 1;
                }
                var g = {
                    "%a": (e1)=>c[e1.tm_wday].substring(0, 3),
                    "%A": (e1)=>c[e1.tm_wday],
                    "%b": (e1)=>l[e1.tm_mon].substring(0, 3),
                    "%B": (e1)=>l[e1.tm_mon],
                    "%C": (e1)=>h((e1.tm_year + 1900) / 100 | 0, 2),
                    "%d": (e1)=>h(e1.tm_mday, 2),
                    "%e": (e1)=>d(e1.tm_mday, 2, " "),
                    "%g": (e1)=>m(e1).toString().substring(2),
                    "%G": m,
                    "%H": (e1)=>h(e1.tm_hour, 2),
                    "%I": (e1)=>{
                        var t = e1.tm_hour;
                        return 0 == t ? t = 12 : t > 12 && (t -= 12), h(t, 2);
                    },
                    "%j": (e1)=>h(e1.tm_mday + ((e1, t)=>{
                            for(var r = 0, n = 0; n <= t; r += e1[n++]);
                            return r;
                        })(tr(e1.tm_year + 1900) ? hu : fu, e1.tm_mon - 1), 3),
                    "%m": (e1)=>h(e1.tm_mon + 1, 2),
                    "%M": (e1)=>h(e1.tm_min, 2),
                    "%n": ()=>"\n",
                    "%p": (e1)=>e1.tm_hour >= 0 && e1.tm_hour < 12 ? "AM" : "PM",
                    "%S": (e1)=>h(e1.tm_sec, 2),
                    "%t": ()=>"\t",
                    "%u": (e1)=>e1.tm_wday || 7,
                    "%U": (e1)=>{
                        var t = e1.tm_yday + 7 - e1.tm_wday;
                        return h(Math.floor(t / 7), 2);
                    },
                    "%V": (e1)=>{
                        var t = Math.floor((e1.tm_yday + 7 - (e1.tm_wday + 6) % 7) / 7);
                        if ((e1.tm_wday + 371 - e1.tm_yday - 2) % 7 <= 2 && t++, t) {
                            if (53 == t) {
                                var r = (e1.tm_wday + 371 - e1.tm_yday) % 7;
                                4 == r || 3 == r && tr(e1.tm_year) || (t = 1);
                            }
                        } else {
                            t = 52;
                            var n = (e1.tm_wday + 7 - e1.tm_yday - 1) % 7;
                            (4 == n || 5 == n && tr(e1.tm_year % 400 - 1)) && t++;
                        }
                        return h(t, 2);
                    },
                    "%w": (e1)=>e1.tm_wday,
                    "%W": (e1)=>{
                        var t = e1.tm_yday + 7 - (e1.tm_wday + 6) % 7;
                        return h(Math.floor(t / 7), 2);
                    },
                    "%y": (e1)=>(e1.tm_year + 1900).toString().substring(2),
                    "%Y": (e1)=>e1.tm_year + 1900,
                    "%z": (e1)=>{
                        var t = e1.tm_gmtoff, r = t >= 0;
                        return t = (t = Math.abs(t) / 60) / 60 * 100 + t % 60, (r ? "+" : "-") + String("0000" + t).slice(-4);
                    },
                    "%Z": (e1)=>e1.tm_zone,
                    "%%": ()=>"%"
                };
                for(var u in a = a.replace(/%%/g, "\0\0"), g)a.includes(u) && (a = a.replace(new RegExp(u, "g"), g[u](i)));
                var v = ye(a = a.replace(/\0\0/g, "%"), !1);
                return v.length > t ? 0 : (pu(v, e1), v.length - 1);
            }, gu = (e1)=>{
                var t = ge(e1) + 1, r = $u(t);
                return $t(e1, r, t), r;
            }, vu = function(e1, t, r, n) {
                e1 || (e1 = this), this.parent = e1, this.mount = e1.mount, this.mounted = null, this.id = Ce.nextInode++, this.name = t, this.mode = r, this.node_ops = {}, this.stream_ops = {}, this.rdev = n;
            }, yu = 365, bu = 146;
            Object.defineProperties(vu.prototype, {
                read: {
                    get: function() {
                        return (this.mode & yu) === yu;
                    },
                    set: function(e1) {
                        e1 ? this.mode |= yu : this.mode &= -366;
                    }
                },
                write: {
                    get: function() {
                        return (this.mode & bu) === bu;
                    },
                    set: function(e1) {
                        e1 ? this.mode |= bu : this.mode &= -147;
                    }
                },
                isFolder: {
                    get: function() {
                        return Ce.isDir(this.mode);
                    }
                },
                isDevice: {
                    get: function() {
                        return Ce.isChrdev(this.mode);
                    }
                }
            }), Ce.FSNode = vu, Ce.createPreloadedFile = (e1, t, r, n, o, i, a, s, u, c)=>{
                var d = t ? he.resolve(le.join2(e1, t)) : e1;
                function h(r) {
                    function l(r) {
                        c?.(), s || ((e1, t, r, n, o, i)=>{
                            Ce.createDataFile(e1, t, r, n, o, i);
                        })(e1, t, r, n, o, u), i?.(), Y();
                    }
                    ((e1, t, r, n)=>{
                        void 0 !== fr && fr.init();
                        var o = !1;
                        return Ee.forEach((i)=>{
                            o || i.canHandle(t) && (i.handle(e1, t, r, n), o = !0);
                        }), o;
                    })(r, d, l, ()=>{
                        a?.(), Y();
                    }) || l(r);
                }
                X(), "string" == typeof r ? ((e1, t, r, n)=>{
                    var o = n ? "" : `al ${e1}`;
                    l(e1, (e1)=>{
                        t(new Uint8Array(e1)), o && Y();
                    }, (t)=>{
                        if (!r) throw `Loading data file "${e1}" failed.`;
                        r();
                    }), o && X();
                })(r, h, a) : h(r);
            }, Ce.staticInit(), u.FS_createPath = Ce.createPath, u.FS_createDataFile = Ce.createDataFile, u.FS_createPreloadedFile = Ce.createPreloadedFile, u.FS_unlink = Ce.unlink, u.FS_createLazyFile = Ce.createLazyFile, u.FS_createDevice = Ce.createDevice, Fe = u.InternalError = class InternalError extends Error {
                constructor(e1){
                    super(e1), this.name = "InternalError";
                }
            }, (()=>{
                for(var e1 = new Array(256), t = 0; t < 256; ++t)e1[t] = String.fromCharCode(t);
                Le = e1;
            })(), De = u.BindingError = class BindingError extends Error {
                constructor(e1){
                    super(e1), this.name = "BindingError";
                }
            }, Object.assign(ut.prototype, {
                isAliasOf (e1) {
                    if (!(this instanceof ut)) return !1;
                    if (!(e1 instanceof ut)) return !1;
                    var t = this.$$.ptrType.registeredClass, r = this.$$.ptr;
                    e1.$$ = e1.$$;
                    for(var n = e1.$$.ptrType.registeredClass, o = e1.$$.ptr; t.baseClass;)r = t.upcast(r), t = t.baseClass;
                    for(; n.baseClass;)o = n.upcast(o), n = n.baseClass;
                    return t === n && r === o;
                },
                clone () {
                    if (this.$$.ptr || We(this), this.$$.preservePointerOnDelete) return this.$$.count.value += 1, this;
                    var e1, t = st(Object.create(Object.getPrototypeOf(this), {
                        $$: {
                            value: (e1 = this.$$, {
                                count: e1.count,
                                deleteScheduled: e1.deleteScheduled,
                                preservePointerOnDelete: e1.preservePointerOnDelete,
                                ptr: e1.ptr,
                                ptrType: e1.ptrType,
                                smartPtr: e1.smartPtr,
                                smartPtrType: e1.smartPtrType
                            })
                        }
                    }));
                    return t.$$.count.value += 1, t.$$.deleteScheduled = !1, t;
                },
                delete () {
                    this.$$.ptr || We(this), this.$$.deleteScheduled && !this.$$.preservePointerOnDelete && qe("Object already scheduled for deletion"), Xe(this), Ye(this.$$), this.$$.preservePointerOnDelete || (this.$$.smartPtr = void 0, this.$$.ptr = void 0);
                },
                isDeleted () {
                    return !this.$$.ptr;
                },
                deleteLater () {
                    return this.$$.ptr || We(this), this.$$.deleteScheduled && !this.$$.preservePointerOnDelete && qe("Object already scheduled for deletion"), et.push(this), 1 === et.length && Ne && Ne(tt), this.$$.deleteScheduled = !0, this;
                }
            }), u.getInheritedInstanceCount = Qe, u.getLiveInheritedInstances = Je, u.flushPendingDeletes = tt, u.setDelayFunction = rt, Object.assign(yt.prototype, {
                getPointee (e1) {
                    return this.rawGetPointee && (e1 = this.rawGetPointee(e1)), e1;
                },
                destructor (e1) {
                    this.rawDestructor?.(e1);
                },
                argPackAdvance: ze,
                readValueFromPointer: vt,
                fromWireType: at
            }), _t = u.UnboundTypeError = (xo = Error, (To = ct(ko = "UnboundTypeError", function(e1) {
                this.name = ko, this.message = e1;
                var t = new Error(e1).stack;
                void 0 !== t && (this.stack = this.toString() + "\n" + t.replace(/^Error(:[^\n]*)?\n/, ""));
            })).prototype = Object.create(xo.prototype), To.prototype.constructor = To, To.prototype.toString = function() {
                return void 0 === this.message ? this.name : `${this.name}: ${this.message}`;
            }, To), Dt.allocated.push({
                value: void 0
            }, {
                value: null
            }, {
                value: !0
            }, {
                value: !1
            }), Object.assign(Dt, {
                reserved: Dt.allocated.length
            }), u.count_emval_handles = Rt, u.requestFullscreen = fr.requestFullscreen, u.requestAnimationFrame = fr.requestAnimationFrame, u.setCanvasSize = fr.setCanvasSize, u.pauseMainLoop = fr.mainLoop.pause, u.resumeMainLoop = fr.mainLoop.resume, u.getUserMedia = fr.getUserMedia, u.createContext = fr.createContext;
            for(var wu, _u = {}, Eu = {}, Su = 0; Su < 32; ++Su)qn.push(new Array(Su));
            var Cu = new Float32Array(288);
            for(Su = 0; Su < 288; ++Su)Qa[Su] = Cu.subarray(0, Su + 1);
            var xu = new Int32Array(288);
            for(Su = 0; Su < 288; ++Su)ts[Su] = xu.subarray(0, Su + 1);
            var ku, Tu = {
                Va: (e1)=>{
                    var t = new ExceptionInfo(e1);
                    return t.get_caught() || t.set_caught(!0), t.set_rethrown(!1), se.push(t), Hu(t.excPtr), t.get_exception_ptr();
                },
                Ua: ()=>{
                    Ou(0, 0);
                    var e1 = se.pop();
                    qu(e1.excPtr), ue = 0;
                },
                o: ()=>ce([]),
                da: (e1)=>ce([
                        e1
                    ]),
                l: (e1, t, r)=>{
                    throw new ExceptionInfo(e1).init(t, r), ue = e1;
                },
                O: (e1)=>{
                    throw ue || (ue = e1), ue;
                },
                Ob: function(e1, t) {
                    try {
                        return e1 = ke.getStr(e1), Ce.chmod(e1, t), 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                Pb: function(e1, t) {
                    try {
                        return Ce.fchmod(e1, t), 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                ka: function(e1, t, r) {
                    ke.varargs = r;
                    try {
                        var n = ke.getStreamFromFD(e1);
                        switch(t){
                            case 0:
                                if ((o = ke.get()) < 0) return -28;
                                for(; Ce.streams[o];)o++;
                                return Ce.createStream(n, o).fd;
                            case 1:
                            case 2:
                            case 13:
                            case 14:
                                return 0;
                            case 3:
                                return n.flags;
                            case 4:
                                var o = ke.get();
                                return n.flags |= o, 0;
                            case 12:
                                return o = ke.getp(), P[o + 0 >> 1] = 2, 0;
                        }
                        return -28;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                Mb: function(e1, t) {
                    try {
                        var r = ke.getStreamFromFD(e1);
                        return ke.doStat(Ce.stat, r.path, t);
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                Sb: function(e1, t, r) {
                    ke.varargs = r;
                    try {
                        var n = ke.getStreamFromFD(e1);
                        switch(t){
                            case 21509:
                            case 21510:
                            case 21511:
                            case 21512:
                            case 21524:
                            case 21515:
                                return n.tty ? 0 : -59;
                            case 21505:
                                if (!n.tty) return -59;
                                if (n.tty.ops.ioctl_tcgets) {
                                    var o = n.tty.ops.ioctl_tcgets(n), i = ke.getp();
                                    L[i >> 2] = o.c_iflag || 0, L[i + 4 >> 2] = o.c_oflag || 0, L[i + 8 >> 2] = o.c_cflag || 0, L[i + 12 >> 2] = o.c_lflag || 0;
                                    for(var a = 0; a < 32; a++)T[i + a + 17 >> 0] = o.c_cc[a] || 0;
                                    return 0;
                                }
                                return 0;
                            case 21506:
                            case 21507:
                            case 21508:
                                if (!n.tty) return -59;
                                if (n.tty.ops.ioctl_tcsets) {
                                    i = ke.getp();
                                    var s = L[i >> 2], u = L[i + 4 >> 2], c = L[i + 8 >> 2], l = L[i + 12 >> 2], d = [];
                                    for(a = 0; a < 32; a++)d.push(T[i + a + 17 >> 0]);
                                    return n.tty.ops.ioctl_tcsets(n.tty, t, {
                                        c_iflag: s,
                                        c_oflag: u,
                                        c_cflag: c,
                                        c_lflag: l,
                                        c_cc: d
                                    });
                                }
                                return 0;
                            case 21519:
                                return n.tty ? (i = ke.getp(), L[i >> 2] = 0, 0) : -59;
                            case 21520:
                                return n.tty ? -28 : -59;
                            case 21531:
                                return i = ke.getp(), Ce.ioctl(n, t, i);
                            case 21523:
                                if (!n.tty) return -59;
                                if (n.tty.ops.ioctl_tiocgwinsz) {
                                    var h = n.tty.ops.ioctl_tiocgwinsz(n.tty);
                                    i = ke.getp(), P[i >> 1] = h[0], P[i + 2 >> 1] = h[1];
                                }
                                return 0;
                            default:
                                return -28;
                        }
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                Kb: function(e1, t) {
                    try {
                        return e1 = ke.getStr(e1), ke.doStat(Ce.lstat, e1, t);
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                Jb: function(e1, t, r, n) {
                    try {
                        t = ke.getStr(t);
                        var o = 256 & n, i = 4096 & n;
                        return n &= -6401, t = ke.calculateAt(e1, t, i), ke.doStat(o ? Ce.lstat : Ce.stat, t, r);
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                ya: function(e1, t, r, n) {
                    ke.varargs = n;
                    try {
                        t = ke.getStr(t), t = ke.calculateAt(e1, t);
                        var o = n ? ke.get() : 0;
                        return Ce.open(t, r, o).fd;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                xb: function(e1, t, r, n) {
                    try {
                        return t = ke.getStr(t), n = ke.getStr(n), t = ke.calculateAt(e1, t), n = ke.calculateAt(r, n), Ce.rename(t, n), 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                yb: function(e1) {
                    try {
                        return e1 = ke.getStr(e1), Ce.rmdir(e1), 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                Lb: function(e1, t) {
                    try {
                        return e1 = ke.getStr(e1), ke.doStat(Ce.stat, e1, t);
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                zb: function(e1, t, r) {
                    try {
                        return t = ke.getStr(t), t = ke.calculateAt(e1, t), 0 === r ? Ce.unlink(t) : 512 === r ? Ce.rmdir(t) : K("Invalid flags passed to unlinkat"), 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                Fa: (e1)=>{
                    var t = Te[e1];
                    delete Te[e1];
                    var r = t.elements, n = r.length, o = r.map((e1)=>e1.getterReturnType).concat(r.map((e1)=>e1.setterArgumentType)), i = t.rawConstructor, a = t.rawDestructor;
                    Oe([
                        e1
                    ], o, function(e1) {
                        return r.forEach((t, r)=>{
                            var o = e1[r], i = t.getter, a = t.getterContext, s = e1[r + n], u = t.setter, c = t.setterContext;
                            t.read = (e1)=>o.fromWireType(i(a, e1)), t.write = (e1, t)=>{
                                var r = [];
                                u(c, e1, s.toWireType(r, t)), Ae(r);
                            };
                        }), [
                            {
                                name: t.name,
                                fromWireType: (e1)=>{
                                    for(var t = new Array(n), o = 0; o < n; ++o)t[o] = r[o].read(e1);
                                    return a(e1), t;
                                },
                                toWireType: (e1, o)=>{
                                    if (n !== o.length) throw new TypeError(`Incorrect number of tuple elements for ${t.name}: expected=${n}, actual=${o.length}`);
                                    for(var s = i(), u = 0; u < n; ++u)r[u].write(s, o[u]);
                                    return null !== e1 && e1.push(a, s), s;
                                },
                                argPackAdvance: ze,
                                readValueFromPointer: Pe,
                                destructorFunction: a
                            }
                        ];
                    });
                },
                A: (e1)=>{
                    var t = je[e1];
                    delete je[e1];
                    var r = t.rawConstructor, n = t.rawDestructor, o = t.fields, i = o.map((e1)=>e1.getterReturnType).concat(o.map((e1)=>e1.setterArgumentType));
                    Oe([
                        e1
                    ], i, (e1)=>{
                        var i = {};
                        return o.forEach((t, r)=>{
                            var n = t.fieldName, a = e1[r], s = t.getter, u = t.getterContext, c = e1[r + o.length], l = t.setter, d = t.setterContext;
                            i[n] = {
                                read: (e1)=>a.fromWireType(s(u, e1)),
                                write: (e1, t)=>{
                                    var r = [];
                                    l(d, e1, c.toWireType(r, t)), Ae(r);
                                }
                            };
                        }), [
                            {
                                name: t.name,
                                fromWireType: (e1)=>{
                                    var t = {};
                                    for(var r in i)t[r] = i[r].read(e1);
                                    return n(e1), t;
                                },
                                toWireType: (e1, t)=>{
                                    for(var o in i)if (!(o in t)) throw new TypeError(`Missing field: "${o}"`);
                                    var a = r();
                                    for(o in i)i[o].write(a, t[o]);
                                    return null !== e1 && e1.push(n, a), a;
                                },
                                argPackAdvance: ze,
                                readValueFromPointer: Pe,
                                destructorFunction: n
                            }
                        ];
                    });
                },
                Ia: (e1, t, r, n, o)=>{
                    var i = -1 != (t = $e(t)).indexOf("u");
                    He(e1, {
                        name: t,
                        fromWireType: (e1)=>e1,
                        toWireType: function(e1, t) {
                            if ("bigint" != typeof t && "number" != typeof t) throw new TypeError(`Cannot convert "${Ue(t)}" to ${this.name}`);
                            return "number" == typeof t && (t = BigInt(t)), t;
                        },
                        argPackAdvance: ze,
                        readValueFromPointer: Ve(t, r, !i),
                        destructorFunction: null
                    });
                },
                xe: (e1, t, r, n)=>{
                    He(e1, {
                        name: t = $e(t),
                        fromWireType: function(e1) {
                            return !!e1;
                        },
                        toWireType: function(e1, t) {
                            return t ? r : n;
                        },
                        argPackAdvance: ze,
                        readValueFromPointer: function(e1) {
                            return this.fromWireType(A[e1]);
                        },
                        destructorFunction: null
                    });
                },
                u: (e1, t, r, n, o, i, a, s, u, c, l, d, h)=>{
                    l = $e(l), i = xt(o, i), s &&= xt(a, s), c &&= xt(u, c), h = xt(d, h);
                    var f = ((e1)=>{
                        if (void 0 === e1) return "_unknown";
                        var t = (e1 = e1.replace(/[^a-zA-Z0-9_]/g, "$")).charCodeAt(0);
                        return t >= 48 && t <= 57 ? `_${e1}` : e1;
                    })(l);
                    dt(f, function() {
                        Tt(`Cannot construct ${l} due to unbound types`, [
                            n
                        ]);
                    }), Oe([
                        e1,
                        t,
                        r
                    ], n ? [
                        n
                    ] : [], function(t) {
                        var r, o;
                        t = t[0], o = n ? (r = t.registeredClass).instancePrototype : ut.prototype;
                        var a = ct(l, function() {
                            if (Object.getPrototypeOf(this) !== u) throw new De("Use 'new' to construct " + l);
                            if (void 0 === d.constructor_body) throw new De(l + " has no accessible constructor");
                            var e1 = d.constructor_body[arguments.length];
                            if (void 0 === e1) throw new De(`Tried to invoke ctor of ${l} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(d.constructor_body).toString()}) parameters instead!`);
                            return e1.apply(this, arguments);
                        }), u = Object.create(o, {
                            constructor: {
                                value: a
                            }
                        });
                        a.prototype = u;
                        var d = new ht(l, a, u, h, r, i, s, c);
                        d.baseClass && (d.baseClass.__derivedClasses ??= [], d.baseClass.__derivedClasses.push(d));
                        var p = new yt(l, d, !0, !1, !1), m = new yt(l + "*", d, !1, !1, !1), g = new yt(l + " const*", d, !1, !0, !1);
                        return Ze[e1] = {
                            pointerType: m,
                            constPointerType: g
                        }, Et(f, a), [
                            p,
                            m,
                            g
                        ];
                    });
                },
                x: (e1, t, r, n, o, i)=>{
                    var a = At(t, r);
                    o = xt(n, o), Oe([], [
                        e1
                    ], function(e1) {
                        var r = `constructor ${(e1 = e1[0]).name}`;
                        if (void 0 === e1.registeredClass.constructor_body && (e1.registeredClass.constructor_body = []), void 0 !== e1.registeredClass.constructor_body[t - 1]) throw new De(`Cannot register multiple constructors with identical number of parameters (${t - 1}) for class '${e1.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);
                        return e1.registeredClass.constructor_body[t - 1] = ()=>{
                            Tt(`Cannot construct ${e1.name} due to unbound types`, a);
                        }, Oe([], a, (n)=>(n.splice(1, 0, null), e1.registeredClass.constructor_body[t - 1] = Pt(r, n, null, o, i), [])), [];
                    });
                },
                d: (e1, t, r, n, o, i, a, s, u)=>{
                    var c = At(r, n);
                    t = $e(t), t = Lt(t), i = xt(o, i), Oe([], [
                        e1
                    ], function(e1) {
                        var n = `${(e1 = e1[0]).name}.${t}`;
                        function o() {
                            Tt(`Cannot call ${n} due to unbound types`, c);
                        }
                        t.startsWith("@@") && (t = Symbol[t.substring(2)]), s && e1.registeredClass.pureVirtualFunctions.push(t);
                        var u = e1.registeredClass.instancePrototype, l = u[t];
                        return void 0 === l || void 0 === l.overloadTable && l.className !== e1.name && l.argCount === r - 2 ? (o.argCount = r - 2, o.className = e1.name, u[t] = o) : (lt(u, t, n), u[t].overloadTable[r - 2] = o), Oe([], c, function(o) {
                            var s = Pt(n, o, e1, i, a);
                            return void 0 === u[t].overloadTable ? (s.argCount = r - 2, u[t] = s) : u[t].overloadTable[r - 2] = s, [];
                        }), [];
                    });
                },
                ve: (e1)=>He(e1, It),
                ca: (e1, t, r, n)=>{
                    function o() {}
                    t = $e(t), o.values = {}, He(e1, {
                        name: t,
                        constructor: o,
                        fromWireType: function(e1) {
                            return this.constructor.values[e1];
                        },
                        toWireType: (e1, t)=>t.value,
                        argPackAdvance: ze,
                        readValueFromPointer: Ot(t, r, n),
                        destructorFunction: null
                    }), dt(t, o);
                },
                I: (e1, t, r)=>{
                    var n = jt(e1, "enum");
                    t = $e(t);
                    var o = n.constructor, i = Object.create(n.constructor.prototype, {
                        value: {
                            value: r
                        },
                        constructor: {
                            value: ct(`${n.name}_${t}`, function() {})
                        }
                    });
                    o.values[r] = i, o[t] = i;
                },
                Ha: (e1, t, r)=>{
                    He(e1, {
                        name: t = $e(t),
                        fromWireType: (e1)=>e1,
                        toWireType: (e1, t)=>t,
                        argPackAdvance: ze,
                        readValueFromPointer: Ut(t, r),
                        destructorFunction: null
                    });
                },
                L: (e1, t, r, n, o, i, a)=>{
                    var s = At(t, r);
                    e1 = $e(e1), e1 = Lt(e1), o = xt(n, o), dt(e1, function() {
                        Tt(`Cannot call ${e1} due to unbound types`, s);
                    }, t - 1), Oe([], s, function(r) {
                        var n = [
                            r[0],
                            null
                        ].concat(r.slice(1));
                        return Et(e1, Pt(e1, n, null, o, i), t - 1), [];
                    });
                },
                Q: (e1, t, r, n, o)=>{
                    t = $e(t), -1 === o && (o = 4294967295);
                    var i = (e1)=>e1;
                    if (0 === n) {
                        var a = 32 - 8 * r;
                        i = (e1)=>e1 << a >>> a;
                    }
                    var s = t.includes("unsigned");
                    He(e1, {
                        name: t,
                        fromWireType: i,
                        toWireType: s ? function(e1, t) {
                            return this.name, t >>> 0;
                        } : function(e1, t) {
                            return this.name, t;
                        },
                        argPackAdvance: ze,
                        readValueFromPointer: Ve(t, r, 0 !== n),
                        destructorFunction: null
                    });
                },
                E: (e1, t, r)=>{
                    var n = [
                        Int8Array,
                        Uint8Array,
                        Int16Array,
                        Uint16Array,
                        Int32Array,
                        Uint32Array,
                        Float32Array,
                        Float64Array,
                        BigInt64Array,
                        BigUint64Array
                    ][t];
                    function o(e1) {
                        var t = D[e1 >> 2], r = D[e1 + 4 >> 2];
                        return new n(T.buffer, r, t);
                    }
                    He(e1, {
                        name: r = $e(r),
                        fromWireType: o,
                        argPackAdvance: ze,
                        readValueFromPointer: o
                    }, {
                        ignoreDuplicateRegistrations: !0
                    });
                },
                pf: (e1, t, r, n, o, i, a, s, u, c, l, d)=>{
                    r = $e(r), i = xt(o, i), s = xt(a, s), c = xt(u, c), d = xt(l, d), Oe([
                        e1
                    ], [
                        t
                    ], function(e1) {
                        return e1 = e1[0], [
                            new yt(r, e1.registeredClass, !1, !1, !0, e1, n, i, s, c, d)
                        ];
                    });
                },
                Ja: (e1, t)=>{
                    var r = "std::string" === (t = $e(t));
                    He(e1, {
                        name: t,
                        fromWireType (e1) {
                            var t, n = D[e1 >> 2], o = e1 + 4;
                            if (r) for(var i = o, a = 0; a <= n; ++a){
                                var s = o + a;
                                if (a == n || 0 == A[s]) {
                                    var u = xe(i, s - i);
                                    void 0 === t ? t = u : (t += String.fromCharCode(0), t += u), i = s + 1;
                                }
                            }
                            else {
                                var c = new Array(n);
                                for(a = 0; a < n; ++a)c[a] = String.fromCharCode(A[o + a]);
                                t = c.join("");
                            }
                            return Lu(e1), t;
                        },
                        toWireType (e1, t) {
                            var n;
                            t instanceof ArrayBuffer && (t = new Uint8Array(t));
                            var o = "string" == typeof t;
                            o || t instanceof Uint8Array || t instanceof Uint8ClampedArray || t instanceof Int8Array || qe("Cannot pass non-string to std::string"), n = r && o ? ge(t) : t.length;
                            var i = Pu(4 + n + 1), a = i + 4;
                            if (D[i >> 2] = n, r && o) $t(t, a, n + 1);
                            else if (o) for(var s = 0; s < n; ++s){
                                var u = t.charCodeAt(s);
                                u > 255 && (Lu(a), qe("String has UTF-16 code units that do not fit in 8 bits")), A[a + s] = u;
                            }
                            else for(s = 0; s < n; ++s)A[a + s] = t[s];
                            return null !== e1 && e1.push(Lu, i), i;
                        },
                        argPackAdvance: ze,
                        readValueFromPointer: vt,
                        destructorFunction (e1) {
                            Lu(e1);
                        }
                    });
                },
                ma: (e1, t, r)=>{
                    var n, o, i, a, s;
                    r = $e(r), 2 === t ? (n = Ht, o = Nt, a = Vt, i = ()=>F, s = 1) : 4 === t && (n = zt, o = Wt, a = Gt, i = ()=>D, s = 2), He(e1, {
                        name: r,
                        fromWireType: (e1)=>{
                            for(var r, o = D[e1 >> 2], a = i(), u = e1 + 4, c = 0; c <= o; ++c){
                                var l = e1 + 4 + c * t;
                                if (c == o || 0 == a[l >> s]) {
                                    var d = n(u, l - u);
                                    void 0 === r ? r = d : (r += String.fromCharCode(0), r += d), u = l + t;
                                }
                            }
                            return Lu(e1), r;
                        },
                        toWireType: (e1, n)=>{
                            "string" != typeof n && qe(`Cannot pass non-string to C++ string type ${r}`);
                            var i = a(n), u = Pu(4 + i + t);
                            return D[u >> 2] = i >> s, o(n, u + 4, i + t), null !== e1 && e1.push(Lu, u), u;
                        },
                        argPackAdvance: ze,
                        readValueFromPointer: Pe,
                        destructorFunction (e1) {
                            Lu(e1);
                        }
                    });
                },
                Ga: (e1, t, r, n, o, i)=>{
                    Te[e1] = {
                        name: $e(t),
                        rawConstructor: xt(r, n),
                        rawDestructor: xt(o, i),
                        elements: []
                    };
                },
                P: (e1, t, r, n, o, i, a, s, u)=>{
                    Te[e1].elements.push({
                        getterReturnType: t,
                        getter: xt(r, n),
                        getterContext: o,
                        setterArgumentType: i,
                        setter: xt(a, s),
                        setterContext: u
                    });
                },
                B: (e1, t, r, n, o, i)=>{
                    je[e1] = {
                        name: $e(t),
                        rawConstructor: xt(r, n),
                        rawDestructor: xt(o, i),
                        fields: []
                    };
                },
                m: (e1, t, r, n, o, i, a, s, u, c)=>{
                    je[e1].fields.push({
                        fieldName: $e(t),
                        getterReturnType: r,
                        getter: xt(n, o),
                        getterContext: i,
                        setterArgumentType: a,
                        setter: xt(s, u),
                        setterContext: c
                    });
                },
                ye: (e1, t)=>{
                    He(e1, {
                        isVoid: !0,
                        name: t = $e(t),
                        argPackAdvance: 0,
                        fromWireType: ()=>{},
                        toWireType: (e1, t)=>{}
                    });
                },
                Rb: ()=>1,
                rb: ()=>{
                    throw 1 / 0;
                },
                j: (e1, t, r)=>(e1 = Mt.toValue(e1), t = jt(t, "emval::as"), Xt(t, r, e1)),
                w: (e1, t, r, n)=>(e1 = Yt[e1])(null, t = Mt.toValue(t), r, n),
                J: (e1, t, r, n, o)=>(e1 = Yt[e1])(t = Mt.toValue(t), t[r = Zt(r)], n, o),
                c: Bt,
                we: (e1, t)=>(e1 = Mt.toValue(e1)) == (t = Mt.toValue(t)),
                K: (e1)=>0 === e1 ? Mt.toHandle(Qt()) : (e1 = Zt(e1), Mt.toHandle(Qt()[e1])),
                s: (e1, t, r)=>{
                    var n = ((e1, t)=>{
                        for(var r = new Array(e1), n = 0; n < e1; ++n)r[n] = jt(D[t + 4 * n >> 2], "parameter " + n);
                        return r;
                    })(e1, t), o = n.shift();
                    e1--;
                    var i, a, s = new Array(e1), u = `methodCaller<(${n.map((e1)=>e1.name).join(", ")}) => ${o.name}>`;
                    return i = ct(u, (t, i, a, u)=>{
                        for(var c = 0, l = 0; l < e1; ++l)s[l] = n[l].readValueFromPointer(u + c), c += n[l].argPackAdvance;
                        var d = 1 === r ? Jt(i, s) : i.apply(t, s);
                        return Xt(o, a, d);
                    }), a = Yt.length, Yt.push(i), a;
                },
                h: (e1, t)=>(e1 = Mt.toValue(e1), t = Mt.toValue(t), Mt.toHandle(e1[t])),
                e: (e1)=>{
                    e1 > 4 && (Dt.get(e1).refcount += 1);
                },
                W: (e1, t)=>(e1 = Mt.toValue(e1)) instanceof (t = Mt.toValue(t)),
                pa: (e1)=>"number" == typeof (e1 = Mt.toValue(e1)),
                M: (e1)=>"string" == typeof (e1 = Mt.toValue(e1)),
                Pa: ()=>Mt.toHandle([]),
                f: (e1)=>Mt.toHandle(Zt(e1)),
                y: ()=>Mt.toHandle({}),
                i: (e1)=>{
                    var t = Mt.toValue(e1);
                    Ae(t), Bt(e1);
                },
                k: (e1, t, r)=>{
                    e1 = Mt.toValue(e1), t = Mt.toValue(t), r = Mt.toValue(r), e1[t] = r;
                },
                g: (e1, t)=>{
                    var r = (e1 = jt(e1, "_emval_take_value")).readValueFromPointer(t);
                    return Mt.toHandle(r);
                },
                Af: (e1)=>{
                    throw e1 = Mt.toValue(e1);
                },
                Dd: (e1)=>(e1 = Mt.toValue(e1), Mt.toHandle(typeof e1)),
                Db: function(e1, t) {
                    e1 = er(e1);
                    var r = new Date(1e3 * e1);
                    L[t >> 2] = r.getUTCSeconds(), L[t + 4 >> 2] = r.getUTCMinutes(), L[t + 8 >> 2] = r.getUTCHours(), L[t + 12 >> 2] = r.getUTCDate(), L[t + 16 >> 2] = r.getUTCMonth(), L[t + 20 >> 2] = r.getUTCFullYear() - 1900, L[t + 24 >> 2] = r.getUTCDay();
                    var n = Date.UTC(r.getUTCFullYear(), 0, 1, 0, 0, 0, 0), o = (r.getTime() - n) / 864e5 | 0;
                    L[t + 28 >> 2] = o;
                },
                Eb: function(e1, t) {
                    e1 = er(e1);
                    var r = new Date(1e3 * e1);
                    L[t >> 2] = r.getSeconds(), L[t + 4 >> 2] = r.getMinutes(), L[t + 8 >> 2] = r.getHours(), L[t + 12 >> 2] = r.getDate(), L[t + 16 >> 2] = r.getMonth(), L[t + 20 >> 2] = r.getFullYear() - 1900, L[t + 24 >> 2] = r.getDay();
                    var n = 0 | or(r);
                    L[t + 28 >> 2] = n, L[t + 36 >> 2] = -60 * r.getTimezoneOffset();
                    var o = new Date(r.getFullYear(), 0, 1), i = new Date(r.getFullYear(), 6, 1).getTimezoneOffset(), a = o.getTimezoneOffset(), s = 0 | (i != a && r.getTimezoneOffset() == Math.min(a, i));
                    L[t + 32 >> 2] = s;
                },
                Fb: function(e1) {
                    var t = (()=>{
                        var t = new Date(L[e1 + 20 >> 2] + 1900, L[e1 + 16 >> 2], L[e1 + 12 >> 2], L[e1 + 8 >> 2], L[e1 + 4 >> 2], L[e1 >> 2], 0), r = L[e1 + 32 >> 2], n = t.getTimezoneOffset(), o = new Date(t.getFullYear(), 0, 1), i = new Date(t.getFullYear(), 6, 1).getTimezoneOffset(), a = o.getTimezoneOffset(), s = Math.min(a, i);
                        if (r < 0) L[e1 + 32 >> 2] = Number(i != a && s == n);
                        else if (r > 0 != (s == n)) {
                            var u = Math.max(a, i), c = r > 0 ? s : u;
                            t.setTime(t.getTime() + 6e4 * (c - n));
                        }
                        L[e1 + 24 >> 2] = t.getDay();
                        var l = 0 | or(t);
                        L[e1 + 28 >> 2] = l, L[e1 >> 2] = t.getSeconds(), L[e1 + 4 >> 2] = t.getMinutes(), L[e1 + 8 >> 2] = t.getHours(), L[e1 + 12 >> 2] = t.getDate(), L[e1 + 16 >> 2] = t.getMonth(), L[e1 + 20 >> 2] = t.getYear();
                        var d = t.getTime();
                        return isNaN(d) ? -1 : d / 1e3;
                    })();
                    return BigInt(t);
                },
                Bb: function(e1, t, r, n, o, i, a) {
                    o = er(o);
                    try {
                        if (isNaN(o)) return 61;
                        var s = ke.getStreamFromFD(n), u = Ce.mmap(s, e1, o, t, r), c = u.ptr;
                        return L[i >> 2] = u.allocated, D[a >> 2] = c, 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                Cb: function(e1, t, r, n, o, i) {
                    i = er(i);
                    try {
                        if (isNaN(i)) return 61;
                        var a = ke.getStreamFromFD(o);
                        2 & r && ke.doMsync(e1, a, t, n, i), Ce.munmap(a);
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return -e1.errno;
                    }
                },
                ub: (e1, t, r)=>{
                    var n = (new Date).getFullYear(), o = new Date(n, 0, 1), i = new Date(n, 6, 1), a = o.getTimezoneOffset(), s = i.getTimezoneOffset(), u = Math.max(a, s);
                    function c(e1) {
                        var t = e1.toTimeString().match(/\(([A-Za-z ]+)\)$/);
                        return t ? t[1] : "GMT";
                    }
                    D[e1 >> 2] = 60 * u, L[t >> 2] = Number(a != s);
                    var l = c(o), d = c(i), h = ir(l), f = ir(d);
                    s < a ? (D[r >> 2] = h, D[r + 4 >> 2] = f) : (D[r >> 2] = f, D[r + 4 >> 2] = h);
                },
                b: ()=>{
                    K("");
                },
                Be: function(e1) {
                    var t = xe(e1);
                    localStorage.removeItem(t);
                },
                xa: (e1, t, r, n, o)=>pr.chooseConfig(e1, t, r, n, o),
                Ba: (e1, t, r, n)=>{
                    if (62e3 != e1) return pr.setErrorCode(12296), 0;
                    for(var o = 1;;){
                        var i = L[n >> 2];
                        if (12440 != i) {
                            if (12344 == i) break;
                            return pr.setErrorCode(12292), 0;
                        }
                        o = L[n + 4 >> 2], n += 8;
                    }
                    return o < 2 || o > 3 ? (pr.setErrorCode(12293), 0) : (pr.contextAttributes.majorVersion = o - 1, pr.contextAttributes.minorVersion = 0, pr.context = mr.createContext(u.canvas, pr.contextAttributes), 0 != pr.context ? (pr.setErrorCode(12288), mr.makeContextCurrent(pr.context), u.useWebGL = !0, fr.moduleContextCreatedCallbacks.forEach(function(e1) {
                        e1();
                    }), mr.makeContextCurrent(null), 62004) : (pr.setErrorCode(12297), 0));
                },
                kb: (e1, t, r, n)=>62e3 != e1 ? (pr.setErrorCode(12296), 0) : 62002 != t ? (pr.setErrorCode(12293), 0) : (pr.setErrorCode(12288), 62006),
                Da: (e1, t)=>62e3 != e1 ? (pr.setErrorCode(12296), 0) : 62004 != t ? (pr.setErrorCode(12294), 0) : (mr.deleteContext(pr.context), pr.setErrorCode(12288), pr.currentContext == t && (pr.currentContext = 0), 1),
                la: (e1, t)=>62e3 != e1 ? (pr.setErrorCode(12296), 0) : 62006 != t ? (pr.setErrorCode(12301), 1) : (pr.currentReadSurface == t && (pr.currentReadSurface = 0), pr.currentDrawSurface == t && (pr.currentDrawSurface = 0), pr.setErrorCode(12288), 1),
                T: (e1, t, r, n)=>{
                    if (62e3 != e1) return pr.setErrorCode(12296), 0;
                    if (62002 != t) return pr.setErrorCode(12293), 0;
                    if (!n) return pr.setErrorCode(12300), 0;
                    switch(pr.setErrorCode(12288), r){
                        case 12320:
                            return L[n >> 2] = pr.contextAttributes.alpha ? 32 : 24, 1;
                        case 12321:
                            return L[n >> 2] = pr.contextAttributes.alpha ? 8 : 0, 1;
                        case 12322:
                        case 12323:
                        case 12324:
                            return L[n >> 2] = 8, 1;
                        case 12325:
                            return L[n >> 2] = pr.contextAttributes.depth ? 24 : 0, 1;
                        case 12326:
                            return L[n >> 2] = pr.contextAttributes.stencil ? 8 : 0, 1;
                        case 12327:
                        case 12335:
                        case 12340:
                            return L[n >> 2] = 12344, 1;
                        case 12328:
                            return L[n >> 2] = 62002, 1;
                        case 12329:
                        case 12333:
                        case 12334:
                        case 12345:
                        case 12346:
                        case 12347:
                        case 12349:
                        case 12350:
                        case 12354:
                            return L[n >> 2] = 0, 1;
                        case 12330:
                        case 12332:
                            return L[n >> 2] = 4096, 1;
                        case 12331:
                            return L[n >> 2] = 16777216, 1;
                        case 12337:
                            return L[n >> 2] = pr.contextAttributes.antialias ? 4 : 0, 1;
                        case 12338:
                            return L[n >> 2] = pr.contextAttributes.antialias ? 1 : 0, 1;
                        case 12339:
                        case 12352:
                            return L[n >> 2] = 4, 1;
                        case 12341:
                        case 12342:
                        case 12343:
                            return L[n >> 2] = -1, 1;
                        case 12348:
                            return L[n >> 2] = 1, 1;
                        case 12351:
                            return L[n >> 2] = 12430, 1;
                        default:
                            return pr.setErrorCode(12292), 0;
                    }
                },
                lc: (e1)=>(pr.setErrorCode(12288), 0 != e1 && 1 != e1 ? 0 : 62e3),
                Ca: ()=>pr.errorCode,
                ac: (e1, t, r)=>62e3 != e1 ? (pr.setErrorCode(12296), 0) : (t && (L[t >> 2] = 1), r && (L[r >> 2] = 4), pr.defaultDisplayInitialized = !0, pr.setErrorCode(12288), 1),
                aa: (e1, t, r, n)=>62e3 != e1 ? (pr.setErrorCode(12296), 0) : 0 != n && 62004 != n ? (pr.setErrorCode(12294), 0) : 0 != r && 62006 != r || 0 != t && 62006 != t ? (pr.setErrorCode(12301), 0) : (mr.makeContextCurrent(n ? pr.context : null), pr.currentContext = n, pr.currentDrawSurface = t, pr.currentReadSurface = r, pr.setErrorCode(12288), 1),
                ha: (e1, t)=>{
                    if (62e3 != e1) return pr.setErrorCode(12296), 0;
                    if (pr.setErrorCode(12288), pr.stringCache[t]) return pr.stringCache[t];
                    var r;
                    switch(t){
                        case 12371:
                            r = ir("Emscripten");
                            break;
                        case 12372:
                            r = ir("1.4 Emscripten EGL");
                            break;
                        case 12373:
                            r = ir("");
                            break;
                        case 12429:
                            r = ir("OpenGL_ES");
                            break;
                        default:
                            return pr.setErrorCode(12300), 0;
                    }
                    return pr.stringCache[t] = r, r;
                },
                Ea: (e1, t)=>{
                    if (pr.defaultDisplayInitialized) if (u.ctx) {
                        if (!u.ctx.isContextLost()) return pr.setErrorCode(12288), 1;
                        pr.setErrorCode(12302);
                    } else pr.setErrorCode(12290);
                    else pr.setErrorCode(12289);
                    return 0;
                },
                Qc: (e1)=>62e3 != e1 ? (pr.setErrorCode(12296), 0) : (pr.currentContext = 0, pr.currentReadSurface = 0, pr.currentDrawSurface = 0, pr.defaultDisplayInitialized = !1, pr.setErrorCode(12288), 1),
                H: (e1, t, r)=>vr(e1, t, r),
                Ke: (e1)=>{
                    console.error(xe(e1));
                },
                Le: (e1)=>{
                    console.log(xe(e1));
                },
                sa: (e1)=>{
                    console.warn(xe(e1));
                },
                ia: ()=>Date.now(),
                Ae: function() {},
                vb: ()=>2147483648,
                Qb: Ft,
                hg: yr,
                ig: br,
                fd: wr,
                re: _r,
                Uc: Er,
                jg: Sr,
                kg: Cr,
                Rc: xr,
                Sc: kr,
                hf: Tr,
                jf: Ar,
                Te: Pr,
                lg: Fr,
                ec: Lr,
                Gf: Br,
                If: Rr,
                mg: Mr,
                ng: Ir,
                ee: Or,
                og: jr,
                de: Ur,
                bf: $r,
                pg: qr,
                qg: Hr,
                kf: Nr,
                rg: Vr,
                uc: zr,
                vc: Wr,
                xc: Gr,
                wc: Xr,
                sg: Yr,
                ce: Kr,
                tg: Zr,
                Ra: Qr,
                ug: Jr,
                vg: en,
                wg: tn,
                kd: rn,
                xg: nn,
                jd: on,
                $e: an,
                be: sn,
                yg: un,
                ld: cn,
                zg: ln,
                Ag: dn,
                Bg: hn,
                Cg: fn,
                lf: pn,
                Dg: mn,
                hd: gn,
                te: vn,
                mf: yn,
                Ue: bn,
                Eg: wn,
                af: _n,
                Fg: En,
                dc: Sn,
                Hf: xn,
                Jf: kn,
                ae: Tn,
                Gg: An,
                $d: Pn,
                _d: Fn,
                Hg: Ln,
                Ig: Dn,
                Jg: Bn,
                Ef: Mn,
                he: In,
                sd: On,
                Bf: jn,
                td: Un,
                Tb: $n,
                yf: Nn,
                od: Vn,
                ie: zn,
                Kg: Gn,
                Ff: Yn,
                ge: Kn,
                pd: Zn,
                Cf: Qn,
                qd: Jn,
                rd: eo,
                sf: to,
                Lg: ro,
                Mg: no,
                ed: oo,
                qe: io,
                Tc: ao,
                Ze: so,
                Ng: uo,
                Og: co,
                nf: lo,
                of: ho,
                Xc: fo,
                Pg: po,
                Qg: go,
                qf: vo,
                id: yo,
                ue: bo,
                rf: wo,
                Ve: _o,
                Rg: Eo,
                cc: So,
                Df: Ao,
                Kf: Po,
                df: Fo,
                Zd: Do,
                Yd: Bo,
                pc: Ro,
                qc: Mo,
                sc: Io,
                Xd: Oo,
                Wd: jo,
                Vd: Ho,
                jc: No,
                Sg: Vo,
                Tg: zo,
                Ug: Wo,
                Gc: Go,
                ef: Xo,
                kc: Ko,
                nc: Zo,
                Vc: Qo,
                th: Jo,
                Vb: ei,
                Zb: ti,
                Vg: ri,
                Wg: ni,
                le: ii,
                ne: si,
                ke: ui,
                cd: ci,
                me: li,
                dd: di,
                oe: hi,
                ff: fi,
                fc: pi,
                gc: mi,
                Xg: gi,
                Qe: vi,
                Ud: yi,
                Yg: bi,
                Qa: wi,
                uh: _i,
                mc: Ei,
                Td: Si,
                Sd: Ci,
                Oc: xi,
                rc: ki,
                tc: Ti,
                Zg: Fi,
                Rd: Bi,
                Qd: Ri,
                Hc: Mi,
                Nc: ji,
                Mc: Ui,
                Nd: $i,
                Pd: qi,
                Od: Hi,
                Md: Ni,
                Re: Vi,
                Se: zi,
                Ld: Wi,
                Kd: Gi,
                Jd: Xi,
                Id: Yi,
                gd: Ki,
                se: Zi,
                Hd: Qi,
                ic: Ji,
                Gd: ea,
                _e: ta,
                _g: ra,
                bc: na,
                Wc: ia,
                je: aa,
                $g: sa,
                ah: ua,
                wf: ca,
                xf: la,
                $b: da,
                bh: ha,
                Fd: fa,
                Yb: pa,
                Xb: ma,
                pe: ga,
                zf: va,
                ch: _a,
                Ed: Ea,
                gf: Sa,
                cf: Ca,
                _b: xa,
                Cd: ka,
                We: Ta,
                hc: Aa,
                Xe: Pa,
                Ye: Fa,
                dh: La,
                Bd: Da,
                eh: Ba,
                fh: Ra,
                gh: Ma,
                hh: Ia,
                ih: Oa,
                jh: ja,
                kh: Ua,
                lh: $a,
                nd: qa,
                mh: Ha,
                nh: Na,
                oh: Va,
                ph: za,
                tf: Wa,
                Wb: Ga,
                qh: Xa,
                md: Ya,
                Pc: Ka,
                rh: Za,
                sh: Ja,
                dg: es,
                eg: rs,
                Fc: ns,
                Bc: os,
                fg: is,
                gg: as,
                cg: ss,
                bg: us,
                Ec: cs,
                Ac: ls,
                ag: ds,
                $f: hs,
                _f: fs,
                Zf: ps,
                Dc: ms,
                zc: gs,
                Yf: vs,
                Xf: ys,
                Lf: bs,
                Mf: ws,
                Cc: _s,
                yc: Es,
                oc: Ss,
                Nf: Cs,
                bd: xs,
                $c: ks,
                Of: Ts,
                ad: As,
                Zc: Ps,
                Pf: Fs,
                _c: Ls,
                Yc: Ds,
                Qf: Bs,
                Ad: Rs,
                Rf: Ms,
                zd: Is,
                yd: Os,
                Sf: js,
                xd: Us,
                Tf: $s,
                wd: qs,
                Uf: Hs,
                uf: Vs,
                fe: zs,
                ud: Ws,
                vd: Gs,
                Ub: Xs,
                Lc: Ys,
                Jc: Ks,
                Kc: Zs,
                Ic: Qs,
                vf: Js,
                Vf: eu,
                Wf: tu,
                Sa: ru,
                wb: (e1)=>{
                    var t = A.length, r = 2147483648;
                    if ((e1 >>>= 0) > r) return !1;
                    for(var n, o, i = 1; i <= 4; i *= 2){
                        var a = t * (1 + .2 / i);
                        a = Math.min(a, e1 + 100663296);
                        var s = Math.min(r, (n = Math.max(e1, a)) + ((o = 65536) - n % o) % o);
                        if (nu(s)) return !0;
                    }
                    return !1;
                },
                gb: function(e1, t, r, n, o, i, a, s, c) {
                    const l = u.UTF8ToString(e1, e1 + t), d = u.HEAPU8.subarray(o, o + i), h = u.emscripten_ubq_codec_audioDecoderNextHandle++, f = {
                        codec: l,
                        sampleRate: r,
                        numberOfChannels: n,
                        description: d
                    };
                    try {
                        const e1 = u.emscripten_ubq_codec_createAudioDecoder(a, s, c);
                        AudioDecoder.isConfigSupported(f).then((t)=>{
                            e1.configUnsupported = !t;
                        }, ()=>{
                            e1.configUnsupported = !0;
                        }), e1.configure(f), u.emscripten_ubq_codec_audioDecoders.set(h, {
                            audioDecoder: e1,
                            decoderConfig: f,
                            leftBufferPtr: a,
                            rightBufferPtr: s,
                            bufferLength: c
                        });
                    } catch (e1) {
                        return u.emscripten_ubq_codec_createNativeResult({
                            error: e1
                        });
                    }
                    return u.emscripten_ubq_codec_createNativeResult({
                        handle: h
                    });
                },
                ab: function(e1, t, r, n, o, i) {
                    const a = u.UTF8ToString(e1, e1 + t), s = u.emscripten_ubq_codec_audioEncoderNextHandle++, c = {
                        codec: a,
                        sampleRate: r,
                        numberOfChannels: n,
                        bitrate: o
                    };
                    try {
                        const e1 = new AudioEncoder({
                            output: (e1)=>{
                                const t = u._malloc(e1.byteLength), r = u.HEAPU8.subarray(t, t + e1.byteLength);
                                e1.copyTo(r), u.emscripten_ubq_codec_onOutputEncodedAudioChunk(s, t, e1.byteLength, i), u._free(t);
                            },
                            error: (e1)=>{
                                u.emscripten_ubq_codec_audioEncoders.get(s).frameIndex > 1 && console.error(e1);
                            }
                        });
                        e1.configure(c), u.emscripten_ubq_codec_audioEncoders.set(s, {
                            audioEncoder: e1,
                            audioEncoderConfig: c,
                            frameIndex: 0
                        });
                    } catch (e1) {
                        return e1 += ' Requested codec: "' + a + '"', e1 += "; sample rate: " + r, e1 += "; channels: " + n, e1 += "; bit rate: " + o, u.emscripten_ubq_codec_createNativeResult({
                            error: e1
                        });
                    }
                    return u.emscripten_ubq_codec_createNativeResult({
                        handle: s
                    });
                },
                jb: function(e1, t, r, n, o, i, a) {
                    const s = u.UTF8ToString(e1, e1 + t), c = u.HEAPU8.subarray(o, o + i), l = u.emscripten_ubq_codec_videoDecoderNextHandle++, d = {
                        codec: s,
                        codedWidth: r,
                        codedHeight: n,
                        description: c,
                        optimizeForLatency: !0
                    };
                    try {
                        const e1 = u.emscripten_ubq_codec_createVideoDecoder(l, a);
                        VideoDecoder.isConfigSupported(d).then((t)=>{
                            e1.configUnsupported = !t;
                        }, ()=>{
                            e1.configUnsupported = !0;
                        }), e1.configure(d), u.emscripten_ubq_codec_videoDecoders.set(l, {
                            videoDecoder: e1,
                            decoderConfig: d,
                            codecServicePtr: a
                        });
                    } catch (e1) {
                        return u.emscripten_ubq_codec_createNativeResult({
                            error: e1
                        });
                    }
                    return u.emscripten_ubq_codec_createNativeResult({
                        handle: l
                    });
                },
                db: function(e1, t, r, n, o, i, a) {
                    const s = u.UTF8ToString(e1, e1 + t), c = u.emscripten_ubq_codec_videoEncoderNextHandle++, l = u.specialHTMLTargets["!canvas"];
                    l.width = r, l.height = n;
                    const d = {
                        codec: s,
                        width: r,
                        height: n,
                        avc: {
                            format: "annexb"
                        },
                        framerate: o
                    };
                    i > 0 && (d.bitrate = i);
                    try {
                        const e1 = new VideoEncoder({
                            output: (e1)=>{
                                const t = u._malloc(e1.byteLength), r = u.HEAPU8.subarray(t, t + e1.byteLength);
                                e1.copyTo(r), u.emscripten_ubq_codec_onOutputEncodedVideoChunk(c, t, e1.byteLength, a), u._free(t);
                            },
                            error: (e1)=>console.error(e1)
                        });
                        VideoEncoder.isConfigSupported(d).then((t)=>{
                            e1.configUnsupported = !t;
                        }, ()=>{
                            e1.configUnsupported = !0;
                        }), e1.configure(d), u.emscripten_ubq_codec_videoEncoders.set(c, {
                            videoEncoder: e1,
                            encoderConfig: d,
                            groupOfPictures: 150,
                            frameIndex: 0
                        });
                    } catch (e1) {
                        return e1 += ' Requested codec: "' + s + '"', e1 += "; resolution: " + r + "x" + n, u.emscripten_ubq_codec_createNativeResult({
                            error: e1
                        });
                    }
                    return u.emscripten_ubq_codec_createNativeResult({
                        handle: c
                    });
                },
                Wa: function(e1, t, r, n, o, i) {
                    const a = u.emscripten_ubq_codec_audioDecoders.get(e1);
                    if (a.audioDecoder.unexpectedError) return u.emscripten_ubq_codec_createNativeResult({
                        code: 2,
                        error: a.audioDecoder.unexpectedError
                    });
                    "closed" === a.audioDecoder.state && (a.audioDecoder = u.emscripten_ubq_codec_createAudioDecoder(a.leftBufferPtr, a.rightBufferPtr, a.bufferLength), a.audioDecoder.configure(a.decoderConfig));
                    const s = a.audioDecoder, c = u.HEAPU8.subarray(o, o + i), l = new EncodedAudioChunk({
                        type: t ? "key" : "delta",
                        timestamp: r,
                        duration: n,
                        data: c
                    });
                    try {
                        s.decode(l);
                    } catch (e1) {
                        return s.configUnsupported ? u.emscripten_ubq_codec_createNativeResult({
                            code: 2,
                            error: e1
                        }) : u.emscripten_ubq_codec_createNativeResult({
                            code: 1,
                            error: e1
                        });
                    }
                    return u.emscripten_ubq_codec_createNativeResult({
                        code: 0
                    });
                },
                Xa: function(e1, t, r, n, o, i) {
                    const a = u.emscripten_ubq_codec_videoDecoders.get(e1);
                    if (a.videoDecoder.unexpectedError) return u.emscripten_ubq_codec_createNativeResult({
                        code: 2,
                        error: a.videoDecoder.unexpectedError
                    });
                    if ("closed" === a.videoDecoder.state) {
                        const t = a.videoDecoder.textures;
                        return a.videoDecoder = u.emscripten_ubq_codec_createVideoDecoder(e1, a.codecServicePtr), a.videoDecoder.textures = t, a.videoDecoder.configure(a.decoderConfig), u.emscripten_ubq_codec_createNativeResult({
                            code: 1,
                            error: "VideoDecoder was closed"
                        });
                    }
                    const s = a.videoDecoder, c = u.HEAPU8.subarray(o, o + i), l = new EncodedVideoChunk({
                        type: t ? "key" : "delta",
                        timestamp: r,
                        duration: n,
                        data: c
                    });
                    try {
                        s.decode(l);
                    } catch (e1) {
                        return s.configUnsupported ? u.emscripten_ubq_codec_createNativeResult({
                            code: 2,
                            error: e1
                        }) : u.emscripten_ubq_codec_createNativeResult({
                            code: 1,
                            error: e1
                        });
                    }
                    return u.emscripten_ubq_codec_createNativeResult({
                        code: 0
                    });
                },
                S: function(e1) {
                    if (u.emscripten_ubq_codec_audioDecoders.has(e1)) {
                        const t = u.emscripten_ubq_codec_audioDecoders.get(e1);
                        "closed" !== t.audioDecoder.state && t.audioDecoder.close(), u.emscripten_ubq_codec_audioDecoders.delete(e1);
                    }
                },
                ea: function(e1) {
                    const t = u.emscripten_ubq_codec_audioEncoders.get(e1);
                    "closed" !== t.audioEncoder.state && t.audioEncoder.close(), u.emscripten_ubq_codec_audioEncoders.delete(e1);
                },
                ga: function(e1) {
                    if (u.emscripten_ubq_codec_videoDecoders.has(e1)) {
                        const t = u.emscripten_ubq_codec_videoDecoders.get(e1);
                        "closed" !== t.videoDecoder.state && t.videoDecoder.close(), u.emscripten_ubq_codec_videoDecoders.delete(e1);
                    }
                },
                fa: function(e1) {
                    const t = u.emscripten_ubq_codec_videoEncoders.get(e1);
                    "closed" !== t.videoEncoder.state && t.videoEncoder.close(), u.emscripten_ubq_codec_videoEncoders.delete(e1);
                },
                $a: function(e1, t, r) {
                    const n = 1e6, o = u.emscripten_ubq_codec_audioEncoders.get(e1), i = o.audioEncoderConfig.sampleRate, a = o.audioEncoderConfig.numberOfChannels, s = r / a, c = Math.round(n * (o.frameIndex * s / i)), l = Math.round(n * (s / i)), d = u.HEAPF32.subarray(t / 4, t / 4 + r), h = new AudioData({
                        format: "f32",
                        sampleRate: i,
                        numberOfFrames: s,
                        numberOfChannels: a,
                        duration: l,
                        timestamp: c,
                        data: d
                    });
                    o.audioEncoder.encode(h), o.frameIndex++, h.close();
                },
                cb: function(e1, t, r) {
                    const n = 1e6, o = u.emscripten_ubq_codec_videoEncoders.get(e1), i = Math.round(n * (o.frameIndex / o.encoderConfig.framerate)), a = o.frameIndex % o.groupOfPictures == 0, s = Math.round(n / o.encoderConfig.framerate), c = u.specialHTMLTargets["!canvas"], l = new VideoFrame(c, {
                        timestamp: i,
                        duration: s
                    });
                    o.videoEncoder.encode(l, {
                        keyFrame: a
                    }), l.close(), o.frameIndex++;
                },
                _a: async function(e1, t) {
                    const r = u.emscripten_ubq_codec_audioEncoders.get(e1);
                    try {
                        await r.audioEncoder.flush();
                    } catch  {
                        if (r.frameIndex > 1) throw new Error("AudioEncoder.flush() failed");
                    }
                    u.emscripten_ubq_codec_onFinalizedAudioEncoding(e1, t);
                },
                bb: async function(e1, t) {
                    const r = u.emscripten_ubq_codec_videoEncoders.get(e1);
                    await r.videoEncoder.flush(), u.emscripten_ubq_codec_onFinalizedVideoEncoding(e1, t);
                },
                fb: async function(e1, t) {
                    const r = u.emscripten_ubq_codec_audioDecoders.get(e1).audioDecoder;
                    r.flushing = !0;
                    try {
                        await r.flush();
                    } catch  {}
                    r.flushing = !1, r.writtenFrames = t;
                },
                Y: async function(e1, t, r) {
                    const n = u.emscripten_ubq_codec_videoDecoders.get(e1).videoDecoder;
                    n.shouldDropFrames = r, n.flushing = !0;
                    try {
                        await n.flush();
                    } catch  {}
                    n.flushing = !1, n.shouldDropFrames = !1, n.decodedFrames = t;
                },
                ua: function(e1) {
                    return u.emscripten_ubq_codec_audioDecoders.get(e1).audioDecoder.decodeQueueSize;
                },
                va: function(e1) {
                    return u.emscripten_ubq_codec_videoDecoders.get(e1).videoDecoder.decodedFrames;
                },
                X: function(e1) {
                    return u.emscripten_ubq_codec_audioDecoders.get(e1).audioDecoder.writtenFrames;
                },
                eb: function(e1) {
                    return u.emscripten_ubq_codec_audioDecoders.get(e1).audioDecoder.flushing;
                },
                ib: function(e1) {
                    return u.emscripten_ubq_codec_videoDecoders.get(e1).videoDecoder.flushing;
                },
                Z: function() {
                    return "undefined" != typeof VideoFrame && "undefined" != typeof VideoDecoder && "undefined" != typeof VideoEncoder && "undefined" != typeof AudioDecoder && "undefined" != typeof AudioEncoder;
                },
                Ya: function(e1, t, r, n, o, i, a) {
                    const s = u.emscripten_ubq_codec_videoDecoders.get(e1), c = u.UTF8ToString(t, t + r), l = u.HEAPU8.subarray(i, i + a);
                    s.videoDecoder.configure({
                        codec: c,
                        codedWidth: n,
                        codedHeight: o,
                        description: l
                    });
                },
                hb: function(e1, t) {
                    u.emscripten_ubq_codec_videoDecoders.get(e1).videoDecoder.requestedFrame = t;
                },
                Za: function(e1, t, r) {
                    const n = u.emscripten_ubq_codec_videoDecoders.get(e1), o = u.HEAPU32.subarray(t / 4, t / 4 + r);
                    n.videoDecoder.textures = [];
                    for(let e1 = 0; e1 < r; e1++)n.videoDecoder.textures[e1] = mr.textures[o[e1]];
                },
                Fe: function(e1) {
                    const t = u.emscripten_ubq_asyncFetchManager.getProcess(e1);
                    return !!(null == t ? void 0 : t.allocate());
                },
                ra: function() {
                    u.emscripten_ubq_asyncFetchManager.clear();
                },
                qa: function(e1, t, r, n) {
                    return u.emscripten_ubq_asyncFetchManager.createHeader(e1, t, r, n);
                },
                Ie: function(e1) {
                    u.emscripten_ubq_asyncFetchManager.deleteHeader(e1);
                },
                Je: function(e1, t, r, n, o, i, a, s, c) {
                    return u.emscripten_ubq_asyncFetchManager.fetch(e1, t, r, n, o, i, a, s, c).handle;
                },
                ba: function(e1) {
                    return u.emscripten_ubq_asyncFetchManager.deleteProcess(e1);
                },
                He: function(e1) {
                    var t, r;
                    return null !== (r = null === (t = u.emscripten_ubq_asyncFetchManager.getProcess(e1)) || void 0 === t ? void 0 : t.receivedLength) && void 0 !== r ? r : 0;
                },
                Ee: function(e1) {
                    const t = u.emscripten_ubq_asyncFetchManager.getProcess(e1);
                    return (null == t ? void 0 : t.isAllocated()) ? t.resultAddress : -1;
                },
                De: function(e1) {
                    const t = u.emscripten_ubq_asyncFetchManager.getProcess(e1);
                    return (null == t ? void 0 : t.isAllocated()) ? t.resultLength : -1;
                },
                oa: function(e1) {
                    var t, r;
                    return null !== (r = null === (t = u.emscripten_ubq_asyncFetchManager.getProcess(e1)) || void 0 === t ? void 0 : t.state) && void 0 !== r ? r : -1;
                },
                Ge: function(e1) {
                    var t, r;
                    return null !== (r = null === (t = u.emscripten_ubq_asyncFetchManager.getProcess(e1)) || void 0 === t ? void 0 : t.totalBytes) && void 0 !== r ? r : 0;
                },
                lb: function() {
                    return !!u.emscripten_ubq_settings_forceWebGL1;
                },
                wa: uu,
                _: (e1)=>{
                    mr.currentContext == e1 && (mr.currentContext = 0), mr.deleteContext(e1);
                },
                sb: (e1)=>((e1)=>{
                        var t = e1.getExtension("OES_vertex_array_object");
                        if (t) return e1.createVertexArray = ()=>t.createVertexArrayOES(), e1.deleteVertexArray = (e1)=>t.deleteVertexArrayOES(e1), e1.bindVertexArray = (e1)=>t.bindVertexArrayOES(e1), e1.isVertexArray = (e1)=>t.isVertexArrayOES(e1), 1;
                    })(mr.contexts[e1].GLctx),
                ob: (e1)=>((e1)=>{
                        var t = e1.getExtension("WEBGL_draw_buffers");
                        if (t) return e1.drawBuffers = (e1, r)=>t.drawBuffersWEBGL(e1, r), 1;
                    })(mr.contexts[e1].GLctx),
                nb: (e1)=>((e1)=>!!(e1.multiDrawWebgl = e1.getExtension("WEBGL_multi_draw")))(mr.contexts[e1].GLctx),
                $: (e1, t)=>{
                    var r = mr.getContext(e1), n = xe(t);
                    return n.startsWith("GL_") && (n = n.substr(3)), !!r.GLctx.getExtension(n);
                },
                mb: (e1, t)=>{
                    if (!t) return -5;
                    if (!(e1 = mr.contexts[e1])) return -3;
                    var r = e1.GLctx;
                    if (!r) return -3;
                    r = r.getContextAttributes(), L[t >> 2] = r.alpha, L[t + 4 >> 2] = r.depth, L[t + 8 >> 2] = r.stencil, L[t + 12 >> 2] = r.antialias, L[t + 16 >> 2] = r.premultipliedAlpha, L[t + 20 >> 2] = r.preserveDrawingBuffer;
                    var n = r.powerPreference && iu.indexOf(r.powerPreference);
                    return L[t + 24 >> 2] = n, L[t + 28 >> 2] = r.failIfMajorPerformanceCaveat, L[t + 32 >> 2] = e1.version, L[t + 36 >> 2] = 0, 0;
                },
                Nb: (e1)=>mr.makeContextCurrent(e1) ? 0 : -5,
                Hb: (e1, t)=>{
                    var r = 0;
                    return lu().forEach((n, o)=>{
                        var i = t + r;
                        D[e1 + 4 * o >> 2] = i, ((e1, t)=>{
                            for(var r = 0; r < e1.length; ++r)T[t++ >> 0] = e1.charCodeAt(r);
                            T[t >> 0] = 0;
                        })(n, i), r += n.length + 1;
                    }), 0;
                },
                Ib: (e1, t)=>{
                    var r = lu();
                    D[e1 >> 2] = r.length;
                    var n = 0;
                    return r.forEach((e1)=>n += e1.length + 1), D[t >> 2] = n, 0;
                },
                Ma: lr,
                ja: function(e1) {
                    try {
                        var t = ke.getStreamFromFD(e1);
                        return Ce.close(t), 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return e1.errno;
                    }
                },
                tb: function(e1, t) {
                    try {
                        var r = ke.getStreamFromFD(e1), n = r.tty ? 2 : Ce.isDir(r.mode) ? 3 : Ce.isLink(r.mode) ? 7 : 4;
                        return T[t >> 0] = n, P[t + 2 >> 1] = 0, R[t + 8 >> 3] = BigInt(0), R[t + 16 >> 3] = BigInt(0), 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return e1.errno;
                    }
                },
                Ab: function(e1, t, r, n, o) {
                    n = er(n);
                    try {
                        if (isNaN(n)) return 61;
                        var i = ke.getStreamFromFD(e1), a = du(i, t, r, n);
                        return D[o >> 2] = a, 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return e1.errno;
                    }
                },
                Aa: function(e1, t, r, n) {
                    try {
                        var o = ke.getStreamFromFD(e1), i = du(o, t, r);
                        return D[n >> 2] = i, 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return e1.errno;
                    }
                },
                Gb: function(e1, t, r, n) {
                    t = er(t);
                    try {
                        if (isNaN(t)) return 61;
                        var o = ke.getStreamFromFD(e1);
                        return Ce.llseek(o, t, r), R[n >> 3] = BigInt(o.position), o.getdents && 0 === t && 0 === r && (o.getdents = null), 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return e1.errno;
                    }
                },
                za: function(e1, t, r, n) {
                    try {
                        var o = ((e1, t, r, n)=>{
                            for(var o = 0, i = 0; i < r; i++){
                                var a = D[t >> 2], s = D[t + 4 >> 2];
                                t += 8;
                                var u = Ce.write(e1, T, a, s, n);
                                if (u < 0) return -1;
                                o += u, void 0 !== n && (n += u);
                            }
                            return o;
                        })(ke.getStreamFromFD(e1), t, r);
                        return D[n >> 2] = o, 0;
                    } catch (e1) {
                        if (void 0 === Ce || "ErrnoError" !== e1.name) throw e1;
                        return e1.errno;
                    }
                },
                Ce: function(e1) {
                    var t = xe(e1), r = localStorage.getItem(t);
                    return null == r ? null : ir(r);
                },
                ze: function() {
                    return "undefined" != typeof window ? ir(window.location.hostname) : ir("");
                },
                pb: (e1, t)=>(de(A.subarray(e1, e1 + t)), 0),
                z: function(e1, t, r) {
                    var n = ju();
                    try {
                        return Ct(e1)(t, r);
                    } catch (e1) {
                        if (Uu(n), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                N: function(e1, t) {
                    var r = ju();
                    try {
                        return Ct(e1)(t);
                    } catch (e1) {
                        if (Uu(r), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                G: function(e1, t, r) {
                    var n = ju();
                    try {
                        return Ct(e1)(t, r);
                    } catch (e1) {
                        if (Uu(n), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                n: function(e1, t, r, n) {
                    var o = ju();
                    try {
                        return Ct(e1)(t, r, n);
                    } catch (e1) {
                        if (Uu(o), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                wh: function(e1) {
                    var t = ju();
                    try {
                        return Ct(e1)();
                    } catch (e1) {
                        if (Uu(t), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                Ta: function(e1, t, r) {
                    var n = ju();
                    try {
                        return Ct(e1)(t, r);
                    } catch (e1) {
                        if (Uu(n), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                r: function(e1, t) {
                    var r = ju();
                    try {
                        return Ct(e1)(t);
                    } catch (e1) {
                        if (Uu(r), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                V: function(e1, t, r, n, o, i, a, s, u, c, l, d, h, f, p, m) {
                    var g = ju();
                    try {
                        return Ct(e1)(t, r, n, o, i, a, s, u, c, l, d, h, f, p, m);
                    } catch (e1) {
                        if (Uu(g), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                q: function(e1, t, r) {
                    var n = ju();
                    try {
                        return Ct(e1)(t, r);
                    } catch (e1) {
                        if (Uu(n), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                t: function(e1, t, r, n) {
                    var o = ju();
                    try {
                        return Ct(e1)(t, r, n);
                    } catch (e1) {
                        if (Uu(o), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                U: function(e1, t, r, n, o) {
                    var i = ju();
                    try {
                        return Ct(e1)(t, r, n, o);
                    } catch (e1) {
                        if (Uu(i), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                Pe: function(e1, t, r, n, o, i) {
                    var a = ju();
                    try {
                        return Ct(e1)(t, r, n, o, i);
                    } catch (e1) {
                        if (Uu(a), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                Oa: function(e1, t, r, n, o, i, a) {
                    var s = ju();
                    try {
                        return Ct(e1)(t, r, n, o, i, a);
                    } catch (e1) {
                        if (Uu(s), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                Na: function(e1, t, r, n, o, i, a, s, u, c) {
                    var l = ju();
                    try {
                        return Ct(e1)(t, r, n, o, i, a, s, u, c);
                    } catch (e1) {
                        if (Uu(l), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                R: function(e1) {
                    var t = ju();
                    try {
                        Ct(e1)();
                    } catch (e1) {
                        if (Uu(t), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                v: function(e1, t) {
                    var r = ju();
                    try {
                        Ct(e1)(t);
                    } catch (e1) {
                        if (Uu(r), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                C: function(e1, t, r, n) {
                    var o = ju();
                    try {
                        Ct(e1)(t, r, n);
                    } catch (e1) {
                        if (Uu(o), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                F: function(e1, t, r) {
                    var n = ju();
                    try {
                        Ct(e1)(t, r);
                    } catch (e1) {
                        if (Uu(n), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                p: function(e1, t, r, n) {
                    var o = ju();
                    try {
                        Ct(e1)(t, r, n);
                    } catch (e1) {
                        if (Uu(o), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                D: function(e1, t, r, n, o) {
                    var i = ju();
                    try {
                        Ct(e1)(t, r, n, o);
                    } catch (e1) {
                        if (Uu(i), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                Oe: function(e1, t, r, n, o, i) {
                    var a = ju();
                    try {
                        Ct(e1)(t, r, n, o, i);
                    } catch (e1) {
                        if (Uu(a), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                Me: function(e1, t, r, n, o, i, a) {
                    var s = ju();
                    try {
                        Ct(e1)(t, r, n, o, i, a);
                    } catch (e1) {
                        if (Uu(s), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                vh: function(e1, t, r, n, o, i, a, s) {
                    var u = ju();
                    try {
                        Ct(e1)(t, r, n, o, i, a, s);
                    } catch (e1) {
                        if (Uu(u), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                Ne: function(e1, t, r, n, o, i, a, s, u, c) {
                    var l = ju();
                    try {
                        Ct(e1)(t, r, n, o, i, a, s, u, c);
                    } catch (e1) {
                        if (Uu(l), e1 !== e1 + 0) throw e1;
                        Ou(1, 0);
                    }
                },
                na: function() {
                    return "undefined" != typeof localStorage;
                },
                Ka: function() {
                    return "undefined" != typeof process && process.versions && process.versions.node ? 1 : 0;
                },
                ta: function(e1, t) {
                    const r = Mt.toValue(t), n = u.ctx;
                    n.bindTexture(n.TEXTURE_2D, mr.textures[e1]), n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, n.RGBA, n.UNSIGNED_BYTE, r);
                },
                a: S,
                La: function(e1, t) {
                    var r = xe(e1), n = xe(t);
                    localStorage.setItem(r, n);
                },
                qb: (e1, t, r, n, o)=>mu(e1, t, r, n)
            }, Au = function() {
                var e1, t, r, o, i = {
                    a: Tu
                };
                function a(e1, t) {
                    var r;
                    return Au = e1.exports, bt = Au.Bh, r = Au.xh, H.unshift(r), Y(), Au;
                }
                if (X(), u.instantiateWasm) try {
                    return u.instantiateWasm(i, a);
                } catch (e1) {
                    x(`Module.instantiateWasm callback failed with error: ${e1}`), n(e1);
                }
                return (e1 = E, t = Z, r = i, o = function(e1) {
                    a(e1.instance);
                }, e1 || "function" != typeof WebAssembly.instantiateStreaming || J(t) || y || "function" != typeof fetch ? re(t, r, o) : fetch(t, {
                    credentials: "same-origin"
                }).then((e1)=>WebAssembly.instantiateStreaming(e1, r).then(o, function(e1) {
                        return x(`wasm streaming compile failed: ${e1}`), x("falling back to ArrayBuffer instantiation"), re(t, r, o);
                    }))).catch(n), {};
            }(), Pu = u._malloc = (e1)=>(Pu = u._malloc = Au.yh)(e1), Fu = u._main = (e1, t)=>(Fu = u._main = Au.zh)(e1, t), Lu = u._free = (e1)=>(Lu = u._free = Au.Ah)(e1), Du = (u._ma_malloc_emscripten = (e1, t)=>(u._ma_malloc_emscripten = Au.Ch)(e1, t), u._ma_free_emscripten = (e1, t)=>(u._ma_free_emscripten = Au.Dh)(e1, t), u._ma_device_process_pcm_frames_capture__webaudio = (e1, t, r)=>(Du = u._ma_device_process_pcm_frames_capture__webaudio = Au.Eh)(e1, t, r)), Bu = u._ma_device_process_pcm_frames_playback__webaudio = (e1, t, r)=>(Bu = u._ma_device_process_pcm_frames_playback__webaudio = Au.Fh)(e1, t, r), Ru = (e1)=>(Ru = Au.Gh)(e1), Mu = (e1)=>(Mu = Au.Hh)(e1), Iu = (e1, t)=>(Iu = Au.Ih)(e1, t), Ou = (e1, t)=>(Ou = Au.Jh)(e1, t), ju = ()=>(ju = Au.Kh)(), Uu = (e1)=>(Uu = Au.Lh)(e1), $u = (e1)=>($u = Au.Mh)(e1), qu = (e1)=>(qu = Au.Nh)(e1), Hu = (e1)=>(Hu = Au.Oh)(e1), Nu = (e1, t, r)=>(Nu = Au.Ph)(e1, t, r), Vu = (e1)=>(Vu = Au.Qh)(e1);
            function zu(e1 = f) {
                function r() {
                    ku || (ku = !0, u.calledRun = !0, O || (u.noFSInit || Ce.init.initialized || Ce.init(), Ce.ignorePermissions = !1, be.init(), ie(H), ie(N), t(u), u.onRuntimeInitialized && u.onRuntimeInitialized(), Wu && function(e1 = []) {
                        var t = Fu;
                        e1.unshift(p);
                        var r = e1.length, n = $u(4 * (r + 1)), o = n;
                        e1.forEach((e1)=>{
                            D[o >> 2] = gu(e1), o += 4;
                        }), D[o >> 2] = 0;
                        try {
                            var i = t(r, n);
                            return cr(i, !0), i;
                        } catch (e1) {
                            return sr(e1);
                        }
                    }(e1), function() {
                        if (u.postRun) for("function" == typeof u.postRun && (u.postRun = [
                            u.postRun
                        ]); u.postRun.length;)e1 = u.postRun.shift(), V.unshift(e1);
                        var e1;
                        ie(V);
                    }()));
                }
                z > 0 || (function() {
                    if (u.preRun) for("function" == typeof u.preRun && (u.preRun = [
                        u.preRun
                    ]); u.preRun.length;)e1 = u.preRun.shift(), q.unshift(e1);
                    var e1;
                    ie(q);
                }(), z > 0 || (u.setStatus ? (u.setStatus("Running..."), setTimeout(function() {
                    setTimeout(function() {
                        u.setStatus("");
                    }, 1), r();
                }, 1)) : r()));
            }
            if (u.___start_em_js = 2533875, u.___stop_em_js = 2534814, u.addRunDependency = X, u.removeRunDependency = Y, u.FS_createPath = Ce.createPath, u.FS_createLazyFile = Ce.createLazyFile, u.FS_createDevice = Ce.createDevice, u.ccall = (e1, t, r, n, o)=>{
                var i = {
                    string: (e1)=>{
                        var t = 0;
                        return null != e1 && 0 !== e1 && (t = gu(e1)), t;
                    },
                    array: (e1)=>{
                        var t = $u(e1.length);
                        return pu(e1, t), t;
                    }
                }, a = ((e1)=>u["_" + e1])(e1), s = [], c = 0;
                if (n) for(var l = 0; l < n.length; l++){
                    var d = i[r[l]];
                    d ? (0 === c && (c = ju()), s[l] = d(n[l])) : s[l] = n[l];
                }
                var h, f = a.apply(null, s);
                return h = f, 0 !== c && Uu(c), f = function(e1) {
                    return "string" === t ? xe(e1) : "boolean" === t ? Boolean(e1) : e1;
                }(h), f;
            }, u.getValue = function(e1, t = "i8") {
                switch(t.endsWith("*") && (t = "*"), t){
                    case "i1":
                    case "i8":
                        return T[e1 >> 0];
                    case "i16":
                        return P[e1 >> 1];
                    case "i32":
                        return L[e1 >> 2];
                    case "i64":
                        return R[e1 >> 3];
                    case "float":
                        return B[e1 >> 2];
                    case "double":
                        return I[e1 >> 3];
                    case "*":
                        return D[e1 >> 2];
                    default:
                        K(`invalid type for getValue: ${t}`);
                }
            }, u.UTF8ToString = xe, u.specialHTMLTargets = au, u.FS_createPreloadedFile = Ce.createPreloadedFile, u.FS_createDataFile = Ce.createDataFile, u.FS_unlink = Ce.unlink, G = function e1() {
                ku || zu(), ku || (G = e1);
            }, u.preInit) for("function" == typeof u.preInit && (u.preInit = [
                u.preInit
            ]); u.preInit.length > 0;)u.preInit.pop()();
            var Wu = !0;
            return u.noInitialRun && (Wu = !1), zu(), e1.ready;
        });
        "object" == typeof e1 && "object" == typeof t ? t.exports = n : "function" == typeof define && define.amd && define([], ()=>n);
    }
}), Et = d(U()), St = d(ht());
function Ct(e1) {
    if (e1.isValid()) {
        const t = e1.value();
        return e1.delete(), t;
    }
    {
        const t = e1.error(), r = t.publicMessage();
        throw t.delete(), e1.delete(), new Error(r);
    }
}
function xt(e1) {
    return new Promise((t, r)=>{
        e1((e1)=>{
            try {
                const r = Ct(e1);
                t(r);
            } catch (e1) {
                r(e1);
            }
        });
    });
}
var kt = (e1, t = !0)=>{
    const r = [];
    for(let t = 0; t < e1.size(); t += 1)r.push(e1.get(t));
    return t && e1.delete(), r;
}, Tt = new WeakMap, At = {
    assets: [],
    total: 0,
    currentPage: 0,
    nextPage: void 0
}, AssetAPI = class {
    #e;
    constructor(e1){
        this.#e = e1;
    }
    #t = new Set;
    #r = new Set;
    unstable_registerApplyAssetMiddleware(e1) {
        return this.#t.add(e1), ()=>{
            this.#t.delete(e1);
        };
    }
    unstable_registerApplyAssetToBlockMiddleware(e1) {
        return this.#r.add(e1), ()=>{
            this.#r.delete(e1);
        };
    }
    addSource(e1) {
        const t = e1.getSupportedMimeTypes?.bind(e1), r = e1.getGroups?.bind(e1), n = e1.applyAsset?.bind(e1), o = e1.applyAssetToBlock?.bind(e1), i = e1.addAsset?.bind(e1), a = e1.removeAsset?.bind(e1), s = e1.credits, u = e1.license;
        Ct(this.#e.addAssetSource(e1.id, async (t, r)=>{
            try {
                const n = {
                    ...t,
                    sortKey: t.sortKey,
                    sortingOrder: t.sortingOrder,
                    sortActiveFirst: t.sortActiveFirst,
                    tags: kt(t.tags),
                    groups: kt(t.groups),
                    excludeGroups: kt(t.excludeGroups)
                }, o = await e1.findAssets(n);
                if (o) {
                    const t = {
                        ...o,
                        assets: o.assets.map((t)=>Pt(t, e1.id))
                    };
                    r.invoke(t);
                } else r.invoke(At);
            } catch (e1) {
                r.invoke(e1.message ?? "Unknown error in user-defined `findAssets`");
            }
        }, r ? async (e1)=>{
            try {
                const t = await r();
                e1.invoke(t);
            } catch (t) {
                e1.invoke(t.message ?? "Unknown error in user-defined `getGroups`");
            }
        } : null, s ? ()=>({
                name: s.name,
                url: s.url ?? ""
            }) : null, u ? ()=>({
                name: u.name,
                url: u.url ?? ""
            }) : null, t ? ()=>t() ?? [] : null, n ? async (e1, t)=>{
            try {
                const r = await n(this.#n(e1));
                t.invoke(r);
            } catch (e1) {
                t.invoke(e1.message ?? "Unknown error in user-defined `applyAsset`");
            }
        } : null, o ? async (e1, t, r)=>{
            try {
                await o(this.#n(e1), t), r.invoke({});
            } catch (e1) {
                r.invoke(e1.message ?? "Unknown error in user-defined `applyAssetToBlock`");
            }
        } : null, i ? async (e1)=>{
            i(e1);
        } : null, a ? async (e1)=>{
            a(e1);
        } : null)), this.#o(e1.id, e1);
    }
    addLocalSource(e1, t, r, n) {
        Ct(this.#e.addLocalAssetSource(e1, t ?? [], r ? async (e1, t)=>{
            try {
                const n = await r(this.#n(e1));
                t.invoke(n);
            } catch (e1) {
                t.invoke(e1.message ?? "Unknown error in user-defined `applyAsset`");
            }
        } : null, n ? async (e1, t, r)=>{
            try {
                await n(this.#n(e1), t), r.invoke({});
            } catch (e1) {
                r.invoke(e1.message ?? "Unknown error in user-defined `applyAssetToBlock`");
            }
        } : null));
    }
    removeSource(e1) {
        Ct(this.#e.removeAssetSource(e1)), this.#i(e1);
    }
    findAllSources() {
        return kt(this.#e.findAllAssetSources());
    }
    findAssets(e1, t) {
        return new Promise((r, n)=>{
            let o = t?.tags ?? [];
            Array.isArray(o) || (o = [
                o
            ]);
            const i = {
                perPage: t?.perPage ?? 0,
                page: t?.page ?? 0,
                query: t?.query ?? "",
                tags: o,
                groups: t?.groups ?? [],
                excludeGroups: t?.excludeGroups ?? [],
                locale: t?.locale ?? "",
                sortingOrder: t?.sortingOrder ?? "None",
                sortKey: t?.sortKey ?? "",
                sortActiveFirst: t?.sortActiveFirst ?? !1
            };
            this.#e.findAssetSourceAssets(e1, i, (e1)=>{
                try {
                    const t = Ct(e1);
                    r({
                        ...t,
                        nextPage: -1 === t.nextPage ? void 0 : t.nextPage
                    });
                } catch (e1) {
                    n(e1);
                }
            });
        });
    }
    #n(e1) {
        const t = {
            ...e1
        };
        return 0 === t.groups?.length && delete t.groups, t.locale || delete t.locale, t.label || delete t.label, 0 === t.tags?.length && delete t.tags, t.credits?.name || t.credits?.url ? t.credits.url || delete t.credits.url : delete t.credits, t.license?.name || t.license?.url ? t.license.url || delete t.license.url : delete t.license, t.utm?.source || t.utm?.medium ? (t.utm.source || delete t.utm.source, t.utm.medium || delete t.utm.medium) : delete t.utm, t;
    }
    async getGroups(e1) {
        return xt((t)=>this.#e.getAssetSourceGroups(e1, t)).then((e1)=>kt(e1));
    }
    getSupportedMimeTypes(e1) {
        return kt(Ct(this.#e.getAssetSourceSupportedMimeTypes(e1)));
    }
    getCredits(e1) {
        const t = Ct(this.#e.getAssetSourceCredits(e1));
        if (t.name || t.url) return t.url ? t : {
            name: t.name,
            url: void 0
        };
    }
    getLicense(e1) {
        const t = Ct(this.#e.getAssetSourceLicense(e1));
        if (t.name || t.url) return t.url ? t : {
            name: t.name,
            url: void 0
        };
    }
    canManageAssets(e1) {
        return !!Tt.get(this.#e)?.get(e1)?.canManageAssets;
    }
    addAssetToSource(e1, t) {
        Ct(this.#e.addAssetToSource(e1, t));
    }
    removeAssetFromSource(e1, t) {
        Ct(this.#e.removeAssetFromSource(e1, t));
    }
    #o(e1, t) {
        Tt.has(this.#e) || Tt.set(this.#e, new Map), t.canManageAssets && console.warn(`\nDEPRECATION WARNING:\n\n'canManageAssets' flag was found for asset source with the id '${e1}'.\n\nThis flag is deprecated and will be removed in the next version. If you have used it to control if an upload buttons is rendered in the asset library, use the 'canAdd' options on an asset library entry. See documentation here: https://img.ly/docs/cesdk/ui/guides/customize-asset-library/`), Tt.get(this.#e).set(e1, {
            canManageAssets: t.canManageAssets
        });
    }
    #i(e1) {
        Tt.get(this.#e)?.delete(e1);
    }
    async apply(e1, t) {
        const r = (e1, t)=>new Promise((r, n)=>{
                this.#e.applyAssetSourceAsset(e1, Pt(t, e1), (e1)=>{
                    try {
                        const t = Ct(e1);
                        this.#e.isValid(t) ? r(t) : r(void 0);
                    } catch (e1) {
                        n(e1);
                    }
                });
            });
        if (this.#t.size > 0) {
            return Array.from(this.#t).reduce((e1, t)=>(r, n)=>t(r, n, e1), r)(e1, t);
        }
        return r(e1, t);
    }
    async applyToBlock(e1, t, r) {
        const n = (e1, t, r)=>xt((n)=>this.#e.applyAssetSourceAssetToBlock(e1, Pt(t, e1), r, n));
        if (this.#r.size > 0) {
            return Array.from(this.#r).reduce((e1, t)=>(r, n, o)=>t(r, n, o, e1), n)(e1, t, r);
        }
        return n(e1, t, r);
    }
    async unstable_applyProperty(e1, t, r) {
        return xt((n)=>this.#e.unstable_applyAssetSourceProperty(e1, Pt(t, e1), r, n));
    }
    async defaultApplyAsset(e1) {
        return new Promise((t, r)=>{
            this.#e.defaultApplyAsset(Pt(e1, ""), (e1)=>{
                try {
                    const r = Ct(e1);
                    this.#e.isValid(r) ? t(r) : t(void 0);
                } catch (e1) {
                    r(e1);
                }
            });
        });
    }
    async defaultApplyAssetToBlock(e1, t) {
        return xt((r)=>this.#e.defaultApplyAssetToBlock(Pt(e1, ""), t, r));
    }
    onAssetSourceAdded = (e1)=>{
        const t = this.#e.subscribeToAssetSourceAdded(e1);
        return ()=>{
            this.#e.isDeleted() || Ct(this.#e.unsubscribe(t));
        };
    };
    onAssetSourceRemoved = (e1)=>{
        const t = this.#e.subscribeToAssetSourceRemoved(e1);
        return ()=>{
            this.#e.isDeleted() || Ct(this.#e.unsubscribe(t));
        };
    };
    onAssetSourceUpdated = (e1)=>{
        const t = this.#e.subscribeToAssetSourceUpdated(e1);
        return ()=>{
            this.#e.isDeleted() || Ct(this.#e.unsubscribe(t));
        };
    };
    assetSourceContentsChanged(e1) {
        Ct(this.#e.assetSourceContentsChanged(e1));
    }
    dispose() {
        Tt.delete(this.#e);
    }
};
function Pt(e1, t) {
    return "context" in e1 && e1.context.sourceId === t && "active" in e1 ? e1 : {
        ...e1,
        active: e1.active ?? !1,
        context: {
            sourceId: t
        }
    };
}
var Ft = class extends TypeError {
    constructor(e1, t){
        let r;
        const { message: n, ...o } = e1, { path: i } = e1;
        super(0 === i.length ? n : "At path: " + i.join(".") + " -- " + n), this.value = void 0, this.key = void 0, this.type = void 0, this.refinement = void 0, this.path = void 0, this.branch = void 0, this.failures = void 0, Object.assign(this, o), this.name = this.constructor.name, this.failures = ()=>{
            var n;
            return null != (n = r) ? n : r = [
                e1,
                ...t()
            ];
        };
    }
};
function Lt(e1) {
    return "object" == typeof e1 && null != e1;
}
function Dt(e1) {
    return "string" == typeof e1 ? JSON.stringify(e1) : "" + e1;
}
function Bt(e1, t, r, n) {
    if (!0 === e1) return;
    !1 === e1 ? e1 = {} : "string" == typeof e1 && (e1 = {
        message: e1
    });
    const { path: o, branch: i } = t, { type: a } = r, { refinement: s, message: u = "Expected a value of type `" + a + "`" + (s ? " with refinement `" + s + "`" : "") + ", but received: `" + Dt(n) + "`" } = e1;
    return {
        value: n,
        type: a,
        refinement: s,
        key: o[o.length - 1],
        path: o,
        branch: i,
        ...e1,
        message: u
    };
}
function* Rt(e1, t, r, n) {
    var o;
    Lt(o = e1) && "function" == typeof o[Symbol.iterator] || (e1 = [
        e1
    ]);
    for (const o of e1){
        const e1 = Bt(o, t, r, n);
        e1 && (yield e1);
    }
}
function* Mt(e1, t, r = {}) {
    const { path: n = [], branch: o = [
        e1
    ], coerce: i = !1, mask: a = !1 } = r, s = {
        path: n,
        branch: o
    };
    if (i && (e1 = t.coercer(e1, s), a && "type" !== t.type && Lt(t.schema) && Lt(e1) && !Array.isArray(e1))) for(const r in e1)void 0 === t.schema[r] && delete e1[r];
    let u = !0;
    for (const r of t.validator(e1, s))u = !1, yield [
        r,
        void 0
    ];
    for (let [r, c, l] of t.entries(e1, s)){
        const t = Mt(c, l, {
            path: void 0 === r ? n : [
                ...n,
                r
            ],
            branch: void 0 === r ? o : [
                ...o,
                c
            ],
            coerce: i,
            mask: a
        });
        for (const n of t)n[0] ? (u = !1, yield [
            n[0],
            void 0
        ]) : i && (c = n[1], void 0 === r ? e1 = c : e1 instanceof Map ? e1.set(r, c) : e1 instanceof Set ? e1.add(c) : Lt(e1) && (e1[r] = c));
    }
    if (u) for (const r of t.refiner(e1, s))u = !1, yield [
        r,
        void 0
    ];
    u && (yield [
        void 0,
        e1
    ]);
}
var It = class {
    constructor(e1){
        this.TYPE = void 0, this.type = void 0, this.schema = void 0, this.coercer = void 0, this.validator = void 0, this.refiner = void 0, this.entries = void 0;
        const { type: t, schema: r, validator: n, refiner: o, coercer: i = (e1)=>e1, entries: a = function*() {} } = e1;
        this.type = t, this.schema = r, this.entries = a, this.coercer = i, this.validator = n ? (e1, t)=>Rt(n(e1, t), t, this, e1) : ()=>[], this.refiner = o ? (e1, t)=>Rt(o(e1, t), t, this, e1) : ()=>[];
    }
    assert(e1) {
        return function(e1, t) {
            const r = Ot(e1, t);
            if (r[0]) throw r[0];
        }(e1, this);
    }
    create(e1) {
        return function(e1, t) {
            const r = Ot(e1, t, {
                coerce: !0
            });
            if (r[0]) throw r[0];
            return r[1];
        }(e1, this);
    }
    is(e1) {
        return function(e1, t) {
            const r = Ot(e1, t);
            return !r[0];
        }(e1, this);
    }
    mask(e1) {
        return function(e1, t) {
            const r = Ot(e1, t, {
                coerce: !0,
                mask: !0
            });
            if (r[0]) throw r[0];
            return r[1];
        }(e1, this);
    }
    validate(e1, t = {}) {
        return Ot(e1, this, t);
    }
};
function Ot(e1, t, r = {}) {
    const n = Mt(e1, t, r), o = function(e1) {
        const { done: t, value: r } = e1.next();
        return t ? void 0 : r;
    }(n);
    if (o[0]) {
        return [
            new Ft(o[0], function*() {
                for (const e1 of n)e1[0] && (yield e1[0]);
            }),
            void 0
        ];
    }
    return [
        void 0,
        o[1]
    ];
}
function jt(e1, t) {
    return new It({
        type: e1,
        schema: null,
        validator: t
    });
}
function Ut(e1) {
    return new It({
        type: "array",
        schema: e1,
        *entries (t) {
            if (e1 && Array.isArray(t)) for (const [r, n] of t.entries())yield [
                r,
                n,
                e1
            ];
        },
        coercer: (e1)=>Array.isArray(e1) ? e1.slice() : e1,
        validator: (e1)=>Array.isArray(e1) || "Expected an array value, but received: " + Dt(e1)
    });
}
function $t() {
    return jt("boolean", (e1)=>"boolean" == typeof e1);
}
function qt() {
    return jt("integer", (e1)=>"number" == typeof e1 && !isNaN(e1) && Number.isInteger(e1) || "Expected an integer, but received: " + Dt(e1));
}
function Ht() {
    return jt("number", (e1)=>"number" == typeof e1 && !isNaN(e1) || "Expected a number, but received: " + Dt(e1));
}
function Nt(e1) {
    const t = e1 ? Object.keys(e1) : [], r = jt("never", ()=>!1);
    return new It({
        type: "object",
        schema: e1 || null,
        *entries (n) {
            if (e1 && Lt(n)) {
                const o = new Set(Object.keys(n));
                for (const r of t)o.delete(r), yield [
                    r,
                    n[r],
                    e1[r]
                ];
                for (const e1 of o)yield [
                    e1,
                    n[e1],
                    r
                ];
            }
        },
        validator: (e1)=>Lt(e1) || "Expected an object, but received: " + Dt(e1),
        coercer: (e1)=>Lt(e1) ? {
                ...e1
            } : e1
    });
}
function Vt() {
    return jt("string", (e1)=>"string" == typeof e1 || "Expected a string, but received: " + Dt(e1));
}
function zt(e1, t, r = {}) {
    const { exclusive: n } = r;
    return Xt(e1, "max", (r)=>n ? r < t : r <= t || "Expected a " + e1.type + " less than " + (n ? "" : "or equal to ") + t + " but received `" + r + "`");
}
function Wt(e1, t, r = {}) {
    const { exclusive: n } = r;
    return Xt(e1, "min", (r)=>n ? r > t : r >= t || "Expected a " + e1.type + " greater than " + (n ? "" : "or equal to ") + t + " but received `" + r + "`");
}
function Gt(e1) {
    return Xt(e1, "nonempty", (t)=>{
        const r = function(e1) {
            return e1 instanceof Map || e1 instanceof Set ? e1.size : e1.length;
        }(t);
        return r > 0 || "Expected a nonempty " + e1.type + " but received an empty one";
    });
}
function Xt(e1, t, r) {
    return new It({
        ...e1,
        *refiner (n, o) {
            yield* e1.refiner(n, o);
            const i = Rt(r(n, o), o, e1, n);
            for (const e1 of i)yield {
                ...e1,
                refinement: t
            };
        }
    });
}
function Yt(e1, t, r) {
    const [n] = Ot(t, r);
    if (n) throw n.message = `Error in argument '${e1}': ${n.message}`, n;
}
function Kt() {
    const e1 = /image\/(png|jpeg|webp|x-tga)|audio\/(wav)|video\/(mp4|quicktime)|application\/octet-stream|application\/pdf/;
    return jt("MimeType", (t)=>!("string" != typeof t || !e1.test(t)) || {
            message: `expected one of "image/png", "image/jpeg", "image/webp", "image/x-tga", "video/mp4", "video/quicktime", "application/pdf" or "application/octet-stream", but got "${t}"`
        });
}
function Zt() {
    const e1 = [
        "Free",
        "VerticalStack",
        "HorizontalStack",
        "DepthStack"
    ];
    return jt("SceneLayout", (t)=>!("string" != typeof t || !e1.includes(t)) || {
            message: `expected one of ${e1.map((e1)=>`"${e1}"`).join(", ")}, but got "${t}"`
        });
}
var Qt = Symbol("PROXY");
function Jt(e1, t) {
    Object.defineProperty(e1, Qt, {
        value: {
            type: "getter"
        },
        writable: !1
    });
}
function er(e1, t) {
    Object.defineProperty(e1, Qt, {
        value: {
            type: "setter"
        },
        writable: !1
    });
}
var tr, rr = {};
function nr(e1, t, r) {
    return Object.hasOwnProperty.call(e1, t) ? ()=>{
        e1[t] = r;
    } : ()=>{
        delete e1[t];
    };
}
function or(e1) {
    return "r" in e1 && "a" in e1 && void 0 !== e1.r && void 0 !== e1.a;
}
function ir(e1) {
    return "name" in e1 && void 0 !== e1.name;
}
function ar(e1) {
    return "c" in e1 && "m" in e1 && "y" in e1 && "k" in e1 && void 0 !== e1.c && void 0 !== e1.m && void 0 !== e1.y && void 0 !== e1.k;
}
((e1)=>{
    let t;
    var r;
    (r = t = e1.ColorSpace || (e1.ColorSpace = {}))[r.sRGB = 0] = "sRGB", r[r.CMYK = 1] = "CMYK", r[r.SpotColor = 2] = "SpotColor", e1.toColor = function(e1) {
        switch(e1.colorSpace){
            case 0:
                return {
                    r: e1.components.x,
                    g: e1.components.y,
                    b: e1.components.z,
                    a: e1.components.w
                };
            case 2:
                return {
                    name: e1.spotColorName,
                    tint: e1.tint,
                    externalReference: e1.externalReference
                };
            case 1:
                return {
                    c: e1.components.x,
                    m: e1.components.y,
                    y: e1.components.z,
                    k: e1.components.w,
                    tint: e1.tint
                };
            default:
                throw new Error("Unknown color space!");
        }
    }, e1.fromColor = function(e1) {
        if (or(e1)) return {
            colorSpace: 0,
            components: {
                x: e1.r,
                y: e1.g,
                z: e1.b,
                w: e1.a
            },
            spotColorName: "",
            tint: 1,
            externalReference: ""
        };
        if (ar(e1)) return {
            colorSpace: 1,
            components: {
                x: e1.c,
                y: e1.m,
                z: e1.y,
                w: e1.k
            },
            spotColorName: "",
            tint: e1.tint,
            externalReference: ""
        };
        if (ir(e1)) return {
            colorSpace: 2,
            components: {
                x: 0,
                y: 0,
                z: 0,
                w: 0
            },
            spotColorName: e1.name,
            tint: e1.tint,
            externalReference: e1.externalReference
        };
        throw new Error("Unknown color space!");
    };
})(tr || (tr = {}));
var sr, ur, cr, lr, dr, hr, fr, pr, mr, gr, vr, yr, br, wr, _r, Er, Sr, Cr, xr, kr, Tr, Ar, Pr, Fr, Lr, Dr, Br, Rr, Mr, Ir, Or, jr, Ur, $r, qr, Hr, Nr, Vr, zr, Wr, Gr, Xr, Yr, Kr, Zr, Qr, Jr, en, tn, rn, nn, on, an, sn, un, cn, ln, dn, hn, fn, pn, mn, gn, vn, yn, bn, wn, _n, En, Sn, Cn, xn, kn, Tn, An, Pn, Fn, Ln, Dn, Bn, Rn, Mn, In, On, jn, Un, $n, qn, Hn, Nn, Vn, zn, Wn, Gn, Xn, Yn, Kn, Zn, Qn, Jn, eo, to, ro, no, oo, io, ao, so, uo, co, lo, ho, fo, po, mo, go, vo, yo, bo, wo, _o, Eo, So, Co, xo, ko, To, Ao, Po, Fo, Lo, Do, Bo, Ro, Mo, Io, Oo, jo, Uo, $o, qo, Ho, No, Vo, zo, Wo, Go, Xo, Yo, Ko, Zo, Qo, Jo, ei, ti, ri, ni, oi, ii, ai, si, ui, ci, li, di, hi, fi, pi, mi, gi, vi, yi, bi, wi, _i, Ei, Si, Ci, xi, ki, Ti, Ai, Pi, Fi, Li, Di, Bi, Ri, Mi, Ii, Oi, ji, Ui, $i, qi, Hi, Ni, Vi, zi, Wi, Gi, Xi, Yi, Ki, Zi, Qi, Ji, ea, ta, ra, na, oa, ia, aa, sa, ua, ca, la, da, ha, fa, pa, ma, ga, va, ya, ba, wa, _a, Ea, Sa, Ca, xa, ka, Ta, Aa, Pa, Fa, La, Da, Ba, Ra, Ma, Ia, Oa, ja, Ua, $a, qa, Ha, Na, Va, za, Wa, Ga, Xa, Ya, Ka, Za, Qa, Ja, es, ts, rs, ns, os, is, as, ss, us, cs, ls, ds, hs, fs, ps, ms, gs, vs, ys, bs, ws, _s, Es, Ss, Cs, xs, ks, Ts, As, Ps, Fs, Ls, Ds, Bs, Rs, Ms, Is, Os, js, Us, $s, qs, Hs, Ns, Vs, zs, Ws, Gs, Xs, Ys, Ks, Zs, Qs, Js, eu, tu, ru, nu, ou, iu, au, su, uu, cu, lu, du, hu, fu, pu = ((e1)=>(e1.Png = "image/png", e1.Jpeg = "image/jpeg", e1.WebP = "image/webp", e1.Tga = "image/x-tga", e1.Wav = "audio/wav", e1.Mp4 = "video/mp4", e1.QuickTime = "video/quicktime", e1.Binary = "application/octet-stream", e1.Pdf = "application/pdf", e1.Zip = "application/zip", e1))(pu || {}), mu = pu, gu = "undefined" != typeof Blob ? Blob : (()=>{
    try {
        return mt().Blob;
    } catch (e1) {
        return function() {
            throw new Error("Could not find Blob constructor and failed to require('buffer').Blob");
        };
    }
})();
du = [
    er
], lu = [
    er
], cu = [
    er
], uu = [
    er
], su = [
    Jt
], au = [
    Jt
], iu = [
    er
], ou = [
    er
], nu = [
    er
], ru = [
    Jt
], tu = [
    Jt
], eu = [
    Jt
], Js = [
    er
], Qs = [
    er
], Zs = [
    er
], Ks = [
    er
], Ys = [
    Jt
], Xs = [
    er
], Gs = [
    er
], Ws = [
    Jt
], zs = [
    Jt
], Vs = [
    Jt
], Ns = [
    Jt
], Hs = [
    Jt
], qs = [
    Jt
], $s = [
    Jt
], Us = [
    er
], js = [
    Jt
], Os = [
    Jt
], Is = [
    Jt
], Ms = [
    er
], Rs = [
    Jt
], Bs = [
    er
], Ds = [
    Jt
], Ls = [
    er
], Fs = [
    Jt
], Ps = [
    er
], As = [
    Jt
], Ts = [
    Jt
], ks = [
    Jt
], xs = [
    Jt
], Cs = [
    er
], Ss = [
    er
], Es = [
    er
], _s = [
    er
], ws = [
    er
], bs = [
    er
], ys = [
    Jt
], vs = [
    Jt
], gs = [
    er
], ms = [
    er
], ps = [
    er
], fs = [
    er
], hs = [
    Jt
], ds = [
    er
], ls = [
    Jt
], cs = [
    Jt
], us = [
    er
], ss = [
    er
], as = [
    Jt
], is = [
    Jt
], os = [
    Jt
], ns = [
    Jt
], rs = [
    Jt
], ts = [
    Jt
], es = [
    er
], Ja = [
    er
], Qa = [
    er
], Za = [
    er
], Ka = [
    Jt
], Ya = [
    Jt
], Xa = [
    Jt
], Ga = [
    Jt
], Wa = [
    er
], za = [
    Jt
], Va = [
    er
], Na = [
    er
], Ha = [
    Jt
], qa = [
    Jt
], $a = [
    Jt
], Ua = [
    er
], ja = [
    er
], Oa = [
    Jt
], Ia = [
    Jt
], Ma = [
    Jt
], Ra = [
    Jt
], Ba = [
    Jt
], Da = [
    Jt
], La = [
    er
], Fa = [
    er
], Pa = [
    Jt
], Aa = [
    er
], Ta = [
    er
], ka = [
    er
], xa = [
    er
], Ca = [
    er
], Sa = [
    er
], Ea = [
    Jt
], _a = [
    Jt
], wa = [
    Jt
], ba = [
    Jt
], ya = [
    Jt
], va = [
    er
], ga = [
    Jt
], ma = [
    er
], pa = [
    Jt
], fa = [
    er
], ha = [
    Jt
], da = [
    er
], la = [
    Jt
], ca = [
    er
], ua = [
    Jt
], sa = [
    er
], aa = [
    Jt
], ia = [
    er
], oa = [
    Jt
], na = [
    er
], ra = [
    Jt
], ta = [
    Jt
], ea = [
    er
], Ji = [
    Jt
], Qi = [
    Jt
], Zi = [
    er
], Ki = [
    er
], Yi = [
    er
], Xi = [
    er
], Gi = [
    Jt
], Wi = [
    Jt
], zi = [
    Jt
], Vi = [
    er
], Ni = [
    er
], Hi = [
    er
], qi = [
    er
], $i = [
    er
], Ui = [
    er
], ji = [
    er
], Oi = [
    Jt
], Ii = [
    Jt
], Mi = [
    Jt
], Ri = [
    Jt
], Bi = [
    Jt
], Di = [
    Jt
], Li = [
    er
], Fi = [
    er
], Pi = [
    er
], Ai = [
    Jt
], Ti = [
    Jt
], ki = [
    er
], xi = [
    Jt
], Ci = [
    Jt
], Si = [
    Jt
], Ei = [
    er
], _i = [
    Jt
], wi = [
    Jt
], bi = [
    Jt
], yi = [
    er
], vi = [
    er
], gi = [
    Jt
], mi = [
    er
], pi = [
    Jt
], fi = [
    er
], hi = [
    Jt
], di = [
    Jt
], li = [
    Jt
], ci = [
    er
], ui = [
    er
], si = [
    er
], ai = [
    Jt
], ii = [
    er
], oi = [
    Jt
], ni = [
    er
], ri = [
    Jt
], ti = [
    Jt
], ei = [
    er
], Jo = [
    Jt
], Qo = [
    er
], Zo = [
    Jt
], Ko = [
    Jt
], Yo = [
    Jt
], Xo = [
    er
], Go = [
    Jt
], Wo = [
    er
], zo = [
    Jt
], Vo = [
    Jt
], No = [
    Jt
], Ho = [
    er
], qo = [
    Jt
], $o = [
    er
], Uo = [
    er
], jo = [
    Jt
], Oo = [
    Jt
], Io = [
    er
], Mo = [
    Jt
], Ro = [
    er
], Bo = [
    Jt
], Do = [
    er
], Lo = [
    Jt
], Fo = [
    er
], Po = [
    Jt
], Ao = [
    Jt
], To = [
    Jt
], ko = [
    er
], xo = [
    Jt
], Co = [
    er
], So = [
    er
], Eo = [
    Jt
], _o = [
    Jt
], wo = [
    er
], bo = [
    Jt
], yo = [
    er
], vo = [
    Jt
], go = [
    er
], mo = [
    Jt
], po = [
    er
], fo = [
    Jt
], ho = [
    er
], lo = [
    Jt
], co = [
    er
], uo = [
    er
], so = [
    er
], ao = [
    er
], io = [
    er
], oo = [
    er
], no = [
    Jt
], ro = [
    er
], to = [
    Jt
], eo = [
    er
], Jn = [
    Jt
], Qn = [
    er
], Zn = [
    Jt
], Kn = [
    Jt
], Yn = [
    er
], Xn = [
    Jt
], Gn = [
    Jt
], Wn = [
    er
], zn = [
    er
], Vn = [
    er
], Nn = [
    er
], Hn = [
    Jt
], qn = [
    Jt
], $n = [
    Jt
], Un = [
    Jt
], jn = [
    Jt
], On = [
    Jt
], In = [
    Jt
], Mn = [
    Jt
], Rn = [
    er
], Bn = [
    Jt
], Dn = [
    er
], Ln = [
    er
], Fn = [
    Jt
], Pn = [
    er
], An = [
    Jt
], Tn = [
    Jt
], kn = [
    Jt
], xn = [
    er
], Cn = [
    Jt
], Sn = [
    Jt
], En = [
    Jt
], _n = [
    er
], wn = [
    Jt
], bn = [
    er
], yn = [
    Jt
], vn = [
    er
], gn = [
    Jt
], mn = [
    Jt
], pn = [
    Jt
], fn = [
    er
], hn = [
    er
], dn = [
    Jt
], ln = [
    Jt
], cn = [
    Jt
], un = [
    Jt
], sn = [
    er
], an = [
    Jt
], on = [
    er
], nn = [
    Jt
], rn = [
    Jt
], tn = [
    er
], en = [
    Jt
], Jr = [
    Jt
], Qr = [
    er
], Zr = [
    Jt
], Kr = [
    Jt
], Yr = [
    Jt
], Xr = [
    er
], Gr = [
    Jt
], Wr = [
    er
], zr = [
    Jt
], Vr = [
    Jt
], Nr = [
    er
], Hr = [
    Jt
], qr = [
    Jt
], $r = [
    Jt
], Ur = [
    er
], jr = [
    Jt
], Or = [
    Jt
], Ir = [
    er
], Mr = [
    Jt
], Rr = [
    Jt
], Br = [
    Jt
], Dr = [
    er
], Lr = [
    Jt
], Fr = [
    er
], Pr = [
    Jt
], Ar = [
    er
], Tr = [
    Jt
], kr = [
    er
], xr = [
    Jt
], Cr = [
    Jt
], Sr = [
    Jt
], Er = [
    Jt
], _r = [
    Jt
], wr = [
    Jt
], br = [
    Jt
], yr = [
    er
], vr = [
    Jt
], gr = [
    er
], mr = [
    er
], pr = [
    er
], fr = [
    Jt
], hr = [
    Jt
], dr = [
    Jt
], lr = [
    er
], cr = [
    Jt
], ur = [
    er
], sr = [
    er
];
var BlockAPI = class {
    constructor(e1){
        v(fu, 5, this), S(this, hu), b(this, "onSelectionChanged", (e1)=>{
            const t = E(this, hu).subscribeToSelectionChange(e1);
            return ()=>{
                E(this, hu).isDeleted() || Ct(E(this, hu).unsubscribe(t));
            };
        }), b(this, "onClicked", (e1)=>{
            const t = E(this, hu).subscribeToBlockClicked(e1);
            return ()=>{
                E(this, hu).isDeleted() || Ct(E(this, hu).unsubscribe(t));
            };
        }), b(this, "onStateChanged", (e1, t)=>{
            Yt("ids", e1, Ut(qt()));
            const r = E(this, hu).subscribeToBlockState(e1, (e1)=>{
                try {
                    t(kt(e1, !0));
                } catch (e1) {
                    console.error(e1);
                }
            });
            return ()=>{
                E(this, hu).isDeleted() || Ct(E(this, hu).unsubscribe(r));
            };
        }), C(this, hu, e1);
    }
    async export(e1, t = mu.Png, r = {}) {
        Yt("handle", e1, Ht()), Yt("mimeType", t, Kt()), Yt("options", r, Nt());
        const n = null != r.targetWidth && null != r.targetHeight, o = r.jpegQuality ?? .9, i = r.webpQuality ?? 1, a = r.pngCompressionLevel ?? 5;
        return Yt("jpegQuality", o, Wt(zt(Ht(), 1), 0, {
            exclusive: !0
        })), Yt("webpQuality", i, Wt(zt(Ht(), 1), 0, {
            exclusive: !0
        })), Yt("pngCompressionLevel", a, Wt(zt(qt(), 9), 0)), null == r.targetWidth && null == r.targetHeight || (Yt("targetWidth", r.targetWidth, Ht()), Yt("targetHeight", r.targetHeight, Ht())), new Promise((s, u)=>{
            E(this, hu).exportToBuffer(e1, t, (e1)=>{
                "error" in e1 ? u(e1.error) : s(new gu([
                    e1
                ], {
                    type: t
                }));
            }, {
                pngCompressionLevel: a,
                jpegQuality: o,
                webpQuality: i,
                useTargetSize: n,
                targetWidth: r.targetWidth ?? 0,
                targetHeight: r.targetHeight ?? 0,
                exportPdfWithHighCompatibility: r.exportPdfWithHighCompatibility ?? !0,
                exportPdfWithUnderlayer: r.exportPdfWithUnderlayer ?? !1,
                underlayerSpotColorName: r.underlayerSpotColorName ?? "",
                underlayerOffset: r.underlayerOffset ?? 0
            });
        });
    }
    async exportWithColorMask(e1, t = mu.Png, r, n, o, i = {}) {
        Yt("handle", e1, Ht()), Yt("mimeType", t, Kt()), Yt("options", i, Nt());
        const a = null != i.targetWidth && null != i.targetHeight, s = i.jpegQuality ?? .9, u = i.webpQuality ?? 1, c = i.pngCompressionLevel ?? 5;
        return Yt("jpegQuality", s, Wt(zt(Ht(), 1), 0, {
            exclusive: !0
        })), Yt("webpQuality", u, Wt(zt(Ht(), 1), 0, {
            exclusive: !0
        })), Yt("pngCompressionLevel", c, Wt(zt(qt(), 9), 0)), null == i.targetWidth && null == i.targetHeight || (Yt("targetWidth", i.targetWidth, Ht()), Yt("targetHeight", i.targetHeight, Ht())), new Promise((l, d)=>{
            E(this, hu).exportWithColorMaskToBuffer(e1, t, r, n, o, (e1, r)=>{
                if ("error" in e1) d(e1.error);
                else if ("error" in r) d(r.error);
                else {
                    const n = new gu([
                        e1
                    ], {
                        type: t
                    }), o = new gu([
                        r
                    ], {
                        type: t
                    });
                    l([
                        n,
                        o
                    ]);
                }
            }, {
                pngCompressionLevel: c,
                jpegQuality: s,
                webpQuality: u,
                useTargetSize: a,
                targetWidth: i.targetWidth ?? 0,
                targetHeight: i.targetHeight ?? 0,
                exportPdfWithHighCompatibility: i.exportPdfWithHighCompatibility ?? !0,
                exportPdfWithUnderlayer: i.exportPdfWithUnderlayer ?? !1,
                underlayerSpotColorName: i.underlayerSpotColorName ?? "",
                underlayerOffset: i.underlayerOffset ?? 0
            });
        });
    }
    async exportVideo(e1, t = mu.Mp4, r, n) {
        throw new Error("Method not implemented. An implementation is available on the BlockAPI at engine.block or cesdk.engine.block");
    }
    async unstable_exportAudio(e1, t = mu.Wav, r, n) {
        return Yt("handle", e1, Ht()), Yt("mimeType", t, Kt()), Yt("options", n, Nt()), new Promise((o, i)=>{
            E(this, hu).unstable_exportAudioToBuffer(e1, n.timeOffset ?? 0, n.duration ?? 0, t, r, (e1)=>{
                "error" in e1 ? i(e1.error) : o(new gu([
                    e1
                ], {
                    type: t
                }));
            }, {
                sampleRate: n.sampleRate ?? 48e3,
                numberOfChannels: n.numberOfChannels ?? 2
            });
        });
    }
    async loadFromString(e1) {
        return Yt("content", e1, Vt()), xt((t)=>E(this, hu).loadBlocksFromString(e1, t)).then((e1)=>kt(e1));
    }
    loadFromArchiveURL(e1) {
        return Yt("url", e1, Vt()), xt((t)=>E(this, hu).loadBlocksFromArchiveURL(e1, t)).then((e1)=>kt(e1));
    }
    async saveToString(e1, t = [
        "buffer",
        "http",
        "https"
    ]) {
        return Yt("blocks", e1, Ut(Ht())), xt((r)=>E(this, hu).saveBlocksToString(e1, r, t));
    }
    async saveToArchive(e1) {
        return Yt("blocks", e1, Ut(Ht())), new Promise((t, r)=>{
            E(this, hu).saveBlocksToArchive(e1, (e1)=>{
                "error" in e1 ? r(e1.error) : t(new gu([
                    e1
                ], {
                    type: mu.Zip
                }));
            });
        });
    }
    create(e1) {
        return Yt("type", e1, Vt()), Ct(E(this, hu).create(e1));
    }
    createFill(e1) {
        return Yt("type", e1, Vt()), Ct(E(this, hu).createFill(e1));
    }
    getType(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getType(e1));
    }
    getKind(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getKind(e1));
    }
    setKind(e1, t) {
        Yt("id", e1, qt()), Ct(E(this, hu).setKind(e1, t));
    }
    select(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).select(e1));
    }
    setSelected(e1, t) {
        return Yt("id", e1, qt()), Yt("selected", t, $t()), Ct(E(this, hu).setSelected(e1, t));
    }
    isSelected(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isSelected(e1));
    }
    findAllSelected() {
        return kt(E(this, hu).findAllSelected());
    }
    isGroupable(e1) {
        return Yt("ids", e1, Ut(Ht())), Ct(E(this, hu).isGroupable(e1));
    }
    group(e1) {
        return Yt("ids", e1, Gt(Ut(Ht()))), Ct(E(this, hu).group(e1));
    }
    ungroup(e1) {
        return Yt("id", e1, Ht()), Ct(E(this, hu).ungroup(e1));
    }
    enterGroup(e1) {
        return Yt("id", e1, Ht()), Ct(E(this, hu).enterGroup(e1));
    }
    exitGroup(e1) {
        return Yt("id", e1, Ht()), Ct(E(this, hu).exitGroup(e1));
    }
    isCombinable(e1) {
        return Yt("ids", e1, Ut(Ht())), Ct(E(this, hu).isCombinable(e1));
    }
    combine(e1, t) {
        return Yt("ids", e1, Ut(Ht())), Yt("op", t, Vt()), Ct(E(this, hu).combine(e1, t));
    }
    setName(e1, t) {
        return Yt("id", e1, qt()), Yt("name", t, Vt()), Ct(E(this, hu).setName(e1, t));
    }
    getName(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getName(e1));
    }
    getUUID(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getUUID(e1));
    }
    findByName(e1) {
        Yt("name", e1, Vt());
        const t = E(this, hu).findByName(e1);
        return kt(t);
    }
    findByType(e1) {
        Yt("type", e1, Vt());
        const t = Ct(E(this, hu).findByType(e1));
        return kt(t);
    }
    findByKind(e1) {
        Yt("kind", e1, Vt());
        const t = Ct(E(this, hu).findByKind(e1));
        return kt(t);
    }
    findAll() {
        return kt(E(this, hu).findAll());
    }
    findAllPlaceholders() {
        return kt(E(this, hu).findAllPlaceholders());
    }
    createShape(e1) {
        return Yt("type", e1, Vt()), Ct(E(this, hu).createShape(e1));
    }
    hasShape(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasShape(e1));
    }
    supportsShape(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsShape(e1));
    }
    getShape(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getShape(e1));
    }
    setShape(e1, t) {
        return Yt("id", e1, qt()), Yt("shape", t, qt()), Ct(E(this, hu).setShape(e1, t));
    }
    isVisible(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isVisible(e1));
    }
    setVisible(e1, t) {
        return Yt("id", e1, qt()), Yt("visible", t, $t()), Ct(E(this, hu).setVisible(e1, t));
    }
    isClipped(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isClipped(e1));
    }
    setClipped(e1, t) {
        return Yt("id", e1, qt()), Yt("clipped", t, $t()), Ct(E(this, hu).setClipped(e1, t));
    }
    isTransformLocked(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isTransformLocked(e1));
    }
    setTransformLocked(e1, t) {
        return Yt("id", e1, qt()), Yt("locked", t, $t()), Ct(E(this, hu).setTransformLocked(e1, t));
    }
    getPositionX(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getPositionX(e1));
    }
    getPositionXMode(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getPositionXMode(e1));
    }
    getPositionY(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getPositionY(e1));
    }
    getPositionYMode(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getPositionYMode(e1));
    }
    setPositionX(e1, t) {
        return Yt("id", e1, qt()), Yt("value", t, Ht()), Ct(E(this, hu).setPositionX(e1, t));
    }
    setPositionXMode(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setPositionXMode(e1, t));
    }
    setPositionY(e1, t) {
        return Yt("id", e1, qt()), Yt("value", t, Ht()), Ct(E(this, hu).setPositionY(e1, t));
    }
    setPositionYMode(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setPositionYMode(e1, t));
    }
    setAlwaysOnTop(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setAlwaysOnTop(e1, t));
    }
    setAlwaysOnBottom(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setAlwaysOnBottom(e1, t));
    }
    isAlwaysOnTop(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isAlwaysOnTop(e1));
    }
    isAlwaysOnBottom(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isAlwaysOnBottom(e1));
    }
    bringToFront(e1) {
        return Yt("id", e1, Ht()), Ct(E(this, hu).bringToFront(e1));
    }
    sendToBack(e1) {
        return Yt("id", e1, Ht()), Ct(E(this, hu).sendToBack(e1));
    }
    bringForward(e1) {
        return Yt("id", e1, Ht()), Ct(E(this, hu).bringForward(e1));
    }
    sendBackward(e1) {
        return Yt("id", e1, Ht()), Ct(E(this, hu).sendBackward(e1));
    }
    getRotation(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getRotation(e1));
    }
    setRotation(e1, t) {
        return Yt("id", e1, qt()), Yt("radians", t, Ht()), Ct(E(this, hu).setRotation(e1, t));
    }
    getFlipHorizontal(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getFlip(e1)).horizontal;
    }
    getFlipVertical(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getFlip(e1)).vertical;
    }
    setFlipHorizontal(e1, t) {
        return Yt("id", e1, qt()), Yt("flip", t, $t()), Ct(E(this, hu).setFlipHorizontal(e1, t));
    }
    setFlipVertical(e1, t) {
        return Yt("id", e1, qt()), Yt("flip", t, $t()), Ct(E(this, hu).setFlipVertical(e1, t));
    }
    hasContentFillMode(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasContentFillMode(e1));
    }
    supportsContentFillMode(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsContentFillMode(e1));
    }
    getWidth(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getWidth(e1));
    }
    getWidthMode(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getWidthMode(e1));
    }
    getHeight(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getHeight(e1));
    }
    getHeightMode(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getHeightMode(e1));
    }
    setWidth(e1, t, r) {
        return Yt("id", e1, qt()), Yt("value", t, Ht()), Yt("maintainCrop", r ?? !1, $t()), Ct(E(this, hu).setWidth(e1, t, r ?? !1));
    }
    setWidthMode(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setWidthMode(e1, t));
    }
    setHeight(e1, t, r) {
        return Yt("id", e1, qt()), Yt("value", t, Ht()), Yt("maintainCrop", r ?? !1, $t()), Ct(E(this, hu).setHeight(e1, t, r ?? !1));
    }
    setHeightMode(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setHeightMode(e1, t));
    }
    getFrameX(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getLastFrameX(e1));
    }
    getFrameY(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getLastFrameY(e1));
    }
    getFrameWidth(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getLastFrameWidth(e1));
    }
    getFrameHeight(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getLastFrameHeight(e1));
    }
    setContentFillMode(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setContentFillMode(e1, t));
    }
    getContentFillMode(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getContentFillMode(e1));
    }
    duplicate(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).duplicate(e1));
    }
    destroy(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).destroy(e1));
    }
    isValid(e1) {
        return Yt("id", e1, qt()), E(this, hu).isValid(e1);
    }
    getParent(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasParent(e1)) ? Ct(E(this, hu).getParent(e1)) : null;
    }
    getChildren(e1) {
        Yt("id", e1, qt());
        const t = Ct(E(this, hu).getChildren(e1));
        return kt(t);
    }
    insertChild(e1, t, r) {
        return Yt("parent", e1, Ht()), Yt("child", t, Ht()), Yt("index", r, Wt(Ht(), 0)), Ct(E(this, hu).insertChild(e1, t, r));
    }
    appendChild(e1, t) {
        return Yt("parent", e1, Ht()), Yt("child", t, Ht()), Ct(E(this, hu).appendChild(e1, t));
    }
    referencesAnyVariables(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).referencesAnyVariables(e1));
    }
    getGlobalBoundingBoxX(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getGlobalBoundingBoxX(e1));
    }
    getGlobalBoundingBoxY(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getGlobalBoundingBoxY(e1));
    }
    getGlobalBoundingBoxWidth(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getGlobalBoundingBoxWidth(e1));
    }
    getGlobalBoundingBoxHeight(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getGlobalBoundingBoxHeight(e1));
    }
    getScreenSpaceBoundingBoxXYWH(e1) {
        return Yt("ids", e1, Ut(Ht())), Ct(E(this, hu).getScreenSpaceBoundingBoxXYWH(e1));
    }
    alignHorizontally(e1, t) {
        return Yt("ids", e1, Gt(Ut(Ht()))), Ct(E(this, hu).alignHorizontally(e1, t));
    }
    alignVertically(e1, t) {
        return Yt("ids", e1, Gt(Ut(Ht()))), Ct(E(this, hu).alignVertically(e1, t));
    }
    isAlignable(e1) {
        return Yt("ids", e1, Ut(Ht())), Ct(E(this, hu).isAlignable(e1));
    }
    distributeHorizontally(e1) {
        return Yt("ids", e1, Gt(Ut(Ht()))), Ct(E(this, hu).distributeHorizontally(e1));
    }
    distributeVertically(e1) {
        return Yt("ids", e1, Gt(Ut(Ht()))), Ct(E(this, hu).distributeVertically(e1));
    }
    isDistributable(e1) {
        return Yt("ids", e1, Ut(Ht())), Ct(E(this, hu).isDistributable(e1));
    }
    fillParent(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).fillParent(e1));
    }
    resizeContentAware(e1, t, r) {
        return Yt("ids", e1, Ut(Ht())), Yt("width", t, Ht()), Yt("height", r, Ht()), Ct(E(this, hu).resizeContentAware(e1, t, r));
    }
    scale(e1, t, r = 0, n = 0) {
        return Yt("id", e1, qt()), Ct(E(this, hu).scale(e1, t, r, n));
    }
    findAllProperties(e1) {
        return Yt("id", e1, qt()), kt(Ct(E(this, hu).findAllProperties(e1)));
    }
    isPropertyReadable(e1) {
        return Yt("property", e1, Vt()), E(this, hu).isPropertyReadable(e1);
    }
    isPropertyWritable(e1) {
        return Yt("property", e1, Vt()), E(this, hu).isPropertyWritable(e1);
    }
    getPropertyType(e1) {
        Yt("property", e1, Vt());
        return Ct(E(this, hu).getPropertyType(e1));
    }
    getEnumValues(e1) {
        return Yt("enumProperty", e1, Vt()), kt(Ct(E(this, hu).getEnumValues(e1)));
    }
    setBool(e1, t, r) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("value", r, $t()), Ct(E(this, hu).setBool(e1, t, r));
    }
    getBool(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Ct(E(this, hu).getBool(e1, t));
    }
    setInt(e1, t, r) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("value", r, qt()), Ct(E(this, hu).setInt(e1, t, r));
    }
    getInt(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Ct(E(this, hu).getInt(e1, t));
    }
    setFloat(e1, t, r) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("value", r, Ht()), Ct(E(this, hu).setFloat(e1, t, r));
    }
    getFloat(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Ct(E(this, hu).getFloat(e1, t));
    }
    setDouble(e1, t, r) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("value", r, Ht()), Ct(E(this, hu).setDouble(e1, t, r));
    }
    getDouble(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Ct(E(this, hu).getDouble(e1, t));
    }
    setString(e1, t, r) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("value", r, Vt()), Ct(E(this, hu).setString(e1, t, r));
    }
    getString(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Ct(E(this, hu).getString(e1, t));
    }
    setColor(e1, t, r) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Ct(E(this, hu).setColor(e1, t, tr.fromColor(r)));
    }
    getColor(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), tr.toColor(Ct(E(this, hu).getColor(e1, t)));
    }
    setColorRGBA(e1, t, r, n, o, i = 1) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("r", r, Ht()), Yt("g", n, Ht()), Yt("b", o, Ht()), Yt("a", i, Ht()), Ct(E(this, hu).setColorRGBA(e1, t, r, n, o, i));
    }
    getColorRGBA(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Ct(E(this, hu).getColorRGBA(e1, t));
    }
    setColorSpot(e1, t, r, n = 1) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("name", r, Vt()), Yt("tint", n, Ht()), Ct(E(this, hu).setColorSpot(e1, t, r, n));
    }
    getColorSpotName(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Ct(E(this, hu).getColorSpotName(e1, t));
    }
    getColorSpotTint(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Ct(E(this, hu).getColorSpotTint(e1, t));
    }
    setGradientColorStops(e1, t, r) {
        Yt("id", e1, qt()), Yt("property", t, Vt());
        const n = r.map((e1)=>({
                color: tr.fromColor(e1.color),
                stop: e1.stop
            }));
        return Ct(E(this, hu).setGradientColorStops(e1, t, n));
    }
    getGradientColorStops(e1, t) {
        Yt("id", e1, qt()), Yt("property", t, Vt());
        const r = Ct(E(this, hu).getGradientColorStops(e1, t));
        return kt(r).map((e1)=>({
                color: tr.toColor(e1.color),
                stop: e1.stop
            }));
    }
    getSourceSet(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), kt(Ct(E(this, hu).getSourceSet(e1, t)));
    }
    setSourceSet(e1, t, r) {
        Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("sourceSet", r, Ut(Nt({
            uri: Vt(),
            width: Ht(),
            height: Ht()
        }))), Ct(E(this, hu).setSourceSet(e1, t, r));
    }
    addImageFileURIToSourceSet(e1, t, r) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("uri", r, Vt()), xt((n)=>E(this, hu).addImageFileURIToSourceSet(e1, t, r, n));
    }
    addVideoFileURIToSourceSet(e1, t, r) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("uri", r, Vt()), xt((n)=>E(this, hu).addVideoFileURIToSourceSet(e1, t, r, n));
    }
    setEnum(e1, t, r) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Yt("value", r, Vt()), Ct(E(this, hu).setEnum(e1, t, r));
    }
    getEnum(e1, t) {
        return Yt("id", e1, qt()), Yt("property", t, Vt()), Ct(E(this, hu).getEnum(e1, t));
    }
    hasCrop(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasCrop(e1));
    }
    supportsCrop(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsCrop(e1));
    }
    setCropScaleX(e1, t) {
        return Yt("id", e1, qt()), Yt("scaleX", t, Ht()), Ct(E(this, hu).setCropScaleX(e1, t));
    }
    setCropScaleY(e1, t) {
        return Yt("id", e1, qt()), Yt("scaleY", t, Ht()), Ct(E(this, hu).setCropScaleY(e1, t));
    }
    setCropRotation(e1, t) {
        return Yt("id", e1, qt()), Yt("rotation", t, Ht()), Ct(E(this, hu).setCropRotation(e1, t));
    }
    setCropScaleRatio(e1, t) {
        return Yt("id", e1, qt()), Yt("scaleRatio", t, Ht()), Ct(E(this, hu).setCropScaleRatio(e1, t));
    }
    setCropTranslationX(e1, t) {
        return Yt("id", e1, qt()), Yt("translationX", t, Ht()), Ct(E(this, hu).setCropTranslationX(e1, t));
    }
    setCropTranslationY(e1, t) {
        return Yt("id", e1, qt()), Yt("translationY", t, Ht()), Ct(E(this, hu).setCropTranslationY(e1, t));
    }
    resetCrop(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).resetCrop(e1));
    }
    getCropScaleX(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getCropScaleX(e1));
    }
    getCropScaleY(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getCropScaleY(e1));
    }
    getCropRotation(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getCropRotation(e1));
    }
    getCropScaleRatio(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getCropScaleRatio(e1));
    }
    getCropTranslationX(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getCropTranslationX(e1));
    }
    getCropTranslationY(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getCropTranslationY(e1));
    }
    adjustCropToFillFrame(e1, t) {
        return Yt("id", e1, qt()), Yt("minScaleRatio", t, Ht()), Ct(E(this, hu).adjustCropToFillFrame(e1, t));
    }
    flipCropHorizontal(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).flipCropHorizontal(e1));
    }
    flipCropVertical(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).flipCropVertical(e1));
    }
    hasOpacity(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasOpacity(e1));
    }
    supportsOpacity(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsOpacity(e1));
    }
    setOpacity(e1, t) {
        return Yt("id", e1, qt()), Yt("opacity", t, Ht()), Ct(E(this, hu).setOpacity(e1, t));
    }
    getOpacity(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getOpacity(e1));
    }
    hasBlendMode(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasBlendMode(e1));
    }
    supportsBlendMode(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsBlendMode(e1));
    }
    setBlendMode(e1, t) {
        return Yt("id", e1, qt()), Yt("blendMode", t, Vt()), Ct(E(this, hu).setBlendMode(e1, t));
    }
    getBlendMode(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getBlendMode(e1));
    }
    hasFillColor(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasFillColor(e1));
    }
    isIncludedInExport(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isIncludedInExport(e1));
    }
    setIncludedInExport(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setIncludedInExport(e1, t));
    }
    setFillColorRGBA(e1, t, r, n, o = 1) {
        return Yt("id", e1, qt()), Yt("r", t, Ht()), Yt("g", r, Ht()), Yt("b", n, Ht()), Yt("a", o, Ht()), Ct(E(this, hu).setFillColorRGBA(e1, t, r, n, o));
    }
    getFillColorRGBA(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getFillColorRGBA(e1));
    }
    setFillColorEnabled(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setFillColorEnabled(e1, t));
    }
    isFillColorEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isFillColorEnabled(e1));
    }
    createEffect(e1) {
        return Yt("type", e1, Vt()), Ct(E(this, hu).createEffect(e1));
    }
    hasEffects(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasEffects(e1));
    }
    supportsEffects(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsEffects(e1));
    }
    getEffects(e1) {
        Yt("id", e1, qt());
        const t = Ct(E(this, hu).getEffects(e1));
        return kt(t);
    }
    insertEffect(e1, t, r) {
        Yt("id", e1, qt()), Yt("effectId", t, qt()), Yt("index", r, Wt(qt(), 0)), Ct(E(this, hu).insertEffect(e1, t, r));
    }
    appendEffect(e1, t) {
        Yt("id", e1, qt()), Yt("effectId", t, qt()), Ct(E(this, hu).appendEffect(e1, t));
    }
    removeEffect(e1, t) {
        Yt("id", e1, qt()), Yt("index", t, Wt(qt(), 0)), Ct(E(this, hu).removeEffect(e1, t));
    }
    hasEffectEnabled(e1) {
        return Yt("effectId", e1, qt()), Ct(E(this, hu).hasEffectEnabled(e1));
    }
    setEffectEnabled(e1, t) {
        Yt("effectId", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setEffectEnabled(e1, t));
    }
    isEffectEnabled(e1) {
        return Yt("effectId", e1, qt()), Ct(E(this, hu).isEffectEnabled(e1));
    }
    createBlur(e1) {
        return Yt("type", e1, Vt()), Ct(E(this, hu).createBlur(e1));
    }
    hasBlur(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasBlur(e1));
    }
    supportsBlur(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsBlur(e1));
    }
    setBlur(e1, t) {
        Yt("id", e1, qt()), Yt("blurId", t, qt()), Ct(E(this, hu).setBlur(e1, t));
    }
    getBlur(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getBlur(e1));
    }
    setBlurEnabled(e1, t) {
        Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setBlurEnabled(e1, t));
    }
    isBlurEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isBlurEnabled(e1));
    }
    hasBackgroundColor(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasBackgroundColor(e1));
    }
    supportsBackgroundColor(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsBackgroundColor(e1));
    }
    setBackgroundColorRGBA(e1, t, r, n, o = 1) {
        return Yt("id", e1, qt()), Yt("r", t, Ht()), Yt("g", r, Ht()), Yt("b", n, Ht()), Yt("a", o, Ht()), Ct(E(this, hu).setBackgroundColorRGBA(e1, t, r, n, o));
    }
    getBackgroundColorRGBA(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getBackgroundColorRGBA(e1));
    }
    setBackgroundColorEnabled(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setBackgroundColorEnabled(e1, t));
    }
    isBackgroundColorEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isBackgroundColorEnabled(e1));
    }
    hasStroke(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasStroke(e1));
    }
    supportsStroke(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsStroke(e1));
    }
    setStrokeEnabled(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setStrokeEnabled(e1, t));
    }
    isStrokeEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isStrokeEnabled(e1));
    }
    setStrokeColorRGBA(e1, t, r, n, o = 1) {
        return Yt("id", e1, qt()), Yt("r", t, Ht()), Yt("g", r, Ht()), Yt("b", n, Ht()), Yt("a", o, Ht()), Ct(E(this, hu).setStrokeColorRGBA(e1, t, r, n, o));
    }
    setStrokeColor(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setStrokeColor(e1, tr.fromColor(t)));
    }
    getStrokeColorRGBA(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getStrokeColorRGBA(e1));
    }
    getStrokeColor(e1) {
        return Yt("id", e1, qt()), tr.toColor(Ct(E(this, hu).getStrokeColor(e1)));
    }
    setStrokeWidth(e1, t) {
        return Yt("id", e1, qt()), Yt("width", t, Ht()), Ct(E(this, hu).setStrokeWidth(e1, t));
    }
    getStrokeWidth(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getStrokeWidth(e1));
    }
    setStrokeStyle(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setStrokeStyle(e1, t));
    }
    getStrokeStyle(e1) {
        Yt("id", e1, qt());
        return Ct(E(this, hu).getStrokeStyle(e1));
    }
    setStrokePosition(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setStrokePosition(e1, t));
    }
    getStrokePosition(e1) {
        Yt("id", e1, qt());
        return Ct(E(this, hu).getStrokePosition(e1));
    }
    setStrokeCornerGeometry(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setStrokeCornerGeometry(e1, t));
    }
    getStrokeCornerGeometry(e1) {
        Yt("id", e1, qt());
        return Ct(E(this, hu).getStrokeCornerGeometry(e1));
    }
    hasDropShadow(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasDropShadow(e1));
    }
    supportsDropShadow(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsDropShadow(e1));
    }
    setDropShadowEnabled(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setDropShadowEnabled(e1, t));
    }
    isDropShadowEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isDropShadowEnabled(e1));
    }
    setDropShadowColorRGBA(e1, t, r, n, o = 1) {
        return Yt("id", e1, qt()), Yt("r", t, Ht()), Yt("g", r, Ht()), Yt("b", n, Ht()), Yt("a", o, Ht()), Ct(E(this, hu).setDropShadowColorRGBA(e1, t, r, n, o));
    }
    setDropShadowColor(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setDropShadowColor(e1, tr.fromColor(t)));
    }
    getDropShadowColorRGBA(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getDropShadowColorRGBA(e1));
    }
    getDropShadowColor(e1) {
        return Yt("id", e1, qt()), tr.toColor(Ct(E(this, hu).getDropShadowColor(e1)));
    }
    setDropShadowOffsetX(e1, t) {
        return Yt("id", e1, qt()), Yt("offsetX", t, Ht()), Ct(E(this, hu).setDropShadowOffsetX(e1, t));
    }
    getDropShadowOffsetX(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getDropShadowOffsetX(e1));
    }
    setDropShadowOffsetY(e1, t) {
        return Yt("id", e1, qt()), Yt("offsetY", t, Ht()), Ct(E(this, hu).setDropShadowOffsetY(e1, t));
    }
    getDropShadowOffsetY(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getDropShadowOffsetY(e1));
    }
    setDropShadowBlurRadiusX(e1, t) {
        return Yt("id", e1, qt()), Yt("blurRadiusX", t, Ht()), Ct(E(this, hu).setDropShadowBlurRadiusX(e1, t));
    }
    getDropShadowBlurRadiusX(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getDropShadowBlurRadiusX(e1));
    }
    setDropShadowBlurRadiusY(e1, t) {
        return Yt("id", e1, qt()), Yt("blurRadiusY", t, Ht()), Ct(E(this, hu).setDropShadowBlurRadiusY(e1, t));
    }
    getDropShadowBlurRadiusY(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getDropShadowBlurRadiusY(e1));
    }
    setDropShadowClip(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setDropShadowClip(e1, t));
    }
    getDropShadowClip(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getDropShadowClip(e1));
    }
    createCutoutFromBlocks(e1, t = 2, r = 4, n = !0) {
        return Yt("ids", e1, Ut(qt())), Yt("vectorizeDistanceThreshold", t, Ht()), Yt("maxSmoothingDistance", r, Ht()), Yt("useExistingShapeInformation", n, $t()), Ct(E(this, hu).createCutoutFromBlocks(e1, t, r, n));
    }
    createCutoutFromPath(e1) {
        return Yt("path", e1, Vt()), Ct(E(this, hu).createCutoutFromPath(e1));
    }
    createCutoutFromOperation(e1, t) {
        return Yt("ids", e1, Ut(qt())), Yt("op", t, function() {
            const e1 = [
                "Difference",
                "Intersection",
                "Union",
                "XOR"
            ];
            return jt("CutoutOperation", (t)=>!("string" != typeof t || !e1.includes(t)) || {
                    message: `expected one of ${e1.map((e1)=>`"${e1}"`).join(", ")}, but got "${t}"`
                });
        }()), Ct(E(this, hu).createCutoutFromOperation(e1, t));
    }
    replaceText(e1, t, r = -1, n = -1) {
        Yt("id", e1, qt()), Yt("text", t, Vt()), Yt("from", r, qt()), Yt("to", n, qt()), Ct(E(this, hu).replaceText(e1, t, r, n));
    }
    removeText(e1, t = -1, r = -1) {
        Yt("id", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt()), Ct(E(this, hu).removeText(e1, t, r));
    }
    setTextColor(e1, t, r = -1, n = -1) {
        Yt("id", e1, qt()), Yt("from", r, qt()), Yt("to", n, qt()), Ct(E(this, hu).setTextColor(e1, tr.fromColor(t), r, n));
    }
    getTextColors(e1, t = -1, r = -1) {
        Yt("id", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt());
        const n = E(this, hu).getTextColors(e1, t, r);
        return kt(Ct(n)).map((e1)=>tr.toColor(e1));
    }
    setTextFontWeight(e1, t, r = -1, n = -1) {
        Yt("id", e1, qt()), Yt("from", r, qt()), Yt("to", n, qt()), Ct(E(this, hu).setTextFontWeight(e1, t, r, n));
    }
    getTextFontWeights(e1, t = -1, r = -1) {
        return Yt("id", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt()), kt(Ct(E(this, hu).getTextFontWeights(e1, t, r)));
    }
    setTextFontSize(e1, t, r = -1, n = -1) {
        Yt("id", e1, qt()), Yt("from", r, qt()), Yt("to", n, qt()), Ct(E(this, hu).setTextFontSize(e1, t, r, n));
    }
    getTextFontSizes(e1, t = -1, r = -1) {
        return Yt("id", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt()), kt(Ct(E(this, hu).getTextFontSizes(e1, t, r)));
    }
    setTextFontStyle(e1, t, r = -1, n = -1) {
        Yt("id", e1, qt()), Yt("from", r, qt()), Yt("to", n, qt()), Ct(E(this, hu).setTextFontStyle(e1, t, r, n));
    }
    getTextFontStyles(e1, t = -1, r = -1) {
        return Yt("id", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt()), kt(Ct(E(this, hu).getTextFontStyles(e1, t, r)));
    }
    getTextCases(e1, t = -1, r = -1) {
        return Yt("id", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt()), kt(Ct(E(this, hu).getTextCases(e1, t, r)));
    }
    setTextCase(e1, t, r = -1, n = -1) {
        Yt("id", e1, qt()), Yt("textCase", t, Vt()), Yt("from", r, qt()), Yt("to", n, qt()), Ct(E(this, hu).setTextCase(e1, t, r, n));
    }
    canToggleBoldFont(e1, t = -1, r = -1) {
        return Yt("id", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt()), Ct(E(this, hu).canToggleBoldFont(e1, t, r));
    }
    canToggleItalicFont(e1, t = -1, r = -1) {
        return Yt("id", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt()), Ct(E(this, hu).canToggleItalicFont(e1, t, r));
    }
    toggleBoldFont(e1, t = -1, r = -1) {
        Yt("id", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt()), Ct(E(this, hu).toggleBoldFont(e1, t, r));
    }
    toggleItalicFont(e1, t = -1, r = -1) {
        Yt("id", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt()), Ct(E(this, hu).toggleItalicFont(e1, t, r));
    }
    setFont(e1, t, r) {
        Yt("block", e1, qt()), Yt("fontFileUri", t, Vt()), Ct(E(this, hu).setFont(e1, t, r));
    }
    setTypeface(e1, t, r = -1, n = -1) {
        Yt("block", e1, qt()), Yt("from", r, qt()), Yt("to", n, qt()), Ct(E(this, hu).setTypeface(e1, t, r, n));
    }
    getTypeface(e1) {
        return Yt("block", e1, qt()), Ct(E(this, hu).getTypeface(e1));
    }
    getTypefaces(e1, t = -1, r = -1) {
        return Yt("block", e1, qt()), Yt("from", t, qt()), Yt("to", r, qt()), kt(Ct(E(this, hu).getTypefaces(e1, t, r)));
    }
    getTextCursorRange() {
        return Ct(E(this, hu).getTextCursorRange());
    }
    getTextVisibleLineCount(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getTextVisibleLineCount(e1));
    }
    getTextVisibleLineGlobalBoundingBoxXYWH(e1, t) {
        return Yt("id", e1, qt()), Yt("lineIndex", t, qt()), Ct(E(this, hu).getTextVisibleLineGlobalBoundingBoxXYWH(e1, t));
    }
    hasFill(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasFill(e1));
    }
    supportsFill(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsFill(e1));
    }
    isFillEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isFillEnabled(e1));
    }
    setFillEnabled(e1, t) {
        return Yt("id", e1, qt()), Ct(E(this, hu).setFillEnabled(e1, t));
    }
    getFill(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getFill(e1));
    }
    setFill(e1, t) {
        return Yt("id", e1, qt()), Yt("fill", t, qt()), Ct(E(this, hu).setFill(e1, t));
    }
    setFillSolidColor(e1, t, r, n, o = 1) {
        Yt("id", e1, qt()), Ct(E(this, hu).setFillSolidColor(e1, t, r, n, o));
    }
    getFillSolidColor(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getFillSolidColor(e1));
    }
    setPlaceholderEnabled(e1, t) {
        Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setPlaceholderEnabled(e1, t));
    }
    isPlaceholderEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isPlaceholderEnabled(e1));
    }
    hasPlaceholderBehavior(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasPlaceholderBehavior(e1));
    }
    supportsPlaceholderBehavior(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsPlaceholderBehavior(e1));
    }
    setPlaceholderBehaviorEnabled(e1, t) {
        Yt("id", e1, qt()), Ct(E(this, hu).setPlaceholderBehaviorEnabled(e1, t));
    }
    isPlaceholderBehaviorEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isPlaceholderBehaviorEnabled(e1));
    }
    hasPlaceholderControls(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasPlaceholderControls(e1));
    }
    supportsPlaceholderControls(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsPlaceholderControls(e1));
    }
    setPlaceholderControlsOverlayEnabled(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setPlaceholderControlsOverlayEnabled(e1, t));
    }
    isPlaceholderControlsOverlayEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isPlaceholderControlsOverlayEnabled(e1));
    }
    setPlaceholderControlsButtonEnabled(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setPlaceholderControlsButtonEnabled(e1, t));
    }
    isPlaceholderControlsButtonEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isPlaceholderControlsButtonEnabled(e1));
    }
    setMetadata(e1, t, r) {
        Yt("id", e1, qt()), Yt("key", t, Vt()), Yt("value", r, Vt()), Ct(E(this, hu).setMetadata(e1, t, r));
    }
    getMetadata(e1, t) {
        return Yt("id", e1, qt()), Yt("key", t, Vt()), Ct(E(this, hu).getMetadata(e1, t));
    }
    hasMetadata(e1, t) {
        return Yt("id", e1, qt()), Yt("key", t, Vt()), Ct(E(this, hu).hasMetadata(e1, t));
    }
    findAllMetadata(e1) {
        return Yt("id", e1, qt()), kt(Ct(E(this, hu).findAllMetadata(e1)));
    }
    removeMetadata(e1, t) {
        Yt("id", e1, qt()), Yt("key", t, Vt()), Ct(E(this, hu).removeMetadata(e1, t));
    }
    setScopeEnabled(e1, t, r) {
        Yt("id", e1, qt()), Yt("key", t, Vt()), Yt("enabled", r, $t()), Ct(E(this, hu).setScopeEnabled(e1, t, r));
    }
    isScopeEnabled(e1, t) {
        return Yt("id", e1, qt()), Yt("key", t, Vt()), Ct(E(this, hu).isScopeEnabled(e1, t));
    }
    isAllowedByScope(e1, t) {
        return Yt("id", e1, qt()), Yt("key", t, Vt()), Ct(E(this, hu).isAllowedByScope(e1, t));
    }
    hasDuration(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasDuration(e1));
    }
    supportsDuration(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsDuration(e1));
    }
    setDuration(e1, t) {
        return Yt("id", e1, qt()), Yt("duration", t, Ht()), Ct(E(this, hu).setDuration(e1, t));
    }
    getDuration(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getDuration(e1));
    }
    setPageDurationSource(e1, t) {
        return Yt("page", e1, qt()), Yt("id", t, qt()), Ct(E(this, hu).setPageDurationSource(e1, t));
    }
    isPageDurationSource(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isPageDurationSource(e1));
    }
    supportsPageDurationSource(e1, t) {
        return Yt("page", e1, qt()), Yt("id", t, qt()), Ct(E(this, hu).supportsPageDurationSource(e1, t));
    }
    removePageDurationSource(e1) {
        Yt("id", e1, qt()), Ct(E(this, hu).removePageDurationSource(e1));
    }
    hasTimeOffset(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasTimeOffset(e1));
    }
    supportsTimeOffset(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsTimeOffset(e1));
    }
    setTimeOffset(e1, t) {
        return Yt("id", e1, qt()), Yt("offset", t, Ht()), Ct(E(this, hu).setTimeOffset(e1, t));
    }
    getTimeOffset(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getTimeOffset(e1));
    }
    hasTrim(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasTrim(e1));
    }
    supportsTrim(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsTrim(e1));
    }
    setTrimOffset(e1, t) {
        return Yt("id", e1, qt()), Yt("offset", t, Ht()), Ct(E(this, hu).setTrimOffset(e1, t));
    }
    getTrimOffset(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getTrimOffset(e1));
    }
    setTrimLength(e1, t) {
        return Yt("id", e1, qt()), Yt("length", t, Ht()), Ct(E(this, hu).setTrimLength(e1, t));
    }
    getTrimLength(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getTrimLength(e1));
    }
    getTotalSceneDuration(e1) {
        return Yt("scene", e1, qt()), Ct(E(this, hu).getTotalSceneDuration(e1));
    }
    setPlaying(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setPlaying(e1, t));
    }
    isPlaying(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isPlaying(e1));
    }
    hasPlaybackTime(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasPlaybackTime(e1));
    }
    supportsPlaybackTime(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsPlaybackTime(e1));
    }
    setPlaybackTime(e1, t) {
        return Yt("id", e1, qt()), Yt("time", t, Ht()), Ct(E(this, hu).setPlaybackTime(e1, t));
    }
    getPlaybackTime(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getPlaybackTime(e1));
    }
    isVisibleAtCurrentPlaybackTime(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isVisibleAtCurrentPlaybackTime(e1));
    }
    setSoloPlaybackEnabled(e1, t) {
        return Yt("id", e1, qt()), Yt("enabled", t, $t()), Ct(E(this, hu).setSoloPlaybackEnabled(e1, t));
    }
    isSoloPlaybackEnabled(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isSoloPlaybackEnabled(e1));
    }
    hasPlaybackControl(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).hasPlaybackControl(e1));
    }
    supportsPlaybackControl(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsPlaybackControl(e1));
    }
    setLooping(e1, t) {
        Yt("id", e1, qt()), Yt("looping", t, $t()), Ct(E(this, hu).setLooping(e1, t));
    }
    isLooping(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isLooping(e1));
    }
    setMuted(e1, t) {
        Yt("id", e1, qt()), Yt("muted", t, $t()), Ct(E(this, hu).setMuted(e1, t));
    }
    isMuted(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).isMuted(e1));
    }
    setVolume(e1, t) {
        Yt("id", e1, qt()), Yt("volume", t, Ht()), Ct(E(this, hu).setVolume(e1, t));
    }
    getVolume(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getVolume(e1));
    }
    async forceLoadAVResource(e1) {
        return Yt("id", e1, qt()), xt((t)=>E(this, hu).forceLoadAVResource(e1, t));
    }
    unstable_isAVResourceLoaded(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).unstable_isAVResourceLoaded(e1));
    }
    getAVResourceTotalDuration(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getAVResourceTotalDuration(e1));
    }
    getVideoWidth(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getVideoWidth(e1));
    }
    getVideoHeight(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getVideoHeight(e1));
    }
    generateVideoThumbnailSequence(e1, t, r, n, o, i) {
        Yt("id", e1, qt()), Yt("thumbnailHeight", t, qt()), Yt("timeBegin", r, Ht()), Yt("timeEnd", n, Ht()), Yt("numberOfFrames", o, qt());
        const a = E(this, hu).generateVideoThumbnailSequence(e1, t, r, n, o, (e1)=>{
            "error" in e1 ? i(0, new Error(e1.error)) : i(e1.frameIndex, new ImageData(new Uint8ClampedArray(e1.imageData), e1.width, e1.height));
        });
        return ()=>{
            E(this, hu).cancelVideoThumbnailSequenceGeneration(a);
        };
    }
    generateAudioThumbnailSequence(e1, t, r, n, o, i, a) {
        Yt("id", e1, qt()), Yt("samplesPerChunk", t, qt()), Yt("timeBegin", r, Ht()), Yt("timeEnd", n, Ht()), Yt("numberOfSamples", o, qt()), Yt("numberOfChannels", i, qt());
        const s = E(this, hu).generateAudioThumbnailSequence(e1, t, r, n, o, i, (e1)=>{
            "error" in e1 ? a(0, new Error(e1.error)) : a(e1.chunkIndex, e1.sampleData);
        });
        return ()=>{
            E(this, hu).cancelAudioThumbnailSequenceGeneration(s);
        };
    }
    async getVideoFillThumbnail(e1, t) {
        return Yt("id", e1, qt()), Yt("thumbnailHeight", t, qt()), new Promise((r, n)=>{
            E(this, hu).getVideoFillThumbnail(e1, t, (e1)=>{
                "error" in e1 ? n(e1.error) : r(new gu([
                    e1
                ], {
                    type: "image/jpeg"
                }));
            });
        });
    }
    async getVideoFillThumbnailAtlas(e1, t, r, n) {
        return Yt("id", e1, qt()), Yt("numberOfColumns", t, qt()), Yt("numberOfRows", r, qt()), Yt("thumbnailHeight", n, qt()), new Promise((o, i)=>{
            E(this, hu).getVideoFillThumbnailAtlas(e1, t, r, n, (e1)=>{
                "error" in e1 ? i(e1.error) : o(new gu([
                    e1
                ], {
                    type: "image/jpeg"
                }));
            });
        });
    }
    async getPageThumbnailAtlas(e1, t, r, n) {
        return Yt("id", e1, qt()), Yt("numberOfColumns", t, qt()), Yt("numberOfRows", r, qt()), new Promise((o, i)=>{
            E(this, hu).getPageThumbnailAtlas(e1, t, r, n, (e1)=>{
                "error" in e1 ? i(e1.error) : o(new gu([
                    e1
                ], {
                    type: "image/jpeg"
                }));
            });
        });
    }
    createAnimation(e1) {
        return Yt("type", e1, Vt()), Ct(E(this, hu).createAnimation(e1));
    }
    supportsAnimation(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).supportsAnimation(e1));
    }
    setInAnimation(e1, t) {
        Yt("id", e1, qt()), Yt("animation", t, qt()), Ct(E(this, hu).setInAnimation(e1, t));
    }
    setLoopAnimation(e1, t) {
        Yt("id", e1, qt()), Yt("animation", t, qt()), Ct(E(this, hu).setLoopAnimation(e1, t));
    }
    setOutAnimation(e1, t) {
        Yt("id", e1, qt()), Yt("animation", t, qt()), Ct(E(this, hu).setOutAnimation(e1, t));
    }
    getInAnimation(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getInAnimation(e1));
    }
    getLoopAnimation(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getLoopAnimation(e1));
    }
    getOutAnimation(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getOutAnimation(e1));
    }
    setNativePixelBuffer(e1, t) {
        Yt("id", e1, qt()), t instanceof HTMLVideoElement && (t.width = t.videoWidth, t.height = t.videoHeight), Ct(E(this, hu).setNativePixelBuffer(e1, t));
    }
    getState(e1) {
        return Yt("id", e1, qt()), Ct(E(this, hu).getState(e1));
    }
    setState(e1, t) {
        Yt("id", e1, qt()), Ct(E(this, hu).setState(e1, t));
    }
    async forceLoadResources(e1) {
        return Yt("ids", e1, Ut(qt())), xt((t)=>E(this, hu).forceLoadResources(e1, t));
    }
};
fu = h(null), hu = new WeakMap, y(fu, 1, "loadFromString", du, BlockAPI), y(fu, 1, "loadFromArchiveURL", lu, BlockAPI), y(fu, 1, "create", cu, BlockAPI), y(fu, 1, "createFill", uu, BlockAPI), y(fu, 1, "getType", su, BlockAPI), y(fu, 1, "getKind", au, BlockAPI), y(fu, 1, "setKind", iu, BlockAPI), y(fu, 1, "select", ou, BlockAPI), y(fu, 1, "setSelected", nu, BlockAPI), y(fu, 1, "isSelected", ru, BlockAPI), y(fu, 1, "findAllSelected", tu, BlockAPI), y(fu, 1, "isGroupable", eu, BlockAPI), y(fu, 1, "group", Js, BlockAPI), y(fu, 1, "ungroup", Qs, BlockAPI), y(fu, 1, "enterGroup", Zs, BlockAPI), y(fu, 1, "exitGroup", Ks, BlockAPI), y(fu, 1, "isCombinable", Ys, BlockAPI), y(fu, 1, "combine", Xs, BlockAPI), y(fu, 1, "setName", Gs, BlockAPI), y(fu, 1, "getName", Ws, BlockAPI), y(fu, 1, "getUUID", zs, BlockAPI), y(fu, 1, "findByName", Vs, BlockAPI), y(fu, 1, "findByType", Ns, BlockAPI), y(fu, 1, "findByKind", Hs, BlockAPI), y(fu, 1, "findAll", qs, BlockAPI), y(fu, 1, "findAllPlaceholders", $s, BlockAPI), y(fu, 1, "createShape", Us, BlockAPI), y(fu, 1, "hasShape", js, BlockAPI), y(fu, 1, "supportsShape", Os, BlockAPI), y(fu, 1, "getShape", Is, BlockAPI), y(fu, 1, "setShape", Ms, BlockAPI), y(fu, 1, "isVisible", Rs, BlockAPI), y(fu, 1, "setVisible", Bs, BlockAPI), y(fu, 1, "isClipped", Ds, BlockAPI), y(fu, 1, "setClipped", Ls, BlockAPI), y(fu, 1, "isTransformLocked", Fs, BlockAPI), y(fu, 1, "setTransformLocked", Ps, BlockAPI), y(fu, 1, "getPositionX", As, BlockAPI), y(fu, 1, "getPositionXMode", Ts, BlockAPI), y(fu, 1, "getPositionY", ks, BlockAPI), y(fu, 1, "getPositionYMode", xs, BlockAPI), y(fu, 1, "setPositionX", Cs, BlockAPI), y(fu, 1, "setPositionXMode", Ss, BlockAPI), y(fu, 1, "setPositionY", Es, BlockAPI), y(fu, 1, "setPositionYMode", _s, BlockAPI), y(fu, 1, "setAlwaysOnTop", ws, BlockAPI), y(fu, 1, "setAlwaysOnBottom", bs, BlockAPI), y(fu, 1, "isAlwaysOnTop", ys, BlockAPI), y(fu, 1, "isAlwaysOnBottom", vs, BlockAPI), y(fu, 1, "bringToFront", gs, BlockAPI), y(fu, 1, "sendToBack", ms, BlockAPI), y(fu, 1, "bringForward", ps, BlockAPI), y(fu, 1, "sendBackward", fs, BlockAPI), y(fu, 1, "getRotation", hs, BlockAPI), y(fu, 1, "setRotation", ds, BlockAPI), y(fu, 1, "getFlipHorizontal", ls, BlockAPI), y(fu, 1, "getFlipVertical", cs, BlockAPI), y(fu, 1, "setFlipHorizontal", us, BlockAPI), y(fu, 1, "setFlipVertical", ss, BlockAPI), y(fu, 1, "hasContentFillMode", as, BlockAPI), y(fu, 1, "supportsContentFillMode", is, BlockAPI), y(fu, 1, "getWidth", os, BlockAPI), y(fu, 1, "getWidthMode", ns, BlockAPI), y(fu, 1, "getHeight", rs, BlockAPI), y(fu, 1, "getHeightMode", ts, BlockAPI), y(fu, 1, "setWidth", es, BlockAPI), y(fu, 1, "setWidthMode", Ja, BlockAPI), y(fu, 1, "setHeight", Qa, BlockAPI), y(fu, 1, "setHeightMode", Za, BlockAPI), y(fu, 1, "getFrameX", Ka, BlockAPI), y(fu, 1, "getFrameY", Ya, BlockAPI), y(fu, 1, "getFrameWidth", Xa, BlockAPI), y(fu, 1, "getFrameHeight", Ga, BlockAPI), y(fu, 1, "setContentFillMode", Wa, BlockAPI), y(fu, 1, "getContentFillMode", za, BlockAPI), y(fu, 1, "duplicate", Va, BlockAPI), y(fu, 1, "destroy", Na, BlockAPI), y(fu, 1, "isValid", Ha, BlockAPI), y(fu, 1, "getParent", qa, BlockAPI), y(fu, 1, "getChildren", $a, BlockAPI), y(fu, 1, "insertChild", Ua, BlockAPI), y(fu, 1, "appendChild", ja, BlockAPI), y(fu, 1, "referencesAnyVariables", Oa, BlockAPI), y(fu, 1, "getGlobalBoundingBoxX", Ia, BlockAPI), y(fu, 1, "getGlobalBoundingBoxY", Ma, BlockAPI), y(fu, 1, "getGlobalBoundingBoxWidth", Ra, BlockAPI), y(fu, 1, "getGlobalBoundingBoxHeight", Ba, BlockAPI), y(fu, 1, "getScreenSpaceBoundingBoxXYWH", Da, BlockAPI), y(fu, 1, "alignHorizontally", La, BlockAPI), y(fu, 1, "alignVertically", Fa, BlockAPI), y(fu, 1, "isAlignable", Pa, BlockAPI), y(fu, 1, "distributeHorizontally", Aa, BlockAPI), y(fu, 1, "distributeVertically", Ta, BlockAPI), y(fu, 1, "isDistributable", ka, BlockAPI), y(fu, 1, "fillParent", xa, BlockAPI), y(fu, 1, "resizeContentAware", Ca, BlockAPI), y(fu, 1, "scale", Sa, BlockAPI), y(fu, 1, "findAllProperties", Ea, BlockAPI), y(fu, 1, "isPropertyReadable", _a, BlockAPI), y(fu, 1, "isPropertyWritable", wa, BlockAPI), y(fu, 1, "getPropertyType", ba, BlockAPI), y(fu, 1, "getEnumValues", ya, BlockAPI), y(fu, 1, "setBool", va, BlockAPI), y(fu, 1, "getBool", ga, BlockAPI), y(fu, 1, "setInt", ma, BlockAPI), y(fu, 1, "getInt", pa, BlockAPI), y(fu, 1, "setFloat", fa, BlockAPI), y(fu, 1, "getFloat", ha, BlockAPI), y(fu, 1, "setDouble", da, BlockAPI), y(fu, 1, "getDouble", la, BlockAPI), y(fu, 1, "setString", ca, BlockAPI), y(fu, 1, "getString", ua, BlockAPI), y(fu, 1, "setColor", sa, BlockAPI), y(fu, 1, "getColor", aa, BlockAPI), y(fu, 1, "setColorRGBA", ia, BlockAPI), y(fu, 1, "getColorRGBA", oa, BlockAPI), y(fu, 1, "setColorSpot", na, BlockAPI), y(fu, 1, "getColorSpotName", ra, BlockAPI), y(fu, 1, "getColorSpotTint", ta, BlockAPI), y(fu, 1, "setGradientColorStops", ea, BlockAPI), y(fu, 1, "getGradientColorStops", Ji, BlockAPI), y(fu, 1, "getSourceSet", Qi, BlockAPI), y(fu, 1, "setSourceSet", Zi, BlockAPI), y(fu, 1, "addImageFileURIToSourceSet", Ki, BlockAPI), y(fu, 1, "addVideoFileURIToSourceSet", Yi, BlockAPI), y(fu, 1, "setEnum", Xi, BlockAPI), y(fu, 1, "getEnum", Gi, BlockAPI), y(fu, 1, "hasCrop", Wi, BlockAPI), y(fu, 1, "supportsCrop", zi, BlockAPI), y(fu, 1, "setCropScaleX", Vi, BlockAPI), y(fu, 1, "setCropScaleY", Ni, BlockAPI), y(fu, 1, "setCropRotation", Hi, BlockAPI), y(fu, 1, "setCropScaleRatio", qi, BlockAPI), y(fu, 1, "setCropTranslationX", $i, BlockAPI), y(fu, 1, "setCropTranslationY", Ui, BlockAPI), y(fu, 1, "resetCrop", ji, BlockAPI), y(fu, 1, "getCropScaleX", Oi, BlockAPI), y(fu, 1, "getCropScaleY", Ii, BlockAPI), y(fu, 1, "getCropRotation", Mi, BlockAPI), y(fu, 1, "getCropScaleRatio", Ri, BlockAPI), y(fu, 1, "getCropTranslationX", Bi, BlockAPI), y(fu, 1, "getCropTranslationY", Di, BlockAPI), y(fu, 1, "adjustCropToFillFrame", Li, BlockAPI), y(fu, 1, "flipCropHorizontal", Fi, BlockAPI), y(fu, 1, "flipCropVertical", Pi, BlockAPI), y(fu, 1, "hasOpacity", Ai, BlockAPI), y(fu, 1, "supportsOpacity", Ti, BlockAPI), y(fu, 1, "setOpacity", ki, BlockAPI), y(fu, 1, "getOpacity", xi, BlockAPI), y(fu, 1, "hasBlendMode", Ci, BlockAPI), y(fu, 1, "supportsBlendMode", Si, BlockAPI), y(fu, 1, "setBlendMode", Ei, BlockAPI), y(fu, 1, "getBlendMode", _i, BlockAPI), y(fu, 1, "hasFillColor", wi, BlockAPI), y(fu, 1, "isIncludedInExport", bi, BlockAPI), y(fu, 1, "setIncludedInExport", yi, BlockAPI), y(fu, 1, "setFillColorRGBA", vi, BlockAPI), y(fu, 1, "getFillColorRGBA", gi, BlockAPI), y(fu, 1, "setFillColorEnabled", mi, BlockAPI), y(fu, 1, "isFillColorEnabled", pi, BlockAPI), y(fu, 1, "createEffect", fi, BlockAPI), y(fu, 1, "hasEffects", hi, BlockAPI), y(fu, 1, "supportsEffects", di, BlockAPI), y(fu, 1, "getEffects", li, BlockAPI), y(fu, 1, "insertEffect", ci, BlockAPI), y(fu, 1, "appendEffect", ui, BlockAPI), y(fu, 1, "removeEffect", si, BlockAPI), y(fu, 1, "hasEffectEnabled", ai, BlockAPI), y(fu, 1, "setEffectEnabled", ii, BlockAPI), y(fu, 1, "isEffectEnabled", oi, BlockAPI), y(fu, 1, "createBlur", ni, BlockAPI), y(fu, 1, "hasBlur", ri, BlockAPI), y(fu, 1, "supportsBlur", ti, BlockAPI), y(fu, 1, "setBlur", ei, BlockAPI), y(fu, 1, "getBlur", Jo, BlockAPI), y(fu, 1, "setBlurEnabled", Qo, BlockAPI), y(fu, 1, "isBlurEnabled", Zo, BlockAPI), y(fu, 1, "hasBackgroundColor", Ko, BlockAPI), y(fu, 1, "supportsBackgroundColor", Yo, BlockAPI), y(fu, 1, "setBackgroundColorRGBA", Xo, BlockAPI), y(fu, 1, "getBackgroundColorRGBA", Go, BlockAPI), y(fu, 1, "setBackgroundColorEnabled", Wo, BlockAPI), y(fu, 1, "isBackgroundColorEnabled", zo, BlockAPI), y(fu, 1, "hasStroke", Vo, BlockAPI), y(fu, 1, "supportsStroke", No, BlockAPI), y(fu, 1, "setStrokeEnabled", Ho, BlockAPI), y(fu, 1, "isStrokeEnabled", qo, BlockAPI), y(fu, 1, "setStrokeColorRGBA", $o, BlockAPI), y(fu, 1, "setStrokeColor", Uo, BlockAPI), y(fu, 1, "getStrokeColorRGBA", jo, BlockAPI), y(fu, 1, "getStrokeColor", Oo, BlockAPI), y(fu, 1, "setStrokeWidth", Io, BlockAPI), y(fu, 1, "getStrokeWidth", Mo, BlockAPI), y(fu, 1, "setStrokeStyle", Ro, BlockAPI), y(fu, 1, "getStrokeStyle", Bo, BlockAPI), y(fu, 1, "setStrokePosition", Do, BlockAPI), y(fu, 1, "getStrokePosition", Lo, BlockAPI), y(fu, 1, "setStrokeCornerGeometry", Fo, BlockAPI), y(fu, 1, "getStrokeCornerGeometry", Po, BlockAPI), y(fu, 1, "hasDropShadow", Ao, BlockAPI), y(fu, 1, "supportsDropShadow", To, BlockAPI), y(fu, 1, "setDropShadowEnabled", ko, BlockAPI), y(fu, 1, "isDropShadowEnabled", xo, BlockAPI), y(fu, 1, "setDropShadowColorRGBA", Co, BlockAPI), y(fu, 1, "setDropShadowColor", So, BlockAPI), y(fu, 1, "getDropShadowColorRGBA", Eo, BlockAPI), y(fu, 1, "getDropShadowColor", _o, BlockAPI), y(fu, 1, "setDropShadowOffsetX", wo, BlockAPI), y(fu, 1, "getDropShadowOffsetX", bo, BlockAPI), y(fu, 1, "setDropShadowOffsetY", yo, BlockAPI), y(fu, 1, "getDropShadowOffsetY", vo, BlockAPI), y(fu, 1, "setDropShadowBlurRadiusX", go, BlockAPI), y(fu, 1, "getDropShadowBlurRadiusX", mo, BlockAPI), y(fu, 1, "setDropShadowBlurRadiusY", po, BlockAPI), y(fu, 1, "getDropShadowBlurRadiusY", fo, BlockAPI), y(fu, 1, "setDropShadowClip", ho, BlockAPI), y(fu, 1, "getDropShadowClip", lo, BlockAPI), y(fu, 1, "createCutoutFromBlocks", co, BlockAPI), y(fu, 1, "createCutoutFromPath", uo, BlockAPI), y(fu, 1, "createCutoutFromOperation", so, BlockAPI), y(fu, 1, "replaceText", ao, BlockAPI), y(fu, 1, "removeText", io, BlockAPI), y(fu, 1, "setTextColor", oo, BlockAPI), y(fu, 1, "getTextColors", no, BlockAPI), y(fu, 1, "setTextFontWeight", ro, BlockAPI), y(fu, 1, "getTextFontWeights", to, BlockAPI), y(fu, 1, "setTextFontSize", eo, BlockAPI), y(fu, 1, "getTextFontSizes", Jn, BlockAPI), y(fu, 1, "setTextFontStyle", Qn, BlockAPI), y(fu, 1, "getTextFontStyles", Zn, BlockAPI), y(fu, 1, "getTextCases", Kn, BlockAPI), y(fu, 1, "setTextCase", Yn, BlockAPI), y(fu, 1, "canToggleBoldFont", Xn, BlockAPI), y(fu, 1, "canToggleItalicFont", Gn, BlockAPI), y(fu, 1, "toggleBoldFont", Wn, BlockAPI), y(fu, 1, "toggleItalicFont", zn, BlockAPI), y(fu, 1, "setFont", Vn, BlockAPI), y(fu, 1, "setTypeface", Nn, BlockAPI), y(fu, 1, "getTypeface", Hn, BlockAPI), y(fu, 1, "getTypefaces", qn, BlockAPI), y(fu, 1, "getTextCursorRange", $n, BlockAPI), y(fu, 1, "getTextVisibleLineCount", Un, BlockAPI), y(fu, 1, "getTextVisibleLineGlobalBoundingBoxXYWH", jn, BlockAPI), y(fu, 1, "hasFill", On, BlockAPI), y(fu, 1, "supportsFill", In, BlockAPI), y(fu, 1, "isFillEnabled", Mn, BlockAPI), y(fu, 1, "setFillEnabled", Rn, BlockAPI), y(fu, 1, "getFill", Bn, BlockAPI), y(fu, 1, "setFill", Dn, BlockAPI), y(fu, 1, "setFillSolidColor", Ln, BlockAPI), y(fu, 1, "getFillSolidColor", Fn, BlockAPI), y(fu, 1, "setPlaceholderEnabled", Pn, BlockAPI), y(fu, 1, "isPlaceholderEnabled", An, BlockAPI), y(fu, 1, "hasPlaceholderBehavior", Tn, BlockAPI), y(fu, 1, "supportsPlaceholderBehavior", kn, BlockAPI), y(fu, 1, "setPlaceholderBehaviorEnabled", xn, BlockAPI), y(fu, 1, "isPlaceholderBehaviorEnabled", Cn, BlockAPI), y(fu, 1, "hasPlaceholderControls", Sn, BlockAPI), y(fu, 1, "supportsPlaceholderControls", En, BlockAPI), y(fu, 1, "setPlaceholderControlsOverlayEnabled", _n, BlockAPI), y(fu, 1, "isPlaceholderControlsOverlayEnabled", wn, BlockAPI), y(fu, 1, "setPlaceholderControlsButtonEnabled", bn, BlockAPI), y(fu, 1, "isPlaceholderControlsButtonEnabled", yn, BlockAPI), y(fu, 1, "setMetadata", vn, BlockAPI), y(fu, 1, "getMetadata", gn, BlockAPI), y(fu, 1, "hasMetadata", mn, BlockAPI), y(fu, 1, "findAllMetadata", pn, BlockAPI), y(fu, 1, "removeMetadata", fn, BlockAPI), y(fu, 1, "setScopeEnabled", hn, BlockAPI), y(fu, 1, "isScopeEnabled", dn, BlockAPI), y(fu, 1, "isAllowedByScope", ln, BlockAPI), y(fu, 1, "hasDuration", cn, BlockAPI), y(fu, 1, "supportsDuration", un, BlockAPI), y(fu, 1, "setDuration", sn, BlockAPI), y(fu, 1, "getDuration", an, BlockAPI), y(fu, 1, "setPageDurationSource", on, BlockAPI), y(fu, 1, "isPageDurationSource", nn, BlockAPI), y(fu, 1, "supportsPageDurationSource", rn, BlockAPI), y(fu, 1, "removePageDurationSource", tn, BlockAPI), y(fu, 1, "hasTimeOffset", en, BlockAPI), y(fu, 1, "supportsTimeOffset", Jr, BlockAPI), y(fu, 1, "setTimeOffset", Qr, BlockAPI), y(fu, 1, "getTimeOffset", Zr, BlockAPI), y(fu, 1, "hasTrim", Kr, BlockAPI), y(fu, 1, "supportsTrim", Yr, BlockAPI), y(fu, 1, "setTrimOffset", Xr, BlockAPI), y(fu, 1, "getTrimOffset", Gr, BlockAPI), y(fu, 1, "setTrimLength", Wr, BlockAPI), y(fu, 1, "getTrimLength", zr, BlockAPI), y(fu, 1, "getTotalSceneDuration", Vr, BlockAPI), y(fu, 1, "setPlaying", Nr, BlockAPI), y(fu, 1, "isPlaying", Hr, BlockAPI), y(fu, 1, "hasPlaybackTime", qr, BlockAPI), y(fu, 1, "supportsPlaybackTime", $r, BlockAPI), y(fu, 1, "setPlaybackTime", Ur, BlockAPI), y(fu, 1, "getPlaybackTime", jr, BlockAPI), y(fu, 1, "isVisibleAtCurrentPlaybackTime", Or, BlockAPI), y(fu, 1, "setSoloPlaybackEnabled", Ir, BlockAPI), y(fu, 1, "isSoloPlaybackEnabled", Mr, BlockAPI), y(fu, 1, "hasPlaybackControl", Rr, BlockAPI), y(fu, 1, "supportsPlaybackControl", Br, BlockAPI), y(fu, 1, "setLooping", Dr, BlockAPI), y(fu, 1, "isLooping", Lr, BlockAPI), y(fu, 1, "setMuted", Fr, BlockAPI), y(fu, 1, "isMuted", Pr, BlockAPI), y(fu, 1, "setVolume", Ar, BlockAPI), y(fu, 1, "getVolume", Tr, BlockAPI), y(fu, 1, "forceLoadAVResource", kr, BlockAPI), y(fu, 1, "unstable_isAVResourceLoaded", xr, BlockAPI), y(fu, 1, "getAVResourceTotalDuration", Cr, BlockAPI), y(fu, 1, "getVideoWidth", Sr, BlockAPI), y(fu, 1, "getVideoHeight", Er, BlockAPI), y(fu, 1, "getVideoFillThumbnail", _r, BlockAPI), y(fu, 1, "getVideoFillThumbnailAtlas", wr, BlockAPI), y(fu, 1, "getPageThumbnailAtlas", br, BlockAPI), y(fu, 1, "createAnimation", yr, BlockAPI), y(fu, 1, "supportsAnimation", vr, BlockAPI), y(fu, 1, "setInAnimation", gr, BlockAPI), y(fu, 1, "setLoopAnimation", mr, BlockAPI), y(fu, 1, "setOutAnimation", pr, BlockAPI), y(fu, 1, "getInAnimation", fr, BlockAPI), y(fu, 1, "getLoopAnimation", hr, BlockAPI), y(fu, 1, "getOutAnimation", dr, BlockAPI), y(fu, 1, "setNativePixelBuffer", lr, BlockAPI), y(fu, 1, "getState", cr, BlockAPI), y(fu, 1, "setState", ur, BlockAPI), y(fu, 1, "forceLoadResources", sr, BlockAPI), g(fu, BlockAPI);
var vu, yu, bu, wu, _u, Eu, Su, Cu, xu, ku, Tu, Au, Pu, Fu, Lu, Du, Bu, Ru, Mu, Iu, Ou, ju, Uu, $u, qu, Hu, Nu, Vu, zu, Wu, Gu, Xu, Yu, Ku, Zu, Qu, Ju, ec, tc, rc, nc, oc, ic, ac, sc, uc, cc, lc, dc, hc, fc, pc, mc, gc, vc, yc, bc, wc, _c = new WeakMap;
yc = [
    er
], vc = [
    er
], gc = [
    er
], mc = [
    Jt
], pc = [
    Jt
], fc = [
    er
], hc = [
    er
], dc = [
    Jt
], lc = [
    Jt
], cc = [
    Jt
], uc = [
    Jt
], sc = [
    Jt
], ac = [
    Jt
], ic = [
    er
], oc = [
    er
], nc = [
    er
], rc = [
    Jt
], tc = [
    er
], ec = [
    er
], Ju = [
    er
], Qu = [
    Jt
], Zu = [
    Jt
], Ku = [
    er
], Yu = [
    Jt
], Xu = [
    er
], Gu = [
    Jt
], Wu = [
    er
], zu = [
    Jt
], Vu = [
    er
], Nu = [
    Jt
], Hu = [
    er
], qu = [
    Jt
], $u = [
    er
], Uu = [
    Jt
], ju = [
    er
], Ou = [
    Jt
], Iu = [
    er
], Mu = [
    Jt
], Ru = [
    Jt
], Bu = [
    Jt
], Du = [
    Jt
], Lu = [
    Jt
], Fu = [
    er
], Pu = [
    Jt
], Au = [
    Jt
], Tu = [
    er
], ku = [
    Jt
], xu = [
    Jt
], Cu = [
    Jt
], Su = [
    Jt
], Eu = [
    er
], _u = [
    er
], wu = [
    er
], bu = [
    er
], yu = [
    er
], vu = [
    Jt
];
var EditorAPI = class {
    constructor(e1){
        v(wc, 5, this), S(this, bc), b(this, "onStateChanged", (e1)=>{
            const t = E(this, bc).subscribeToEditorState(e1);
            return ()=>{
                E(this, bc).isDeleted() || Ct(E(this, bc).unsubscribe(t));
            };
        }), b(this, "onHistoryUpdated", (e1)=>{
            const t = E(this, bc).subscribeToHistory(e1);
            return ()=>{
                E(this, bc).isDeleted() || E(this, bc).unsubscribe(t);
            };
        }), b(this, "onSettingsChanged", (e1)=>{
            const t = E(this, bc).subscribeToSettings(e1);
            return ()=>{
                E(this, bc).isDeleted() || Ct(E(this, bc).unsubscribe(t));
            };
        }), b(this, "onRoleChanged", (e1)=>{
            const t = E(this, bc).subscribeToRoleChange(e1);
            return ()=>{
                E(this, bc).isDeleted() || Ct(E(this, bc).unsubscribe(t));
            };
        }), C(this, bc, e1);
    }
    unlockWithLicense(e1) {
        Ct(E(this, bc).unlockWithLicense(e1));
    }
    startTracking(e1, t) {
        E(this, bc).startTracking(e1, t, "");
    }
    setTrackingMetadata(e1) {
        E(this, bc).setTrackingMetadata(e1);
    }
    getTrackingMetadata() {
        return Ct(E(this, bc).getTrackingMetadata());
    }
    getActiveLicense() {
        return Ct(E(this, bc).getActiveLicense());
    }
    _update() {
        E(this, bc).update();
    }
    setEditMode(e1) {
        Yt("keypath", e1, Vt()), E(this, bc).setEditMode(e1);
    }
    getEditMode() {
        return E(this, bc).getEditMode();
    }
    unstable_isInteractionHappening() {
        return Ct(E(this, bc).unstable_isInteractionHappening());
    }
    getCursorType() {
        return E(this, bc).getCursorType();
    }
    getCursorRotation() {
        return E(this, bc).getCursorRotation();
    }
    getTextCursorPositionInScreenSpaceX() {
        return E(this, bc).getTextCursorPositionInScreenSpaceX();
    }
    getTextCursorPositionInScreenSpaceY() {
        return E(this, bc).getTextCursorPositionInScreenSpaceY();
    }
    createHistory() {
        return E(this, bc).createHistory();
    }
    destroyHistory(e1) {
        Ct(E(this, bc).destroyHistory(e1));
    }
    setActiveHistory(e1) {
        Ct(E(this, bc).setActiveHistory(e1));
    }
    getActiveHistory() {
        return E(this, bc).getActiveHistory();
    }
    addUndoStep() {
        Ct(E(this, bc).addUndoStep());
    }
    undo() {
        Ct(E(this, bc).undo());
    }
    redo() {
        Ct(E(this, bc).redo());
    }
    canUndo() {
        return Ct(E(this, bc).canUndo());
    }
    canRedo() {
        return Ct(E(this, bc).canRedo());
    }
    setSettingBool(e1, t) {
        return Yt("keypath", e1, Vt()), Yt("value", t, $t()), Ct(E(this, bc).setSettingBool(e1, t));
    }
    getSettingBool(e1) {
        return Yt("keypath", e1, Vt()), Ct(E(this, bc).getSettingBool(e1));
    }
    setSettingInt(e1, t) {
        return Yt("keypath", e1, Vt()), Yt("value", t, qt()), Ct(E(this, bc).setSettingInt(e1, t));
    }
    getSettingInt(e1) {
        return Yt("keypath", e1, Vt()), Ct(E(this, bc).getSettingInt(e1));
    }
    setSettingFloat(e1, t) {
        return Yt("keypath", e1, Vt()), Yt("value", t, Ht()), Ct(E(this, bc).setSettingFloat(e1, t));
    }
    getSettingFloat(e1) {
        return Yt("keypath", e1, Vt()), Ct(E(this, bc).getSettingFloat(e1));
    }
    setSettingString(e1, t) {
        return Yt("keypath", e1, Vt()), Yt("value", t, Vt()), Ct(E(this, bc).setSettingString(e1, t));
    }
    getSettingString(e1) {
        return Yt("keypath", e1, Vt()), Ct(E(this, bc).getSettingString(e1));
    }
    setSettingColor(e1, t) {
        return Yt("keypath", e1, Vt()), Ct(E(this, bc).setSettingColor(e1, tr.fromColor(t)));
    }
    getSettingColor(e1) {
        return Yt("keypath", e1, Vt()), tr.toColor(Ct(E(this, bc).getSettingColor(e1)));
    }
    setSettingColorRGBA(e1, t, r, n, o = 1) {
        return Yt("keypath", e1, Vt()), Yt("r", t, Ht()), Yt("g", r, Ht()), Yt("b", n, Ht()), Yt("a", o, Ht()), Ct(E(this, bc).setSettingColorRGBA(e1, t, r, n, o));
    }
    getSettingColorRGBA(e1) {
        return Yt("keypath", e1, Vt()), Ct(E(this, bc).getSettingColorRGBA(e1));
    }
    setSettingEnum(e1, t) {
        return Yt("keypath", e1, Vt()), Yt("value", t, Vt()), Ct(E(this, bc).setSettingEnum(e1, t));
    }
    getSettingEnum(e1) {
        return Yt("keypath", e1, Vt()), Ct(E(this, bc).getSettingEnum(e1));
    }
    getSettingEnumOptions(e1) {
        return Yt("keypath", e1, Vt()), kt(Ct(E(this, bc).getSettingEnumOptions(e1)));
    }
    setRole(e1) {
        return Ct(E(this, bc).setRole(e1));
    }
    getRole() {
        return Ct(E(this, bc).getRole());
    }
    findAllSettings() {
        return kt(E(this, bc).findAllSettings());
    }
    getSettingType(e1) {
        Yt("keypath", e1, Vt());
        return Ct(E(this, bc).getSettingType(e1));
    }
    getAvailableMemory() {
        return Ct(E(this, bc).getAvailableMemory());
    }
    getUsedMemory() {
        return Ct(E(this, bc).getUsedMemory());
    }
    getMaxExportSize() {
        return Ct(E(this, bc).getMaxExportSize());
    }
    setURIResolver(e1) {
        _c.set(E(this, bc), e1);
        return Ct(E(this, bc).setURIResolver((t)=>e1(t, this.defaultURIResolver.bind(this))));
    }
    unstable_getURIResolver() {
        return _c.get(E(this, bc)) ?? null;
    }
    defaultURIResolver(e1) {
        return E(this, bc).defaultURIResolver(e1);
    }
    getAbsoluteURI(e1) {
        return Ct(E(this, bc).getAbsoluteURI(e1));
    }
    findAllScopes() {
        return kt(E(this, bc).findAllScopes());
    }
    setGlobalScope(e1, t) {
        Yt("key", e1, Vt()), Yt("value", t, Vt()), Ct(E(this, bc).setGlobalScope(e1, t));
    }
    getGlobalScope(e1) {
        return Yt("key", e1, Vt()), Ct(E(this, bc).getGlobalScope(e1));
    }
    findAllSpotColors() {
        return kt(E(this, bc).findAllSpotColors());
    }
    getSpotColorRGBA(e1) {
        return Yt("name", e1, Vt()), E(this, bc).getSpotColorRGB(e1);
    }
    getSpotColorCMYK(e1) {
        return Yt("name", e1, Vt()), E(this, bc).getSpotColorCMYK(e1);
    }
    setSpotColorRGB(e1, t, r, n) {
        return Yt("name", e1, Vt()), Yt("r", t, Ht()), Yt("g", r, Ht()), Yt("b", n, Ht()), E(this, bc).setSpotColorRGB(e1, t, r, n);
    }
    setSpotColorCMYK(e1, t, r, n, o) {
        return Yt("name", e1, Vt()), Yt("c", t, Ht()), Yt("m", r, Ht()), Yt("y", n, Ht()), Yt("k", o, Ht()), E(this, bc).setSpotColorCMYK(e1, t, r, n, o);
    }
    removeSpotColor(e1) {
        return Yt("name", e1, Vt()), Ct(E(this, bc).removeSpotColor(e1));
    }
    setSpotColorForCutoutType(e1, t) {
        return Yt("type", e1, Vt()), Yt("color", t, Vt()), Ct(E(this, bc).setSpotColorForCutoutType(e1, t));
    }
    getSpotColorForCutoutType(e1) {
        return Yt("type", e1, Vt()), Ct(E(this, bc).getSpotColorForCutoutType(e1));
    }
    convertColorToColorSpace(e1, t) {
        return Yt("colorSpace", t, Vt()), tr.toColor(Ct(E(this, bc).convertColorToColorSpace(tr.fromColor(e1), t)));
    }
    createBuffer() {
        return E(this, bc).createBuffer();
    }
    destroyBuffer(e1) {
        Ct(E(this, bc).destroyBuffer(e1));
    }
    setBufferData(e1, t, r) {
        Yt("offset", t, qt()), Ct(E(this, bc).setBufferData(e1, t, r));
    }
    getBufferData(e1, t, r) {
        Yt("offset", t, qt()), Yt("length", r, qt());
        const n = E(this, bc).getBufferData(e1, t, r);
        if ("error" in n) throw new Error(n.error);
        return n;
    }
    setBufferLength(e1, t) {
        Yt("length", t, qt()), Ct(E(this, bc).setBufferLength(e1, t));
    }
    getBufferLength(e1) {
        return Ct(E(this, bc).getBufferLength(e1));
    }
    cloneBuffers() {
        return kt(Ct(E(this, bc).cloneBuffers()));
    }
    restoreBuffers(e1) {
        Ct(E(this, bc).restoreBuffers(e1));
    }
    getMimeType(e1) {
        return Yt("uri", e1, Vt()), xt((t)=>E(this, bc).getMimeType(e1, t));
    }
    findAllTransientResources() {
        return kt(Ct(E(this, bc).findAllTransientResources()));
    }
    getResourceData(e1, t, r) {
        Yt("uri", e1, Vt()), Yt("chunkSize", t, qt()), Ct(E(this, bc).getResourceData(e1, t, r));
    }
    relocateResource(e1, t) {
        Yt("currentUrl", e1, Vt()), Yt("relocatedUrl", t, Vt()), Ct(E(this, bc).relocateResource(e1, t));
    }
};
wc = h(null), bc = new WeakMap, y(wc, 1, "unlockWithLicense", yc, EditorAPI), y(wc, 1, "startTracking", vc, EditorAPI), y(wc, 1, "setTrackingMetadata", gc, EditorAPI), y(wc, 1, "getTrackingMetadata", mc, EditorAPI), y(wc, 1, "getActiveLicense", pc, EditorAPI), y(wc, 1, "_update", fc, EditorAPI), y(wc, 1, "setEditMode", hc, EditorAPI), y(wc, 1, "getEditMode", dc, EditorAPI), y(wc, 1, "unstable_isInteractionHappening", lc, EditorAPI), y(wc, 1, "getCursorType", cc, EditorAPI), y(wc, 1, "getCursorRotation", uc, EditorAPI), y(wc, 1, "getTextCursorPositionInScreenSpaceX", sc, EditorAPI), y(wc, 1, "getTextCursorPositionInScreenSpaceY", ac, EditorAPI), y(wc, 1, "createHistory", ic, EditorAPI), y(wc, 1, "destroyHistory", oc, EditorAPI), y(wc, 1, "setActiveHistory", nc, EditorAPI), y(wc, 1, "getActiveHistory", rc, EditorAPI), y(wc, 1, "addUndoStep", tc, EditorAPI), y(wc, 1, "undo", ec, EditorAPI), y(wc, 1, "redo", Ju, EditorAPI), y(wc, 1, "canUndo", Qu, EditorAPI), y(wc, 1, "canRedo", Zu, EditorAPI), y(wc, 1, "setSettingBool", Ku, EditorAPI), y(wc, 1, "getSettingBool", Yu, EditorAPI), y(wc, 1, "setSettingInt", Xu, EditorAPI), y(wc, 1, "getSettingInt", Gu, EditorAPI), y(wc, 1, "setSettingFloat", Wu, EditorAPI), y(wc, 1, "getSettingFloat", zu, EditorAPI), y(wc, 1, "setSettingString", Vu, EditorAPI), y(wc, 1, "getSettingString", Nu, EditorAPI), y(wc, 1, "setSettingColor", Hu, EditorAPI), y(wc, 1, "getSettingColor", qu, EditorAPI), y(wc, 1, "setSettingColorRGBA", $u, EditorAPI), y(wc, 1, "getSettingColorRGBA", Uu, EditorAPI), y(wc, 1, "setSettingEnum", ju, EditorAPI), y(wc, 1, "getSettingEnum", Ou, EditorAPI), y(wc, 1, "setRole", Iu, EditorAPI), y(wc, 1, "getRole", Mu, EditorAPI), y(wc, 1, "findAllSettings", Ru, EditorAPI), y(wc, 1, "getAvailableMemory", Bu, EditorAPI), y(wc, 1, "getUsedMemory", Du, EditorAPI), y(wc, 1, "getMaxExportSize", Lu, EditorAPI), y(wc, 1, "setURIResolver", Fu, EditorAPI), y(wc, 1, "unstable_getURIResolver", Pu, EditorAPI), y(wc, 1, "findAllScopes", Au, EditorAPI), y(wc, 1, "setGlobalScope", Tu, EditorAPI), y(wc, 1, "getGlobalScope", ku, EditorAPI), y(wc, 1, "findAllSpotColors", xu, EditorAPI), y(wc, 1, "getSpotColorRGBA", Cu, EditorAPI), y(wc, 1, "getSpotColorCMYK", Su, EditorAPI), y(wc, 1, "setSpotColorRGB", Eu, EditorAPI), y(wc, 1, "setSpotColorCMYK", _u, EditorAPI), y(wc, 1, "removeSpotColor", wu, EditorAPI), y(wc, 1, "setSpotColorForCutoutType", bu, EditorAPI), y(wc, 1, "getSpotColorForCutoutType", yu, EditorAPI), y(wc, 1, "convertColorToColorSpace", vu, EditorAPI), g(wc, EditorAPI);
var Ec, Sc, Cc, xc, kc, Tc, Ac, Pc, Fc, Lc, Dc, Bc, Rc, Mc, Ic, Oc, jc, Uc, $c, qc, Hc, Nc, Vc, zc, Wc, EventAPI = class {
    #e;
    constructor(e1){
        this.#e = e1;
    }
    subscribe = (e1, t)=>{
        Yt("blocks", e1, Ut());
        const r = this.#e.subscribe(e1, (e1)=>{
            try {
                t(kt(e1, !0));
            } catch (e1) {
                console.error(e1);
            }
        });
        return ()=>{
            this.#e.isDeleted() || Ct(this.#e.unsubscribe(r));
        };
    };
};
Vc = [
    er
], Nc = [
    er
], Hc = [
    er
], qc = [
    er
], $c = [
    er
], Uc = [
    er
], jc = [
    er
], Oc = [
    Jt
], Ic = [
    er
], Mc = [
    er
], Rc = [
    Jt
], Bc = [
    er
], Dc = [
    Jt
], Lc = [
    Jt
], Fc = [
    Jt
], Pc = [
    Jt
], Ac = [
    Jt
], Tc = [
    er
], kc = [
    Jt
], xc = [
    er
], Cc = [
    er
], Sc = [
    er
], Ec = [
    Jt
];
var Gc, Xc, Yc, Kc, Zc, Qc, SceneAPI = class {
    constructor(e1){
        v(Wc, 5, this), S(this, zc), b(this, "onZoomLevelChanged", (e1)=>{
            const t = E(this, zc).subscribeToZoomLevel(e1);
            return ()=>{
                E(this, zc).isDeleted() || Ct(E(this, zc).unsubscribe(t));
            };
        }), b(this, "onActiveChanged", (e1)=>{
            const t = E(this, zc).subscribeToActiveSceneChange(e1);
            return ()=>{
                E(this, zc).isDeleted() || Ct(E(this, zc).unsubscribe(t));
            };
        }), C(this, zc, e1);
    }
    async loadFromString(e1) {
        return Yt("sceneContent", e1, Vt()), xt((t)=>E(this, zc).loadSceneFromString(e1, t));
    }
    async loadFromURL(e1) {
        return Yt("url", e1, Vt()), xt((t)=>E(this, zc).loadSceneFromURL(e1, t));
    }
    async loadFromArchiveURL(e1) {
        return Yt("url", e1, Vt()), xt((t)=>E(this, zc).loadSceneFromArchiveURL(e1, t));
    }
    async saveToString(e1 = [
        "blob",
        "bundle",
        "file",
        "http",
        "https"
    ]) {
        const t = this.get();
        if (null == t) throw new Error("No scene available.");
        return xt((r)=>{
            E(this, zc).saveSceneToString(t, r, e1);
        });
    }
    async saveToArchive() {
        return new Promise((e1, t)=>{
            const r = this.get();
            null == r ? t(new Error("No scene available.")) : E(this, zc).saveSceneToArchive(r, (r)=>{
                "error" in r ? t(r.error) : e1(new gu([
                    r
                ], {
                    type: mu.Zip
                }));
            });
        });
    }
    create(e1 = "Free") {
        Yt("sceneLayout", e1, Zt());
        return Ct(E(this, zc).createScene(e1));
    }
    createVideo() {
        return Ct(E(this, zc).createVideoScene());
    }
    createFromImage(e1, t = 300, r = 1, n = "Free", o = 0, i = !1) {
        return Yt("url", e1, Vt()), Yt("dpi", t, Wt(Ht(), 0)), Yt("pixelScaleFactor", r, Wt(Ht(), 0)), Yt("sceneLayout", n, Zt()), xt((a)=>E(this, zc).createSceneFromImage(e1, t, r, n, o, i, a));
    }
    createFromVideo(e1) {
        return Yt("url", e1, Vt()), xt((t)=>E(this, zc).createSceneFromVideo(e1, t));
    }
    get() {
        const e1 = Ct(E(this, zc).findByType("scene")), t = kt(e1);
        return t.length > 0 ? t[0] : null;
    }
    async applyTemplateFromString(e1) {
        return Yt("content", e1, Vt()), xt((t)=>E(this, zc).applyTemplateFromString(e1, t));
    }
    async applyTemplateFromURL(e1) {
        return Yt("url", e1, Vt()), xt((t)=>E(this, zc).applyTemplateFromURL(e1, t));
    }
    getMode() {
        const e1 = this.get();
        return Ct(E(this, zc).getSceneMode(e1));
    }
    setDesignUnit(e1) {
        Yt("designUnit", e1, function() {
            const e1 = [
                "Pixel",
                "Millimeter",
                "Inch"
            ];
            return jt("DesignUnit", (t)=>!("string" != typeof t || !e1.includes(t)) || {
                    message: `expected one of ${e1.map((e1)=>`"${e1}"`).join(", ")}, but got "${t}"`
                });
        }());
        const t = this.get();
        Ct(E(this, zc).setDesignUnit(t, e1));
    }
    getDesignUnit() {
        const e1 = this.get();
        return Ct(E(this, zc).getDesignUnit(e1));
    }
    getPages() {
        return kt(Ct(E(this, zc).getPages()));
    }
    getCurrentPage() {
        const e1 = this.get();
        if (null == e1) return null;
        const t = E(this, zc).getCurrentPage(e1);
        return t.isValid() ? Ct(t) : null;
    }
    findNearestToViewPortCenterByType(e1) {
        Yt("type", e1, Vt());
        const t = this.get();
        if (null == t) return [];
        const r = Ct(E(this, zc).findNearestToViewPortCenterByType(t, e1));
        return kt(r);
    }
    findNearestToViewPortCenterByKind(e1) {
        Yt("kind", e1, Vt());
        const t = this.get();
        if (null == t) return [];
        const r = Ct(E(this, zc).findNearestToViewPortCenterByKind(t, e1));
        return kt(r);
    }
    setZoomLevel(e1 = 1) {
        const t = this.get();
        Yt("zoomLevel", e1, Wt(Ht(), 0)), E(this, zc).setZoomLevel(t, e1);
    }
    getZoomLevel() {
        const e1 = this.get();
        return Ct(E(this, zc).getZoomLevel(e1));
    }
    async zoomToBlock(e1, t = 0, r = 0, n = 0, o = 0) {
        return Yt("id", e1, qt()), xt((i)=>E(this, zc).zoomToBlock(e1, t, r, n, o, i));
    }
    enableZoomAutoFit(e1, t, r = 0, n = 0, o = 0, i = 0) {
        return Yt("id", e1, qt()), Yt("axis", t, function() {
            const e1 = [
                "Horizontal",
                "Vertical",
                "Both"
            ];
            return jt("ZoomAutoFitAxis", (t)=>!("string" != typeof t || !e1.includes(t)) || {
                    message: `expected one of ${e1.map((e1)=>`"${e1}"`).join(", ")}, but got "${t}"`
                });
        }()), "Horizontal" === t ? (Yt("paddingBefore", r, Ht()), Yt("paddingAfter", n, Ht()), Ct(E(this, zc).enableZoomAutoFit(e1, t, r, 0, n, 0))) : "Vertical" === t ? (Yt("paddingBefore", r, Ht()), Yt("paddingAfter", n, Ht()), Ct(E(this, zc).enableZoomAutoFit(e1, t, 0, r, 0, n))) : (Yt("paddingLeft", r, Ht()), Yt("paddingTop", n, Ht()), Yt("paddingRight", o, Ht()), Yt("paddingBottom", i, Ht()), Ct(E(this, zc).enableZoomAutoFit(e1, t, r, n, o, i)));
    }
    disableZoomAutoFit(e1) {
        return Yt("blockOrScene", e1, qt()), Ct(E(this, zc).disableZoomAutoFit(e1));
    }
    isZoomAutoFitEnabled(e1) {
        return Yt("blockOrScene", e1, qt()), Ct(E(this, zc).isZoomAutoFitEnabled(e1));
    }
    unstable_enableCameraPositionClamping(e1, t = 0, r = 0, n = 0, o = 0, i = 0, a = 0, s = 0, u = 0) {
        return Yt("ids", e1, Ut(Ht())), Yt("paddingLeft", t, Ht()), Yt("paddingTop", r, Ht()), Yt("paddingRight", n, Ht()), Yt("paddingBottom", o, Ht()), Yt("scaledPaddingLeft", t, Ht()), Yt("scaledPaddingTop", r, Ht()), Yt("scaledPaddingRight", n, Ht()), Yt("scaledPaddingBottom", o, Ht()), Ct(E(this, zc).unstable_enableCameraPositionClamping(e1, t, r, n, o, i, a, s, u));
    }
    unstable_disableCameraPositionClamping(e1 = this.get()) {
        if (null == e1) throw new Error("No scene available.");
        return Ct(E(this, zc).unstable_disableCameraPositionClamping(e1));
    }
    unstable_isCameraPositionClampingEnabled(e1 = this.get()) {
        if (null == e1) throw new Error("No scene available.");
        return Ct(E(this, zc).unstable_isCameraPositionClampingEnabled(e1));
    }
    unstable_enableCameraZoomClamping(e1, t = -1, r = -1, n = 0, o = 0, i = 0, a = 0) {
        return Yt("ids", e1, Ut(Ht())), Yt("minZoomLimit", t, Ht()), Yt("maxZoomLimit", r, Ht()), Yt("paddingLeft", n, Ht()), Yt("paddingTop", o, Ht()), Yt("paddingRight", i, Ht()), Yt("paddingBottom", a, Ht()), Ct(E(this, zc).unstable_enableCameraZoomClamping(e1, t, r, n, o, i, a));
    }
    unstable_disableCameraZoomClamping(e1 = this.get()) {
        if (null == e1) throw new Error("No scene available.");
        return Ct(E(this, zc).unstable_disableCameraZoomClamping(e1));
    }
    unstable_isCameraZoomClampingEnabled(e1 = this.get()) {
        if (null == e1) throw new Error("No scene available.");
        return Ct(E(this, zc).unstable_isCameraZoomClampingEnabled(e1));
    }
};
Wc = h(null), zc = new WeakMap, y(Wc, 1, "loadFromString", Vc, SceneAPI), y(Wc, 1, "loadFromURL", Nc, SceneAPI), y(Wc, 1, "loadFromArchiveURL", Hc, SceneAPI), y(Wc, 1, "create", qc, SceneAPI), y(Wc, 1, "createVideo", $c, SceneAPI), y(Wc, 1, "createFromImage", Uc, SceneAPI), y(Wc, 1, "createFromVideo", jc, SceneAPI), y(Wc, 1, "get", Oc, SceneAPI), y(Wc, 1, "applyTemplateFromString", Ic, SceneAPI), y(Wc, 1, "applyTemplateFromURL", Mc, SceneAPI), y(Wc, 1, "getMode", Rc, SceneAPI), y(Wc, 1, "setDesignUnit", Bc, SceneAPI), y(Wc, 1, "getDesignUnit", Dc, SceneAPI), y(Wc, 1, "getPages", Lc, SceneAPI), y(Wc, 1, "getCurrentPage", Fc, SceneAPI), y(Wc, 1, "findNearestToViewPortCenterByType", Pc, SceneAPI), y(Wc, 1, "findNearestToViewPortCenterByKind", Ac, SceneAPI), y(Wc, 1, "setZoomLevel", Tc, SceneAPI), y(Wc, 1, "getZoomLevel", kc, SceneAPI), y(Wc, 1, "zoomToBlock", xc, SceneAPI), y(Wc, 1, "enableZoomAutoFit", Cc, SceneAPI), y(Wc, 1, "disableZoomAutoFit", Sc, SceneAPI), y(Wc, 1, "isZoomAutoFitEnabled", Ec, SceneAPI), g(Wc, SceneAPI), Kc = [
    Jt
], Yc = [
    er
], Xc = [
    Jt
], Gc = [
    er
];
var VariableAPI = class {
    constructor(e1){
        v(Qc, 5, this), S(this, Zc), C(this, Zc, e1);
    }
    findAll() {
        return kt(E(this, Zc).findAllVariables());
    }
    setString(e1, t) {
        return Yt("key", e1, Vt()), Yt("value", t, Vt()), Ct(E(this, Zc).setVariableString(e1, t));
    }
    getString(e1) {
        return Yt("key", e1, Vt()), Ct(E(this, Zc).getVariableString(e1));
    }
    remove(e1) {
        return Yt("key", e1, Vt()), Ct(E(this, Zc).removeVariable(e1));
    }
};
Qc = h(null), Zc = new WeakMap, y(Qc, 1, "findAll", Kc, VariableAPI), y(Qc, 1, "setString", Yc, VariableAPI), y(Qc, 1, "getString", Xc, VariableAPI), y(Qc, 1, "remove", Gc, VariableAPI), g(Qc, VariableAPI);
var Jc = async function(e1, t, r = fetch, n, o = new Set(n.findAllSources())) {
    const i = e1.map(async (e1)=>{
        const i = (a = `/${e1}/content.json`, `${t.replace(/\/+$/, "")}/${a.replace(/^\/+/, "")}`);
        var a;
        return r(i).then((e1)=>{
            if (!e1.ok) throw new Error(e1.statusText);
            return e1.json();
        }).then((r)=>{
            if (void 0 === r.assets) throw new Error(`Invalid content.json for assets: ${e1}`);
            const i = r.assets;
            o.has(e1) || n.addLocalSource(e1), i.forEach((r)=>{
                r.meta && Object.entries(r.meta).forEach(([e1, n])=>{
                    const o = n.toString();
                    if (o.includes("{{base_url}}")) {
                        const n = o.replace("{{base_url}}", t);
                        r.meta && (r.meta[e1] = n);
                    }
                }), r.payload?.typeface && r.payload.typeface.fonts.forEach((e1)=>{
                    e1.uri.includes("{{base_url}}") && (e1.uri = e1.uri.replace("{{base_url}}", t));
                }), r.payload?.sourceSet && r.payload.sourceSet.forEach((e1)=>{
                    e1.uri.includes("{{base_url}}") && (e1.uri = e1.uri.replace("{{base_url}}", t));
                }), n.addAssetToSource(e1, r);
            });
        });
    });
    await Promise.all(i);
};
var el = async function(e1, t, r, n) {
    const o = [
        "ly.img.sticker",
        "ly.img.vectorpath",
        "ly.img.colors.defaultPalette",
        "ly.img.filter.lut",
        "ly.img.filter.duotone",
        "ly.img.effect",
        "ly.img.blur",
        "ly.img.typeface"
    ].filter((e1)=>!r.includes(e1));
    await Jc(o, t, n, e1);
}, tl = ((e1)=>(e1[e1.Information = 0] = "Information", e1[e1.Warning = 1] = "Warning", e1[e1.Error = 2] = "Error", e1))(tl || {}), rl = ((e1)=>(e1[e1.Free = 0] = "Free", e1[e1.VerticalStack = 1] = "VerticalStack", e1[e1.HorizontalStack = 2] = "HorizontalStack", e1[e1.DepthStack = 3] = "DepthStack", e1))(rl || {});
var nl = async function(e1, t, r, n, o, i, a = "https://cdn.img.ly/assets/demo/v2") {
    const s = new Set(e1.findAllSources()), u = "ly.img.image.upload";
    !o || r.includes(u) || s.has(u) || e1.addLocalSource(u, [
        "image/jpeg",
        "image/png",
        "image/webp",
        "image/svg+xml",
        "image/gif",
        "image/bmp"
    ]);
    const c = "ly.img.video.upload";
    "Video" !== n || !o || r.includes(c) || s.has(c) || e1.addLocalSource(c, [
        "video/mp4",
        "video/quicktime"
    ]);
    const l = "ly.img.audio.upload";
    "Video" !== n || !o || r.includes(l) || s.has(l) || e1.addLocalSource(l, [
        "audio/mpeg",
        "audio/mp3",
        "audio/x-m4a",
        "audio/wav"
    ]);
    const d = [
        "ly.img.image",
        "ly.img.video",
        "ly.img.audio"
    ].filter((e1)=>!r.includes(e1));
    s.has("ly.img.template") || r.includes("ly.img.template") || (e1.addLocalSource("ly.img.template", void 0, async (e1)=>{
        const r = e1.meta?.uri;
        if (r) if (r.startsWith("UBQ1")) t.applyTemplateFromString(r);
        else {
            const e1 = new URL(r, window.location.href);
            t.applyTemplateFromURL(e1.href);
        }
    }), d.push("ly.img.template")), "Video" !== n || s.has("ly.img.video.template") || r.includes("ly.img.video.template") || (e1.addLocalSource("ly.img.video.template", void 0, async (e1)=>{
        const r = e1.meta?.uri;
        if (r) if (r.startsWith("UBQ1")) t.applyTemplateFromString(r);
        else {
            const e1 = new URL(r, window.location.href);
            t.applyTemplateFromURL(e1.href);
        }
    }), d.push("ly.img.video.template")), await Jc(d, a, i, e1);
};
function ol(e1, t) {
    let r;
    const n = new Set;
    function o() {
        const n = window.devicePixelRatio, { width: i, height: a } = e1.getBoundingClientRect();
        t(i * n, a * n, n), r = matchMedia(`(resolution: ${n}dppx)`), r.addEventListener("change", o, {
            once: !0
        });
    }
    o();
    const i = new ResizeObserver(function([e1]) {
        const { width: r, height: o } = e1.target.getBoundingClientRect();
        if (r <= 0 || o <= 0) return;
        const i = window.devicePixelRatio, a = setTimeout(function() {
            n.delete(a), t(r * i, o * i, i);
        }, 0);
        n.add(a);
    });
    return i.observe(e1), ()=>{
        r.removeEventListener("change", o), i.disconnect();
        for (const e1 of n)clearTimeout(e1);
        n.clear(), e1 = null, t = null;
    };
}
var il = d(ht());
function al(e1, t) {
    const r = new Set;
    function n(n) {
        r.add(n);
        e1?.((e1, ...t)=>{
            n(e1);
            for (const e1 of t)n(e1);
        });
        return ()=>{
            r.delete(n), t?.();
        };
    }
    return n.emit = function(e1, ...t) {
        for (const n of r){
            n(e1);
            for (const e1 of t)n(e1);
        }
    }, n.handlers = r, n;
}
var sl = (e1)=>(t)=>function(r) {
            return t(function(t) {
                r(e1(t));
            });
        };
function ul(e1) {
    return (t)=>function(r) {
            let n = !1;
            const o = t(function(e1) {
                n = !0, r(e1);
            });
            return n || r(e1 instanceof Function ? e1() : e1), o;
        };
}
var cl = (e1 = (e1, t)=>e1 === t)=>(t)=>function(r) {
            let n;
            return t(function(t) {
                e1(t, n) || (n = t, r(t));
            });
        }, ll = (e1)=>{
    const t = new Set;
    let r = null;
    return function(n) {
        return t.add(n), null === r && (r = e1(function(e1) {
            t.forEach((t)=>t(e1));
        })), function() {
            t.delete(n), 0 === t.size && (r?.(), r = null);
        };
    };
};
function dl(e1, ...t) {
    return t.reduce((e1, t)=>t(e1), e1);
}
var hl = (...e1)=>{
    const t = Array.from(e1);
    return function(e1) {
        const r = t.map(function(t) {
            return t(e1);
        });
        return function() {
            for (const e1 of r)e1();
        };
    };
};
function fl(e1) {
    return function(t) {
        let r = null;
        const n = e1(function(e1) {
            r?.(), r = e1 ? e1(t) : e1;
        });
        return function() {
            n(), r?.(), r = null;
        };
    };
}
function pl(...e1) {
    const t = Array.from(e1);
    return function(e1) {
        const r = new Array(t.length), n = t.map((t, n)=>t(function(t) {
                r[n] = t, e1(r);
            }));
        return function() {
            n.forEach((e1)=>e1()), r.length = 0;
        };
    };
}
var ml = Symbol("NO_VALUE");
function gl(e1) {
    let t = ml;
    const r = al();
    return {
        subscribe: r,
        value: ()=>(t === ml && (t = e1()), t),
        update (e1) {
            t = e1, r.emit(t);
        }
    };
}
var vl = d(bt());
function yl(e1, t) {
    const { block: r, event: n } = t;
    return dl((t)=>{
        const o = r.getType(e1), i = (0, vl.default)(n.subscribe([
            e1
        ], function(n) {
            n.some((e1)=>"Destroyed" === e1.type) && !r.isValid(e1) || r.getType(e1) !== o ? i() : t(n);
        }));
        return i;
    }, ll);
}
function bl(e1, t) {
    if (!t) return e1;
    let r;
    return (...n)=>{
        const o = e1(...n);
        return t(o, r) || (r = o), r;
    };
}
var wl = function(e1, t, r, n) {
    const o = bl(t, n?.equals), i = al();
    return {
        subscribe: dl(hl(e1, i), sl(o), cl(), ll),
        update: r,
        value: o,
        flush: ()=>i.emit()
    };
};
var _l = class {
    settings;
    clampCamera = !1;
    clampResult = gl(()=>({
            sceneSize: {
                x: 0,
                y: 0
            },
            scrollPercentage: {
                x: NaN,
                y: NaN
            }
        }));
    zoomLevel;
    #a;
    viewportPadding = gl(()=>({
            x: 40,
            y: 48
        }));
    autoFit;
    scrollPercentage;
    sceneSize;
    scroll;
    constructor(e1){
        const { block: t, scene: r, _legacyApi: n } = e1, o = dl(r.onActiveChanged, ul(), sl(()=>r.get())), i = dl(o, sl((r)=>null != r && t.isValid(r) ? dl(yl(r, e1), ul([]), sl(()=>t.getFloat(r, "scene/dpi"))) : ()=>()=>{}), fl), a = dl(o, sl(()=>{
            const r = t.findByType("camera")[0];
            return null == r ? ()=>()=>{} : dl(yl(r, e1), ul([]), sl(()=>r));
        }), fl);
        this.settings = {
            subscribe: dl(a, sl((e1)=>({
                    width: t.getFloat(e1, "camera/resolution/width"),
                    height: t.getFloat(e1, "camera/resolution/height"),
                    pixelRatio: t.getFloat(e1, "camera/pixelRatio")
                })), cl(il.default), ll),
            update ({ width: e1, height: r, pixelRatio: n }) {
                const o = t.findByType("camera")[0];
                null != o && (t.setFloat(o, "camera/resolution/width", e1), t.setFloat(o, "camera/resolution/height", r), t.setFloat(o, "camera/pixelRatio", n));
            },
            value () {
                const e1 = t.findByType("camera")[0];
                return null == e1 ? {
                    width: 0,
                    height: 0,
                    pixelRatio: 1
                } : {
                    width: t.getFloat(e1, "camera/resolution/width"),
                    height: t.getFloat(e1, "camera/resolution/height"),
                    pixelRatio: t.getFloat(e1, "camera/pixelRatio")
                };
            }
        }, this.zoomLevel = wl(hl(r.onZoomLevelChanged, i), ()=>{
            const e1 = r.get(), { pixelRatio: n } = this.settings.value();
            return null != e1 && t.isValid(e1) ? r.getZoomLevel() / n : 1;
        }, (e1)=>{
            const n = r.get(), { pixelRatio: o } = this.settings.value();
            null != n && t.isValid(n) && r.setZoomLevel(e1 * o);
        }), this.#a = {
            subscribe: dl(a, sl((e1)=>n.getValue(e1, "ubq/designblocks/Camera", "zoomLevel")), cl()),
            value () {
                const e1 = t.findByType("camera")[0];
                return null == e1 ? 1 : n.getValue(e1, "ubq/designblocks/Camera", "zoomLevel");
            }
        }, this.autoFit = wl(r.onZoomLevelChanged, ()=>{
            const e1 = r.get();
            return null != e1 && r.isZoomAutoFitEnabled(e1);
        }), this.scrollPercentage = {
            subscribe: dl(this.clampResult.subscribe, sl((e1)=>e1.scrollPercentage), cl(il.default)),
            value: ()=>this.clampResult.value().scrollPercentage
        }, this.sceneSize = {
            subscribe: dl(pl(this.clampResult.subscribe, this.#a.subscribe, this.settings.subscribe), sl(([e1, t, r])=>{
                const n = e1?.sceneSize ?? this.clampResult.value().sceneSize ?? {
                    x: 0,
                    y: 0
                }, o = t ?? this.#a.value() ?? 10, i = r?.pixelRatio ?? this.settings.value().pixelRatio ?? 1;
                return {
                    x: n.x * o / i,
                    y: n.y * o / i
                };
            }), cl(il.default)),
            value: ()=>{
                const e1 = this.clampResult.value().sceneSize ?? {
                    x: 0,
                    y: 0
                }, t = this.#a.value() ?? 10, r = this.settings.value().pixelRatio ?? 1;
                return {
                    x: e1.x * t / r,
                    y: e1.y * t / r
                };
            }
        }, this.scroll = (e1)=>{
            const r = t.findByType("camera")[0];
            if (null == r) return;
            const n = this.#a.value(), o = this.settings.value().pixelRatio, i = e1.x * o / n, a = e1.y * o / n, s = {
                x: t.getPositionX(r) + i,
                y: t.getPositionY(r) + a
            };
            t.setPositionX(r, s.x), t.setPositionY(r, s.y);
        };
    }
};
function El(e1, t) {
    const r = `[UBQ] ${e1}`;
    switch(t){
        case "Warning":
            console.warn(r);
            break;
        case "Error":
            console.error(r);
            break;
        case "Info":
            console.info(r);
            break;
        default:
            console.log(r);
    }
}
function Sl(e1, t) {
    return t ??= "undefined" == typeof window ? void 0 : window.location.href, new URL(e1 ?? "", t).href.replace(/\/*$/, "/");
}
function Cl(e1 = {}) {
    const t = {
        ...e1,
        license: e1.license ?? "",
        baseURL: e1.baseURL ?? "https://cdn.img.ly/packages/imgly/cesdk-engine/1.44.0/assets",
        core: e1.core ?? {
            baseURL: "core/"
        },
        logger: e1.logger ?? El,
        presets: e1.presets ?? {}
    };
    return t.baseURL = Sl(t.baseURL), t.core.baseURL = Sl(t.core.baseURL, t.baseURL), t;
}
var xl = {
    warnKeys (e1) {
        if (e1.scene || e1.page || e1.assetSources || e1.presets?.colorPalettes || e1.presets?.images || e1.presets?.pageFormats || e1.presets?.colorPalettes || e1.variables || e1.callbacks?.log || e1.initialSceneMode || e1.initialSceneString || e1.initialSceneURL || e1.initialImageURL) return "Your configuration contains keys that are no longer supported and will be ignored. Refer to https://img.ly/docs/cesdk/introduction/migration_1_13/ for information about the removed keys.";
    }
};
function kl(e1, t) {
    return t ? e1.flatMap((e1)=>{
        const r = e1.warnKeys?.(t);
        return "string" == typeof r ? [
            r
        ] : r ?? [];
    }) : [];
}
function Tl(e1, t, r) {
    if (t) for (const n of e1)n.applyFallback?.(t, r);
}
function Al(e1, t) {
    return t ? e1.reduce((e1, t)=>t.migrateConfigObject ? t.migrateConfigObject(e1) : e1, t) : t;
}
var Pl, Fl, Ll, Dl, Bl = [
    xl,
    new class _TypefaceMigration {
        static APIFALLBACK_TYPEFACES_SOURCE_ID = "apiFallbackTypefaces";
        warnKeys(e1) {
            if (e1.presets?.typefaces) return "The `presets.typefaces` configuration option is deprecated. Use the AssetAPI to add typefaces instead.";
        }
        applyFallback(e1, t) {
            if (e1) try {
                const r = t.asset;
                if (e1.presets?.typefaces) {
                    r.addLocalSource(_TypefaceMigration.APIFALLBACK_TYPEFACES_SOURCE_ID);
                    for (const [t, n] of Object.entries(e1.presets.typefaces))r.addAssetToSource(_TypefaceMigration.APIFALLBACK_TYPEFACES_SOURCE_ID, {
                        id: t,
                        payload: {
                            typeface: {
                                name: n.family,
                                fonts: n.fonts.map((e1)=>({
                                        subFamily: `${e1.weight} ${e1.style}`,
                                        style: e1.style,
                                        uri: e1.fontURL,
                                        weight: e1.weight
                                    }))
                            }
                        }
                    });
                }
            } catch (e1) {
                console.error(e1);
            }
        }
    }
];
function Rl(e1, t, r = void 0) {
    const n = (e1)=>{
        Ct(t.setContext("")), e1.preventDefault();
    }, o = (e1)=>{
        Ct(t.setContext("!canvas")), r && r(), e1.preventDefault();
    };
    return e1.addEventListener("webglcontextlost", n, !1), e1.addEventListener("webglcontextrestored", o, !1), ()=>{
        e1.removeEventListener("webglcontextlost", n), e1.removeEventListener("webglcontextrestored", o);
    };
}
function Ml(e1) {
    const t = {
        key: 255,
        characters: e1.key,
        shiftIsHeld: e1.shiftKey,
        commandIsHeld: e1.metaKey || e1.ctrlKey,
        optionIsHeld: e1.altKey,
        timestamp: Date.now()
    };
    switch(e1.key.toUpperCase()){
        case "0":
            t.key = 0;
            break;
        case "1":
            t.key = 1;
            break;
        case "2":
            t.key = 2;
            break;
        case "3":
            t.key = 3;
            break;
        case "4":
            t.key = 4;
            break;
        case "5":
            t.key = 5;
            break;
        case "6":
            t.key = 6;
            break;
        case "7":
            t.key = 7;
            break;
        case "8":
            t.key = 8;
            break;
        case "9":
            t.key = 9;
            break;
        case "A":
            t.key = 10;
            break;
        case "B":
            t.key = 11;
            break;
        case "C":
            t.key = 12;
            break;
        case "D":
            t.key = 13;
            break;
        case "E":
            t.key = 14;
            break;
        case "F":
            t.key = 15;
            break;
        case "G":
            t.key = 16;
            break;
        case "H":
            t.key = 17;
            break;
        case "I":
            t.key = 18;
            break;
        case "J":
            t.key = 19;
            break;
        case "K":
            t.key = 20;
            break;
        case "L":
            t.key = 21;
            break;
        case "M":
            t.key = 22;
            break;
        case "N":
            t.key = 23;
            break;
        case "O":
            t.key = 24;
            break;
        case "P":
            t.key = 25;
            break;
        case "Q":
            t.key = 26;
            break;
        case "R":
            t.key = 27;
            break;
        case "S":
            t.key = 28;
            break;
        case "T":
            t.key = 29;
            break;
        case "U":
            t.key = 30;
            break;
        case "V":
            t.key = 31;
            break;
        case "W":
            t.key = 32;
            break;
        case "X":
            t.key = 33;
            break;
        case "Y":
            t.key = 34;
            break;
        case "Z":
            t.key = 35;
            break;
        case " ":
            t.key = 42;
            break;
        case "ESCAPE":
            t.key = 43, t.characters = "";
            break;
        case "BACKSPACE":
            t.key = 40, t.characters = "";
            break;
        case "DELETE":
            t.key = 44, t.characters = "";
            break;
        case "ENTER":
            t.key = 41, t.characters = t.shiftIsHeld ? "\u2028" : "\n";
            break;
        case "CONTROL":
            t.key = 45, t.characters = "";
            break;
        case "ALT":
            t.key = 46, t.characters = "";
            break;
        case "SHIFT":
            t.key = 47, t.characters = "";
            break;
        case "ARROWLEFT":
            t.key = 36, t.characters = "";
            break;
        case "ARROWRIGHT":
            t.key = 37, t.characters = "";
            break;
        case "ARROWUP":
            t.key = 38, t.characters = "";
            break;
        case "ARROWDOWN":
            t.key = 39, t.characters = "";
            break;
        case "DEAD":
            t.key = 255, t.characters = "";
    }
    return t;
}
Ll = [
    Jt
], Fl = [
    Jt
], Pl = [
    Jt
];
var Il = class {
    constructor(e1){
        v(Dl, 5, this), b(this, "ubique"), b(this, "notificationStream", (e1)=>{
            const t = this.ubique.addEventCallback("NotificationEvent", (t)=>e1({
                    type: tl[t.type],
                    i18n: t.i18n
                }));
            return ()=>{
                t.dispose(), t.delete();
            };
        }), b(this, "designElementLifecycleStream", (e1)=>(t)=>{
                const r = this.ubique.addEventCallback(e1, t);
                return ()=>{
                    r.dispose(), r.delete();
                };
            }), b(this, "historyStream", (e1)=>{
            const t = this.ubique.addEventCallback("HistoryUpdatedEvent", e1);
            return ()=>{
                t.dispose(), t.delete();
            };
        }), this.ubique = e1.getInternalAPI();
    }
    dispose() {
        this.ubique.delete();
    }
    setErrorCallback(e1, t) {
        this.ubique.setErrorCallback(e1, t);
    }
    getSelectedText() {
        return Ct(this.ubique.getSelectedText());
    }
    hasComponent(e1, t) {
        return Ct(this.ubique.hasComponent(e1, t));
    }
    getValue(e1, t, r) {
        return Ct(this.ubique.getValue(e1, t, r));
    }
    execute(e1, t) {
        let r;
        const n = new Promise((n, o)=>{
            r = this.ubique.ubqExecute(e1, t, (e1)=>{
                try {
                    const t = Ct(e1);
                    n(t);
                } catch (e1) {
                    o(e1);
                }
            });
        });
        return Ct(r), n;
    }
    sendKey(e1) {
        return this.execute("ubq/inputs/keyboardkey", Ml(e1));
    }
    changeSceneLayout(e1, t, r, n) {
        return this.execute("ubq/scene/changeLayout", [
            e1,
            rl[t],
            r,
            n
        ]);
    }
};
y(Dl = h(null), 1, "getSelectedText", Ll, Il), y(Dl, 1, "hasComponent", Fl, Il), y(Dl, 1, "getValue", Pl, Il), g(Dl, Il);
var Ol = !1;
var jl = "https://api.img.ly/activate";
var Ul = d(_t()), $l = "./cesdk-v1.44.0-XHZXX7DG.data", ql = "./cesdk-v1.44.0-ZXZRSABK.wasm", Hl = Ul.default, Nl = !("undefined" == typeof window || !window.document || !window.document.createElement) && navigator && navigator.userAgent || "", Vl = -1 !== Nl.indexOf("Edge"), zl = !!Nl.match(/msie|trident/i), Wl = /\b(iPad|iPhone|iPod)\b/.test(Nl) && /WebKit/.test(Nl) && !/Edge/.test(Nl) && ("undefined" == typeof window || !("MSStream" in window)), Gl = (e1, t)=>{
    if (null != t) {
        return [
            t,
            e1.split("/").pop()
        ].join("");
    }
    return new URL(e1, window.location.origin);
};
function Xl() {
    try {
        return new WebAssembly.Memory({
            initial: Yl(Wl ? 512 : 32),
            maximum: Yl(2048)
        });
    } catch (e1) {
        return new WebAssembly.Memory({
            initial: Yl(32),
            maximum: Yl(2048)
        });
    }
}
function Yl(e1) {
    return 1024 * e1 * 1024 / 65536;
}
async function Kl(e1, t) {
    const { core: r } = t, n = t.logger, o = Gl(ql, r.baseURL).toString(), i = Gl($l, r.baseURL).toString(), a = /electron/i.test(navigator.userAgent), s = function(e1, t = fetch) {
        if (!e1.license) throw new Error("Missing license key in config");
        return e1.license.length < 128 ? t(jl, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                apiKey: e1.license,
                userId: e1.userId
            })
        }).then((e1)=>{
            if (e1.ok) return e1.json();
            throw new Error("Unfortunately we are experiencing a server down time and your License key cannot be validated. We're already working on a fix and will restore service soon. Should services not restore within the hour, kindly get in touch with our support team.");
        }).then((e1)=>{
            if ("valid" === e1.status) return e1.license;
            throw "expired" === e1.status ? new Error("Thanks for using IMG.LY for creative editing. Please note that your license file or commercial use is expired. Please get in touch with our sales team to discuss extension of your commercial license.") : new Error("The License Key (API Key) you are using to access the IMG.LY SDK is invalid. Please ensure that you are using the license key tied to your subscription and get in touch with our support team.");
        }) : Promise.resolve(e1.license);
    }(t), u = a ? await fetch(i, {
        credentials: "same-origin"
    }).then((e1)=>e1.arrayBuffer()).then((e1)=>function(t, r) {
            if (t !== i) return null;
            if (r === e1.byteLength) return e1;
            throw new Error(`Attempt to get preloaded package of unknown name or size: ${t} ${r}`);
        }) : void 0;
    return new Promise((r, a)=>{
        const c = {
            getPreloadedPackage: u,
            locateFile: (e1, t)=>e1.endsWith(".wasm") ? o : e1.endsWith(".data") ? i : t + e1,
            print: (e1)=>{
                e1 && "undefined" !== e1 && n(e1, "Info");
            },
            printErr: (e1)=>{
                e1 && "undefined" !== e1 && n(e1, "Error");
            },
            logReadFiles: !1,
            printWithColors: !0,
            wasmMemory: Xl()
        };
        Hl(c).then(async (n)=>{
            n.specialHTMLTargets["!canvas"] = e1;
            n.emscripten_ubq_settings_forceWebGL1 = Wl || !!t?.forceWebGL1;
            const o = Ct(n.createEngine("!canvas", t.audioOutput ?? "auto"));
            !function(e1, t) {
                if (!t) throw new Error("Missing license key");
                Ct(e1.unlockWithLicense(t));
            }(o, await s), function(e1, t) {
                const r = new EditorAPI(e1), n = new AssetAPI(e1);
                if (r.setRole(t.role ?? "Creator"), Ol) {
                    const t = new Il(e1);
                    t.execute("cesdk/getVersionInfo").then((e1)=>console.debug(e1)), t.execute("cesdk/getCapabilitiesInfo").then((e1)=>console.debug(e1)), t.dispose();
                }
                r.setSettingString("basePath", t.baseURL), r.setSettingBool("showBuildVersion", Ol || !1), t.featureFlags?.preventScrolling && (r.setSettingBool("touch/singlePointPanning", !1), r.setSettingBool("touch/dragStartCanSelect", !1)), n.addLocalSource("ly.img.text"), function() {
                    Ol && (r.setSettingBool("features/hspSelectiveAdjustmentsEnabled", !1), r.setSettingBool("features/templatingEnabled", !0));
                    const e1 = !!t.featureFlags?.singlePageMode;
                    r.setSettingBool("features/singlePageModeEnabled", e1), r.setSettingBool("features/effectsEnabled", !0);
                }(), function() {
                    const t = new VariableAPI(e1);
                    (Ol || "undefined" != typeof window && window.Cypress) && (t.setString("company_name", "img.ly"), t.setString("first_name", "Charly"), t.setString("last_name", "Williams"), t.setString("address", "742 Evergreen Terrace"), t.setString("city", "Springfield"));
                }(), r.startTracking(t.license, t.userId ?? "");
            }(o, t), r(o);
        }).catch(a);
    });
}
var Zl = class {
    _reactor;
    _updateHandler = null;
    debugName;
    dirty = !0;
    readCalls = new Set;
    constructor(e1, t){
        this.debugName = t, this._reactor = e1;
    }
    dispose() {
        this._updateHandler = null, this._reactor._unregisterReaction(this), this._reactor = null;
    }
    track(e1) {
        return this._reactor._trackReaction(this, e1);
    }
    subscribe(e1) {
        return this._reactor._registerReaction(this), this._updateHandler = e1, ()=>{
            this._updateHandler = null, this._reactor._unregisterReaction(this);
        };
    }
    update() {
        this._updateHandler?.();
    }
}, Ql = d(ht()), Jl = Symbol("NO_VALUE"), ed = class {
    callId;
    _value = Jl;
    _lastUpdateValue = Jl;
    _readFromEngine;
    constructor(e1, t){
        this.callId = e1, this._readFromEngine = t, this.read(), this._lastUpdateValue = this._value;
    }
    readCachedValue() {
        return this._value === Jl || this.revalidate ? this.read() : this._value;
    }
    revalidate = !1;
    invalidate() {
        this.revalidate = !0;
    }
    read() {
        const e1 = this._readFromEngine();
        return this.revalidate = !1, (0, Ql.default)(this._value, e1) ? this._value : (this._value = e1, e1);
    }
    updateValueAndCheckDirty() {
        try {
            const e1 = this.read(), t = this._lastUpdateValue !== e1;
            return this._lastUpdateValue = e1, t;
        } catch  {
            return this._lastUpdateValue = Jl, !0;
        }
    }
    update(e1) {
        this._readFromEngine = e1;
    }
}, td = class {
    readCalls = new Map;
    _createOrUpdateReadCall(e1, t) {
        if (this.readCalls.has(e1)) {
            this.readCalls.get(e1).update(t);
        } else this.readCalls.set(e1, new ed(e1, t));
    }
    registeredReactions = new Set;
    activeReactions = new Set;
    get isTracking() {
        return this.activeReactions.size > 0;
    }
    _nextReaction;
    _resolveNextReaction;
    _createNextReaction() {
        this._nextReaction = new Promise((e1)=>{
            this._resolveNextReaction = e1;
        });
    }
    constructor(){
        this._createNextReaction();
    }
    get nextReaction() {
        return this._nextReaction;
    }
    _getterCalled(e1, t) {
        if (this.isTracking) {
            this._createOrUpdateReadCall(e1, t);
            for (const t of this.activeReactions)t.readCalls.add(e1);
        }
    }
    _setterCalled() {
        for (const e1 of this.readCalls.values())e1.invalidate();
    }
    read(e1, t) {
        return this.isTracking && this.readCalls.has(e1) ? this.readCalls.get(e1).readCachedValue() : t();
    }
    createReaction(e1) {
        return new Zl(this, e1);
    }
    _registerReaction(e1) {
        this.registeredReactions.add(e1);
    }
    _unregisterReaction(e1) {
        this.registeredReactions.delete(e1);
    }
    _cleanupReadCalls() {
        const e1 = new Set;
        for (const t of this.registeredReactions)for (const r of t.readCalls)e1.add(r);
        for (const [t] of this.readCalls)e1.has(t) || this.readCalls.delete(t);
    }
    #s = new Set;
    updateDirtyReactions() {
        const e1 = new Set;
        for (const [t, r] of this.readCalls)r.updateValueAndCheckDirty() && e1.add(t);
        if (e1.size > 0) {
            for (const t of this.registeredReactions)if (!t.dirty) {
                for (const r of t.readCalls)if (e1.has(r)) {
                    t.dirty = !0;
                    break;
                }
            }
        }
        for (const e1 of this.registeredReactions)if (!this.#s.has(e1) && e1.dirty) try {
            this.#s.add(e1), e1.update();
        } finally{
            e1.dirty = !1, this.#s.delete(e1);
        }
        this._cleanupReadCalls(), this._resolveNextReaction(), this._createNextReaction();
    }
    _trackReaction(e1, t) {
        try {
            return this.activeReactions.add(e1), e1.readCalls.clear(), t();
        } finally{
            e1.dirty = !1, this.activeReactions.delete(e1);
        }
    }
    decorateFunction(e1, t) {
        return function(e1, t, r = t.name) {
            rr[r] ??= 0;
            const n = rr[r]++;
            return function(...o) {
                const i = this, a = `${r}${n}-${JSON.stringify(o, null, 0)}`;
                function s() {
                    return Reflect.apply(t, i, o);
                }
                return e1._getterCalled(a, s), e1.read(a, s);
            };
        }(this, e1, t);
    }
    decorateObject(e1) {
        return function(e1, t) {
            const r = t.constructor?.name ?? crypto.randomUUID(), n = [];
            let o = !1;
            const i = Object.getOwnPropertyNames(t.constructor.prototype).concat(Object.getOwnPropertyNames(t));
            for (const s of i){
                const i = t[s];
                if ("function" == typeof (a = i) && Qt in a) {
                    if ("getter" === i[Qt].type) {
                        let a = function(...t) {
                            if (o) throw new Error("Disposed @getter proxy called");
                            const n = this, a = `${r}-${s.toString()}-${JSON.stringify(t, null, 0)}`;
                            function u() {
                                return Reflect.apply(i, n, t);
                            }
                            return e1._getterCalled(a, u), e1.read(a, u);
                        };
                        n.push(nr(t, s, i)), t[s] = a;
                    } else if ("setter" === i[Qt].type) {
                        let r = function(...t) {
                            if (o) throw new Error("Disposed @setter proxy called");
                            const r = this;
                            return e1._setterCalled(), Reflect.apply(i, r, t);
                        };
                        n.push(nr(t, s, i)), t[s] = r;
                    }
                }
            }
            var a;
            return function() {
                o = !0;
                for (const e1 of n)e1();
                n.length = 0;
            };
        }(this, e1);
    }
    dispose() {
        this.registeredReactions.forEach((e1)=>e1.dispose()), this.registeredReactions.clear(), this.readCalls.clear(), this.activeReactions.clear();
    }
}, rd = 'url("data:image/svg+xml,%3Csvg width=%2722%27 height=%2725%27 viewBox=%270 0 22 25%27 fill=%27none%27 xmlns=%27http://www.w3.org/2000/svg%27%3E%3Cg filter=%27url(%23filter0_d)%27%3E%3Cpath d=%27M18 11.1071C18 14.5637 15.5566 17.4515 12.3314 18.0846V20L7.20308 17.0145L12.3314 14.0289V15.7825C14.3292 15.1951 15.7946 13.3221 15.7946 11.107C15.7946 8.42285 13.6437 6.23908 11 6.23908C8.35629 6.23908 6.20542 8.42285 6.20542 11.107C6.20542 11.8299 6.35745 12.5252 6.65738 13.1736L4.66118 14.1255C4.22245 13.1771 4 12.1616 4 11.1071C4.00007 7.18825 7.1403 4 11.0001 4C14.8599 4 18 7.18825 18 11.1071Z%27 fill=%27black%27/%3E%3Cpath d=%27M12.8314 15.0559V14.0289V13.1593L12.0799 13.5968L6.95152 16.5824L6.20927 17.0145L6.95152 17.4466L12.0799 20.4321L12.8314 20.8696V20V18.4841C16.0889 17.6521 18.5 14.6573 18.5 11.1071C18.5 6.9193 15.1431 3.5 11.0001 3.5C6.85702 3.5 3.50008 6.91929 3.5 11.1071V11.1071C3.5 12.2334 3.73793 13.3206 4.20739 14.3354L4.41978 14.7946L4.8764 14.5768L6.8726 13.6249L7.31866 13.4122L7.11118 12.9637C6.84206 12.3819 6.70542 11.7584 6.70542 11.107C6.70542 8.69181 8.63956 6.73908 11 6.73908C13.3604 6.73908 15.2946 8.69181 15.2946 11.107C15.2946 12.8513 14.2837 14.3564 12.8314 15.0559Z%27 stroke=%27white%27/%3E%3C/g%3E%3Cdefs%3E%3Cfilter id=%27filter0_d%27 x=%270.0599999%27 y=%270.0599999%27 width=%2721.88%27 height=%2724.6193%27 filterUnits=%27userSpaceOnUse%27 color-interpolation-filters=%27sRGB%27%3E%3CfeFlood flood-opacity=%270%27 result=%27BackgroundImageFix%27/%3E%3CfeColorMatrix in=%27SourceAlpha%27 type=%27matrix%27 values=%270 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0%27/%3E%3CfeOffset/%3E%3CfeGaussianBlur stdDeviation=%271.47%27/%3E%3CfeColorMatrix type=%27matrix%27 values=%270 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0%27/%3E%3CfeBlend mode=%27normal%27 in2=%27BackgroundImageFix%27 result=%27effect1_dropShadow%27/%3E%3CfeBlend mode=%27normal%27 in=%27SourceGraphic%27 in2=%27effect1_dropShadow%27 result=%27shape%27/%3E%3C/filter%3E%3C/defs%3E%3C/svg%3E") 12 12, pointer';
function nd(e1, t) {
    let r;
    return t.onStateChanged(()=>{
        const n = function(e1, t) {
            switch(e1){
                case "Arrow":
                    return "default";
                case "Move":
                    return "move";
                case "MoveNotPermitted":
                    return "auto";
                case "Resize":
                    {
                        const e1 = 180 * t / Math.PI + 45;
                        if (!zl && !Vl) return `url("data:image/svg+xml,%3Csvg style='transform: rotate(${e1}deg)' width ='22' height ='22' viewBox ='0 0 22 22' fill ='none' xmlns ='http://www.w3.org/2000/svg'%3E%3Cg filter ='url(%23filter0_d)'%3E%3Cpath d ='M13.7 11.1L9.7 15.2L12.5 18H4V9.5L6.9 12.3L10.9 8.3L12.3 6.9L9.5 4H18V12.5L15.2 9.7L13.7 11.1Z' fill ='white'/%3E%3C/g%3E%3Cpath d ='M12.7 10.7L8.3 15.2L10.1 17H5V11.9L6.9 13.8L11.3 9.3L13.8 6.9L11.9 5H17V10.1L15.2 8.3L12.7 10.7Z' fill ='black'/%3E%3Cdefs%3E%3Cfilter id ='filter0_d' x ='0' y ='0' width ='22' height ='22' filterUnits ='userSpaceOnUse' color-interpolation-filters ='sRGB'%3E%3CfeFlood flood-opacity ='0' result ='BackgroundImageFix'/%3E%3CfeColorMatrix in ='SourceAlpha' type ='matrix' values ='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset/%3E%3CfeGaussianBlur stdDeviation ='2'/%3E%3CfeColorMatrix type ='matrix' values ='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0'/%3E%3CfeBlend mode ='normal' in2 ='BackgroundImageFix' result ='effect1_dropShadow'/%3E%3CfeBlend mode ='normal' in ='SourceGraphic' in2 ='effect1_dropShadow' result ='shape'/%3E%3C/filter%3E%3C/defs%3E%3C/svg%3E") 12 12, pointer`;
                        switch(e1){
                            case 90:
                            case 270:
                                return "nwse-resize";
                            case 135:
                            case 315:
                                return "ns-resize";
                            case 180:
                            case 360:
                                return "nesw-resize";
                            case 225:
                                return "ew-resize";
                            default:
                                return "move";
                        }
                    }
                case "Rotate":
                    return rd;
                case "Text":
                    return "text";
                default:
                    return "auto";
            }
        }(t.getCursorType(), t.getCursorRotation());
        if (n !== r) {
            r = n;
            const t = new CustomEvent("cesdk-cursor", {
                composed: !0,
                bubbles: !0,
                cancelable: !0,
                detail: n
            });
            e1.dispatchEvent(t) && e1.style.setProperty("cursor", n);
        }
    });
}
var od = function(e1, t, r, n, o) {
    let i, a = null;
    const s = n.onStateChanged(()=>{
        i = n.getEditMode(), "Text" !== i || a ? "Text" !== i && a && (a(), a = null) : a = function() {
            const i = a();
            return ()=>{
                i?.();
            };
            function a() {
                let i = !1, a = "";
                if (null == e1.parentElement) return console.warn('Could not attach hidden text input to the DOM: Canvas has no parentElement. This can happen if edit mode is switched to "Text", while the canvas is removed from the DOM.'), ()=>{};
                const s = c();
                d();
                const u = h();
                return e1.parentElement.appendChild(s), f(), ()=>{
                    u(), l();
                };
                function c() {
                    const e1 = document.createElement("textarea");
                    return e1.id = "ubq_internal-inline_text_editing_html_representation", e1.setAttribute("data-cy", "inline-text-editing-input"), e1.autocapitalize = "none", e1.spellcheck = !1, e1.cols = 4096, e1.style.contain = "strict", e1.style.opacity = "0", e1.style.pointerEvents = "none", e1.style.zIndex = "-1", e1.style.position = "fixed", e1.style.width = "1px", e1.style.height = "1px", e1.style.padding = "0", e1.style.margin = "-1px", e1.style.overflow = "hidden", e1.style.clip = "rect(0, 0, 0, 0)", e1.style.border = "0", e1;
                }
                function l() {
                    s.blur(), s.remove();
                }
                function d() {
                    const t = n.getTextCursorPositionInScreenSpaceX(), r = n.getTextCursorPositionInScreenSpaceY(), { left: o, top: i } = e1.getBoundingClientRect();
                    s.style.left = `${o + t / window.devicePixelRatio}px`, s.style.top = `${i + r / window.devicePixelRatio}px`;
                }
                function h() {
                    const t = e1.getRootNode();
                    s.addEventListener("input", w), s.addEventListener("keydown", E), s.addEventListener("copy", v), s.addEventListener("cut", y), s.addEventListener("compositionstart", S), s.addEventListener("compositionend", C), s.addEventListener("beforeinput", A), s.addEventListener("focusout", P), t.addEventListener("touchend", T), t.addEventListener("mousedown", T), t.addEventListener("mouseup", k);
                    const r = n.onStateChanged(()=>{
                        d();
                    });
                    return ()=>{
                        s.removeEventListener("input", w), s.removeEventListener("keydown", E), s.removeEventListener("copy", v), s.removeEventListener("cut", y), s.removeEventListener("compositionstart", S), s.removeEventListener("compositionend", C), s.removeEventListener("beforeinput", A), s.removeEventListener("focusout", P), t.removeEventListener("mousedown", T), t.removeEventListener("mouseup", k), t.removeEventListener("touchend", T), r();
                    };
                }
                function f() {
                    null !== s.parentElement && (s.focus(), p() || setTimeout(()=>s.focus(), 0));
                }
                function p() {
                    return s.getRootNode().activeElement === s;
                }
                function m(e1) {
                    return [
                        ...e1
                    ].length;
                }
                function g(e1) {
                    const t = e1.selectionEnd ?? e1.selectionStart ?? 0;
                    return m(e1.value.substring(0, t));
                }
                function v(e1) {
                    try {
                        const r = t.getSelectedText();
                        "" !== r && e1.clipboardData && (e1.clipboardData.setData("text/plain", r), e1.preventDefault());
                    } catch (e1) {
                        console.error(e1);
                    }
                }
                function y(e1) {
                    try {
                        const r = t.getSelectedText();
                        if ("" !== r && e1.clipboardData) {
                            e1.clipboardData.setData("text/plain", r), e1.preventDefault();
                            const n = {
                                key: 44,
                                characters: "",
                                shiftIsHeld: !1,
                                commandIsHeld: !1,
                                optionIsHeld: !1,
                                timestamp: Date.now()
                            };
                            t.execute("ubq/inputs/keyboardkey", n);
                        }
                    } catch (e1) {
                        console.error(e1);
                    }
                }
                async function b() {
                    return !(!i || r.unstable_isTextCursorInCompositionRange()) && (await C(), !0);
                }
                function w(e1) {
                    const r = e1.target, { value: n } = r;
                    if (i) {
                        const e1 = g(s);
                        t.execute("ubq/text/compositionUpdate", {
                            value: n,
                            cursorPosition: e1
                        });
                    } else n.length > 0 && (r.value = "");
                }
                function _(e1) {
                    const r = {
                        key: 255,
                        characters: e1,
                        shiftIsHeld: !1,
                        commandIsHeld: !1,
                        optionIsHeld: !1,
                        timestamp: Date.now()
                    };
                    t.execute("ubq/inputs/keyboardkey", r);
                }
                async function E(e1) {
                    if (b(), 1 === e1.key.length && (a = e1.key), "a" === e1.key && (e1.metaKey || e1.ctrlKey)) return i && C(), void await t.execute("ubq/text/selectAllText");
                    if ("Escape" === e1.key) return void B();
                    if ("Backspace" !== e1.key && "Delete" !== e1.key && "ArrowLeft" !== e1.key && "ArrowRight" !== e1.key && "ArrowUp" !== e1.key && "ArrowDown" !== e1.key && "Enter" !== e1.key) return;
                    const r = Ml(e1);
                    await t.execute("ubq/inputs/keyboardkey", r), e1.currentTarget && (s.value = "");
                }
                async function S() {
                    i = !0, await t.execute("ubq/text/compositionStart");
                }
                async function C() {
                    i ? (i = !1, s.value = "", t.execute("ubq/text/compositionEnd")) : s.value = "";
                }
                async function x() {
                    if (!i) return;
                    o();
                    if (await b()) return;
                    const e1 = r.unstable_getCursorPosition(), t = r.unstable_getCompositionRange(), n = e1.end - t.start, a = g(s);
                    e1.start >= t.start && e1.start <= 1 + t.end && n !== a && C();
                }
                async function k() {
                    x();
                }
                async function T(t) {
                    x(), t.target === e1 && "Text" === n.getEditMode() && (f(), t.preventDefault());
                }
                async function A(e1) {
                    if (i && !e1.isComposing && C(), null === e1.data) return;
                    const r = e1.target, n = e1.data;
                    if (await b()) _(a);
                    else if (i) {
                        const e1 = m(n);
                        t.execute("ubq/text/compositionUpdate", {
                            value: n,
                            cursorPosition: e1
                        });
                    } else n.length > 0 && ("\n" !== n[0] && _(n), r.value = "");
                }
                function P(e1) {
                    if (D(e1.relatedTarget) && F(e1.relatedTarget)) ;
                    else {
                        L(e1);
                    }
                }
                function F(t) {
                    const r = new CustomEvent("cesdk-blur", {
                        composed: !0,
                        bubbles: !0,
                        cancelable: !0,
                        detail: t
                    });
                    return e1.dispatchEvent(r);
                }
                function L(t) {
                    const r = new CustomEvent("cesdk-refocus", {
                        composed: !0,
                        bubbles: !0,
                        cancelable: !0,
                        detail: t.relatedTarget
                    }), n = e1.dispatchEvent(r);
                    return n && f(), n;
                }
                function D(e1) {
                    return null != e1 && e1 instanceof HTMLElement && (e1 instanceof HTMLTextAreaElement || e1 instanceof HTMLInputElement && e1.type.match("^(text|number|url|email|search|tel)$") || e1.isContentEditable);
                }
                async function B() {
                    n.setEditMode("Transform");
                }
            }
        }();
    });
    return ()=>{
        a?.(), s();
    };
};
function id(e1, t, r) {
    const n = [], o = (r)=>{
        if ("touch" === r.pointerType) return;
        const n = ad(e1, r);
        t.execute("ubq/inputs/mousemove", n);
    }, i = (r)=>{
        if ("touch" === r.pointerType) return;
        const n = {
            ...ad(e1, r),
            position: {
                x: 1 / 0,
                y: 1 / 0
            }
        };
        t.execute("ubq/inputs/mousemove", n);
    }, a = (o)=>{
        if ("touch" === o.pointerType) return;
        const i = {
            ...ad(e1, o),
            button: sd(o.button),
            state: 0,
            shiftIsHeld: !!o.shiftKey
        };
        n[o.button] = !1, o.currentTarget.releasePointerCapture(o.pointerId), t.execute("ubq/inputs/mousebutton", i), r();
    }, s = (r)=>{
        if ("touch" === r.pointerType) return;
        const o = {
            ...ad(e1, r),
            button: sd(r.button),
            state: 1,
            shiftIsHeld: !!r.shiftKey
        };
        n[r.button] = !0, r.currentTarget.setPointerCapture(r.pointerId), t.execute("ubq/inputs/mousebutton", o);
    }, u = (r)=>{
        if ("touch" === r.pointerType) return;
        const o = {
            ...ad(e1, r),
            shiftIsHeld: !!r.shiftKey
        };
        n.forEach((e1, r)=>{
            if (e1) {
                const e1 = {
                    ...o,
                    button: r,
                    state: 0
                };
                t.execute("ubq/inputs/mousebutton", e1);
            }
        }), n.length = 0;
    }, c = (e1)=>{
        e1.cancelable && e1.preventDefault();
    };
    return e1.addEventListener("pointerdown", s), e1.addEventListener("pointerup", a), e1.addEventListener("pointercancel", a), e1.addEventListener("pointermove", o), e1.addEventListener("pointerleave", i), e1.addEventListener("lostpointercapture", u), e1.addEventListener("touchmove", c, {
        passive: !1
    }), ()=>{
        e1.removeEventListener("pointerdown", s), e1.removeEventListener("pointerup", a), e1.removeEventListener("pointercancel", a), e1.removeEventListener("pointermove", o), e1.removeEventListener("pointerleave", i), e1.removeEventListener("lostpointercapture", u), e1.removeEventListener("touchmove", c), e1 = null;
    };
}
function ad(e1, t) {
    const r = e1.getBoundingClientRect(), n = r?.top ?? 0, o = r?.left ?? 0;
    return {
        position: {
            x: (t.clientX - o) * window.devicePixelRatio,
            y: (t.clientY - n) * window.devicePixelRatio
        },
        isTouch: !1,
        timestamp: t.timeStamp
    };
}
function sd(e1) {
    switch(e1){
        case 0:
            return 0;
        case 1:
            return 2;
        case 2:
            return 1;
        default:
            return 255;
    }
}
var ud = class {
    ubq;
    enabled;
    initialTarget;
    target;
    dispose;
    constructor(e1, t){
        this.ubq = t, this.enabled = wl(e1.editor.onSettingsChanged, ()=>{
            const t = e1.editor.getSettingBool("mouse/enableZoom"), r = e1.editor.getSettingBool("mouse/enableScroll");
            return t || r;
        }), this.target = gl(()=>{}), this.dispose = ()=>{
            this.target.update(void 0), this.target = null, this.enabled = null, this.ubq = null, this.initialTarget = null, e1 = null, t = null;
        };
    }
    initialize(e1) {
        let t;
        this.initialTarget = e1;
        const r = hl(this.enabled.subscribe, this.target.subscribe)(()=>{
            t?.(), t = void 0;
            const e1 = this.target.value();
            this.enabled.value() && e1 && (t = this.addWheelListener(e1));
        });
        this.target.update(e1);
        return ()=>{
            r(), t?.();
        };
    }
    setTarget(e1) {
        this.target.update(e1);
        return ()=>{
            this.target.update(this.initialTarget);
        };
    }
    addWheelListener(e1) {
        const t = (e1)=>{
            if (!this.initialTarget) throw new Error("initialTarget is not set");
            const t = {
                ...ad(this.initialTarget, e1),
                deltaX: e1.deltaX,
                deltaY: e1.deltaY,
                deltaMode: e1.deltaMode,
                shiftIsHeld: !!e1.shiftKey,
                ctrlOrMetaIsHeld: !!e1.ctrlKey || !!e1.metaKey
            };
            this.ubq.mouseWheel(t) && (e1.stopPropagation(), e1.preventDefault());
        };
        e1.addEventListener("wheel", t, {
            passive: !1,
            capture: !0
        });
        return ()=>{
            e1.removeEventListener("wheel", t, {
                capture: !0
            }), e1 = null;
        };
    }
}, cd = class {
    active = !1;
    enableDebug = !1;
    timestamp = 0;
    baseTouches = [];
    touches = [];
    currentTransform;
    constructor(){
        this.currentTransform = this.emptyTransform();
    }
    touchAddRemove(e1) {
        const t = new Array(e1.touches.length);
        for(let r = 0; r < e1.touches.length; r++){
            const n = e1.touches.item(r);
            t[r] = ld(n);
        }
        this.touches = t;
    }
    touchUpdate(e1) {
        for(let t = 0; t < e1.touches.length; t++){
            const r = e1.touches.item(t), n = this.touches.find((e1)=>e1.identifier === r.identifier);
            if (!n) return;
            n.x = r.clientX, n.y = r.clientY;
        }
    }
    listen(e1) {
        return e1.addEventListener("touchstart", this.touchstart, {
            passive: !0
        }), e1.addEventListener("touchend", this.touchend), e1.addEventListener("touchcancel", this.touchcancel), e1.addEventListener("touchmove", this.touchmove, {
            passive: !0
        }), ()=>{
            e1.removeEventListener("touchstart", this.touchstart), e1.removeEventListener("touchend", this.touchend), e1.removeEventListener("touchcancel", this.touchcancel), e1.removeEventListener("touchmove", this.touchmove);
        };
    }
    touchstart = (e1)=>{
        this.touchAddRemove(e1), this.timestamp = e1.timeStamp, this.process("touchstart");
    };
    touchend = (e1)=>{
        this.touchAddRemove(e1), this.timestamp = e1.timeStamp, this.process("touchend");
    };
    touchcancel = (e1)=>{
        this.touchAddRemove(e1), this.timestamp = e1.timeStamp, this.process("touchcancel");
    };
    touchmove = (e1)=>{
        this.touchUpdate(e1), this.timestamp = e1.timeStamp, this.process("touchmove");
    };
    debugState;
    debug() {
        if (!this.enableDebug) return;
        const e1 = JSON.stringify(this.currentTransform);
        function t(e1, [t, r, n], o) {
            const i = document.createElement("div");
            return i.style.position = "fixed", i.style.top = "-25px", i.style.left = "-25px", i.style.width = "50px", i.style.height = "50px", i.style.border = `3px ${o} rgb(${t},${r},${n})`, i.style.borderRadius = "50%", i.style.borderStyle = o, i.style.backgroundColor = `rgba(${t},${r},${n}, 0.5)`, i.style.transformOrigin = "center", i.style.textAlign = "center", i.innerHTML = e1, i.style.display = "none", document.body.appendChild(i), i;
        }
        this.debugState || (this.debugState = {
            touches: [
                t("T1", [
                    218,
                    212,
                    104
                ], "solid"),
                t("T2", [
                    218,
                    212,
                    104
                ], "solid")
            ],
            value: this.debugValueDiv(void 0, e1, this.touches, [
                218,
                212,
                104
            ]),
            baseTouches: [
                t("B1", [
                    128,
                    128,
                    128
                ], "solid"),
                t("B2", [
                    128,
                    128,
                    128
                ], "solid")
            ]
        }), this.debugState.touches[0].style.display = this.touches[0] ? "block" : "none", this.debugState.touches[1].style.display = this.touches[1] ? "block" : "none", this.debugState.baseTouches[0].style.display = this.baseTouches[0] ? "block" : "none", this.debugState.baseTouches[1].style.display = this.baseTouches[1] ? "block" : "none", this.touches[0] && (this.debugState.touches[0].style.transform = `translate(${this.touches[0]?.x}px, ${this.touches[0]?.y}px)`), this.touches[1] && (this.debugState.touches[1].style.transform = `translate(${this.touches[1]?.x}px, ${this.touches[1]?.y}px)`), this.baseTouches[0] && (this.debugState.baseTouches[0].style.transform = `translate(${this.baseTouches[0]?.x}px, ${this.baseTouches[0]?.y}px)`), this.baseTouches[1] && (this.debugState.baseTouches[1].style.transform = `translate(${this.baseTouches[1]?.x}px, ${this.baseTouches[1]?.y}px)`), this.debugState.value = this.debugValueDiv(this.debugState.value, e1, this.touches);
    }
    debugValueDiv(e1, t, r, n) {
        if (!e1) {
            const [t, r, o] = n ?? [
                128,
                128,
                128
            ];
            (e1 = document.createElement("div")).style.position = "fixed", e1.style.top = "50px", e1.style.left = "50px", e1.style.width = "300px", e1.style.height = "100px", e1.style.border = `3px solid rgb(${t},${r},${o})`, e1.style.borderStyle = "dashed", e1.style.backgroundColor = `rgba(${t},${r},${o}, 0.5)`, e1.style.transformOrigin = "center", e1.style.overflow = "visible", e1.style.textOverflow = "visible", e1.style.display = "none", document.body.appendChild(e1);
        }
        return this.active ? e1.style.borderStyle = "solid" : e1.style.borderStyle = "dashed", 0 === r.length ? (e1.style.display = "none", e1) : (e1.style.display = "block", e1.innerHTML = t, e1);
    }
    resetBaseTouches() {
        this.baseTouches = this.touches.map(ld);
    }
    process(e1) {
        if ("touchcancel" === e1) return this.resetBaseTouches(), this.reset(), this.debug(), void this.emit(2);
        "touchstart" !== e1 && "touchend" !== e1 || (this.resetBaseTouches(), this.debug()), !this.active && this.shouldStart() && (this.active = !0, this.emit(0)), "touchmove" === e1 && (this.currentTransform = this.calculateTransform(), this.active && this.emit(1)), this.debug(), this.active && this.shouldStop() && (this.active = !1, this.emit(2), this.reset());
    }
    shouldStart() {
        return 2 === this.touches.length;
    }
    shouldStop() {
        return 2 !== this.touches.length;
    }
    emit(e1) {
        const t = {
            timestamp: this.timestamp,
            state: e1,
            touchPoints: this.touches
        }, r = this.makeEvent(t);
        for (const e1 of this.handlers)e1(r);
    }
    handlers = new Set;
    addListener(e1) {
        return this.handlers.add(e1), ()=>{
            this.handlers.delete(e1);
        };
    }
    reset() {
        this.active = !1, this.currentTransform = this.emptyTransform();
    }
};
function ld(e1) {
    if (null != e1) return e1 instanceof Touch ? {
        identifier: e1.identifier,
        x: e1.clientX,
        y: e1.clientY
    } : {
        identifier: e1.identifier,
        x: e1.x,
        y: e1.y
    };
}
var dd = class _PanRecognizer extends cd {
    static PAN_THRESHOLD = 10;
    makeEvent(e1) {
        const t = 0 === e1.state ? {
            x: 0,
            y: 0
        } : this.currentTransform;
        return {
            ...e1,
            panDistance: t
        };
    }
    calculateTransform() {
        const e1 = fd(this.touches), t = fd(this.baseTouches);
        return {
            x: e1.x - t.x,
            y: e1.y - t.y
        };
    }
    emptyTransform() {
        return {
            x: 0,
            y: 0
        };
    }
    shouldStart() {
        return super.shouldStart() && hd(this.calculateTransform()) > _PanRecognizer.PAN_THRESHOLD;
    }
};
function hd(e1) {
    return Math.sqrt(e1.x ** 2 + e1.y ** 2);
}
function fd(e1) {
    let t = 0, r = 0;
    for(let n = 0; n < e1.length; n++){
        const o = e1[n];
        t += o.x, r += o.y;
    }
    return t /= e1.length, r /= e1.length, {
        x: t,
        y: r
    };
}
var pd = class _PinchRecognizer extends cd {
    static PINCH_THRESHOLD = .2;
    makeEvent(e1) {
        return {
            ...e1,
            scale: this.currentTransform
        };
    }
    calculateTransform() {
        const e1 = this.baseTouches, t = this.touches;
        if (2 !== e1.length || 2 !== t.length) return 1;
        const r = Math.sqrt(Math.pow(e1[0].x - e1[1].x, 2) + Math.pow(e1[0].y - e1[1].y, 2));
        return Math.sqrt(Math.pow(t[0].x - t[1].x, 2) + Math.pow(t[0].y - t[1].y, 2)) / r;
    }
    emptyTransform() {
        return 1;
    }
    shouldStart() {
        return super.shouldStart() && Math.abs(this.calculateTransform() - 1) > _PinchRecognizer.PINCH_THRESHOLD;
    }
}, md = class _PointRecognizer extends cd {
    static DISTANCE_THRESHOLD = 5;
    static TAP_MAX_TIME = 250;
    lastPosition = {
        x: 0,
        y: 0
    };
    makeEvent(e1) {
        const t = this.tapDetected ? this.tapLocation : e1.touchPoints[0];
        return 0 === e1.state ? (this.lastPosition = t, {
            button: 0,
            state: 1,
            position: t,
            shiftIsHeld: !1,
            isTouch: !0,
            timestamp: e1.timestamp
        }) : 2 === e1.state ? {
            button: 0,
            state: 0,
            position: t ?? this.lastPosition,
            shiftIsHeld: !1,
            isTouch: !0,
            timestamp: e1.timestamp
        } : (this.lastPosition = t, {
            position: t,
            isTouch: !0,
            timestamp: e1.timestamp
        });
    }
    previousNumTouches = 0;
    fingerDownTimestamp = 0;
    tapDetected = !1;
    tapLocation = {
        x: 0,
        y: 0
    };
    process(e1) {
        if ("touchstart" === e1 || "touchend" === e1) {
            this.tapDetected = !1;
            const e1 = 1 === this.touches.length && 0 === this.previousNumTouches, t = 0 === this.touches.length && 1 === this.previousNumTouches;
            e1 && (this.fingerDownTimestamp = performance.now(), this.tapLocation = this.touches[0]), t && performance.now() - this.fingerDownTimestamp < _PointRecognizer.TAP_MAX_TIME && (this.tapDetected = !0), this.previousNumTouches = this.touches.length;
        }
        super.process(e1);
    }
    calculateTransform() {
        if (0 === this.touches.length || 0 === this.baseTouches.length) return {
            x: 0,
            y: 0
        };
        const e1 = this.touches[0], t = this.baseTouches[0];
        return {
            x: e1.x - t.x,
            y: e1.y - t.y
        };
    }
    emptyTransform() {
        return {
            x: 0,
            y: 0
        };
    }
    shouldStart() {
        return this.tapDetected || 1 === this.touches.length && hd(this.calculateTransform()) > _PointRecognizer.DISTANCE_THRESHOLD;
    }
    shouldStop() {
        return 1 !== this.touches.length;
    }
}, gd = class _RotateRecognizer extends cd {
    static ROTATE_THRESHOLD = .1;
    makeEvent(e1) {
        return {
            ...e1,
            rotation: this.currentTransform
        };
    }
    calculateTransform() {
        const e1 = this.baseTouches, t = this.touches;
        if (e1.length < 2 || t.length < 2) return 0;
        const r = Math.atan2(e1[1].y - e1[0].y, e1[1].x - e1[0].x);
        return Math.atan2(t[1].y - t[0].y, t[1].x - t[0].x) - r;
    }
    emptyTransform() {
        return 0;
    }
    shouldStart() {
        return super.shouldStart() && Math.abs(this.calculateTransform()) > _RotateRecognizer.ROTATE_THRESHOLD;
    }
};
function vd(e1, t, r) {
    const n = [], o = new md;
    n.push(o.listen(e1)), n.push(o.addListener((n)=>{
        "button" in n ? (t.execute("ubq/inputs/mousebutton", yd(e1, n)), r.update()) : t.execute("ubq/inputs/mousemove", yd(e1, n));
    }));
    const i = new dd;
    n.push(i.listen(e1)), n.push(i.addListener((r)=>{
        t.execute("ubq/inputs/touchpan", yd(e1, r));
    }));
    const a = new pd;
    n.push(a.listen(e1)), n.push(a.addListener((r)=>{
        t.execute("ubq/inputs/touchpinch", yd(e1, r));
    }));
    const s = new gd;
    return n.push(s.listen(e1)), n.push(s.addListener((r)=>{
        t.execute("ubq/inputs/touchrotate", yd(e1, r));
    })), ()=>{
        n.forEach((e1)=>e1());
    };
}
function yd(e1, t) {
    const r = window.devicePixelRatio ?? 1, { top: n, left: o } = e1.getBoundingClientRect();
    if (1 === r && 0 === n && 0 === o) return t;
    const i = (e1)=>({
            x: (e1.x - o) * r,
            y: (e1.y - n) * r
        });
    if ("position" in t) return {
        ...t,
        position: i(t.position)
    };
    const a = t.touchPoints.map(i);
    return "panDistance" in t ? {
        ...t,
        touchPoints: a,
        panDistance: i(t.panDistance)
    } : {
        ...t,
        touchPoints: a
    };
}
function bd(e1, t, r = Number.EPSILON) {
    return Math.abs(e1 - t) < r;
}
var wd = "assets/core/worker-host-v1.44.0.js", _d = "application/javascript";
var Ed, Sd, Cd = {
    Info: "Info",
    Warning: "Warning",
    Error: "Error"
};
(Sd = Ed || (Ed = {})).start = function(e1) {
    return {
        ...e1,
        msg: "exportVideo"
    };
}, Sd.abort = function() {
    return {
        msg: "exportVideoAbort"
    };
}, Sd.finished = function(e1) {
    return {
        ...e1,
        msg: "exportVideoFinished"
    };
}, Sd.error = function(e1) {
    return {
        ...e1,
        msg: "exportVideoError"
    };
}, Sd.progress = function(e1) {
    return {
        ...e1,
        msg: "exportVideoProgress"
    };
}, Sd.log = function(e1) {
    return {
        ...e1,
        msg: "exportLog"
    };
};
var xd = class {
    configuration;
    constructor(e1){
        this.configuration = e1;
    }
    async exportVideo(e1, t, r, n, o) {
        const { abortSignal: i, inactivityTimeout: a } = n ?? {}, s = await async function(e1) {
            const t = wd.toString().split("/").pop(), r = await async function(e1) {
                if (!(e1 = e1.toString()).includes("://") || e1.includes(window.location.origin)) return e1;
                const t = `const _importScripts = importScripts;\n     const _fixImports = (url) => new URL(url, '${new URL(e1).href.split("/").slice(0, -1).join("/")}/').href;\n     importScripts = (...urls) => _importScripts(...urls.map(_fixImports));`;
                return URL.createObjectURL(new Blob([
                    `${t}importScripts("${e1}")`
                ], {
                    type: _d
                }));
            }(new URL(t, e1.core.baseURL));
            return new Worker(r);
        }(this.configuration), u = function(e1) {
            return {
                baseURL: e1.baseURL,
                license: e1.license,
                core: e1.core,
                role: e1.role,
                presets: e1.presets,
                featureFlags: e1.featureFlags,
                forceWebGL1: e1.forceWebGL1,
                audioOutput: e1.audioOutput
            };
        }(this.configuration), c = new Promise((e1, t)=>{
            if (s.onmessage = ({ data: r })=>{
                if ("exportVideoFinished" === r.msg) {
                    const t = new Blob([
                        r.data
                    ], {
                        type: r.mimeType
                    });
                    e1(t);
                } else "exportVideoError" === r.msg ? t(r.error) : "exportVideoProgress" === r.msg ? n?.onProgress?.(r.renderedFrames, r.encodedFrames, r.totalFrames) : "exportLog" === r.msg ? this.configuration.logger(r.message, r.logLevel) : console.error("Unknown message received ", r);
            }, i) {
                let e1 = !1;
                const t = ()=>{
                    e1 || (e1 = !0, s.postMessage(Ed.abort()));
                };
                i.addEventListener("abort", t, {
                    once: !0
                });
            }
        });
        s.postMessage(Ed.start({
            sceneString: e1,
            engineSettings: t,
            config: u,
            exportOptions: r,
            workerOptions: o,
            inactivityTimeout: a
        }));
        const l = ()=>{
            s.postMessage({
                msg: "setVisibility",
                visible: "visible" === document.visibilityState
            });
        };
        document.addEventListener("visibilitychange", l);
        try {
            return await c;
        } finally{
            s.terminate(), document.removeEventListener("visibilitychange", l);
        }
    }
};
var kd = 10;
globalThis.ubq_browserTabHidden = !0;
var Td = {
    value: ()=>"undefined" == typeof document || "visible" === document.visibilityState,
    subscribe (e1) {
        if ("undefined" == typeof document) return ()=>{};
        {
            const t = ()=>{
                e1("visible" === document.visibilityState);
            };
            return document.addEventListener("visibilitychange", t), ()=>{
                document.removeEventListener("visibilitychange", t);
            };
        }
    }
};
function Ad(e1, t, r) {
    return async (n, o, i, a)=>{
        const s = t.scene.get();
        if (null == s || !t.block.isValid(s)) throw new Error("No valid scene available.");
        const u = await t.scene.saveToString([
            "blob",
            "bundle",
            "file",
            "http",
            "https",
            "buffer"
        ]), c = function(e1) {
            const t = new Map, r = e1.findAllSettings();
            for (const n of r)switch(e1.getSettingType(n)){
                case "Bool":
                    t.set(n, e1.getSettingBool(n));
                    break;
                case "Int":
                    t.set(n, e1.getSettingInt(n));
                    break;
                case "Float":
                    t.set(n, e1.getSettingFloat(n));
                    break;
                case "String":
                    t.set(n, e1.getSettingString(n));
                    break;
                case "Color":
                    t.set(n, e1.getSettingColor(n));
                    break;
                case "Enum":
                    t.set(n, e1.getSettingEnum(n));
            }
            return t;
        }(t.editor), l = r(), d = t.editor.getActiveLicense(), h = {
            scopes: Object.fromEntries(t.editor.findAllScopes().map((e1)=>[
                    e1,
                    t.editor.getGlobalScope(e1)
                ])),
            uriResolver: t.editor.unstable_getURIResolver()?.toString()
        };
        try {
            h.trackingMetadata = t.editor.getTrackingMetadata();
        } catch  {
            h.trackingMetadata = void 0;
        }
        h.buffers = t.editor.cloneBuffers();
        const f = {
            block: n,
            width: a.targetWidth,
            height: a.targetHeight,
            duration: a.duration,
            framerate: a.framerate,
            h264Level: a.h264Level,
            h264Profile: a.h264Profile,
            videoBitrate: a.videoBitrate,
            audioBitrate: a.audioBitrate,
            timeOffset: a.timeOffset
        };
        if (e1.featureFlags?.exportWorker ?? 1) {
            return new xd({
                ...e1,
                license: d
            }).exportVideo(u, c, f, {
                abortSignal: a.abortSignal,
                inactivityTimeout: l,
                onProgress: i
            }, h);
        }
        return (async function(e1, t, r, n, o, i) {
            let a, s, u = 0, c = null;
            const l = i.visibility ?? Td, d = i.inactivityTimeout, h = l.subscribe(()=>{
                null !== c && (c = Date.now()), globalThis.ubq_browserTabHidden = !l.value();
            });
            let f = null;
            function p() {
                clearTimeout(s), h(), f?.();
            }
            try {
                let h = function() {
                    !0 === l.value() && null !== c && Date.now() - c > d ? a(new Error("Video export timed out due to inactivity.")) : (u < kd && g.update(), s = setTimeout(h, 1));
                };
                const m = new OffscreenCanvas(64, 64), g = await Kl(m, {
                    ...e1,
                    audioOutput: "none"
                }), v = new SceneAPI(g), y = new BlockAPI(g), b = new EditorAPI(g);
                if (f = ()=>{
                    g.delete();
                }, function(e1, t) {
                    for (const [r, n] of t)switch(e1.getSettingType(r)){
                        case "Bool":
                            e1.setSettingBool(r, n);
                            break;
                        case "Int":
                            e1.setSettingInt(r, n);
                            break;
                        case "Float":
                            e1.setSettingFloat(r, n);
                            break;
                        case "String":
                            e1.setSettingString(r, n);
                            break;
                        case "Color":
                            e1.setSettingColor(r, n);
                            break;
                        case "Enum":
                            {
                                const t = r, o = n;
                                e1.setSettingEnum(t, o);
                            }
                    }
                }(b, t), o?.trackingMetadata && b.setTrackingMetadata(o.trackingMetadata), o?.uriResolver) {
                    let e1 = function(e1, r) {
                        try {
                            return t(e1, r);
                        } catch (t) {
                            return console.warn(`Error during execution of URI resolver: ${t}.\nMake sure the url resolver function does not reference any external variables. Falling back to default URI resolver.`), r(e1);
                        }
                    };
                    const t = (0, eval)(`'use strict';(${o.uriResolver})`);
                    b.setURIResolver(e1);
                }
                if (o?.scopes) for (const [e1, t] of Object.entries(o.scopes))b.setGlobalScope(e1, t);
                o?.buffers && b.restoreBuffers(o.buffers);
                const w = await v.loadFromString(r), _ = n.block ? y.getDuration(n.block) : y.getTotalSceneDuration(v.get());
                h();
                const E = await new Promise((t, r)=>{
                    a = r, e1.abortSignal?.addEventListener("abort", ()=>{
                        r(new Error("AbortSignal received"));
                    }), g.exportVideoToBuffer(n.block ?? w, n.timeOffset ?? 0, n.duration ?? _, mu.Mp4, (e1, t, r)=>{
                        u = e1 - t, c = Date.now(), i?.onProgress?.(e1, t, r);
                    }, (e1)=>{
                        "error" in e1 ? r(e1.error) : t(e1);
                    }, {
                        h264Profile: n.h264Profile ?? 77,
                        h264Level: n.h264Level ?? 52,
                        framerate: n.framerate ?? 30,
                        videoBitrate: n.videoBitrate ?? 0,
                        audioBitrate: n.audioBitrate ?? 0,
                        useTargetSize: void 0 !== n.width && void 0 !== n.height,
                        targetWidth: n.width ?? 0,
                        targetHeight: n.height ?? 0
                    });
                }), S = new Uint8Array(E.byteLength);
                return S.set(E), p(), S;
            } catch (e1) {
                throw p(), e1;
            }
        })(a.abortSignal ? {
            ...e1,
            abortSignal: a.abortSignal
        } : e1, c, u, f, h, {
            onProgress: i,
            visibility: Ld,
            inactivityTimeout: l
        }).then((e1)=>new Blob([
                e1
            ], {
                type: mu.Mp4
            }));
    };
}
var Pd, Fd, Ld = {
    value: ()=>"visible" === document.visibilityState,
    subscribe: dl((Pd = document, Fd = "visibilitychange", function(e1) {
        return Pd.addEventListener(Fd, e1), function() {
            Pd.removeEventListener(Fd, e1);
        };
    }), sl(()=>"visible" === document.visibilityState))
}, CreativeEngine = class {
    asset;
    block;
    editor;
    event;
    scene;
    variable;
    reactor;
    version = "1.44.0";
    #u;
    #c;
    #l;
    #d;
    #e;
    #h;
    #f = [];
    constructor(e1, t, r){
        this.#e = e1, this.#h = new Il(e1), this.asset = new AssetAPI(e1), this.block = new BlockAPI(e1), this.editor = new EditorAPI(e1), this.event = new EventAPI(e1), this.scene = new SceneAPI(e1), this.variable = new VariableAPI(e1), this.#d = new ud(this, e1), this.#f.push(this.#d.dispose);
        const n = new td;
        this.reactor = n;
        const o = [
            n.decorateObject(this.#h),
            n.decorateObject(this.block),
            n.decorateObject(this.editor),
            n.decorateObject(this.scene),
            n.decorateObject(this.variable)
        ], i = this.addPostUpdateCallback(n.updateDirtyReactions.bind(n));
        this.#f.push(()=>{
            o.forEach((e1)=>e1()), i(), this.reactor.dispose();
        }), this.block.exportVideo = Ad(r, {
            block: this.block,
            scene: this.scene,
            editor: this.editor
        }, ()=>this._unstable_videoExportInactivityTimeout), "getInternalCanvas" in t ? (this.#c = t.getInternalCanvas(), this.#l = t) : this.#c = t, this.#u = new _l(this), this.#p(), "undefined" != typeof window && window.Cypress && (this.config = r, this.legacyAPI = this.#h);
    }
    addPlugin(e1) {
        if (e1.initialize) {
            const t = {
                engine: {
                    asset: this.asset,
                    block: this.block,
                    scene: this.scene,
                    editor: this.editor,
                    event: this.event,
                    variable: this.variable
                }
            };
            e1.initialize(t);
        }
    }
    unstable_setVideoExportInactivityTimeout(e1) {
        this._unstable_videoExportInactivityTimeout = e1;
    }
    _unstable_videoExportInactivityTimeout = 1e4;
    #m() {
        if (!this.#l) return;
        const e1 = this.#l.getInternalCanvas(), t = e1.getBoundingClientRect();
        if (0 === t.width || 0 === t.height) return;
        const r = "undefined" != typeof window ? window.devicePixelRatio : 1, n = t.width * r, o = t.height * r;
        e1.width !== n && (e1.width = n), e1.height !== o && (e1.height = o);
    }
    #g() {
        const { width: e1, height: t } = this.#c, r = "undefined" != typeof window ? window.devicePixelRatio : 1, { height: n, width: o, pixelRatio: i } = this.#u.settings.value();
        if (!bd(o, e1, 1e-4) || !bd(n, t, 1e-4) || !bd(i, r, 1e-4)) {
            this.#u.settings.update({
                height: t,
                width: e1,
                pixelRatio: r
            });
            const n = this.scene.get();
            if (!bd(i, r, 1e-4) && null !== n && !1 === this.scene.isZoomAutoFitEnabled(n)) {
                const e1 = this.scene.getZoomLevel();
                this.scene.setZoomLevel(e1 * (r / i));
            }
        }
    }
    #v = [];
    #y = [];
    addPostUpdateCallback(e1) {
        return this.#v.push(e1), ()=>{
            const t = this.#v.indexOf(e1);
            -1 !== t && this.#v.splice(t, 1);
        };
    }
    addPreUpdateCallback(e1) {
        return this.#y.push(e1), ()=>{
            const t = this.#y.indexOf(e1);
            -1 !== t && this.#y.splice(t, 1);
        };
    }
    #b;
    #p(e1 = !0) {
        this.#w(e1), this.#_();
    }
    #w(e1 = !0) {
        let t, r = !1, n = 0;
        if (this.#b) return;
        const o = ()=>{
            if (this.#b = requestAnimationFrame(o), !r) try {
                this.#E(e1), n = 0;
            } catch (e1) {
                throw n++, n >= 10 && (console.error("Repeated exceptions in update loop. Stopping loop."), t?.(), this.#S()), e1;
            }
        };
        this.#b = requestAnimationFrame(o);
    }
    #_() {
        if (e1 = this.#c, !("undefined" != typeof HTMLCanvasElement && e1 instanceof HTMLCanvasElement)) return;
        var e1;
        const t = this.#l ?? this.#c, r = this.#E.bind(this, !1), n = [
            id(t, this.#h, r),
            this.#d.initialize(t),
            od(t, this.#h, this.#e, this.editor, r),
            nd(t, this.editor),
            vd(t, this.#h, this.#e),
            Rl(this.#c, this.#e, ()=>{
                this.#c.width = this.#c.width;
            }),
            ol(t, this.#C)
        ];
        this.#x = ()=>{
            n.reverse().forEach((e1)=>e1());
        };
    }
    setWheelEventTarget(e1) {
        return this.#d.setTarget(e1);
    }
    #C = (0, Et.default)((function() {
        this.#E();
    }).bind(this), 100, {
        leading: !0,
        trailing: !1
    });
    #x;
    #S() {
        this.#x?.(), this.#x = void 0, this.#b && (cancelAnimationFrame(this.#b), this.#b = 0);
    }
    #E(e1 = !0) {
        for (const e1 of this.#y)e1();
        if (e1) {
            1 === this.block.findByType("scene").length && this.#k();
        }
        this.#m(), this.#g(), this.#e.update();
        for (const e1 of this.#v)e1();
    }
    #k() {
        if (this.#u.clampCamera) {
            const e1 = {
                sceneSize: {
                    x: 0,
                    y: 0
                },
                scrollPercentage: {
                    x: NaN,
                    y: NaN
                }
            };
            this.#h.execute("cesdk/clampCameraAndRender", {
                horizontalPaddingInPixels: this._camera.viewportPadding.value().x,
                verticalPaddingInPixels: this._camera.viewportPadding.value().y
            }).then((e1)=>{
                (0, St.default)(this.#u.clampResult.value(), e1) || this.#u.clampResult.update(e1);
            }, ()=>{
                (0, St.default)(this.#u.clampResult.value(), e1) || this.#u.clampResult.update(e1);
            });
        } else this.#h.execute("ubq/render");
    }
    get element() {
        return this.#l;
    }
    dispose() {
        this.#f.forEach((e1)=>e1()), this.#S(), this.asset.dispose(), this.#c = null, this.#l?.dispose(), this.#l = void 0, this.block = null, this.scene = null, this.variable = null, this.asset = null, this.editor = null, this.event = null, this.#v.length = 0, this.#h.dispose(), this.#h = null, this.#e.delete(), this.#e = null;
    }
    static async init(e1, t) {
        let r = function(e1, t) {
            if (r(t?.canvas)) return t?.canvas;
            if (r(e1)) return console.warn("Passing an existing HTMLCanvasElement as a second parameter to CreativeEngine.init() is deprecated. Use the element property on the CreativeEngine instance to access a fully managed canvas to append into the DOM instead. For more information, have a look into our documentation at https://img.ly/docs/cesdk/next/engine/quickstart/#initialization."), e1;
            return;
            function r(e1) {
                return "undefined" != typeof OffscreenCanvas && e1 instanceof OffscreenCanvas || "undefined" != typeof HTMLCanvasElement && e1 instanceof HTMLCanvasElement;
            }
        }(t, e1);
        const n = "19881faa7c", o = "1.44.0";
        if (n || o) {
            const e1 = [
                "[CreativeEngine]"
            ];
            o && e1.push(`v${o}`), n && e1.push(`Revision ${n}`), console.log(e1.join(" "));
        }
        let i;
        r || (i = function() {
            customElements.get("cesdk-canvas") || customElements.define("cesdk-canvas", class HTMLCreativeEngineCanvasElement extends HTMLElement {
                #c;
                constructor(){
                    super(), this.#c = document.createElement("canvas");
                    const e1 = document.createElement("style");
                    e1.textContent = ":host {display: block; width: 100%; height: 100%; contain: content;} canvas {position: absolute; inset: 0; width: 100%; height:100%; display: block; touch-action: none;}", this.attachShadow({
                        mode: "closed"
                    }).append(e1, this.#c);
                }
                getInternalCanvas() {
                    if (!this.#c) throw new Error("Internal canvas element is undefined");
                    return this.#c;
                }
                dispose() {
                    this.#c?.remove(), this.#c = void 0;
                }
                clear() {
                    if (!this.#c) return;
                    const e1 = this.#c.width;
                    this.#c.width = 1, this.#c.width = e1;
                }
            });
            return document.createElement("cesdk-canvas");
        }(), r = i.getInternalCanvas());
        const a = Cl(Al(Bl, e1));
        if (!function(e1) {
            return !0 === e1?._skipConfigWarnings;
        }(e1)) for (const t of kl(Bl, e1))a.logger(t, "Warning");
        const s = new this(await Kl(r, a), i ?? r, a);
        return Object.defineProperty(s, "version", {
            configurable: !1,
            writable: !1
        }), Tl(Bl, a, s), s;
    }
    async addDefaultAssetSources({ baseURL: e1 = "https://cdn.img.ly/assets/v3", excludeAssetSourceIds: t = [] } = {}) {
        return el(this.asset, e1, t);
    }
    async addDemoAssetSources({ baseURL: e1 = "https://cdn.img.ly/assets/demo/v2", excludeAssetSourceIds: t = [], sceneMode: r = "Design", withUploadAssetSources: n = !1 } = {}) {
        return nl(this.asset, this.scene, t, r, n, void 0, e1);
    }
    get _camera() {
        return this.#u;
    }
    get _legacyApi() {
        return this.#h;
    }
};
var Dd = function() {
    try {
        if ("object" == typeof WebAssembly && "function" == typeof WebAssembly.instantiate) {
            const e1 = new WebAssembly.Module(Uint8Array.of(0, 97, 115, 109, 1, 0, 0, 0));
            if (e1 instanceof WebAssembly.Module) return new WebAssembly.Instance(e1) instanceof WebAssembly.Instance;
        }
    } catch (e1) {
        return console.error(e1), !1;
    }
    return !1;
}, Bd = 1e4, Rd = 1e6, Md = 8;
async function Id() {
    if ("undefined" == typeof window) throw new Error("Window is undefined");
    if (!("VideoFrame" in window && "VideoDecoder" in window && "VideoEncoder" in window)) throw new Error("Missing required web video APIs");
    const e1 = {
        codec: "avc1.4D0034",
        width: 1920,
        height: 1080,
        avc: {
            format: "annexb"
        },
        framerate: 30
    };
    if (!await VideoEncoder.isConfigSupported(e1)) throw new Error("Encoder config not supported");
    const t = new OffscreenCanvas(e1.width, e1.height), r = t.getContext("webgl2");
    if (!r) throw new Error("Could not create WebGL2 context");
    return r.clearColor(1, 0, 1, 1), r.clear(r.COLOR_BUFFER_BIT), new Promise((r, n)=>{
        setTimeout(()=>{
            n(new Error("Timed out during video export"));
        }, Bd);
        const o = new VideoEncoder({
            output: ()=>r(!0),
            error: (e1)=>n(e1)
        });
        o.configure(e1);
        for(let r = 0; r < Md; ++r){
            const n = new VideoFrame(t, {
                timestamp: r * (Rd / e1.framerate),
                duration: Rd / e1.framerate
            });
            o.encode(n, {
                keyFrame: !0
            }), n.close();
        }
        o.flush().then(()=>{
            "closed" !== o.state && o.close();
        }, (e1)=>{
            n(new Error(`Error during video export: ${e1}`));
        });
    });
}
async function Od() {
    if ("undefined" == typeof window) throw new Error("Window is undefined");
    if (!("AudioDecoder" in window && "AudioEncoder" in window)) throw new Error("Missing required web audio APIs");
    const e1 = {
        codec: "mp4a.40.02",
        sampleRate: 48e3,
        numberOfChannels: 2,
        bitrate: 128e3
    };
    if (!await AudioEncoder.isConfigSupported(e1)) throw new Error("Encoder config not supported");
    return new Promise((t, r)=>{
        setTimeout(()=>{
            r(new Error("Timed out during audio export"));
        }, Bd);
        const n = new AudioEncoder({
            output: ()=>t(!0),
            error: r
        });
        n.configure(e1);
        const o = 1024, i = new Float32Array(o * e1.numberOfChannels);
        for(let e1 = 0; e1 < o; ++e1){
            const t = e1 / o;
            i[2 * e1 + 0] = Math.sin(880 * Math.PI * t), i[2 * e1 + 1] = Math.sin(888 * Math.PI * t);
        }
        for(let t = 0; t < 10; ++t){
            const r = new AudioData({
                format: "f32",
                sampleRate: e1.sampleRate,
                numberOfFrames: o,
                numberOfChannels: e1.numberOfChannels,
                timestamp: t * o / e1.sampleRate * Rd,
                data: i
            });
            n.encode(r), r.close();
        }
        n.flush().then(()=>{
            "closed" !== n.state && n.close();
        }, (e1)=>{
            r(new Error(`Error during audio export: ${e1}`));
        });
    });
}
function jd() {
    if ("undefined" == typeof window) return !1;
    return "VideoFrame" in window && "VideoDecoder" in window && "VideoEncoder" in window && "AudioDecoder" in window && "AudioEncoder" in window;
}
function Ud() {
    return Promise.all([
        Id(),
        Od()
    ]).then((e1)=>e1.every((e1)=>e1), ()=>!1);
}
var $d, qd, Hd = function() {
    try {
        const e1 = !0, t = !0, r = "globalThis" in window, n = "BigInt" in window, o = "allSettled" in Promise, i = "matchAll" in String.prototype, a = CSS.supports("contain: content"), s = "MediaRecorder" in window && "pause" in window.MediaRecorder.prototype, u = CSS.supports("color: lab(29.2345% 39.3825 20.0664)");
        return Dd() && e1 && t && r && n && o && i && a && s && u;
    } catch  {
        return !1;
    }
};
(qd = $d || ($d = {})).combineLatest = pl, qd.fan = ll, qd.makeSource = al, qd.map = sl, qd.memo = cl, qd.merge = hl, qd.pipe = dl, qd.startWith = ul, qd.switchAll = fl;
;
 /*! Bundled license information:

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)
*/ }}),
"[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
 //# sourceMappingURL=components.client.js.map
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/next/dist/shared/lib/bloom-filter.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
// minimal implementation MurmurHash2 hash function
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "BloomFilter", {
    enumerable: true,
    get: function() {
        return BloomFilter;
    }
});
function murmurhash2(str) {
    let h = 0;
    for(let i = 0; i < str.length; i++){
        const c = str.charCodeAt(i);
        h = Math.imul(h ^ c, 0x5bd1e995);
        h ^= h >>> 13;
        h = Math.imul(h, 0x5bd1e995);
    }
    return h >>> 0;
}
// default to 0.01% error rate as the filter compresses very well
const DEFAULT_ERROR_RATE = 0.0001;
class BloomFilter {
    static from(items, errorRate) {
        if (errorRate === void 0) errorRate = DEFAULT_ERROR_RATE;
        const filter = new BloomFilter(items.length, errorRate);
        for (const item of items){
            filter.add(item);
        }
        return filter;
    }
    export() {
        const data = {
            numItems: this.numItems,
            errorRate: this.errorRate,
            numBits: this.numBits,
            numHashes: this.numHashes,
            bitArray: this.bitArray
        };
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
        return data;
    }
    import(data) {
        this.numItems = data.numItems;
        this.errorRate = data.errorRate;
        this.numBits = data.numBits;
        this.numHashes = data.numHashes;
        this.bitArray = data.bitArray;
    }
    add(item) {
        const hashValues = this.getHashValues(item);
        hashValues.forEach((hash)=>{
            this.bitArray[hash] = 1;
        });
    }
    contains(item) {
        const hashValues = this.getHashValues(item);
        return hashValues.every((hash)=>this.bitArray[hash]);
    }
    getHashValues(item) {
        const hashValues = [];
        for(let i = 1; i <= this.numHashes; i++){
            const hash = murmurhash2("" + item + i) % this.numBits;
            hashValues.push(hash);
        }
        return hashValues;
    }
    constructor(numItems, errorRate = DEFAULT_ERROR_RATE){
        this.numItems = numItems;
        this.errorRate = errorRate;
        this.numBits = Math.ceil(-(numItems * Math.log(errorRate)) / (Math.log(2) * Math.log(2)));
        this.numHashes = Math.ceil(this.numBits / numItems * Math.log(2));
        this.bitArray = new Array(this.numBits).fill(0);
    }
} //# sourceMappingURL=bloom-filter.js.map
}}),
"[project]/node_modules/next/dist/compiled/react-is/cjs/react-is.development.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
"production" !== ("TURBOPACK compile-time value", "development") && function() {
    function typeOf(object) {
        if ("object" === typeof object && null !== object) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    switch(object = object.type, object){
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                        case REACT_SUSPENSE_LIST_TYPE:
                            return object;
                        default:
                            switch(object = object && object.$$typeof, object){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                    return object;
                                case REACT_CONSUMER_TYPE:
                                    return object;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
    }
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
    exports.ContextConsumer = REACT_CONSUMER_TYPE;
    exports.ContextProvider = REACT_CONTEXT_TYPE;
    exports.Element = REACT_ELEMENT_TYPE;
    exports.ForwardRef = REACT_FORWARD_REF_TYPE;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Lazy = REACT_LAZY_TYPE;
    exports.Memo = REACT_MEMO_TYPE;
    exports.Portal = REACT_PORTAL_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
    exports.isContextConsumer = function(object) {
        return typeOf(object) === REACT_CONSUMER_TYPE;
    };
    exports.isContextProvider = function(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    };
    exports.isElement = function(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    };
    exports.isForwardRef = function(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    };
    exports.isFragment = function(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    };
    exports.isLazy = function(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    };
    exports.isMemo = function(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    };
    exports.isPortal = function(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    };
    exports.isProfiler = function(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    };
    exports.isStrictMode = function(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    };
    exports.isSuspense = function(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    };
    exports.isSuspenseList = function(object) {
        return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
    };
    exports.isValidElementType = function(type) {
        return "string" === typeof type || "function" === typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || "object" === typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE || void 0 !== type.getModuleId) ? !0 : !1;
    };
    exports.typeOf = typeOf;
}();
}}),
"[project]/node_modules/next/dist/compiled/react-is/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
if ("TURBOPACK compile-time falsy", 0) {
    "TURBOPACK unreachable";
} else {
    module.exports = __turbopack_require__("[project]/node_modules/next/dist/compiled/react-is/cjs/react-is.development.js [app-client] (ecmascript)");
}
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/get-asset-path-from-route.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
// Translates a logical route into its pages asset path (relative from a common prefix)
// "asset path" being its javascript file, data file, prerendered html,...
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return getAssetPathFromRoute;
    }
});
function getAssetPathFromRoute(route, ext) {
    if (ext === void 0) ext = '';
    const path = route === '/' ? '/index' : /^\/index(\/|$)/.test(route) ? "/index" + route : route;
    return path + ext;
} //# sourceMappingURL=get-asset-path-from-route.js.map
}}),
"[project]/node_modules/next/dist/client/trusted-types.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * Stores the Trusted Types Policy. Starts as undefined and can be set to null
 * if Trusted Types is not supported in the browser.
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "__unsafeCreateTrustedScriptURL", {
    enumerable: true,
    get: function() {
        return __unsafeCreateTrustedScriptURL;
    }
});
let policy;
/**
 * Getter for the Trusted Types Policy. If it is undefined, it is instantiated
 * here or set to null if Trusted Types is not supported in the browser.
 */ function getPolicy() {
    if (typeof policy === 'undefined' && typeof window !== 'undefined') {
        var _window_trustedTypes;
        policy = ((_window_trustedTypes = window.trustedTypes) == null ? void 0 : _window_trustedTypes.createPolicy('nextjs', {
            createHTML: (input)=>input,
            createScript: (input)=>input,
            createScriptURL: (input)=>input
        })) || null;
    }
    return policy;
}
function __unsafeCreateTrustedScriptURL(url) {
    var _getPolicy;
    return ((_getPolicy = getPolicy()) == null ? void 0 : _getPolicy.createScriptURL(url)) || url;
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=trusted-types.js.map
}}),
"[project]/node_modules/next/dist/build/deployment-id.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getDeploymentIdQueryOrEmptyString", {
    enumerable: true,
    get: function() {
        return getDeploymentIdQueryOrEmptyString;
    }
});
function getDeploymentIdQueryOrEmptyString() {
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    return '';
} //# sourceMappingURL=deployment-id.js.map
}}),
"[project]/node_modules/next/dist/client/route-loader.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    createRouteLoader: null,
    getClientBuildManifest: null,
    isAssetError: null,
    markAssetError: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createRouteLoader: function() {
        return createRouteLoader;
    },
    getClientBuildManifest: function() {
        return getClientBuildManifest;
    },
    isAssetError: function() {
        return isAssetError;
    },
    markAssetError: function() {
        return markAssetError;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _getassetpathfromroute = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/get-asset-path-from-route.js [app-client] (ecmascript)"));
const _trustedtypes = __turbopack_require__("[project]/node_modules/next/dist/client/trusted-types.js [app-client] (ecmascript)");
const _requestidlecallback = __turbopack_require__("[project]/node_modules/next/dist/client/request-idle-callback.js [app-client] (ecmascript)");
const _deploymentid = __turbopack_require__("[project]/node_modules/next/dist/build/deployment-id.js [app-client] (ecmascript)");
const _encodeuripath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/encode-uri-path.js [app-client] (ecmascript)");
// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive
// considers as "Good" time-to-interactive. We must assume something went
// wrong beyond this point, and then fall-back to a full page transition to
// show the user something of value.
const MS_MAX_IDLE_DELAY = 3800;
function withFuture(key, map, generator) {
    let entry = map.get(key);
    if (entry) {
        if ('future' in entry) {
            return entry.future;
        }
        return Promise.resolve(entry);
    }
    let resolver;
    const prom = new Promise((resolve)=>{
        resolver = resolve;
    });
    map.set(key, {
        resolve: resolver,
        future: prom
    });
    return generator ? generator().then((value)=>{
        resolver(value);
        return value;
    }).catch((err)=>{
        map.delete(key);
        throw err;
    }) : prom;
}
const ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR');
function markAssetError(err) {
    return Object.defineProperty(err, ASSET_LOAD_ERROR, {});
}
function isAssetError(err) {
    return err && ASSET_LOAD_ERROR in err;
}
function hasPrefetch(link) {
    try {
        link = document.createElement('link');
        return(// with relList.support
        !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports('prefetch'));
    } catch (e) {
        return false;
    }
}
const canPrefetch = hasPrefetch();
const getAssetQueryString = ()=>{
    return (0, _deploymentid.getDeploymentIdQueryOrEmptyString)();
};
function prefetchViaDom(href, as, link) {
    return new Promise((resolve, reject)=>{
        const selector = '\n      link[rel="prefetch"][href^="' + href + '"],\n      link[rel="preload"][href^="' + href + '"],\n      script[src^="' + href + '"]';
        if (document.querySelector(selector)) {
            return resolve();
        }
        link = document.createElement('link');
        // The order of property assignment here is intentional:
        if (as) link.as = as;
        link.rel = "prefetch";
        link.crossOrigin = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env.__NEXT_CROSS_ORIGIN;
        link.onload = resolve;
        link.onerror = ()=>reject(markAssetError(new Error("Failed to prefetch: " + href)));
        // `href` should always be last:
        link.href = href;
        document.head.appendChild(link);
    });
}
function appendScript(src, script) {
    return new Promise((resolve, reject)=>{
        script = document.createElement('script');
        // The order of property assignment here is intentional.
        // 1. Setup success/failure hooks in case the browser synchronously
        //    executes when `src` is set.
        script.onload = resolve;
        script.onerror = ()=>reject(markAssetError(new Error("Failed to load script: " + src)));
        // 2. Configure the cross-origin attribute before setting `src` in case the
        //    browser begins to fetch.
        script.crossOrigin = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env.__NEXT_CROSS_ORIGIN;
        // 3. Finally, set the source and inject into the DOM in case the child
        //    must be appended for fetching to start.
        script.src = src;
        document.body.appendChild(script);
    });
}
// We wait for pages to be built in dev before we start the route transition
// timeout to prevent an un-necessary hard navigation in development.
let devBuildPromise;
// Resolve a promise that times out after given amount of milliseconds.
function resolvePromiseWithTimeout(p, ms, err) {
    return new Promise((resolve, reject)=>{
        let cancelled = false;
        p.then((r)=>{
            // Resolved, cancel the timeout
            cancelled = true;
            resolve(r);
        }).catch(reject);
        // We wrap these checks separately for better dead-code elimination in
        // production bundles.
        if ("TURBOPACK compile-time truthy", 1) {
            (devBuildPromise || Promise.resolve()).then(()=>{
                (0, _requestidlecallback.requestIdleCallback)(()=>setTimeout(()=>{
                        if (!cancelled) {
                            reject(err);
                        }
                    }, ms));
            });
        }
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
    });
}
function getClientBuildManifest() {
    if (self.__BUILD_MANIFEST) {
        return Promise.resolve(self.__BUILD_MANIFEST);
    }
    const onBuildManifest = new Promise((resolve)=>{
        // Mandatory because this is not concurrent safe:
        const cb = self.__BUILD_MANIFEST_CB;
        self.__BUILD_MANIFEST_CB = ()=>{
            resolve(self.__BUILD_MANIFEST);
            cb && cb();
        };
    });
    return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')));
}
function getFilesForRoute(assetPrefix, route) {
    if ("TURBOPACK compile-time truthy", 1) {
        const scriptUrl = assetPrefix + '/_next/static/chunks/pages' + (0, _encodeuripath.encodeURIPath)((0, _getassetpathfromroute.default)(route, '.js')) + getAssetQueryString();
        return Promise.resolve({
            scripts: [
                (0, _trustedtypes.__unsafeCreateTrustedScriptURL)(scriptUrl)
            ],
            // Styles are handled by `style-loader` in development:
            css: []
        });
    }
    "TURBOPACK unreachable";
}
function createRouteLoader(assetPrefix) {
    const entrypoints = new Map();
    const loadedScripts = new Map();
    const styleSheets = new Map();
    const routes = new Map();
    function maybeExecuteScript(src) {
        // With HMR we might need to "reload" scripts when they are
        // disposed and readded. Executing scripts twice has no functional
        // differences
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        } else {
            return appendScript(src);
        }
    }
    function fetchStyleSheet(href) {
        let prom = styleSheets.get(href);
        if (prom) {
            return prom;
        }
        styleSheets.set(href, prom = fetch(href, {
            credentials: 'same-origin'
        }).then((res)=>{
            if (!res.ok) {
                throw new Error("Failed to load stylesheet: " + href);
            }
            return res.text().then((text)=>({
                    href: href,
                    content: text
                }));
        }).catch((err)=>{
            throw markAssetError(err);
        }));
        return prom;
    }
    return {
        whenEntrypoint (route) {
            return withFuture(route, entrypoints);
        },
        onEntrypoint (route, execute) {
            (execute ? Promise.resolve().then(()=>execute()).then((exports1)=>({
                    component: exports1 && exports1.default || exports1,
                    exports: exports1
                }), (err)=>({
                    error: err
                })) : Promise.resolve(undefined)).then((input)=>{
                const old = entrypoints.get(route);
                if (old && 'resolve' in old) {
                    if (input) {
                        entrypoints.set(route, input);
                        old.resolve(input);
                    }
                } else {
                    if (input) {
                        entrypoints.set(route, input);
                    } else {
                        entrypoints.delete(route);
                    }
                    // when this entrypoint has been resolved before
                    // the route is outdated and we want to invalidate
                    // this cache entry
                    routes.delete(route);
                }
            });
        },
        loadRoute (route, prefetch) {
            return withFuture(route, routes, ()=>{
                let devBuildPromiseResolve;
                if ("TURBOPACK compile-time truthy", 1) {
                    devBuildPromise = new Promise((resolve)=>{
                        devBuildPromiseResolve = resolve;
                    });
                }
                return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then((param)=>{
                    let { scripts, css } = param;
                    return Promise.all([
                        entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)),
                        Promise.all(css.map(fetchStyleSheet))
                    ]);
                }).then((res)=>{
                    return this.whenEntrypoint(route).then((entrypoint)=>({
                            entrypoint,
                            styles: res[1]
                        }));
                }), MS_MAX_IDLE_DELAY, markAssetError(new Error("Route did not complete loading: " + route))).then((param)=>{
                    let { entrypoint, styles } = param;
                    const res = Object.assign({
                        styles: styles
                    }, entrypoint);
                    return 'error' in entrypoint ? entrypoint : res;
                }).catch((err)=>{
                    if (prefetch) {
                        // we don't want to cache errors during prefetch
                        throw err;
                    }
                    return {
                        error: err
                    };
                }).finally(()=>devBuildPromiseResolve == null ? void 0 : devBuildPromiseResolve());
            });
        },
        prefetch (route) {
            // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118
            // License: Apache 2.0
            let cn;
            if (cn = navigator.connection) {
                // Don't prefetch if using 2G or if Save-Data is enabled.
                if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();
            }
            return getFilesForRoute(assetPrefix, route).then((output)=>Promise.all(canPrefetch ? output.scripts.map((script)=>prefetchViaDom(script.toString(), 'script')) : [])).then(()=>{
                (0, _requestidlecallback.requestIdleCallback)(()=>this.loadRoute(route, true).catch(()=>{}));
            }).catch(()=>{});
        }
    };
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=route-loader.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/sorted-routes.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    getSortedRouteObjects: null,
    getSortedRoutes: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getSortedRouteObjects: function() {
        return getSortedRouteObjects;
    },
    getSortedRoutes: function() {
        return getSortedRoutes;
    }
});
class UrlNode {
    insert(urlPath) {
        this._insert(urlPath.split('/').filter(Boolean), [], false);
    }
    smoosh() {
        return this._smoosh();
    }
    _smoosh(prefix) {
        if (prefix === void 0) prefix = '/';
        const childrenPaths = [
            ...this.children.keys()
        ].sort();
        if (this.slugName !== null) {
            childrenPaths.splice(childrenPaths.indexOf('[]'), 1);
        }
        if (this.restSlugName !== null) {
            childrenPaths.splice(childrenPaths.indexOf('[...]'), 1);
        }
        if (this.optionalRestSlugName !== null) {
            childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1);
        }
        const routes = childrenPaths.map((c)=>this.children.get(c)._smoosh("" + prefix + c + "/")).reduce((prev, curr)=>[
                ...prev,
                ...curr
            ], []);
        if (this.slugName !== null) {
            routes.push(...this.children.get('[]')._smoosh(prefix + "[" + this.slugName + "]/"));
        }
        if (!this.placeholder) {
            const r = prefix === '/' ? '/' : prefix.slice(0, -1);
            if (this.optionalRestSlugName != null) {
                throw new Error('You cannot define a route with the same specificity as a optional catch-all route ("' + r + '" and "' + r + "[[..." + this.optionalRestSlugName + ']]").');
            }
            routes.unshift(r);
        }
        if (this.restSlugName !== null) {
            routes.push(...this.children.get('[...]')._smoosh(prefix + "[..." + this.restSlugName + "]/"));
        }
        if (this.optionalRestSlugName !== null) {
            routes.push(...this.children.get('[[...]]')._smoosh(prefix + "[[..." + this.optionalRestSlugName + "]]/"));
        }
        return routes;
    }
    _insert(urlPaths, slugNames, isCatchAll) {
        if (urlPaths.length === 0) {
            this.placeholder = false;
            return;
        }
        if (isCatchAll) {
            throw new Error("Catch-all must be the last part of the URL.");
        }
        // The next segment in the urlPaths list
        let nextSegment = urlPaths[0];
        // Check if the segment matches `[something]`
        if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {
            // Strip `[` and `]`, leaving only `something`
            let segmentName = nextSegment.slice(1, -1);
            let isOptional = false;
            if (segmentName.startsWith('[') && segmentName.endsWith(']')) {
                // Strip optional `[` and `]`, leaving only `something`
                segmentName = segmentName.slice(1, -1);
                isOptional = true;
            }
            if (segmentName.startsWith('…')) {
                throw new Error("Detected a three-dot character ('…') at ('" + segmentName + "'). Did you mean ('...')?");
            }
            if (segmentName.startsWith('...')) {
                // Strip `...`, leaving only `something`
                segmentName = segmentName.substring(3);
                isCatchAll = true;
            }
            if (segmentName.startsWith('[') || segmentName.endsWith(']')) {
                throw new Error("Segment names may not start or end with extra brackets ('" + segmentName + "').");
            }
            if (segmentName.startsWith('.')) {
                throw new Error("Segment names may not start with erroneous periods ('" + segmentName + "').");
            }
            function handleSlug(previousSlug, nextSlug) {
                if (previousSlug !== null) {
                    // If the specific segment already has a slug but the slug is not `something`
                    // This prevents collisions like:
                    // pages/[post]/index.js
                    // pages/[id]/index.js
                    // Because currently multiple dynamic params on the same segment level are not supported
                    if (previousSlug !== nextSlug) {
                        // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.
                        throw new Error("You cannot use different slug names for the same dynamic path ('" + previousSlug + "' !== '" + nextSlug + "').");
                    }
                }
                slugNames.forEach((slug)=>{
                    if (slug === nextSlug) {
                        throw new Error('You cannot have the same slug name "' + nextSlug + '" repeat within a single dynamic path');
                    }
                    if (slug.replace(/\W/g, '') === nextSegment.replace(/\W/g, '')) {
                        throw new Error('You cannot have the slug names "' + slug + '" and "' + nextSlug + '" differ only by non-word symbols within a single dynamic path');
                    }
                });
                slugNames.push(nextSlug);
            }
            if (isCatchAll) {
                if (isOptional) {
                    if (this.restSlugName != null) {
                        throw new Error('You cannot use both an required and optional catch-all route at the same level ("[...' + this.restSlugName + ']" and "' + urlPaths[0] + '" ).');
                    }
                    handleSlug(this.optionalRestSlugName, segmentName);
                    // slugName is kept as it can only be one particular slugName
                    this.optionalRestSlugName = segmentName;
                    // nextSegment is overwritten to [[...]] so that it can later be sorted specifically
                    nextSegment = '[[...]]';
                } else {
                    if (this.optionalRestSlugName != null) {
                        throw new Error('You cannot use both an optional and required catch-all route at the same level ("[[...' + this.optionalRestSlugName + ']]" and "' + urlPaths[0] + '").');
                    }
                    handleSlug(this.restSlugName, segmentName);
                    // slugName is kept as it can only be one particular slugName
                    this.restSlugName = segmentName;
                    // nextSegment is overwritten to [...] so that it can later be sorted specifically
                    nextSegment = '[...]';
                }
            } else {
                if (isOptional) {
                    throw new Error('Optional route parameters are not yet supported ("' + urlPaths[0] + '").');
                }
                handleSlug(this.slugName, segmentName);
                // slugName is kept as it can only be one particular slugName
                this.slugName = segmentName;
                // nextSegment is overwritten to [] so that it can later be sorted specifically
                nextSegment = '[]';
            }
        }
        // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode
        if (!this.children.has(nextSegment)) {
            this.children.set(nextSegment, new UrlNode());
        }
        this.children.get(nextSegment)._insert(urlPaths.slice(1), slugNames, isCatchAll);
    }
    constructor(){
        this.placeholder = true;
        this.children = new Map();
        this.slugName = null;
        this.restSlugName = null;
        this.optionalRestSlugName = null;
    }
}
function getSortedRoutes(normalizedPages) {
    // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment
    // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js
    // Only 1 dynamic segment per nesting level
    // So in the case that is test/integration/dynamic-routing it'll be this:
    // pages/[post]/comments.js
    // pages/blog/[post]/comment/[id].js
    // Both are fine because `pages/[post]` and `pages/blog` are on the same level
    // So in this case `UrlNode` created here has `this.slugName === 'post'`
    // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities
    // Instead what has to be passed through is the upwards path's dynamic names
    const root = new UrlNode();
    // Here the `root` gets injected multiple paths, and insert will break them up into sublevels
    normalizedPages.forEach((pagePath)=>root.insert(pagePath));
    // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority
    return root.smoosh();
}
function getSortedRouteObjects(objects, getter) {
    // We're assuming here that all the pathnames are unique, that way we can
    // sort the list and use the index as the key.
    const indexes = {};
    const pathnames = [];
    for(let i = 0; i < objects.length; i++){
        const pathname = getter(objects[i]);
        indexes[pathname] = i;
        pathnames[i] = pathname;
    }
    // Sort the pathnames.
    const sorted = getSortedRoutes(pathnames);
    // Map the sorted pathnames back to the original objects using the new sorted
    // index.
    return sorted.map((pathname)=>objects[indexes[pathname]]);
} //# sourceMappingURL=sorted-routes.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/is-dynamic.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isDynamicRoute", {
    enumerable: true,
    get: function() {
        return isDynamicRoute;
    }
});
const _interceptionroutes = __turbopack_require__("[project]/node_modules/next/dist/server/lib/interception-routes.js [app-client] (ecmascript)");
// Identify /[param]/ in route string
const TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;
function isDynamicRoute(route) {
    if ((0, _interceptionroutes.isInterceptionRouteAppPath)(route)) {
        route = (0, _interceptionroutes.extractInterceptionRouteInformation)(route).interceptedRoute;
    }
    return TEST_ROUTE.test(route);
} //# sourceMappingURL=is-dynamic.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    getSortedRouteObjects: null,
    getSortedRoutes: null,
    isDynamicRoute: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getSortedRouteObjects: function() {
        return _sortedroutes.getSortedRouteObjects;
    },
    getSortedRoutes: function() {
        return _sortedroutes.getSortedRoutes;
    },
    isDynamicRoute: function() {
        return _isdynamic.isDynamicRoute;
    }
});
const _sortedroutes = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/sorted-routes.js [app-client] (ecmascript)");
const _isdynamic = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/is-dynamic.js [app-client] (ecmascript)"); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/page-path/normalize-path-sep.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * For a given page path, this function ensures that there is no backslash
 * escaping slashes in the path. Example:
 *  - `foo\/bar\/baz` -> `foo/bar/baz`
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "normalizePathSep", {
    enumerable: true,
    get: function() {
        return normalizePathSep;
    }
});
function normalizePathSep(path) {
    return path.replace(/\\/g, '/');
} //# sourceMappingURL=normalize-path-sep.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/page-path/denormalize-page-path.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "denormalizePagePath", {
    enumerable: true,
    get: function() {
        return denormalizePagePath;
    }
});
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/index.js [app-client] (ecmascript)");
const _normalizepathsep = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/page-path/normalize-path-sep.js [app-client] (ecmascript)");
function denormalizePagePath(page) {
    let _page = (0, _normalizepathsep.normalizePathSep)(page);
    return _page.startsWith('/index/') && !(0, _utils.isDynamicRoute)(_page) ? _page.slice(6) : _page !== '/index' ? _page : '/';
} //# sourceMappingURL=denormalize-page-path.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "normalizeLocalePath", {
    enumerable: true,
    get: function() {
        return normalizeLocalePath;
    }
});
function normalizeLocalePath(pathname, locales) {
    let detectedLocale;
    // first item will be empty string from splitting at first char
    const pathnameParts = pathname.split('/');
    (locales || []).some((locale)=>{
        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {
            detectedLocale = locale;
            pathnameParts.splice(1, 1);
            pathname = pathnameParts.join('/') || '/';
            return true;
        }
        return false;
    });
    return {
        pathname,
        detectedLocale
    };
} //# sourceMappingURL=normalize-locale-path.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/mitt.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/*
MIT License

Copyright (c) Jason Miller (https://jasonformat.com/)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/ // This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
// It's been edited for the needs of this script
// See the LICENSE at the top of the file
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return mitt;
    }
});
function mitt() {
    const all = Object.create(null);
    return {
        on (type, handler) {
            (all[type] || (all[type] = [])).push(handler);
        },
        off (type, handler) {
            if (all[type]) {
                all[type].splice(all[type].indexOf(handler) >>> 0, 1);
            }
        },
        emit (type) {
            for(var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
                evts[_key - 1] = arguments[_key];
            }
            (all[type] || []).slice().map((handler)=>{
                handler(...evts);
            });
        }
    };
} //# sourceMappingURL=mitt.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    DecodeError: null,
    MiddlewareNotFoundError: null,
    MissingStaticPage: null,
    NormalizeError: null,
    PageNotFoundError: null,
    SP: null,
    ST: null,
    WEB_VITALS: null,
    execOnce: null,
    getDisplayName: null,
    getLocationOrigin: null,
    getURL: null,
    isAbsoluteUrl: null,
    isResSent: null,
    loadGetInitialProps: null,
    normalizeRepeatedSlashes: null,
    stringifyError: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DecodeError: function() {
        return DecodeError;
    },
    MiddlewareNotFoundError: function() {
        return MiddlewareNotFoundError;
    },
    MissingStaticPage: function() {
        return MissingStaticPage;
    },
    NormalizeError: function() {
        return NormalizeError;
    },
    PageNotFoundError: function() {
        return PageNotFoundError;
    },
    SP: function() {
        return SP;
    },
    ST: function() {
        return ST;
    },
    WEB_VITALS: function() {
        return WEB_VITALS;
    },
    execOnce: function() {
        return execOnce;
    },
    getDisplayName: function() {
        return getDisplayName;
    },
    getLocationOrigin: function() {
        return getLocationOrigin;
    },
    getURL: function() {
        return getURL;
    },
    isAbsoluteUrl: function() {
        return isAbsoluteUrl;
    },
    isResSent: function() {
        return isResSent;
    },
    loadGetInitialProps: function() {
        return loadGetInitialProps;
    },
    normalizeRepeatedSlashes: function() {
        return normalizeRepeatedSlashes;
    },
    stringifyError: function() {
        return stringifyError;
    }
});
const WEB_VITALS = [
    'CLS',
    'FCP',
    'FID',
    'INP',
    'LCP',
    'TTFB'
];
function execOnce(fn) {
    let used = false;
    let result;
    return function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        if (!used) {
            used = true;
            result = fn(...args);
        }
        return result;
    };
}
// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
const ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\d+\-.]*?:/;
const isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);
function getLocationOrigin() {
    const { protocol, hostname, port } = window.location;
    return protocol + "//" + hostname + (port ? ':' + port : '');
}
function getURL() {
    const { href } = window.location;
    const origin = getLocationOrigin();
    return href.substring(origin.length);
}
function getDisplayName(Component) {
    return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}
function isResSent(res) {
    return res.finished || res.headersSent;
}
function normalizeRepeatedSlashes(url) {
    const urlParts = url.split('?');
    const urlNoQuery = urlParts[0];
    return urlNoQuery // first we replace any non-encoded backslashes with forward
    // then normalize repeated forward slashes
    .replace(/\\/g, '/').replace(/\/\/+/g, '/') + (urlParts[1] ? "?" + urlParts.slice(1).join('?') : '');
}
async function loadGetInitialProps(App, ctx) {
    if ("TURBOPACK compile-time truthy", 1) {
        var _App_prototype;
        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {
            const message = '"' + getDisplayName(App) + '.getInitialProps()" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';
            throw new Error(message);
        }
    }
    // when called from _app `ctx` is nested in `ctx`
    const res = ctx.res || ctx.ctx && ctx.ctx.res;
    if (!App.getInitialProps) {
        if (ctx.ctx && ctx.Component) {
            // @ts-ignore pageProps default
            return {
                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
            };
        }
        return {};
    }
    const props = await App.getInitialProps(ctx);
    if (res && isResSent(res)) {
        return props;
    }
    if (!props) {
        const message = '"' + getDisplayName(App) + '.getInitialProps()" should resolve to an object. But found "' + props + '" instead.';
        throw new Error(message);
    }
    if ("TURBOPACK compile-time truthy", 1) {
        if (Object.keys(props).length === 0 && !ctx.ctx) {
            console.warn("" + getDisplayName(App) + " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps");
        }
    }
    return props;
}
const SP = typeof performance !== 'undefined';
const ST = SP && [
    'mark',
    'measure',
    'getEntriesByName'
].every((method)=>typeof performance[method] === 'function');
class DecodeError extends Error {
}
class NormalizeError extends Error {
}
class PageNotFoundError extends Error {
    constructor(page){
        super();
        this.code = 'ENOENT';
        this.name = 'PageNotFoundError';
        this.message = "Cannot find module for page: " + page;
    }
}
class MissingStaticPage extends Error {
    constructor(page, message){
        super();
        this.message = "Failed to load static file for page: " + page + " " + message;
    }
}
class MiddlewareNotFoundError extends Error {
    constructor(){
        super();
        this.code = 'ENOENT';
        this.message = "Cannot find the middleware module";
    }
}
function stringifyError(error) {
    return JSON.stringify({
        message: error.message,
        stack: error.stack
    });
} //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    assign: null,
    searchParamsToUrlQuery: null,
    urlQueryToSearchParams: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    assign: function() {
        return assign;
    },
    searchParamsToUrlQuery: function() {
        return searchParamsToUrlQuery;
    },
    urlQueryToSearchParams: function() {
        return urlQueryToSearchParams;
    }
});
function searchParamsToUrlQuery(searchParams) {
    const query = {};
    searchParams.forEach((value, key)=>{
        if (typeof query[key] === 'undefined') {
            query[key] = value;
        } else if (Array.isArray(query[key])) {
            query[key].push(value);
        } else {
            query[key] = [
                query[key],
                value
            ];
        }
    });
    return query;
}
function stringifyUrlQueryParam(param) {
    if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {
        return String(param);
    } else {
        return '';
    }
}
function urlQueryToSearchParams(urlQuery) {
    const result = new URLSearchParams();
    Object.entries(urlQuery).forEach((param)=>{
        let [key, value] = param;
        if (Array.isArray(value)) {
            value.forEach((item)=>result.append(key, stringifyUrlQueryParam(item)));
        } else {
            result.set(key, stringifyUrlQueryParam(value));
        }
    });
    return result;
}
function assign(target) {
    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        searchParamsList[_key - 1] = arguments[_key];
    }
    searchParamsList.forEach((searchParams)=>{
        Array.from(searchParams.keys()).forEach((key)=>target.delete(key));
        searchParams.forEach((value, key)=>target.append(key, value));
    });
    return target;
} //# sourceMappingURL=querystring.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "parseRelativeUrl", {
    enumerable: true,
    get: function() {
        return parseRelativeUrl;
    }
});
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _querystring = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)");
function parseRelativeUrl(url, base, parseQuery) {
    if (parseQuery === void 0) parseQuery = true;
    const globalBase = new URL(typeof window === 'undefined' ? 'http://n' : (0, _utils.getLocationOrigin)());
    const resolvedBase = base ? new URL(base, globalBase) : url.startsWith('.') ? new URL(typeof window === 'undefined' ? 'http://n' : window.location.href) : globalBase;
    const { pathname, searchParams, search, hash, href, origin } = new URL(url, resolvedBase);
    if (origin !== globalBase.origin) {
        throw new Error("invariant: invalid relative URL, router received " + url);
    }
    return {
        pathname,
        query: parseQuery ? (0, _querystring.searchParamsToUrlQuery)(searchParams) : undefined,
        search,
        hash,
        href: href.slice(origin.length)
    };
} //# sourceMappingURL=parse-relative-url.js.map
}}),
"[project]/node_modules/next/dist/compiled/path-to-regexp/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
(()=>{
    "use strict";
    if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = __dirname + "/";
    var e = {};
    (()=>{
        var r = e;
        Object.defineProperty(r, "__esModule", {
            value: true
        });
        function lexer(e) {
            var r = [];
            var n = 0;
            while(n < e.length){
                var t = e[n];
                if (t === "*" || t === "+" || t === "?") {
                    r.push({
                        type: "MODIFIER",
                        index: n,
                        value: e[n++]
                    });
                    continue;
                }
                if (t === "\\") {
                    r.push({
                        type: "ESCAPED_CHAR",
                        index: n++,
                        value: e[n++]
                    });
                    continue;
                }
                if (t === "{") {
                    r.push({
                        type: "OPEN",
                        index: n,
                        value: e[n++]
                    });
                    continue;
                }
                if (t === "}") {
                    r.push({
                        type: "CLOSE",
                        index: n,
                        value: e[n++]
                    });
                    continue;
                }
                if (t === ":") {
                    var i = "";
                    var a = n + 1;
                    while(a < e.length){
                        var o = e.charCodeAt(a);
                        if (o >= 48 && o <= 57 || o >= 65 && o <= 90 || o >= 97 && o <= 122 || o === 95) {
                            i += e[a++];
                            continue;
                        }
                        break;
                    }
                    if (!i) throw new TypeError("Missing parameter name at " + n);
                    r.push({
                        type: "NAME",
                        index: n,
                        value: i
                    });
                    n = a;
                    continue;
                }
                if (t === "(") {
                    var f = 1;
                    var u = "";
                    var a = n + 1;
                    if (e[a] === "?") {
                        throw new TypeError('Pattern cannot start with "?" at ' + a);
                    }
                    while(a < e.length){
                        if (e[a] === "\\") {
                            u += e[a++] + e[a++];
                            continue;
                        }
                        if (e[a] === ")") {
                            f--;
                            if (f === 0) {
                                a++;
                                break;
                            }
                        } else if (e[a] === "(") {
                            f++;
                            if (e[a + 1] !== "?") {
                                throw new TypeError("Capturing groups are not allowed at " + a);
                            }
                        }
                        u += e[a++];
                    }
                    if (f) throw new TypeError("Unbalanced pattern at " + n);
                    if (!u) throw new TypeError("Missing pattern at " + n);
                    r.push({
                        type: "PATTERN",
                        index: n,
                        value: u
                    });
                    n = a;
                    continue;
                }
                r.push({
                    type: "CHAR",
                    index: n,
                    value: e[n++]
                });
            }
            r.push({
                type: "END",
                index: n,
                value: ""
            });
            return r;
        }
        function parse(e, r) {
            if (r === void 0) {
                r = {};
            }
            var n = lexer(e);
            var t = r.prefixes, i = t === void 0 ? "./" : t;
            var a = "[^" + escapeString(r.delimiter || "/#?") + "]+?";
            var o = [];
            var f = 0;
            var u = 0;
            var p = "";
            var tryConsume = function(e) {
                if (u < n.length && n[u].type === e) return n[u++].value;
            };
            var mustConsume = function(e) {
                var r = tryConsume(e);
                if (r !== undefined) return r;
                var t = n[u], i = t.type, a = t.index;
                throw new TypeError("Unexpected " + i + " at " + a + ", expected " + e);
            };
            var consumeText = function() {
                var e = "";
                var r;
                while(r = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR")){
                    e += r;
                }
                return e;
            };
            while(u < n.length){
                var v = tryConsume("CHAR");
                var c = tryConsume("NAME");
                var s = tryConsume("PATTERN");
                if (c || s) {
                    var d = v || "";
                    if (i.indexOf(d) === -1) {
                        p += d;
                        d = "";
                    }
                    if (p) {
                        o.push(p);
                        p = "";
                    }
                    o.push({
                        name: c || f++,
                        prefix: d,
                        suffix: "",
                        pattern: s || a,
                        modifier: tryConsume("MODIFIER") || ""
                    });
                    continue;
                }
                var g = v || tryConsume("ESCAPED_CHAR");
                if (g) {
                    p += g;
                    continue;
                }
                if (p) {
                    o.push(p);
                    p = "";
                }
                var x = tryConsume("OPEN");
                if (x) {
                    var d = consumeText();
                    var l = tryConsume("NAME") || "";
                    var h = tryConsume("PATTERN") || "";
                    var m = consumeText();
                    mustConsume("CLOSE");
                    o.push({
                        name: l || (h ? f++ : ""),
                        pattern: l && !h ? a : h,
                        prefix: d,
                        suffix: m,
                        modifier: tryConsume("MODIFIER") || ""
                    });
                    continue;
                }
                mustConsume("END");
            }
            return o;
        }
        r.parse = parse;
        function compile(e, r) {
            return tokensToFunction(parse(e, r), r);
        }
        r.compile = compile;
        function tokensToFunction(e, r) {
            if (r === void 0) {
                r = {};
            }
            var n = flags(r);
            var t = r.encode, i = t === void 0 ? function(e) {
                return e;
            } : t, a = r.validate, o = a === void 0 ? true : a;
            var f = e.map(function(e) {
                if (typeof e === "object") {
                    return new RegExp("^(?:" + e.pattern + ")$", n);
                }
            });
            return function(r) {
                var n = "";
                for(var t = 0; t < e.length; t++){
                    var a = e[t];
                    if (typeof a === "string") {
                        n += a;
                        continue;
                    }
                    var u = r ? r[a.name] : undefined;
                    var p = a.modifier === "?" || a.modifier === "*";
                    var v = a.modifier === "*" || a.modifier === "+";
                    if (Array.isArray(u)) {
                        if (!v) {
                            throw new TypeError('Expected "' + a.name + '" to not repeat, but got an array');
                        }
                        if (u.length === 0) {
                            if (p) continue;
                            throw new TypeError('Expected "' + a.name + '" to not be empty');
                        }
                        for(var c = 0; c < u.length; c++){
                            var s = i(u[c], a);
                            if (o && !f[t].test(s)) {
                                throw new TypeError('Expected all "' + a.name + '" to match "' + a.pattern + '", but got "' + s + '"');
                            }
                            n += a.prefix + s + a.suffix;
                        }
                        continue;
                    }
                    if (typeof u === "string" || typeof u === "number") {
                        var s = i(String(u), a);
                        if (o && !f[t].test(s)) {
                            throw new TypeError('Expected "' + a.name + '" to match "' + a.pattern + '", but got "' + s + '"');
                        }
                        n += a.prefix + s + a.suffix;
                        continue;
                    }
                    if (p) continue;
                    var d = v ? "an array" : "a string";
                    throw new TypeError('Expected "' + a.name + '" to be ' + d);
                }
                return n;
            };
        }
        r.tokensToFunction = tokensToFunction;
        function match(e, r) {
            var n = [];
            var t = pathToRegexp(e, n, r);
            return regexpToFunction(t, n, r);
        }
        r.match = match;
        function regexpToFunction(e, r, n) {
            if (n === void 0) {
                n = {};
            }
            var t = n.decode, i = t === void 0 ? function(e) {
                return e;
            } : t;
            return function(n) {
                var t = e.exec(n);
                if (!t) return false;
                var a = t[0], o = t.index;
                var f = Object.create(null);
                var _loop_1 = function(e) {
                    if (t[e] === undefined) return "continue";
                    var n = r[e - 1];
                    if (n.modifier === "*" || n.modifier === "+") {
                        f[n.name] = t[e].split(n.prefix + n.suffix).map(function(e) {
                            return i(e, n);
                        });
                    } else {
                        f[n.name] = i(t[e], n);
                    }
                };
                for(var u = 1; u < t.length; u++){
                    _loop_1(u);
                }
                return {
                    path: a,
                    index: o,
                    params: f
                };
            };
        }
        r.regexpToFunction = regexpToFunction;
        function escapeString(e) {
            return e.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
        }
        function flags(e) {
            return e && e.sensitive ? "" : "i";
        }
        function regexpToRegexp(e, r) {
            if (!r) return e;
            var n = e.source.match(/\((?!\?)/g);
            if (n) {
                for(var t = 0; t < n.length; t++){
                    r.push({
                        name: t,
                        prefix: "",
                        suffix: "",
                        modifier: "",
                        pattern: ""
                    });
                }
            }
            return e;
        }
        function arrayToRegexp(e, r, n) {
            var t = e.map(function(e) {
                return pathToRegexp(e, r, n).source;
            });
            return new RegExp("(?:" + t.join("|") + ")", flags(n));
        }
        function stringToRegexp(e, r, n) {
            return tokensToRegexp(parse(e, n), r, n);
        }
        function tokensToRegexp(e, r, n) {
            if (n === void 0) {
                n = {};
            }
            var t = n.strict, i = t === void 0 ? false : t, a = n.start, o = a === void 0 ? true : a, f = n.end, u = f === void 0 ? true : f, p = n.encode, v = p === void 0 ? function(e) {
                return e;
            } : p;
            var c = "[" + escapeString(n.endsWith || "") + "]|$";
            var s = "[" + escapeString(n.delimiter || "/#?") + "]";
            var d = o ? "^" : "";
            for(var g = 0, x = e; g < x.length; g++){
                var l = x[g];
                if (typeof l === "string") {
                    d += escapeString(v(l));
                } else {
                    var h = escapeString(v(l.prefix));
                    var m = escapeString(v(l.suffix));
                    if (l.pattern) {
                        if (r) r.push(l);
                        if (h || m) {
                            if (l.modifier === "+" || l.modifier === "*") {
                                var E = l.modifier === "*" ? "?" : "";
                                d += "(?:" + h + "((?:" + l.pattern + ")(?:" + m + h + "(?:" + l.pattern + "))*)" + m + ")" + E;
                            } else {
                                d += "(?:" + h + "(" + l.pattern + ")" + m + ")" + l.modifier;
                            }
                        } else {
                            d += "(" + l.pattern + ")" + l.modifier;
                        }
                    } else {
                        d += "(?:" + h + m + ")" + l.modifier;
                    }
                }
            }
            if (u) {
                if (!i) d += s + "?";
                d += !n.endsWith ? "$" : "(?=" + c + ")";
            } else {
                var T = e[e.length - 1];
                var y = typeof T === "string" ? s.indexOf(T[T.length - 1]) > -1 : T === undefined;
                if (!i) {
                    d += "(?:" + s + "(?=" + c + "))?";
                }
                if (!y) {
                    d += "(?=" + s + "|" + c + ")";
                }
            }
            return new RegExp(d, flags(n));
        }
        r.tokensToRegexp = tokensToRegexp;
        function pathToRegexp(e, r, n) {
            if (e instanceof RegExp) return regexpToRegexp(e, r);
            if (Array.isArray(e)) return arrayToRegexp(e, r, n);
            return stringToRegexp(e, r, n);
        }
        r.pathToRegexp = pathToRegexp;
    })();
    module.exports = e;
})();
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/path-match.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getPathMatch", {
    enumerable: true,
    get: function() {
        return getPathMatch;
    }
});
const _pathtoregexp = __turbopack_require__("[project]/node_modules/next/dist/compiled/path-to-regexp/index.js [app-client] (ecmascript)");
function getPathMatch(path, options) {
    const keys = [];
    const regexp = (0, _pathtoregexp.pathToRegexp)(path, keys, {
        delimiter: '/',
        sensitive: typeof (options == null ? void 0 : options.sensitive) === 'boolean' ? options.sensitive : false,
        strict: options == null ? void 0 : options.strict
    });
    const matcher = (0, _pathtoregexp.regexpToFunction)((options == null ? void 0 : options.regexModifier) ? new RegExp(options.regexModifier(regexp.source), regexp.flags) : regexp, keys);
    /**
   * A matcher function that will check if a given pathname matches the path
   * given in the builder function. When the path does not match it will return
   * `false` but if it does it will return an object with the matched params
   * merged with the params provided in the second argument.
   */ return (pathname, params)=>{
        // If no pathname is provided it's not a match.
        if (typeof pathname !== 'string') return false;
        const match = matcher(pathname);
        // If the path did not match `false` will be returned.
        if (!match) return false;
        /**
     * If unnamed params are not allowed they must be removed from
     * the matched parameters. path-to-regexp uses "string" for named and
     * "number" for unnamed parameters.
     */ if (options == null ? void 0 : options.removeUnnamedParams) {
            for (const key of keys){
                if (typeof key.name === 'number') {
                    delete match.params[key.name];
                }
            }
        }
        return {
            ...params,
            ...match.params
        };
    };
} //# sourceMappingURL=path-match.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/escape-regexp.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
// regexp is based on https://github.com/sindresorhus/escape-string-regexp
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "escapeStringRegexp", {
    enumerable: true,
    get: function() {
        return escapeStringRegexp;
    }
});
const reHasRegExp = /[|\\{}()[\]^$+*?.-]/;
const reReplaceRegExp = /[|\\{}()[\]^$+*?.-]/g;
function escapeStringRegexp(str) {
    // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23
    if (reHasRegExp.test(str)) {
        return str.replace(reReplaceRegExp, '\\$&');
    }
    return str;
} //# sourceMappingURL=escape-regexp.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/parse-url.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "parseUrl", {
    enumerable: true,
    get: function() {
        return parseUrl;
    }
});
const _querystring = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)");
const _parserelativeurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js [app-client] (ecmascript)");
function parseUrl(url) {
    if (url.startsWith('/')) {
        return (0, _parserelativeurl.parseRelativeUrl)(url);
    }
    const parsedURL = new URL(url);
    return {
        hash: parsedURL.hash,
        hostname: parsedURL.hostname,
        href: parsedURL.href,
        pathname: parsedURL.pathname,
        port: parsedURL.port,
        protocol: parsedURL.protocol,
        query: (0, _querystring.searchParamsToUrlQuery)(parsedURL.searchParams),
        search: parsedURL.search
    };
} //# sourceMappingURL=parse-url.js.map
}}),
"[project]/node_modules/next/dist/compiled/cookie/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
(()=>{
    "use strict";
    if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = __dirname + "/";
    var e = {};
    (()=>{
        var r = e;
        /*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */ r.parse = parse;
        r.serialize = serialize;
        var i = decodeURIComponent;
        var t = encodeURIComponent;
        var a = /; */;
        var n = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
        function parse(e, r) {
            if (typeof e !== "string") {
                throw new TypeError("argument str must be a string");
            }
            var t = {};
            var n = r || {};
            var o = e.split(a);
            var s = n.decode || i;
            for(var p = 0; p < o.length; p++){
                var f = o[p];
                var u = f.indexOf("=");
                if (u < 0) {
                    continue;
                }
                var v = f.substr(0, u).trim();
                var c = f.substr(++u, f.length).trim();
                if ('"' == c[0]) {
                    c = c.slice(1, -1);
                }
                if (undefined == t[v]) {
                    t[v] = tryDecode(c, s);
                }
            }
            return t;
        }
        function serialize(e, r, i) {
            var a = i || {};
            var o = a.encode || t;
            if (typeof o !== "function") {
                throw new TypeError("option encode is invalid");
            }
            if (!n.test(e)) {
                throw new TypeError("argument name is invalid");
            }
            var s = o(r);
            if (s && !n.test(s)) {
                throw new TypeError("argument val is invalid");
            }
            var p = e + "=" + s;
            if (null != a.maxAge) {
                var f = a.maxAge - 0;
                if (isNaN(f) || !isFinite(f)) {
                    throw new TypeError("option maxAge is invalid");
                }
                p += "; Max-Age=" + Math.floor(f);
            }
            if (a.domain) {
                if (!n.test(a.domain)) {
                    throw new TypeError("option domain is invalid");
                }
                p += "; Domain=" + a.domain;
            }
            if (a.path) {
                if (!n.test(a.path)) {
                    throw new TypeError("option path is invalid");
                }
                p += "; Path=" + a.path;
            }
            if (a.expires) {
                if (typeof a.expires.toUTCString !== "function") {
                    throw new TypeError("option expires is invalid");
                }
                p += "; Expires=" + a.expires.toUTCString();
            }
            if (a.httpOnly) {
                p += "; HttpOnly";
            }
            if (a.secure) {
                p += "; Secure";
            }
            if (a.sameSite) {
                var u = typeof a.sameSite === "string" ? a.sameSite.toLowerCase() : a.sameSite;
                switch(u){
                    case true:
                        p += "; SameSite=Strict";
                        break;
                    case "lax":
                        p += "; SameSite=Lax";
                        break;
                    case "strict":
                        p += "; SameSite=Strict";
                        break;
                    case "none":
                        p += "; SameSite=None";
                        break;
                    default:
                        throw new TypeError("option sameSite is invalid");
                }
            }
            return p;
        }
        function tryDecode(e, r) {
            try {
                return r(e);
            } catch (r) {
                return e;
            }
        }
    })();
    module.exports = e;
})();
}}),
"[project]/node_modules/next/dist/server/api-utils/get-cookie-parser.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getCookieParser", {
    enumerable: true,
    get: function() {
        return getCookieParser;
    }
});
function getCookieParser(headers) {
    return function parseCookie() {
        const { cookie } = headers;
        if (!cookie) {
            return {};
        }
        const { parse: parseCookieFn } = __turbopack_require__("[project]/node_modules/next/dist/compiled/cookie/index.js [app-client] (ecmascript)");
        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);
    };
} //# sourceMappingURL=get-cookie-parser.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/prepare-destination.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    compileNonPath: null,
    matchHas: null,
    prepareDestination: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    compileNonPath: function() {
        return compileNonPath;
    },
    matchHas: function() {
        return matchHas;
    },
    prepareDestination: function() {
        return prepareDestination;
    }
});
const _pathtoregexp = __turbopack_require__("[project]/node_modules/next/dist/compiled/path-to-regexp/index.js [app-client] (ecmascript)");
const _escaperegexp = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/escape-regexp.js [app-client] (ecmascript)");
const _parseurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-url.js [app-client] (ecmascript)");
const _interceptionroutes = __turbopack_require__("[project]/node_modules/next/dist/server/lib/interception-routes.js [app-client] (ecmascript)");
const _approuterheaders = __turbopack_require__("[project]/node_modules/next/dist/client/components/app-router-headers.js [app-client] (ecmascript)");
const _getcookieparser = __turbopack_require__("[project]/node_modules/next/dist/server/api-utils/get-cookie-parser.js [app-client] (ecmascript)");
/**
 * Ensure only a-zA-Z are used for param names for proper interpolating
 * with path-to-regexp
 */ function getSafeParamName(paramName) {
    let newParamName = '';
    for(let i = 0; i < paramName.length; i++){
        const charCode = paramName.charCodeAt(i);
        if (charCode > 64 && charCode < 91 || // A-Z
        charCode > 96 && charCode < 123 // a-z
        ) {
            newParamName += paramName[i];
        }
    }
    return newParamName;
}
function escapeSegment(str, segmentName) {
    return str.replace(new RegExp(":" + (0, _escaperegexp.escapeStringRegexp)(segmentName), 'g'), "__ESC_COLON_" + segmentName);
}
function unescapeSegments(str) {
    return str.replace(/__ESC_COLON_/gi, ':');
}
function matchHas(req, query, has, missing) {
    if (has === void 0) has = [];
    if (missing === void 0) missing = [];
    const params = {};
    const hasMatch = (hasItem)=>{
        let value;
        let key = hasItem.key;
        switch(hasItem.type){
            case 'header':
                {
                    key = key.toLowerCase();
                    value = req.headers[key];
                    break;
                }
            case 'cookie':
                {
                    if ('cookies' in req) {
                        value = req.cookies[hasItem.key];
                    } else {
                        const cookies = (0, _getcookieparser.getCookieParser)(req.headers)();
                        value = cookies[hasItem.key];
                    }
                    break;
                }
            case 'query':
                {
                    value = query[key];
                    break;
                }
            case 'host':
                {
                    const { host } = (req == null ? void 0 : req.headers) || {};
                    // remove port from host if present
                    const hostname = host == null ? void 0 : host.split(':', 1)[0].toLowerCase();
                    value = hostname;
                    break;
                }
            default:
                {
                    break;
                }
        }
        if (!hasItem.value && value) {
            params[getSafeParamName(key)] = value;
            return true;
        } else if (value) {
            const matcher = new RegExp("^" + hasItem.value + "$");
            const matches = Array.isArray(value) ? value.slice(-1)[0].match(matcher) : value.match(matcher);
            if (matches) {
                if (Array.isArray(matches)) {
                    if (matches.groups) {
                        Object.keys(matches.groups).forEach((groupKey)=>{
                            params[groupKey] = matches.groups[groupKey];
                        });
                    } else if (hasItem.type === 'host' && matches[0]) {
                        params.host = matches[0];
                    }
                }
                return true;
            }
        }
        return false;
    };
    const allMatch = has.every((item)=>hasMatch(item)) && !missing.some((item)=>hasMatch(item));
    if (allMatch) {
        return params;
    }
    return false;
}
function compileNonPath(value, params) {
    if (!value.includes(':')) {
        return value;
    }
    for (const key of Object.keys(params)){
        if (value.includes(":" + key)) {
            value = value.replace(new RegExp(":" + key + "\\*", 'g'), ":" + key + "--ESCAPED_PARAM_ASTERISKS").replace(new RegExp(":" + key + "\\?", 'g'), ":" + key + "--ESCAPED_PARAM_QUESTION").replace(new RegExp(":" + key + "\\+", 'g'), ":" + key + "--ESCAPED_PARAM_PLUS").replace(new RegExp(":" + key + "(?!\\w)", 'g'), "--ESCAPED_PARAM_COLON" + key);
        }
    }
    value = value.replace(/(:|\*|\?|\+|\(|\)|\{|\})/g, '\\$1').replace(/--ESCAPED_PARAM_PLUS/g, '+').replace(/--ESCAPED_PARAM_COLON/g, ':').replace(/--ESCAPED_PARAM_QUESTION/g, '?').replace(/--ESCAPED_PARAM_ASTERISKS/g, '*');
    // the value needs to start with a forward-slash to be compiled
    // correctly
    return (0, _pathtoregexp.compile)("/" + value, {
        validate: false
    })(params).slice(1);
}
function prepareDestination(args) {
    const query = Object.assign({}, args.query);
    delete query.__nextLocale;
    delete query.__nextDefaultLocale;
    delete query.__nextDataReq;
    delete query.__nextInferredLocaleFromDefault;
    delete query[_approuterheaders.NEXT_RSC_UNION_QUERY];
    let escapedDestination = args.destination;
    for (const param of Object.keys({
        ...args.params,
        ...query
    })){
        escapedDestination = param ? escapeSegment(escapedDestination, param) : escapedDestination;
    }
    const parsedDestination = (0, _parseurl.parseUrl)(escapedDestination);
    const destQuery = parsedDestination.query;
    const destPath = unescapeSegments("" + parsedDestination.pathname + (parsedDestination.hash || ''));
    const destHostname = unescapeSegments(parsedDestination.hostname || '');
    const destPathParamKeys = [];
    const destHostnameParamKeys = [];
    (0, _pathtoregexp.pathToRegexp)(destPath, destPathParamKeys);
    (0, _pathtoregexp.pathToRegexp)(destHostname, destHostnameParamKeys);
    const destParams = [];
    destPathParamKeys.forEach((key)=>destParams.push(key.name));
    destHostnameParamKeys.forEach((key)=>destParams.push(key.name));
    const destPathCompiler = (0, _pathtoregexp.compile)(destPath, // have already validated before we got to this point and validating
    // breaks compiling destinations with named pattern params from the source
    // e.g. /something:hello(.*) -> /another/:hello is broken with validation
    // since compile validation is meant for reversing and not for inserting
    // params from a separate path-regex into another
    {
        validate: false
    });
    const destHostnameCompiler = (0, _pathtoregexp.compile)(destHostname, {
        validate: false
    });
    // update any params in query values
    for (const [key, strOrArray] of Object.entries(destQuery)){
        // the value needs to start with a forward-slash to be compiled
        // correctly
        if (Array.isArray(strOrArray)) {
            destQuery[key] = strOrArray.map((value)=>compileNonPath(unescapeSegments(value), args.params));
        } else if (typeof strOrArray === 'string') {
            destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params);
        }
    }
    // add path params to query if it's not a redirect and not
    // already defined in destination query or path
    let paramKeys = Object.keys(args.params).filter((name)=>name !== 'nextInternalLocale');
    if (args.appendParamsToQuery && !paramKeys.some((key)=>destParams.includes(key))) {
        for (const key of paramKeys){
            if (!(key in destQuery)) {
                destQuery[key] = args.params[key];
            }
        }
    }
    let newUrl;
    // The compiler also that the interception route marker is an unnamed param, hence '0',
    // so we need to add it to the params object.
    if ((0, _interceptionroutes.isInterceptionRouteAppPath)(destPath)) {
        for (const segment of destPath.split('/')){
            const marker = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));
            if (marker) {
                if (marker === '(..)(..)') {
                    args.params['0'] = '(..)';
                    args.params['1'] = '(..)';
                } else {
                    args.params['0'] = marker;
                }
                break;
            }
        }
    }
    try {
        newUrl = destPathCompiler(args.params);
        const [pathname, hash] = newUrl.split('#', 2);
        parsedDestination.hostname = destHostnameCompiler(args.params);
        parsedDestination.pathname = pathname;
        parsedDestination.hash = "" + (hash ? '#' : '') + (hash || '');
        delete parsedDestination.search;
    } catch (err) {
        if (err.message.match(/Expected .*? to not repeat, but got an array/)) {
            throw new Error("To use a multi-match in the destination you must add `*` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match");
        }
        throw err;
    }
    // Query merge order lowest priority to highest
    // 1. initial URL query values
    // 2. path segment values
    // 3. destination specified query values
    parsedDestination.query = {
        ...query,
        ...parsedDestination.query
    };
    return {
        newUrl,
        destQuery,
        parsedDestination
    };
} //# sourceMappingURL=prepare-destination.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/resolve-rewrites.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return resolveRewrites;
    }
});
const _pathmatch = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/path-match.js [app-client] (ecmascript)");
const _preparedestination = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/prepare-destination.js [app-client] (ecmascript)");
const _removetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js [app-client] (ecmascript)");
const _normalizelocalepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js [app-client] (ecmascript)");
const _removebasepath = __turbopack_require__("[project]/node_modules/next/dist/client/remove-base-path.js [app-client] (ecmascript)");
const _parserelativeurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js [app-client] (ecmascript)");
function resolveRewrites(asPath, pages, rewrites, query, resolveHref, locales) {
    let matchedPage = false;
    let externalDest = false;
    let parsedAs = (0, _parserelativeurl.parseRelativeUrl)(asPath);
    let fsPathname = (0, _removetrailingslash.removeTrailingSlash)((0, _normalizelocalepath.normalizeLocalePath)((0, _removebasepath.removeBasePath)(parsedAs.pathname), locales).pathname);
    let resolvedHref;
    const handleRewrite = (rewrite)=>{
        const matcher = (0, _pathmatch.getPathMatch)(rewrite.source + (("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : ''), {
            removeUnnamedParams: true,
            strict: true
        });
        let params = matcher(parsedAs.pathname);
        if ((rewrite.has || rewrite.missing) && params) {
            const hasParams = (0, _preparedestination.matchHas)({
                headers: {
                    host: document.location.hostname,
                    'user-agent': navigator.userAgent
                },
                cookies: document.cookie.split('; ').reduce((acc, item)=>{
                    const [key, ...value] = item.split('=');
                    acc[key] = value.join('=');
                    return acc;
                }, {})
            }, parsedAs.query, rewrite.has, rewrite.missing);
            if (hasParams) {
                Object.assign(params, hasParams);
            } else {
                params = false;
            }
        }
        if (params) {
            if (!rewrite.destination) {
                // this is a proxied rewrite which isn't handled on the client
                externalDest = true;
                return true;
            }
            const destRes = (0, _preparedestination.prepareDestination)({
                appendParamsToQuery: true,
                destination: rewrite.destination,
                params: params,
                query: query
            });
            parsedAs = destRes.parsedDestination;
            asPath = destRes.newUrl;
            Object.assign(query, destRes.parsedDestination.query);
            fsPathname = (0, _removetrailingslash.removeTrailingSlash)((0, _normalizelocalepath.normalizeLocalePath)((0, _removebasepath.removeBasePath)(asPath), locales).pathname);
            if (pages.includes(fsPathname)) {
                // check if we now match a page as this means we are done
                // resolving the rewrites
                matchedPage = true;
                resolvedHref = fsPathname;
                return true;
            }
            // check if we match a dynamic-route, if so we break the rewrites chain
            resolvedHref = resolveHref(fsPathname);
            if (resolvedHref !== asPath && pages.includes(resolvedHref)) {
                matchedPage = true;
                return true;
            }
        }
    };
    let finished = false;
    for(let i = 0; i < rewrites.beforeFiles.length; i++){
        // we don't end after match in beforeFiles to allow
        // continuing through all beforeFiles rewrites
        handleRewrite(rewrites.beforeFiles[i]);
    }
    matchedPage = pages.includes(fsPathname);
    if (!matchedPage) {
        if (!finished) {
            for(let i = 0; i < rewrites.afterFiles.length; i++){
                if (handleRewrite(rewrites.afterFiles[i])) {
                    finished = true;
                    break;
                }
            }
        }
        // check dynamic route before processing fallback rewrites
        if (!finished) {
            resolvedHref = resolveHref(fsPathname);
            matchedPage = pages.includes(resolvedHref);
            finished = matchedPage;
        }
        if (!finished) {
            for(let i = 0; i < rewrites.fallback.length; i++){
                if (handleRewrite(rewrites.fallback[i])) {
                    finished = true;
                    break;
                }
            }
        }
    }
    return {
        asPath,
        parsedAs,
        matchedPage,
        resolvedHref,
        externalDest
    };
} //# sourceMappingURL=resolve-rewrites.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/route-matcher.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getRouteMatcher", {
    enumerable: true,
    get: function() {
        return getRouteMatcher;
    }
});
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
function getRouteMatcher(param) {
    let { re, groups } = param;
    return (pathname)=>{
        const routeMatch = re.exec(pathname);
        if (!routeMatch) {
            return false;
        }
        const decode = (param)=>{
            try {
                return decodeURIComponent(param);
            } catch (_) {
                throw new _utils.DecodeError('failed to decode param');
            }
        };
        const params = {};
        Object.keys(groups).forEach((slugName)=>{
            const g = groups[slugName];
            const m = routeMatch[g.pos];
            if (m !== undefined) {
                params[slugName] = ~m.indexOf('/') ? m.split('/').map((entry)=>decode(entry)) : g.repeat ? [
                    decode(m)
                ] : decode(m);
            }
        });
        return params;
    };
} //# sourceMappingURL=route-matcher.js.map
}}),
"[project]/node_modules/next/dist/lib/constants.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    ACTION_SUFFIX: null,
    APP_DIR_ALIAS: null,
    CACHE_ONE_YEAR: null,
    DOT_NEXT_ALIAS: null,
    ESLINT_DEFAULT_DIRS: null,
    GSP_NO_RETURNED_VALUE: null,
    GSSP_COMPONENT_MEMBER_ERROR: null,
    GSSP_NO_RETURNED_VALUE: null,
    INFINITE_CACHE: null,
    INSTRUMENTATION_HOOK_FILENAME: null,
    MATCHED_PATH_HEADER: null,
    MIDDLEWARE_FILENAME: null,
    MIDDLEWARE_LOCATION_REGEXP: null,
    NEXT_BODY_SUFFIX: null,
    NEXT_CACHE_IMPLICIT_TAG_ID: null,
    NEXT_CACHE_REVALIDATED_TAGS_HEADER: null,
    NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: null,
    NEXT_CACHE_SOFT_TAGS_HEADER: null,
    NEXT_CACHE_SOFT_TAG_MAX_LENGTH: null,
    NEXT_CACHE_TAGS_HEADER: null,
    NEXT_CACHE_TAG_MAX_ITEMS: null,
    NEXT_CACHE_TAG_MAX_LENGTH: null,
    NEXT_DATA_SUFFIX: null,
    NEXT_INTERCEPTION_MARKER_PREFIX: null,
    NEXT_META_SUFFIX: null,
    NEXT_QUERY_PARAM_PREFIX: null,
    NEXT_RESUME_HEADER: null,
    NON_STANDARD_NODE_ENV: null,
    PAGES_DIR_ALIAS: null,
    PRERENDER_REVALIDATE_HEADER: null,
    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: null,
    PUBLIC_DIR_MIDDLEWARE_CONFLICT: null,
    ROOT_DIR_ALIAS: null,
    RSC_ACTION_CLIENT_WRAPPER_ALIAS: null,
    RSC_ACTION_ENCRYPTION_ALIAS: null,
    RSC_ACTION_PROXY_ALIAS: null,
    RSC_ACTION_VALIDATE_ALIAS: null,
    RSC_CACHE_WRAPPER_ALIAS: null,
    RSC_MOD_REF_PROXY_ALIAS: null,
    RSC_PREFETCH_SUFFIX: null,
    RSC_SEGMENTS_DIR_SUFFIX: null,
    RSC_SEGMENT_SUFFIX: null,
    RSC_SUFFIX: null,
    SERVER_PROPS_EXPORT_ERROR: null,
    SERVER_PROPS_GET_INIT_PROPS_CONFLICT: null,
    SERVER_PROPS_SSG_CONFLICT: null,
    SERVER_RUNTIME: null,
    SSG_FALLBACK_EXPORT_ERROR: null,
    SSG_GET_INITIAL_PROPS_CONFLICT: null,
    STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: null,
    UNSTABLE_REVALIDATE_RENAME_ERROR: null,
    WEBPACK_LAYERS: null,
    WEBPACK_RESOURCE_QUERIES: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ACTION_SUFFIX: function() {
        return ACTION_SUFFIX;
    },
    APP_DIR_ALIAS: function() {
        return APP_DIR_ALIAS;
    },
    CACHE_ONE_YEAR: function() {
        return CACHE_ONE_YEAR;
    },
    DOT_NEXT_ALIAS: function() {
        return DOT_NEXT_ALIAS;
    },
    ESLINT_DEFAULT_DIRS: function() {
        return ESLINT_DEFAULT_DIRS;
    },
    GSP_NO_RETURNED_VALUE: function() {
        return GSP_NO_RETURNED_VALUE;
    },
    GSSP_COMPONENT_MEMBER_ERROR: function() {
        return GSSP_COMPONENT_MEMBER_ERROR;
    },
    GSSP_NO_RETURNED_VALUE: function() {
        return GSSP_NO_RETURNED_VALUE;
    },
    INFINITE_CACHE: function() {
        return INFINITE_CACHE;
    },
    INSTRUMENTATION_HOOK_FILENAME: function() {
        return INSTRUMENTATION_HOOK_FILENAME;
    },
    MATCHED_PATH_HEADER: function() {
        return MATCHED_PATH_HEADER;
    },
    MIDDLEWARE_FILENAME: function() {
        return MIDDLEWARE_FILENAME;
    },
    MIDDLEWARE_LOCATION_REGEXP: function() {
        return MIDDLEWARE_LOCATION_REGEXP;
    },
    NEXT_BODY_SUFFIX: function() {
        return NEXT_BODY_SUFFIX;
    },
    NEXT_CACHE_IMPLICIT_TAG_ID: function() {
        return NEXT_CACHE_IMPLICIT_TAG_ID;
    },
    NEXT_CACHE_REVALIDATED_TAGS_HEADER: function() {
        return NEXT_CACHE_REVALIDATED_TAGS_HEADER;
    },
    NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: function() {
        return NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER;
    },
    NEXT_CACHE_SOFT_TAGS_HEADER: function() {
        return NEXT_CACHE_SOFT_TAGS_HEADER;
    },
    NEXT_CACHE_SOFT_TAG_MAX_LENGTH: function() {
        return NEXT_CACHE_SOFT_TAG_MAX_LENGTH;
    },
    NEXT_CACHE_TAGS_HEADER: function() {
        return NEXT_CACHE_TAGS_HEADER;
    },
    NEXT_CACHE_TAG_MAX_ITEMS: function() {
        return NEXT_CACHE_TAG_MAX_ITEMS;
    },
    NEXT_CACHE_TAG_MAX_LENGTH: function() {
        return NEXT_CACHE_TAG_MAX_LENGTH;
    },
    NEXT_DATA_SUFFIX: function() {
        return NEXT_DATA_SUFFIX;
    },
    NEXT_INTERCEPTION_MARKER_PREFIX: function() {
        return NEXT_INTERCEPTION_MARKER_PREFIX;
    },
    NEXT_META_SUFFIX: function() {
        return NEXT_META_SUFFIX;
    },
    NEXT_QUERY_PARAM_PREFIX: function() {
        return NEXT_QUERY_PARAM_PREFIX;
    },
    NEXT_RESUME_HEADER: function() {
        return NEXT_RESUME_HEADER;
    },
    NON_STANDARD_NODE_ENV: function() {
        return NON_STANDARD_NODE_ENV;
    },
    PAGES_DIR_ALIAS: function() {
        return PAGES_DIR_ALIAS;
    },
    PRERENDER_REVALIDATE_HEADER: function() {
        return PRERENDER_REVALIDATE_HEADER;
    },
    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: function() {
        return PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER;
    },
    PUBLIC_DIR_MIDDLEWARE_CONFLICT: function() {
        return PUBLIC_DIR_MIDDLEWARE_CONFLICT;
    },
    ROOT_DIR_ALIAS: function() {
        return ROOT_DIR_ALIAS;
    },
    RSC_ACTION_CLIENT_WRAPPER_ALIAS: function() {
        return RSC_ACTION_CLIENT_WRAPPER_ALIAS;
    },
    RSC_ACTION_ENCRYPTION_ALIAS: function() {
        return RSC_ACTION_ENCRYPTION_ALIAS;
    },
    RSC_ACTION_PROXY_ALIAS: function() {
        return RSC_ACTION_PROXY_ALIAS;
    },
    RSC_ACTION_VALIDATE_ALIAS: function() {
        return RSC_ACTION_VALIDATE_ALIAS;
    },
    RSC_CACHE_WRAPPER_ALIAS: function() {
        return RSC_CACHE_WRAPPER_ALIAS;
    },
    RSC_MOD_REF_PROXY_ALIAS: function() {
        return RSC_MOD_REF_PROXY_ALIAS;
    },
    RSC_PREFETCH_SUFFIX: function() {
        return RSC_PREFETCH_SUFFIX;
    },
    RSC_SEGMENTS_DIR_SUFFIX: function() {
        return RSC_SEGMENTS_DIR_SUFFIX;
    },
    RSC_SEGMENT_SUFFIX: function() {
        return RSC_SEGMENT_SUFFIX;
    },
    RSC_SUFFIX: function() {
        return RSC_SUFFIX;
    },
    SERVER_PROPS_EXPORT_ERROR: function() {
        return SERVER_PROPS_EXPORT_ERROR;
    },
    SERVER_PROPS_GET_INIT_PROPS_CONFLICT: function() {
        return SERVER_PROPS_GET_INIT_PROPS_CONFLICT;
    },
    SERVER_PROPS_SSG_CONFLICT: function() {
        return SERVER_PROPS_SSG_CONFLICT;
    },
    SERVER_RUNTIME: function() {
        return SERVER_RUNTIME;
    },
    SSG_FALLBACK_EXPORT_ERROR: function() {
        return SSG_FALLBACK_EXPORT_ERROR;
    },
    SSG_GET_INITIAL_PROPS_CONFLICT: function() {
        return SSG_GET_INITIAL_PROPS_CONFLICT;
    },
    STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: function() {
        return STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR;
    },
    UNSTABLE_REVALIDATE_RENAME_ERROR: function() {
        return UNSTABLE_REVALIDATE_RENAME_ERROR;
    },
    WEBPACK_LAYERS: function() {
        return WEBPACK_LAYERS;
    },
    WEBPACK_RESOURCE_QUERIES: function() {
        return WEBPACK_RESOURCE_QUERIES;
    }
});
const NEXT_QUERY_PARAM_PREFIX = 'nxtP';
const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';
const MATCHED_PATH_HEADER = 'x-matched-path';
const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';
const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';
const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';
const RSC_SEGMENTS_DIR_SUFFIX = '.segments';
const RSC_SEGMENT_SUFFIX = '.segment.rsc';
const RSC_SUFFIX = '.rsc';
const ACTION_SUFFIX = '.action';
const NEXT_DATA_SUFFIX = '.json';
const NEXT_META_SUFFIX = '.meta';
const NEXT_BODY_SUFFIX = '.body';
const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';
const NEXT_CACHE_SOFT_TAGS_HEADER = 'x-next-cache-soft-tags';
const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';
const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';
const NEXT_RESUME_HEADER = 'next-resume';
const NEXT_CACHE_TAG_MAX_ITEMS = 64;
const NEXT_CACHE_TAG_MAX_LENGTH = 256;
const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;
const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';
const CACHE_ONE_YEAR = 31536000;
const INFINITE_CACHE = 0xfffffffe;
const MIDDLEWARE_FILENAME = 'middleware';
const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;
const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';
const PAGES_DIR_ALIAS = 'private-next-pages';
const DOT_NEXT_ALIAS = 'private-dot-next';
const ROOT_DIR_ALIAS = 'private-next-root-dir';
const APP_DIR_ALIAS = 'private-next-app-dir';
const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy';
const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';
const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';
const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';
const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';
const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';
const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;
const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;
const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;
const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;
const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;
const SERVER_PROPS_EXPORT_ERROR = `pages with \`getServerSideProps\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;
const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';
const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';
const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\n' + 'Please use `revalidate` instead.';
const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;
const NON_STANDARD_NODE_ENV = `You are using a non-standard "NODE_ENV" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;
const SSG_FALLBACK_EXPORT_ERROR = `Pages with \`fallback\` enabled in \`getStaticPaths\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;
const ESLINT_DEFAULT_DIRS = [
    'app',
    'pages',
    'components',
    'lib',
    'src'
];
const SERVER_RUNTIME = {
    edge: 'edge',
    experimentalEdge: 'experimental-edge',
    nodejs: 'nodejs'
};
/**
 * The names of the webpack layers. These layers are the primitives for the
 * webpack chunks.
 */ const WEBPACK_LAYERS_NAMES = {
    /**
   * The layer for the shared code between the client and server bundles.
   */ shared: 'shared',
    /**
   * The layer for server-only runtime and picking up `react-server` export conditions.
   * Including app router RSC pages and app router custom routes and metadata routes.
   */ reactServerComponents: 'rsc',
    /**
   * Server Side Rendering layer for app (ssr).
   */ serverSideRendering: 'ssr',
    /**
   * The browser client bundle layer for actions.
   */ actionBrowser: 'action-browser',
    /**
   * The layer for the API routes.
   */ api: 'api',
    /**
   * The layer for the middleware code.
   */ middleware: 'middleware',
    /**
   * The layer for the instrumentation hooks.
   */ instrument: 'instrument',
    /**
   * The layer for assets on the edge.
   */ edgeAsset: 'edge-asset',
    /**
   * The browser client bundle layer for App directory.
   */ appPagesBrowser: 'app-pages-browser'
};
const WEBPACK_LAYERS = {
    ...WEBPACK_LAYERS_NAMES,
    GROUP: {
        builtinReact: [
            WEBPACK_LAYERS_NAMES.reactServerComponents,
            WEBPACK_LAYERS_NAMES.actionBrowser
        ],
        serverOnly: [
            WEBPACK_LAYERS_NAMES.reactServerComponents,
            WEBPACK_LAYERS_NAMES.actionBrowser,
            WEBPACK_LAYERS_NAMES.instrument,
            WEBPACK_LAYERS_NAMES.middleware
        ],
        neutralTarget: [
            // pages api
            WEBPACK_LAYERS_NAMES.api
        ],
        clientOnly: [
            WEBPACK_LAYERS_NAMES.serverSideRendering,
            WEBPACK_LAYERS_NAMES.appPagesBrowser
        ],
        bundled: [
            WEBPACK_LAYERS_NAMES.reactServerComponents,
            WEBPACK_LAYERS_NAMES.actionBrowser,
            WEBPACK_LAYERS_NAMES.serverSideRendering,
            WEBPACK_LAYERS_NAMES.appPagesBrowser,
            WEBPACK_LAYERS_NAMES.shared,
            WEBPACK_LAYERS_NAMES.instrument
        ],
        appPages: [
            // app router pages and layouts
            WEBPACK_LAYERS_NAMES.reactServerComponents,
            WEBPACK_LAYERS_NAMES.serverSideRendering,
            WEBPACK_LAYERS_NAMES.appPagesBrowser,
            WEBPACK_LAYERS_NAMES.actionBrowser
        ]
    }
};
const WEBPACK_RESOURCE_QUERIES = {
    edgeSSREntry: '__next_edge_ssr_entry__',
    metadata: '__next_metadata__',
    metadataRoute: '__next_metadata_route__',
    metadataImageMeta: '__next_metadata_image_meta__'
}; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/route-regex.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    getNamedMiddlewareRegex: null,
    getNamedRouteRegex: null,
    getRouteRegex: null,
    parseParameter: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getNamedMiddlewareRegex: function() {
        return getNamedMiddlewareRegex;
    },
    getNamedRouteRegex: function() {
        return getNamedRouteRegex;
    },
    getRouteRegex: function() {
        return getRouteRegex;
    },
    parseParameter: function() {
        return parseParameter;
    }
});
const _constants = __turbopack_require__("[project]/node_modules/next/dist/lib/constants.js [app-client] (ecmascript)");
const _interceptionroutes = __turbopack_require__("[project]/node_modules/next/dist/server/lib/interception-routes.js [app-client] (ecmascript)");
const _escaperegexp = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/escape-regexp.js [app-client] (ecmascript)");
const _removetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js [app-client] (ecmascript)");
/**
 * Regular expression pattern used to match route parameters.
 * Matches both single parameters and parameter groups.
 * Examples:
 *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true
 *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false
 *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true
 *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false
 */ const PARAMETER_PATTERN = /\[((?:\[.*\])|.+)\]/;
function parseParameter(param) {
    const match = param.match(PARAMETER_PATTERN);
    if (!match) {
        return parseMatchedParameter(param);
    }
    return parseMatchedParameter(match[1]);
}
/**
 * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used
 * to generate the parametrized route.
 * Examples:
 *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`
 *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`
 *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`
 *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`
 * @param param - The matched parameter to parse.
 * @returns The parsed parameter as a data structure.
 */ function parseMatchedParameter(param) {
    const optional = param.startsWith('[') && param.endsWith(']');
    if (optional) {
        param = param.slice(1, -1);
    }
    const repeat = param.startsWith('...');
    if (repeat) {
        param = param.slice(3);
    }
    return {
        key: param,
        repeat,
        optional
    };
}
function getParametrizedRoute(route) {
    const segments = (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split('/');
    const groups = {};
    let groupIndex = 1;
    return {
        parameterizedRoute: segments.map((segment)=>{
            const markerMatch = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));
            const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters
            ;
            if (markerMatch && paramMatches) {
                const { key, optional, repeat } = parseMatchedParameter(paramMatches[1]);
                groups[key] = {
                    pos: groupIndex++,
                    repeat,
                    optional
                };
                return "/" + (0, _escaperegexp.escapeStringRegexp)(markerMatch) + "([^/]+?)";
            } else if (paramMatches) {
                const { key, repeat, optional } = parseMatchedParameter(paramMatches[1]);
                groups[key] = {
                    pos: groupIndex++,
                    repeat,
                    optional
                };
                return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
            } else {
                return "/" + (0, _escaperegexp.escapeStringRegexp)(segment);
            }
        }).join(''),
        groups
    };
}
function getRouteRegex(normalizedRoute) {
    const { parameterizedRoute, groups } = getParametrizedRoute(normalizedRoute);
    return {
        re: new RegExp("^" + parameterizedRoute + "(?:/)?$"),
        groups: groups
    };
}
/**
 * Builds a function to generate a minimal routeKey using only a-z and minimal
 * number of characters.
 */ function buildGetSafeRouteKey() {
    let i = 0;
    return ()=>{
        let routeKey = '';
        let j = ++i;
        while(j > 0){
            routeKey += String.fromCharCode(97 + (j - 1) % 26);
            j = Math.floor((j - 1) / 26);
        }
        return routeKey;
    };
}
function getSafeKeyFromSegment(param) {
    let { interceptionMarker, getSafeRouteKey, segment, routeKeys, keyPrefix } = param;
    const { key, optional, repeat } = parseMatchedParameter(segment);
    // replace any non-word characters since they can break
    // the named regex
    let cleanedKey = key.replace(/\W/g, '');
    if (keyPrefix) {
        cleanedKey = "" + keyPrefix + cleanedKey;
    }
    let invalidKey = false;
    // check if the key is still invalid and fallback to using a known
    // safe key
    if (cleanedKey.length === 0 || cleanedKey.length > 30) {
        invalidKey = true;
    }
    if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {
        invalidKey = true;
    }
    if (invalidKey) {
        cleanedKey = getSafeRouteKey();
    }
    if (keyPrefix) {
        routeKeys[cleanedKey] = "" + keyPrefix + key;
    } else {
        routeKeys[cleanedKey] = key;
    }
    // if the segment has an interception marker, make sure that's part of the regex pattern
    // this is to ensure that the route with the interception marker doesn't incorrectly match
    // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])
    const interceptionPrefix = interceptionMarker ? (0, _escaperegexp.escapeStringRegexp)(interceptionMarker) : '';
    return repeat ? optional ? "(?:/" + interceptionPrefix + "(?<" + cleanedKey + ">.+?))?" : "/" + interceptionPrefix + "(?<" + cleanedKey + ">.+?)" : "/" + interceptionPrefix + "(?<" + cleanedKey + ">[^/]+?)";
}
function getNamedParametrizedRoute(route, prefixRouteKeys) {
    const segments = (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split('/');
    const getSafeRouteKey = buildGetSafeRouteKey();
    const routeKeys = {};
    return {
        namedParameterizedRoute: segments.map((segment)=>{
            const hasInterceptionMarker = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.some((m)=>segment.startsWith(m));
            const paramMatches = segment.match(/\[((?:\[.*\])|.+)\]/) // Check for parameters
            ;
            if (hasInterceptionMarker && paramMatches) {
                const [usedMarker] = segment.split(paramMatches[0]);
                return getSafeKeyFromSegment({
                    getSafeRouteKey,
                    interceptionMarker: usedMarker,
                    segment: paramMatches[1],
                    routeKeys,
                    keyPrefix: prefixRouteKeys ? _constants.NEXT_INTERCEPTION_MARKER_PREFIX : undefined
                });
            } else if (paramMatches) {
                return getSafeKeyFromSegment({
                    getSafeRouteKey,
                    segment: paramMatches[1],
                    routeKeys,
                    keyPrefix: prefixRouteKeys ? _constants.NEXT_QUERY_PARAM_PREFIX : undefined
                });
            } else {
                return "/" + (0, _escaperegexp.escapeStringRegexp)(segment);
            }
        }).join(''),
        routeKeys
    };
}
function getNamedRouteRegex(normalizedRoute, prefixRouteKey) {
    const result = getNamedParametrizedRoute(normalizedRoute, prefixRouteKey);
    return {
        ...getRouteRegex(normalizedRoute),
        namedRegex: "^" + result.namedParameterizedRoute + "(?:/)?$",
        routeKeys: result.routeKeys
    };
}
function getNamedMiddlewareRegex(normalizedRoute, options) {
    const { parameterizedRoute } = getParametrizedRoute(normalizedRoute);
    const { catchAll = true } = options;
    if (parameterizedRoute === '/') {
        let catchAllRegex = catchAll ? '.*' : '';
        return {
            namedRegex: "^/" + catchAllRegex + "$"
        };
    }
    const { namedParameterizedRoute } = getNamedParametrizedRoute(normalizedRoute, false);
    let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : '';
    return {
        namedRegex: "^" + namedParameterizedRoute + catchAllGroupedRegex + "$"
    };
} //# sourceMappingURL=route-regex.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/format-url.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
// Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    formatUrl: null,
    formatWithValidation: null,
    urlObjectKeys: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    formatUrl: function() {
        return formatUrl;
    },
    formatWithValidation: function() {
        return formatWithValidation;
    },
    urlObjectKeys: function() {
        return urlObjectKeys;
    }
});
const _interop_require_wildcard = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _querystring = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)"));
const slashedProtocols = /https?|ftp|gopher|file/;
function formatUrl(urlObj) {
    let { auth, hostname } = urlObj;
    let protocol = urlObj.protocol || '';
    let pathname = urlObj.pathname || '';
    let hash = urlObj.hash || '';
    let query = urlObj.query || '';
    let host = false;
    auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';
    if (urlObj.host) {
        host = auth + urlObj.host;
    } else if (hostname) {
        host = auth + (~hostname.indexOf(':') ? "[" + hostname + "]" : hostname);
        if (urlObj.port) {
            host += ':' + urlObj.port;
        }
    }
    if (query && typeof query === 'object') {
        query = String(_querystring.urlQueryToSearchParams(query));
    }
    let search = urlObj.search || query && "?" + query || '';
    if (protocol && !protocol.endsWith(':')) protocol += ':';
    if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
        host = '//' + (host || '');
        if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
    } else if (!host) {
        host = '';
    }
    if (hash && hash[0] !== '#') hash = '#' + hash;
    if (search && search[0] !== '?') search = '?' + search;
    pathname = pathname.replace(/[?#]/g, encodeURIComponent);
    search = search.replace('#', '%23');
    return "" + protocol + host + pathname + search + hash;
}
const urlObjectKeys = [
    'auth',
    'hash',
    'host',
    'hostname',
    'href',
    'path',
    'pathname',
    'port',
    'protocol',
    'query',
    'search',
    'slashes'
];
function formatWithValidation(url) {
    if ("TURBOPACK compile-time truthy", 1) {
        if (url !== null && typeof url === 'object') {
            Object.keys(url).forEach((key)=>{
                if (!urlObjectKeys.includes(key)) {
                    console.warn("Unknown key passed via urlObject into url.format: " + key);
                }
            });
        }
    }
    return formatUrl(url);
} //# sourceMappingURL=format-url.js.map
}}),
"[project]/node_modules/next/dist/client/detect-domain-locale.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "detectDomainLocale", {
    enumerable: true,
    get: function() {
        return detectDomainLocale;
    }
});
const detectDomainLocale = function() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
        args[_key] = arguments[_key];
    }
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
};
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=detect-domain-locale.js.map
}}),
"[project]/node_modules/next/dist/client/add-locale.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "addLocale", {
    enumerable: true,
    get: function() {
        return addLocale;
    }
});
const _normalizetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/client/normalize-trailing-slash.js [app-client] (ecmascript)");
const addLocale = function(path) {
    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        args[_key - 1] = arguments[_key];
    }
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    return path;
};
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=add-locale.js.map
}}),
"[project]/node_modules/next/dist/client/remove-locale.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "removeLocale", {
    enumerable: true,
    get: function() {
        return removeLocale;
    }
});
const _parsepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-path.js [app-client] (ecmascript)");
function removeLocale(path, locale) {
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    return path;
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=remove-locale.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/omit.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "omit", {
    enumerable: true,
    get: function() {
        return omit;
    }
});
function omit(object, keys) {
    const omitted = {};
    Object.keys(object).forEach((key)=>{
        if (!keys.includes(key)) {
            omitted[key] = object[key];
        }
    });
    return omitted;
} //# sourceMappingURL=omit.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/is-local-url.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isLocalURL", {
    enumerable: true,
    get: function() {
        return isLocalURL;
    }
});
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _hasbasepath = __turbopack_require__("[project]/node_modules/next/dist/client/has-base-path.js [app-client] (ecmascript)");
function isLocalURL(url) {
    // prevent a hydration mismatch on href for url with anchor refs
    if (!(0, _utils.isAbsoluteUrl)(url)) return true;
    try {
        // absolute urls can be local if they are on the same origin
        const locationOrigin = (0, _utils.getLocationOrigin)();
        const resolved = new URL(url, locationOrigin);
        return resolved.origin === locationOrigin && (0, _hasbasepath.hasBasePath)(resolved.pathname);
    } catch (_) {
        return false;
    }
} //# sourceMappingURL=is-local-url.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/interpolate-as.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "interpolateAs", {
    enumerable: true,
    get: function() {
        return interpolateAs;
    }
});
const _routematcher = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/route-matcher.js [app-client] (ecmascript)");
const _routeregex = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/route-regex.js [app-client] (ecmascript)");
function interpolateAs(route, asPathname, query) {
    let interpolatedRoute = '';
    const dynamicRegex = (0, _routeregex.getRouteRegex)(route);
    const dynamicGroups = dynamicRegex.groups;
    const dynamicMatches = (asPathname !== route ? (0, _routematcher.getRouteMatcher)(dynamicRegex)(asPathname) : '') || // Fall back to reading the values from the href
    // TODO: should this take priority; also need to change in the router.
    query;
    interpolatedRoute = route;
    const params = Object.keys(dynamicGroups);
    if (!params.every((param)=>{
        let value = dynamicMatches[param] || '';
        const { repeat, optional } = dynamicGroups[param];
        // support single-level catch-all
        // TODO: more robust handling for user-error (passing `/`)
        let replaced = "[" + (repeat ? '...' : '') + param + "]";
        if (optional) {
            replaced = (!value ? '/' : '') + "[" + replaced + "]";
        }
        if (repeat && !Array.isArray(value)) value = [
            value
        ];
        return (optional || param in dynamicMatches) && // Interpolate group into data URL if present
        (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted
        // into the URL and we expect URL encoded segments
        // when parsing dynamic route params
        (segment)=>encodeURIComponent(segment)).join('/') : encodeURIComponent(value)) || '/');
    })) {
        interpolatedRoute = '' // did not satisfy all requirements
        ;
    // n.b. We ignore this error because we handle warning for this case in
    // development in the `<Link>` component directly.
    }
    return {
        params,
        result: interpolatedRoute
    };
} //# sourceMappingURL=interpolate-as.js.map
}}),
"[project]/node_modules/next/dist/client/resolve-href.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "resolveHref", {
    enumerable: true,
    get: function() {
        return resolveHref;
    }
});
const _querystring = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)");
const _formaturl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/format-url.js [app-client] (ecmascript)");
const _omit = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/omit.js [app-client] (ecmascript)");
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _normalizetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/client/normalize-trailing-slash.js [app-client] (ecmascript)");
const _islocalurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/is-local-url.js [app-client] (ecmascript)");
const _utils1 = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/index.js [app-client] (ecmascript)");
const _interpolateas = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/interpolate-as.js [app-client] (ecmascript)");
function resolveHref(router, href, resolveAs) {
    // we use a dummy base url for relative urls
    let base;
    let urlAsString = typeof href === 'string' ? href : (0, _formaturl.formatWithValidation)(href);
    // repeated slashes and backslashes in the URL are considered
    // invalid and will never match a Next.js page/file
    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\/\//);
    const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;
    const urlParts = urlAsStringNoProto.split('?', 1);
    if ((urlParts[0] || '').match(/(\/\/|\\)/)) {
        console.error("Invalid href '" + urlAsString + "' passed to next/router in page: '" + router.pathname + "'. Repeated forward-slashes (//) or backslashes \\ are not valid in the href.");
        const normalizedUrl = (0, _utils.normalizeRepeatedSlashes)(urlAsStringNoProto);
        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl;
    }
    // Return because it cannot be routed by the Next.js router
    if (!(0, _islocalurl.isLocalURL)(urlAsString)) {
        return resolveAs ? [
            urlAsString
        ] : urlAsString;
    }
    try {
        base = new URL(urlAsString.startsWith('#') ? router.asPath : router.pathname, 'http://n');
    } catch (_) {
        // fallback to / for invalid asPath values e.g. //
        base = new URL('/', 'http://n');
    }
    try {
        const finalUrl = new URL(urlAsString, base);
        finalUrl.pathname = (0, _normalizetrailingslash.normalizePathTrailingSlash)(finalUrl.pathname);
        let interpolatedAs = '';
        if ((0, _utils1.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {
            const query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);
            const { result, params } = (0, _interpolateas.interpolateAs)(finalUrl.pathname, finalUrl.pathname, query);
            if (result) {
                interpolatedAs = (0, _formaturl.formatWithValidation)({
                    pathname: result,
                    hash: finalUrl.hash,
                    query: (0, _omit.omit)(query, params)
                });
            }
        }
        // if the origin didn't change, it means we received a relative href
        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;
        return resolveAs ? [
            resolvedHref,
            interpolatedAs || resolvedHref
        ] : resolvedHref;
    } catch (_) {
        return resolveAs ? [
            urlAsString
        ] : urlAsString;
    }
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=resolve-href.js.map
}}),
"[project]/node_modules/next/dist/lib/is-api-route.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isAPIRoute", {
    enumerable: true,
    get: function() {
        return isAPIRoute;
    }
});
function isAPIRoute(value) {
    return value === '/api' || Boolean(value == null ? void 0 : value.startsWith('/api/'));
} //# sourceMappingURL=is-api-route.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "removePathPrefix", {
    enumerable: true,
    get: function() {
        return removePathPrefix;
    }
});
const _pathhasprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js [app-client] (ecmascript)");
function removePathPrefix(path, prefix) {
    // If the path doesn't start with the prefix we can return it as is. This
    // protects us from situations where the prefix is a substring of the path
    // prefix such as:
    //
    // For prefix: /blog
    //
    //   /blog -> true
    //   /blog/ -> true
    //   /blog/1 -> true
    //   /blogging -> false
    //   /blogging/ -> false
    //   /blogging/1 -> false
    if (!(0, _pathhasprefix.pathHasPrefix)(path, prefix)) {
        return path;
    }
    // Remove the prefix from the path via slicing.
    const withoutPrefix = path.slice(prefix.length);
    // If the path without the prefix starts with a `/` we can return it as is.
    if (withoutPrefix.startsWith('/')) {
        return withoutPrefix;
    }
    // If the path without the prefix doesn't start with a `/` we need to add it
    // back to the path to make sure it's a valid path.
    return "/" + withoutPrefix;
} //# sourceMappingURL=remove-path-prefix.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getNextPathnameInfo", {
    enumerable: true,
    get: function() {
        return getNextPathnameInfo;
    }
});
const _normalizelocalepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js [app-client] (ecmascript)");
const _removepathprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js [app-client] (ecmascript)");
const _pathhasprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js [app-client] (ecmascript)");
function getNextPathnameInfo(pathname, options) {
    var _options_nextConfig;
    const { basePath, i18n, trailingSlash } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};
    const info = {
        pathname,
        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash
    };
    if (basePath && (0, _pathhasprefix.pathHasPrefix)(info.pathname, basePath)) {
        info.pathname = (0, _removepathprefix.removePathPrefix)(info.pathname, basePath);
        info.basePath = basePath;
    }
    let pathnameNoDataPrefix = info.pathname;
    if (info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {
        const paths = info.pathname.replace(/^\/_next\/data\//, '').replace(/\.json$/, '').split('/');
        const buildId = paths[0];
        info.buildId = buildId;
        pathnameNoDataPrefix = paths[1] !== 'index' ? "/" + paths.slice(1).join('/') : '/';
        // update pathname with normalized if enabled although
        // we use normalized to populate locale info still
        if (options.parseData === true) {
            info.pathname = pathnameNoDataPrefix;
        }
    }
    // If provided, use the locale route normalizer to detect the locale instead
    // of the function below.
    if (i18n) {
        let result = options.i18nProvider ? options.i18nProvider.analyze(info.pathname) : (0, _normalizelocalepath.normalizeLocalePath)(info.pathname, i18n.locales);
        info.locale = result.detectedLocale;
        var _result_pathname;
        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;
        if (!result.detectedLocale && info.buildId) {
            result = options.i18nProvider ? options.i18nProvider.analyze(pathnameNoDataPrefix) : (0, _normalizelocalepath.normalizeLocalePath)(pathnameNoDataPrefix, i18n.locales);
            if (result.detectedLocale) {
                info.locale = result.detectedLocale;
            }
        }
    }
    return info;
} //# sourceMappingURL=get-next-pathname-info.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "addPathSuffix", {
    enumerable: true,
    get: function() {
        return addPathSuffix;
    }
});
const _parsepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-path.js [app-client] (ecmascript)");
function addPathSuffix(path, suffix) {
    if (!path.startsWith('/') || !suffix) {
        return path;
    }
    const { pathname, query, hash } = (0, _parsepath.parsePath)(path);
    return "" + pathname + suffix + query + hash;
} //# sourceMappingURL=add-path-suffix.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/add-locale.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "addLocale", {
    enumerable: true,
    get: function() {
        return addLocale;
    }
});
const _addpathprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js [app-client] (ecmascript)");
const _pathhasprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js [app-client] (ecmascript)");
function addLocale(path, locale, defaultLocale, ignorePrefix) {
    // If no locale was given or the locale is the default locale, we don't need
    // to prefix the path.
    if (!locale || locale === defaultLocale) return path;
    const lower = path.toLowerCase();
    // If the path is an API path or the path already has the locale prefix, we
    // don't need to prefix the path.
    if (!ignorePrefix) {
        if ((0, _pathhasprefix.pathHasPrefix)(lower, '/api')) return path;
        if ((0, _pathhasprefix.pathHasPrefix)(lower, "/" + locale.toLowerCase())) return path;
    }
    // Add the locale prefix to the path.
    return (0, _addpathprefix.addPathPrefix)(path, "/" + locale);
} //# sourceMappingURL=add-locale.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "formatNextPathnameInfo", {
    enumerable: true,
    get: function() {
        return formatNextPathnameInfo;
    }
});
const _removetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js [app-client] (ecmascript)");
const _addpathprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js [app-client] (ecmascript)");
const _addpathsuffix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js [app-client] (ecmascript)");
const _addlocale = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/add-locale.js [app-client] (ecmascript)");
function formatNextPathnameInfo(info) {
    let pathname = (0, _addlocale.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);
    if (info.buildId || !info.trailingSlash) {
        pathname = (0, _removetrailingslash.removeTrailingSlash)(pathname);
    }
    if (info.buildId) {
        pathname = (0, _addpathsuffix.addPathSuffix)((0, _addpathprefix.addPathPrefix)(pathname, "/_next/data/" + info.buildId), info.pathname === '/' ? 'index.json' : '.json');
    }
    pathname = (0, _addpathprefix.addPathPrefix)(pathname, info.basePath);
    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? (0, _addpathsuffix.addPathSuffix)(pathname, '/') : pathname : (0, _removetrailingslash.removeTrailingSlash)(pathname);
} //# sourceMappingURL=format-next-pathname-info.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/compare-states.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "compareRouterStates", {
    enumerable: true,
    get: function() {
        return compareRouterStates;
    }
});
function compareRouterStates(a, b) {
    const stateKeys = Object.keys(a);
    if (stateKeys.length !== Object.keys(b).length) return false;
    for(let i = stateKeys.length; i--;){
        const key = stateKeys[i];
        if (key === 'query') {
            const queryKeys = Object.keys(a.query);
            if (queryKeys.length !== Object.keys(b.query).length) {
                return false;
            }
            for(let j = queryKeys.length; j--;){
                const queryKey = queryKeys[j];
                if (!b.query.hasOwnProperty(queryKey) || a.query[queryKey] !== b.query[queryKey]) {
                    return false;
                }
            }
        } else if (!b.hasOwnProperty(key) || a[key] !== b[key]) {
            return false;
        }
    }
    return true;
} //# sourceMappingURL=compare-states.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/handle-smooth-scroll.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * Run function with `scroll-behavior: auto` applied to `<html/>`.
 * This css change will be reverted after the function finishes.
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "handleSmoothScroll", {
    enumerable: true,
    get: function() {
        return handleSmoothScroll;
    }
});
function handleSmoothScroll(fn, options) {
    if (options === void 0) options = {};
    // if only the hash is changed, we don't need to disable smooth scrolling
    // we only care to prevent smooth scrolling when navigating to a new page to avoid jarring UX
    if (options.onlyHashChange) {
        fn();
        return;
    }
    const htmlElement = document.documentElement;
    const existing = htmlElement.style.scrollBehavior;
    htmlElement.style.scrollBehavior = 'auto';
    if (!options.dontForceLayout) {
        // In Chrome-based browsers we need to force reflow before calling `scrollTo`.
        // Otherwise it will not pickup the change in scrollBehavior
        // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042
        htmlElement.getClientRects();
    }
    fn();
    htmlElement.style.scrollBehavior = existing;
} //# sourceMappingURL=handle-smooth-scroll.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/router.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
// tslint:disable:no-console
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    createKey: null,
    default: null,
    matchesMiddleware: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createKey: function() {
        return createKey;
    },
    default: function() {
        return Router;
    },
    matchesMiddleware: function() {
        return matchesMiddleware;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _interop_require_wildcard = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _removetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js [app-client] (ecmascript)");
const _routeloader = __turbopack_require__("[project]/node_modules/next/dist/client/route-loader.js [app-client] (ecmascript)");
const _script = __turbopack_require__("[project]/node_modules/next/dist/client/script.js [app-client] (ecmascript)");
const _iserror = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_require__("[project]/node_modules/next/dist/lib/is-error.js [app-client] (ecmascript)"));
const _denormalizepagepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/page-path/denormalize-page-path.js [app-client] (ecmascript)");
const _normalizelocalepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js [app-client] (ecmascript)");
const _mitt = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/mitt.js [app-client] (ecmascript)"));
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _isdynamic = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/is-dynamic.js [app-client] (ecmascript)");
const _parserelativeurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js [app-client] (ecmascript)");
const _resolverewrites = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/resolve-rewrites.js [app-client] (ecmascript)"));
const _routematcher = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/route-matcher.js [app-client] (ecmascript)");
const _routeregex = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/route-regex.js [app-client] (ecmascript)");
const _formaturl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/format-url.js [app-client] (ecmascript)");
const _detectdomainlocale = __turbopack_require__("[project]/node_modules/next/dist/client/detect-domain-locale.js [app-client] (ecmascript)");
const _parsepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-path.js [app-client] (ecmascript)");
const _addlocale = __turbopack_require__("[project]/node_modules/next/dist/client/add-locale.js [app-client] (ecmascript)");
const _removelocale = __turbopack_require__("[project]/node_modules/next/dist/client/remove-locale.js [app-client] (ecmascript)");
const _removebasepath = __turbopack_require__("[project]/node_modules/next/dist/client/remove-base-path.js [app-client] (ecmascript)");
const _addbasepath = __turbopack_require__("[project]/node_modules/next/dist/client/add-base-path.js [app-client] (ecmascript)");
const _hasbasepath = __turbopack_require__("[project]/node_modules/next/dist/client/has-base-path.js [app-client] (ecmascript)");
const _resolvehref = __turbopack_require__("[project]/node_modules/next/dist/client/resolve-href.js [app-client] (ecmascript)");
const _isapiroute = __turbopack_require__("[project]/node_modules/next/dist/lib/is-api-route.js [app-client] (ecmascript)");
const _getnextpathnameinfo = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js [app-client] (ecmascript)");
const _formatnextpathnameinfo = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js [app-client] (ecmascript)");
const _comparestates = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/compare-states.js [app-client] (ecmascript)");
const _islocalurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/is-local-url.js [app-client] (ecmascript)");
const _isbot = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/is-bot.js [app-client] (ecmascript)");
const _omit = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/omit.js [app-client] (ecmascript)");
const _interpolateas = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/interpolate-as.js [app-client] (ecmascript)");
const _handlesmoothscroll = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/handle-smooth-scroll.js [app-client] (ecmascript)");
const _constants = __turbopack_require__("[project]/node_modules/next/dist/lib/constants.js [app-client] (ecmascript)");
function buildCancellationError() {
    return Object.assign(new Error('Route Cancelled'), {
        cancelled: true
    });
}
async function matchesMiddleware(options) {
    const matchers = await Promise.resolve(options.router.pageLoader.getMiddleware());
    if (!matchers) return false;
    const { pathname: asPathname } = (0, _parsepath.parsePath)(options.asPath);
    // remove basePath first since path prefix has to be in the order of `/${basePath}/${locale}`
    const cleanedAs = (0, _hasbasepath.hasBasePath)(asPathname) ? (0, _removebasepath.removeBasePath)(asPathname) : asPathname;
    const asWithBasePathAndLocale = (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(cleanedAs, options.locale));
    // Check only path match on client. Matching "has" should be done on server
    // where we can access more info such as headers, HttpOnly cookie, etc.
    return matchers.some((m)=>new RegExp(m.regexp).test(asWithBasePathAndLocale));
}
function stripOrigin(url) {
    const origin = (0, _utils.getLocationOrigin)();
    return url.startsWith(origin) ? url.substring(origin.length) : url;
}
function prepareUrlAs(router, url, as) {
    // If url and as provided as an object representation,
    // we'll format them into the string version here.
    let [resolvedHref, resolvedAs] = (0, _resolvehref.resolveHref)(router, url, true);
    const origin = (0, _utils.getLocationOrigin)();
    const hrefWasAbsolute = resolvedHref.startsWith(origin);
    const asWasAbsolute = resolvedAs && resolvedAs.startsWith(origin);
    resolvedHref = stripOrigin(resolvedHref);
    resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;
    const preparedUrl = hrefWasAbsolute ? resolvedHref : (0, _addbasepath.addBasePath)(resolvedHref);
    const preparedAs = as ? stripOrigin((0, _resolvehref.resolveHref)(router, as)) : resolvedAs || resolvedHref;
    return {
        url: preparedUrl,
        as: asWasAbsolute ? preparedAs : (0, _addbasepath.addBasePath)(preparedAs)
    };
}
function resolveDynamicRoute(pathname, pages) {
    const cleanPathname = (0, _removetrailingslash.removeTrailingSlash)((0, _denormalizepagepath.denormalizePagePath)(pathname));
    if (cleanPathname === '/404' || cleanPathname === '/_error') {
        return pathname;
    }
    // handle resolving href for dynamic routes
    if (!pages.includes(cleanPathname)) {
        // eslint-disable-next-line array-callback-return
        pages.some((page)=>{
            if ((0, _isdynamic.isDynamicRoute)(page) && (0, _routeregex.getRouteRegex)(page).re.test(cleanPathname)) {
                pathname = page;
                return true;
            }
        });
    }
    return (0, _removetrailingslash.removeTrailingSlash)(pathname);
}
function getMiddlewareData(source, response, options) {
    const nextConfig = {
        basePath: options.router.basePath,
        i18n: {
            locales: options.router.locales
        },
        trailingSlash: Boolean(("TURBOPACK compile-time value", false))
    };
    const rewriteHeader = response.headers.get('x-nextjs-rewrite');
    let rewriteTarget = rewriteHeader || response.headers.get('x-nextjs-matched-path');
    const matchedPath = response.headers.get(_constants.MATCHED_PATH_HEADER);
    if (matchedPath && !rewriteTarget && !matchedPath.includes('__next_data_catchall') && !matchedPath.includes('/_error') && !matchedPath.includes('/404')) {
        // leverage x-matched-path to detect next.config.js rewrites
        rewriteTarget = matchedPath;
    }
    if (rewriteTarget) {
        if (rewriteTarget.startsWith('/') || ("TURBOPACK compile-time value", false)) {
            const parsedRewriteTarget = (0, _parserelativeurl.parseRelativeUrl)(rewriteTarget);
            const pathnameInfo = (0, _getnextpathnameinfo.getNextPathnameInfo)(parsedRewriteTarget.pathname, {
                nextConfig,
                parseData: true
            });
            let fsPathname = (0, _removetrailingslash.removeTrailingSlash)(pathnameInfo.pathname);
            return Promise.all([
                options.router.pageLoader.getPageList(),
                (0, _routeloader.getClientBuildManifest)()
            ]).then((param)=>{
                let [pages, { __rewrites: rewrites }] = param;
                let as = (0, _addlocale.addLocale)(pathnameInfo.pathname, pathnameInfo.locale);
                if ((0, _isdynamic.isDynamicRoute)(as) || !rewriteHeader && pages.includes((0, _normalizelocalepath.normalizeLocalePath)((0, _removebasepath.removeBasePath)(as), options.router.locales).pathname)) {
                    const parsedSource = (0, _getnextpathnameinfo.getNextPathnameInfo)((0, _parserelativeurl.parseRelativeUrl)(source).pathname, {
                        nextConfig: ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : nextConfig,
                        parseData: true
                    });
                    as = (0, _addbasepath.addBasePath)(parsedSource.pathname);
                    parsedRewriteTarget.pathname = as;
                }
                if ("TURBOPACK compile-time falsy", 0) {
                    "TURBOPACK unreachable";
                } else if (!pages.includes(fsPathname)) {
                    const resolvedPathname = resolveDynamicRoute(fsPathname, pages);
                    if (resolvedPathname !== fsPathname) {
                        fsPathname = resolvedPathname;
                    }
                }
                const resolvedHref = !pages.includes(fsPathname) ? resolveDynamicRoute((0, _normalizelocalepath.normalizeLocalePath)((0, _removebasepath.removeBasePath)(parsedRewriteTarget.pathname), options.router.locales).pathname, pages) : fsPathname;
                if ((0, _isdynamic.isDynamicRoute)(resolvedHref)) {
                    const matches = (0, _routematcher.getRouteMatcher)((0, _routeregex.getRouteRegex)(resolvedHref))(as);
                    Object.assign(parsedRewriteTarget.query, matches || {});
                }
                return {
                    type: 'rewrite',
                    parsedAs: parsedRewriteTarget,
                    resolvedHref
                };
            });
        }
        const src = (0, _parsepath.parsePath)(source);
        const pathname = (0, _formatnextpathnameinfo.formatNextPathnameInfo)({
            ...(0, _getnextpathnameinfo.getNextPathnameInfo)(src.pathname, {
                nextConfig,
                parseData: true
            }),
            defaultLocale: options.router.defaultLocale,
            buildId: ''
        });
        return Promise.resolve({
            type: 'redirect-external',
            destination: "" + pathname + src.query + src.hash
        });
    }
    const redirectTarget = response.headers.get('x-nextjs-redirect');
    if (redirectTarget) {
        if (redirectTarget.startsWith('/')) {
            const src = (0, _parsepath.parsePath)(redirectTarget);
            const pathname = (0, _formatnextpathnameinfo.formatNextPathnameInfo)({
                ...(0, _getnextpathnameinfo.getNextPathnameInfo)(src.pathname, {
                    nextConfig,
                    parseData: true
                }),
                defaultLocale: options.router.defaultLocale,
                buildId: ''
            });
            return Promise.resolve({
                type: 'redirect-internal',
                newAs: "" + pathname + src.query + src.hash,
                newUrl: "" + pathname + src.query + src.hash
            });
        }
        return Promise.resolve({
            type: 'redirect-external',
            destination: redirectTarget
        });
    }
    return Promise.resolve({
        type: 'next'
    });
}
async function withMiddlewareEffects(options) {
    const matches = await matchesMiddleware(options);
    if (!matches || !options.fetchData) {
        return null;
    }
    const data = await options.fetchData();
    const effect = await getMiddlewareData(data.dataHref, data.response, options);
    return {
        dataHref: data.dataHref,
        json: data.json,
        response: data.response,
        text: data.text,
        cacheKey: data.cacheKey,
        effect
    };
}
const manualScrollRestoration = ("TURBOPACK compile-time value", false) && typeof window !== 'undefined' && 'scrollRestoration' in window.history && !!function() {
    try {
        let v = '__next';
        // eslint-disable-next-line no-sequences
        return sessionStorage.setItem(v, v), sessionStorage.removeItem(v), true;
    } catch (n) {}
}();
const SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');
function fetchRetry(url, attempts, options) {
    return fetch(url, {
        // Cookies are required to be present for Next.js' SSG "Preview Mode".
        // Cookies may also be required for `getServerSideProps`.
        //
        // > `fetch` won’t send cookies, unless you set the credentials init
        // > option.
        // https://developer.mozilla.org/docs/Web/API/Fetch_API/Using_Fetch
        //
        // > For maximum browser compatibility when it comes to sending &
        // > receiving cookies, always supply the `credentials: 'same-origin'`
        // > option instead of relying on the default.
        // https://github.com/github/fetch#caveats
        credentials: 'same-origin',
        method: options.method || 'GET',
        headers: Object.assign({}, options.headers, {
            'x-nextjs-data': '1'
        })
    }).then((response)=>{
        return !response.ok && attempts > 1 && response.status >= 500 ? fetchRetry(url, attempts - 1, options) : response;
    });
}
function tryToParseAsJSON(text) {
    try {
        return JSON.parse(text);
    } catch (error) {
        return null;
    }
}
function fetchNextData(param) {
    let { dataHref, inflightCache, isPrefetch, hasMiddleware, isServerRender, parseJSON, persistCache, isBackground, unstable_skipClientCache } = param;
    const { href: cacheKey } = new URL(dataHref, window.location.href);
    const getData = (params)=>{
        var _params_method;
        return fetchRetry(dataHref, isServerRender ? 3 : 1, {
            headers: Object.assign({}, isPrefetch ? {
                purpose: 'prefetch'
            } : {}, isPrefetch && hasMiddleware ? {
                'x-middleware-prefetch': '1'
            } : {}),
            method: (_params_method = params == null ? void 0 : params.method) != null ? _params_method : 'GET'
        }).then((response)=>{
            if (response.ok && (params == null ? void 0 : params.method) === 'HEAD') {
                return {
                    dataHref,
                    response,
                    text: '',
                    json: {},
                    cacheKey
                };
            }
            return response.text().then((text)=>{
                if (!response.ok) {
                    /**
             * When the data response is a redirect because of a middleware
             * we do not consider it an error. The headers must bring the
             * mapped location.
             * TODO: Change the status code in the handler.
             */ if (hasMiddleware && [
                        301,
                        302,
                        307,
                        308
                    ].includes(response.status)) {
                        return {
                            dataHref,
                            response,
                            text,
                            json: {},
                            cacheKey
                        };
                    }
                    if (response.status === 404) {
                        var _tryToParseAsJSON;
                        if ((_tryToParseAsJSON = tryToParseAsJSON(text)) == null ? void 0 : _tryToParseAsJSON.notFound) {
                            return {
                                dataHref,
                                json: {
                                    notFound: SSG_DATA_NOT_FOUND
                                },
                                response,
                                text,
                                cacheKey
                            };
                        }
                    }
                    const error = new Error("Failed to load static props");
                    /**
             * We should only trigger a server-side transition if this was
             * caused on a client-side transition. Otherwise, we'd get into
             * an infinite loop.
             */ if (!isServerRender) {
                        (0, _routeloader.markAssetError)(error);
                    }
                    throw error;
                }
                return {
                    dataHref,
                    json: parseJSON ? tryToParseAsJSON(text) : null,
                    response,
                    text,
                    cacheKey
                };
            });
        }).then((data)=>{
            if ("TURBOPACK compile-time truthy", 1) {
                delete inflightCache[cacheKey];
            }
            return data;
        }).catch((err)=>{
            if (!unstable_skipClientCache) {
                delete inflightCache[cacheKey];
            }
            if (err.message === 'Failed to fetch' || // firefox
            err.message === 'NetworkError when attempting to fetch resource.' || // safari
            err.message === 'Load failed') {
                (0, _routeloader.markAssetError)(err);
            }
            throw err;
        });
    };
    // when skipping client cache we wait to update
    // inflight cache until successful data response
    // this allows racing click event with fetching newer data
    // without blocking navigation when stale data is available
    if (unstable_skipClientCache && persistCache) {
        return getData({}).then((data)=>{
            if (data.response.headers.get('x-middleware-cache') !== 'no-cache') {
                // only update cache if not marked as no-cache
                inflightCache[cacheKey] = Promise.resolve(data);
            }
            return data;
        });
    }
    if (inflightCache[cacheKey] !== undefined) {
        return inflightCache[cacheKey];
    }
    return inflightCache[cacheKey] = getData(isBackground ? {
        method: 'HEAD'
    } : {});
}
function createKey() {
    return Math.random().toString(36).slice(2, 10);
}
function handleHardNavigation(param) {
    let { url, router } = param;
    // ensure we don't trigger a hard navigation to the same
    // URL as this can end up with an infinite refresh
    if (url === (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(router.asPath, router.locale))) {
        throw new Error("Invariant: attempted to hard navigate to the same URL " + url + " " + location.href);
    }
    window.location.href = url;
}
const getCancelledHandler = (param)=>{
    let { route, router } = param;
    let cancelled = false;
    const cancel = router.clc = ()=>{
        cancelled = true;
    };
    const handleCancelled = ()=>{
        if (cancelled) {
            const error = new Error('Abort fetching component for route: "' + route + '"');
            error.cancelled = true;
            throw error;
        }
        if (cancel === router.clc) {
            router.clc = null;
        }
    };
    return handleCancelled;
};
class Router {
    reload() {
        window.location.reload();
    }
    /**
   * Go back in history
   */ back() {
        window.history.back();
    }
    /**
   * Go forward in history
   */ forward() {
        window.history.forward();
    }
    /**
   * Performs a `pushState` with arguments
   * @param url of the route
   * @param as masks `url` for the browser
   * @param options object you can define `shallow` and other options
   */ push(url, as, options) {
        if (options === void 0) options = {};
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
        ({ url, as } = prepareUrlAs(this, url, as));
        return this.change('pushState', url, as, options);
    }
    /**
   * Performs a `replaceState` with arguments
   * @param url of the route
   * @param as masks `url` for the browser
   * @param options object you can define `shallow` and other options
   */ replace(url, as, options) {
        if (options === void 0) options = {};
        ({ url, as } = prepareUrlAs(this, url, as));
        return this.change('replaceState', url, as, options);
    }
    async _bfl(as, resolvedAs, locale, skipNavigate) {
        if ("TURBOPACK compile-time truthy", 1) {
            if (!this._bfl_s && !this._bfl_d) {
                const { BloomFilter } = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/bloom-filter.js [app-client] (ecmascript)");
                let staticFilterData;
                let dynamicFilterData;
                try {
                    ({ __routerFilterStatic: staticFilterData, __routerFilterDynamic: dynamicFilterData } = await (0, _routeloader.getClientBuildManifest)());
                } catch (err) {
                    // failed to load build manifest hard navigate
                    // to be safe
                    console.error(err);
                    if (skipNavigate) {
                        return true;
                    }
                    handleHardNavigation({
                        url: (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, locale || this.locale, this.defaultLocale)),
                        router: this
                    });
                    return new Promise(()=>{});
                }
                const routerFilterSValue = ("TURBOPACK compile-time value", JSON.parse('{"numItems":6,"errorRate":0.0001,"numBits":116,"numHashes":14,"bitArray":[1,0,1,0,1,0,1,0,0,1,1,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,0,1,1,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,1,1,0,0,0,1,0,0,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,0,1,1,1]}'));
                if (!staticFilterData && routerFilterSValue) {
                    staticFilterData = routerFilterSValue ? routerFilterSValue : undefined;
                }
                const routerFilterDValue = ("TURBOPACK compile-time value", JSON.parse('{"numItems":1,"errorRate":0.0001,"numBits":20,"numHashes":14,"bitArray":[0,0,0,0,1,1,1,1,1,0,1,0,0,1,0,1,1,1,0,0]}'));
                if (!dynamicFilterData && routerFilterDValue) {
                    dynamicFilterData = routerFilterDValue ? routerFilterDValue : undefined;
                }
                if (staticFilterData == null ? void 0 : staticFilterData.numHashes) {
                    this._bfl_s = new BloomFilter(staticFilterData.numItems, staticFilterData.errorRate);
                    this._bfl_s.import(staticFilterData);
                }
                if (dynamicFilterData == null ? void 0 : dynamicFilterData.numHashes) {
                    this._bfl_d = new BloomFilter(dynamicFilterData.numItems, dynamicFilterData.errorRate);
                    this._bfl_d.import(dynamicFilterData);
                }
            }
            let matchesBflStatic = false;
            let matchesBflDynamic = false;
            const pathsToCheck = [
                {
                    as
                },
                {
                    as: resolvedAs
                }
            ];
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            }
            for (const { as: curAs, allowMatchCurrent } of pathsToCheck){
                if (curAs) {
                    const asNoSlash = (0, _removetrailingslash.removeTrailingSlash)(new URL(curAs, 'http://n').pathname);
                    const asNoSlashLocale = (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(asNoSlash, locale || this.locale));
                    if (allowMatchCurrent || asNoSlash !== (0, _removetrailingslash.removeTrailingSlash)(new URL(this.asPath, 'http://n').pathname)) {
                        var _this__bfl_s, _this__bfl_s1;
                        matchesBflStatic = matchesBflStatic || !!((_this__bfl_s = this._bfl_s) == null ? void 0 : _this__bfl_s.contains(asNoSlash)) || !!((_this__bfl_s1 = this._bfl_s) == null ? void 0 : _this__bfl_s1.contains(asNoSlashLocale));
                        for (const normalizedAS of [
                            asNoSlash,
                            asNoSlashLocale
                        ]){
                            // if any sub-path of as matches a dynamic filter path
                            // it should be hard navigated
                            const curAsParts = normalizedAS.split('/');
                            for(let i = 0; !matchesBflDynamic && i < curAsParts.length + 1; i++){
                                var _this__bfl_d;
                                const currentPart = curAsParts.slice(0, i).join('/');
                                if (currentPart && ((_this__bfl_d = this._bfl_d) == null ? void 0 : _this__bfl_d.contains(currentPart))) {
                                    matchesBflDynamic = true;
                                    break;
                                }
                            }
                        }
                        // if the client router filter is matched then we trigger
                        // a hard navigation
                        if (matchesBflStatic || matchesBflDynamic) {
                            if (skipNavigate) {
                                return true;
                            }
                            handleHardNavigation({
                                url: (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, locale || this.locale, this.defaultLocale)),
                                router: this
                            });
                            return new Promise(()=>{});
                        }
                    }
                }
            }
        }
        return false;
    }
    async change(method, url, as, options, forcedScroll) {
        var _this_components_pathname;
        if (!(0, _islocalurl.isLocalURL)(url)) {
            handleHardNavigation({
                url,
                router: this
            });
            return false;
        }
        // WARNING: `_h` is an internal option for handing Next.js client-side
        // hydration. Your app should _never_ use this property. It may change at
        // any time without notice.
        const isQueryUpdating = options._h === 1;
        if (!isQueryUpdating && !options.shallow) {
            await this._bfl(as, undefined, options.locale);
        }
        let shouldResolveHref = isQueryUpdating || options._shouldResolveHref || (0, _parsepath.parsePath)(url).pathname === (0, _parsepath.parsePath)(as).pathname;
        const nextState = {
            ...this.state
        };
        // for static pages with query params in the URL we delay
        // marking the router ready until after the query is updated
        // or a navigation has occurred
        const readyStateChange = this.isReady !== true;
        this.isReady = true;
        const isSsr = this.isSsr;
        if (!isQueryUpdating) {
            this.isSsr = false;
        }
        // if a route transition is already in progress before
        // the query updating is triggered ignore query updating
        if (isQueryUpdating && this.clc) {
            return false;
        }
        const prevLocale = nextState.locale;
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
            var _this_locales;
        }
        // marking route changes as a navigation start entry
        if (_utils.ST) {
            performance.mark('routeChange');
        }
        const { shallow = false, scroll = true } = options;
        const routeProps = {
            shallow
        };
        if (this._inFlightRoute && this.clc) {
            if (!isSsr) {
                Router.events.emit('routeChangeError', buildCancellationError(), this._inFlightRoute, routeProps);
            }
            this.clc();
            this.clc = null;
        }
        as = (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)((0, _hasbasepath.hasBasePath)(as) ? (0, _removebasepath.removeBasePath)(as) : as, options.locale, this.defaultLocale));
        const cleanedAs = (0, _removelocale.removeLocale)((0, _hasbasepath.hasBasePath)(as) ? (0, _removebasepath.removeBasePath)(as) : as, nextState.locale);
        this._inFlightRoute = as;
        const localeChange = prevLocale !== nextState.locale;
        // If the url change is only related to a hash change
        // We should not proceed. We should only change the state.
        if (!isQueryUpdating && this.onlyAHashChange(cleanedAs) && !localeChange) {
            nextState.asPath = cleanedAs;
            Router.events.emit('hashChangeStart', as, routeProps);
            // TODO: do we need the resolved href when only a hash change?
            this.changeState(method, url, as, {
                ...options,
                scroll: false
            });
            if (scroll) {
                this.scrollToHash(cleanedAs);
            }
            try {
                await this.set(nextState, this.components[nextState.route], null);
            } catch (err) {
                if ((0, _iserror.default)(err) && err.cancelled) {
                    Router.events.emit('routeChangeError', err, cleanedAs, routeProps);
                }
                throw err;
            }
            Router.events.emit('hashChangeComplete', as, routeProps);
            return true;
        }
        let parsed = (0, _parserelativeurl.parseRelativeUrl)(url);
        let { pathname, query } = parsed;
        // The build manifest needs to be loaded before auto-static dynamic pages
        // get their query parameters to allow ensuring they can be parsed properly
        // when rewritten to
        let pages, rewrites;
        try {
            [pages, { __rewrites: rewrites }] = await Promise.all([
                this.pageLoader.getPageList(),
                (0, _routeloader.getClientBuildManifest)(),
                this.pageLoader.getMiddleware()
            ]);
        } catch (err) {
            // If we fail to resolve the page list or client-build manifest, we must
            // do a server-side transition:
            handleHardNavigation({
                url: as,
                router: this
            });
            return false;
        }
        // If asked to change the current URL we should reload the current page
        // (not location.reload() but reload getInitialProps and other Next.js stuffs)
        // We also need to set the method = replaceState always
        // as this should not go into the history (That's how browsers work)
        // We should compare the new asPath to the current asPath, not the url
        if (!this.urlIsNew(cleanedAs) && !localeChange) {
            method = 'replaceState';
        }
        // we need to resolve the as value using rewrites for dynamic SSG
        // pages to allow building the data URL correctly
        let resolvedAs = as;
        // url and as should always be prefixed with basePath by this
        // point by either next/link or router.push/replace so strip the
        // basePath from the pathname to match the pages dir 1-to-1
        pathname = pathname ? (0, _removetrailingslash.removeTrailingSlash)((0, _removebasepath.removeBasePath)(pathname)) : pathname;
        let route = (0, _removetrailingslash.removeTrailingSlash)(pathname);
        const parsedAsPathname = as.startsWith('/') && (0, _parserelativeurl.parseRelativeUrl)(as).pathname;
        // if we detected the path as app route during prefetching
        // trigger hard navigation
        if ((_this_components_pathname = this.components[pathname]) == null ? void 0 : _this_components_pathname.__appRouter) {
            handleHardNavigation({
                url: as,
                router: this
            });
            return new Promise(()=>{});
        }
        const isMiddlewareRewrite = !!(parsedAsPathname && route !== parsedAsPathname && (!(0, _isdynamic.isDynamicRoute)(route) || !(0, _routematcher.getRouteMatcher)((0, _routeregex.getRouteRegex)(route))(parsedAsPathname)));
        // we don't attempt resolve asPath when we need to execute
        // middleware as the resolving will occur server-side
        const isMiddlewareMatch = !options.shallow && await matchesMiddleware({
            asPath: as,
            locale: nextState.locale,
            router: this
        });
        if (isQueryUpdating && isMiddlewareMatch) {
            shouldResolveHref = false;
        }
        if (shouldResolveHref && pathname !== '/_error') {
            options._shouldResolveHref = true;
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            } else {
                parsed.pathname = resolveDynamicRoute(pathname, pages);
                if (parsed.pathname !== pathname) {
                    pathname = parsed.pathname;
                    parsed.pathname = (0, _addbasepath.addBasePath)(pathname);
                    if (!isMiddlewareMatch) {
                        url = (0, _formaturl.formatWithValidation)(parsed);
                    }
                }
            }
        }
        if (!(0, _islocalurl.isLocalURL)(as)) {
            if ("TURBOPACK compile-time truthy", 1) {
                throw new Error('Invalid href: "' + url + '" and as: "' + as + '", received relative href and external as' + "\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as");
            }
            handleHardNavigation({
                url: as,
                router: this
            });
            return false;
        }
        resolvedAs = (0, _removelocale.removeLocale)((0, _removebasepath.removeBasePath)(resolvedAs), nextState.locale);
        route = (0, _removetrailingslash.removeTrailingSlash)(pathname);
        let routeMatch = false;
        if ((0, _isdynamic.isDynamicRoute)(route)) {
            const parsedAs = (0, _parserelativeurl.parseRelativeUrl)(resolvedAs);
            const asPathname = parsedAs.pathname;
            const routeRegex = (0, _routeregex.getRouteRegex)(route);
            routeMatch = (0, _routematcher.getRouteMatcher)(routeRegex)(asPathname);
            const shouldInterpolate = route === asPathname;
            const interpolatedAs = shouldInterpolate ? (0, _interpolateas.interpolateAs)(route, asPathname, query) : {};
            if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {
                const missingParams = Object.keys(routeRegex.groups).filter((param)=>!query[param] && !routeRegex.groups[param].optional);
                if (missingParams.length > 0 && !isMiddlewareMatch) {
                    if ("TURBOPACK compile-time truthy", 1) {
                        console.warn("" + (shouldInterpolate ? "Interpolating href" : "Mismatching `as` and `href`") + " failed to manually provide " + ("the params: " + missingParams.join(', ') + " in the `href`'s `query`"));
                    }
                    throw new Error((shouldInterpolate ? "The provided `href` (" + url + ") value is missing query values (" + missingParams.join(', ') + ") to be interpolated properly. " : "The provided `as` value (" + asPathname + ") is incompatible with the `href` value (" + route + "). ") + ("Read more: https://nextjs.org/docs/messages/" + (shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as')));
                }
            } else if (shouldInterpolate) {
                as = (0, _formaturl.formatWithValidation)(Object.assign({}, parsedAs, {
                    pathname: interpolatedAs.result,
                    query: (0, _omit.omit)(query, interpolatedAs.params)
                }));
            } else {
                // Merge params into `query`, overwriting any specified in search
                Object.assign(query, routeMatch);
            }
        }
        if (!isQueryUpdating) {
            Router.events.emit('routeChangeStart', as, routeProps);
        }
        const isErrorRoute = this.pathname === '/404' || this.pathname === '/_error';
        try {
            var _self___NEXT_DATA___props_pageProps, _self___NEXT_DATA___props, _routeInfo_props;
            let routeInfo = await this.getRouteInfo({
                route,
                pathname,
                query,
                as,
                resolvedAs,
                routeProps,
                locale: nextState.locale,
                isPreview: nextState.isPreview,
                hasMiddleware: isMiddlewareMatch,
                unstable_skipClientCache: options.unstable_skipClientCache,
                isQueryUpdating: isQueryUpdating && !this.isFallback,
                isMiddlewareRewrite
            });
            if (!isQueryUpdating && !options.shallow) {
                await this._bfl(as, 'resolvedAs' in routeInfo ? routeInfo.resolvedAs : undefined, nextState.locale);
            }
            if ('route' in routeInfo && isMiddlewareMatch) {
                pathname = routeInfo.route || route;
                route = pathname;
                if (!routeProps.shallow) {
                    query = Object.assign({}, routeInfo.query || {}, query);
                }
                const cleanedParsedPathname = (0, _hasbasepath.hasBasePath)(parsed.pathname) ? (0, _removebasepath.removeBasePath)(parsed.pathname) : parsed.pathname;
                if (routeMatch && pathname !== cleanedParsedPathname) {
                    Object.keys(routeMatch).forEach((key)=>{
                        if (routeMatch && query[key] === routeMatch[key]) {
                            delete query[key];
                        }
                    });
                }
                if ((0, _isdynamic.isDynamicRoute)(pathname)) {
                    const prefixedAs = !routeProps.shallow && routeInfo.resolvedAs ? routeInfo.resolvedAs : (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(new URL(as, location.href).pathname, nextState.locale), true);
                    let rewriteAs = prefixedAs;
                    if ((0, _hasbasepath.hasBasePath)(rewriteAs)) {
                        rewriteAs = (0, _removebasepath.removeBasePath)(rewriteAs);
                    }
                    if ("TURBOPACK compile-time falsy", 0) {
                        "TURBOPACK unreachable";
                    }
                    const routeRegex = (0, _routeregex.getRouteRegex)(pathname);
                    const curRouteMatch = (0, _routematcher.getRouteMatcher)(routeRegex)(new URL(rewriteAs, location.href).pathname);
                    if (curRouteMatch) {
                        Object.assign(query, curRouteMatch);
                    }
                }
            }
            // If the routeInfo brings a redirect we simply apply it.
            if ('type' in routeInfo) {
                if (routeInfo.type === 'redirect-internal') {
                    return this.change(method, routeInfo.newUrl, routeInfo.newAs, options);
                } else {
                    handleHardNavigation({
                        url: routeInfo.destination,
                        router: this
                    });
                    return new Promise(()=>{});
                }
            }
            const component = routeInfo.Component;
            if (component && component.unstable_scriptLoader) {
                const scripts = [].concat(component.unstable_scriptLoader());
                scripts.forEach((script)=>{
                    (0, _script.handleClientScriptLoad)(script.props);
                });
            }
            // handle redirect on client-transition
            if ((routeInfo.__N_SSG || routeInfo.__N_SSP) && routeInfo.props) {
                if (routeInfo.props.pageProps && routeInfo.props.pageProps.__N_REDIRECT) {
                    // Use the destination from redirect without adding locale
                    options.locale = false;
                    const destination = routeInfo.props.pageProps.__N_REDIRECT;
                    // check if destination is internal (resolves to a page) and attempt
                    // client-navigation if it is falling back to hard navigation if
                    // it's not
                    if (destination.startsWith('/') && routeInfo.props.pageProps.__N_REDIRECT_BASE_PATH !== false) {
                        const parsedHref = (0, _parserelativeurl.parseRelativeUrl)(destination);
                        parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);
                        const { url: newUrl, as: newAs } = prepareUrlAs(this, destination, destination);
                        return this.change(method, newUrl, newAs, options);
                    }
                    handleHardNavigation({
                        url: destination,
                        router: this
                    });
                    return new Promise(()=>{});
                }
                nextState.isPreview = !!routeInfo.props.__N_PREVIEW;
                // handle SSG data 404
                if (routeInfo.props.notFound === SSG_DATA_NOT_FOUND) {
                    let notFoundRoute;
                    try {
                        await this.fetchComponent('/404');
                        notFoundRoute = '/404';
                    } catch (_) {
                        notFoundRoute = '/_error';
                    }
                    routeInfo = await this.getRouteInfo({
                        route: notFoundRoute,
                        pathname: notFoundRoute,
                        query,
                        as,
                        resolvedAs,
                        routeProps: {
                            shallow: false
                        },
                        locale: nextState.locale,
                        isPreview: nextState.isPreview,
                        isNotFound: true
                    });
                    if ('type' in routeInfo) {
                        throw new Error("Unexpected middleware effect on /404");
                    }
                }
            }
            if (isQueryUpdating && this.pathname === '/_error' && ((_self___NEXT_DATA___props = self.__NEXT_DATA__.props) == null ? void 0 : (_self___NEXT_DATA___props_pageProps = _self___NEXT_DATA___props.pageProps) == null ? void 0 : _self___NEXT_DATA___props_pageProps.statusCode) === 500 && ((_routeInfo_props = routeInfo.props) == null ? void 0 : _routeInfo_props.pageProps)) {
                // ensure statusCode is still correct for static 500 page
                // when updating query information
                routeInfo.props.pageProps.statusCode = 500;
            }
            var _routeInfo_route;
            // shallow routing is only allowed for same page URL changes.
            const isValidShallowRoute = options.shallow && nextState.route === ((_routeInfo_route = routeInfo.route) != null ? _routeInfo_route : route);
            var _options_scroll;
            const shouldScroll = (_options_scroll = options.scroll) != null ? _options_scroll : !isQueryUpdating && !isValidShallowRoute;
            const resetScroll = shouldScroll ? {
                x: 0,
                y: 0
            } : null;
            const upcomingScrollState = forcedScroll != null ? forcedScroll : resetScroll;
            // the new state that the router gonna set
            const upcomingRouterState = {
                ...nextState,
                route,
                pathname,
                query,
                asPath: cleanedAs,
                isFallback: false
            };
            // When the page being rendered is the 404 page, we should only update the
            // query parameters. Route changes here might add the basePath when it
            // wasn't originally present. This is also why this block is before the
            // below `changeState` call which updates the browser's history (changing
            // the URL).
            if (isQueryUpdating && isErrorRoute) {
                var _self___NEXT_DATA___props_pageProps1, _self___NEXT_DATA___props1, _routeInfo_props1;
                routeInfo = await this.getRouteInfo({
                    route: this.pathname,
                    pathname: this.pathname,
                    query,
                    as,
                    resolvedAs,
                    routeProps: {
                        shallow: false
                    },
                    locale: nextState.locale,
                    isPreview: nextState.isPreview,
                    isQueryUpdating: isQueryUpdating && !this.isFallback
                });
                if ('type' in routeInfo) {
                    throw new Error("Unexpected middleware effect on " + this.pathname);
                }
                if (this.pathname === '/_error' && ((_self___NEXT_DATA___props1 = self.__NEXT_DATA__.props) == null ? void 0 : (_self___NEXT_DATA___props_pageProps1 = _self___NEXT_DATA___props1.pageProps) == null ? void 0 : _self___NEXT_DATA___props_pageProps1.statusCode) === 500 && ((_routeInfo_props1 = routeInfo.props) == null ? void 0 : _routeInfo_props1.pageProps)) {
                    // ensure statusCode is still correct for static 500 page
                    // when updating query information
                    routeInfo.props.pageProps.statusCode = 500;
                }
                try {
                    await this.set(upcomingRouterState, routeInfo, upcomingScrollState);
                } catch (err) {
                    if ((0, _iserror.default)(err) && err.cancelled) {
                        Router.events.emit('routeChangeError', err, cleanedAs, routeProps);
                    }
                    throw err;
                }
                return true;
            }
            Router.events.emit('beforeHistoryChange', as, routeProps);
            this.changeState(method, url, as, options);
            // for query updates we can skip it if the state is unchanged and we don't
            // need to scroll
            // https://github.com/vercel/next.js/issues/37139
            const canSkipUpdating = isQueryUpdating && !upcomingScrollState && !readyStateChange && !localeChange && (0, _comparestates.compareRouterStates)(upcomingRouterState, this.state);
            if (!canSkipUpdating) {
                try {
                    await this.set(upcomingRouterState, routeInfo, upcomingScrollState);
                } catch (e) {
                    if (e.cancelled) routeInfo.error = routeInfo.error || e;
                    else throw e;
                }
                if (routeInfo.error) {
                    if (!isQueryUpdating) {
                        Router.events.emit('routeChangeError', routeInfo.error, cleanedAs, routeProps);
                    }
                    throw routeInfo.error;
                }
                if ("TURBOPACK compile-time falsy", 0) {
                    "TURBOPACK unreachable";
                }
                if (!isQueryUpdating) {
                    Router.events.emit('routeChangeComplete', as, routeProps);
                }
                // A hash mark # is the optional last part of a URL
                const hashRegex = /#.+$/;
                if (shouldScroll && hashRegex.test(as)) {
                    this.scrollToHash(as);
                }
            }
            return true;
        } catch (err) {
            if ((0, _iserror.default)(err) && err.cancelled) {
                return false;
            }
            throw err;
        }
    }
    changeState(method, url, as, options) {
        if (options === void 0) options = {};
        if ("TURBOPACK compile-time truthy", 1) {
            if (typeof window.history === 'undefined') {
                console.error("Warning: window.history is not available.");
                return;
            }
            if (typeof window.history[method] === 'undefined') {
                console.error("Warning: window.history." + method + " is not available");
                return;
            }
        }
        if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
            this._shallow = options.shallow;
            window.history[method]({
                url,
                as,
                options,
                __N: true,
                key: this._key = method !== 'pushState' ? this._key : createKey()
            }, // Passing the empty string here should be safe against future changes to the method.
            // https://developer.mozilla.org/docs/Web/API/History/replaceState
            '', as);
        }
    }
    async handleRouteInfoError(err, pathname, query, as, routeProps, loadErrorFail) {
        if (err.cancelled) {
            // bubble up cancellation errors
            throw err;
        }
        if ((0, _routeloader.isAssetError)(err) || loadErrorFail) {
            Router.events.emit('routeChangeError', err, as, routeProps);
            // If we can't load the page it could be one of following reasons
            //  1. Page doesn't exists
            //  2. Page does exist in a different zone
            //  3. Internal error while loading the page
            // So, doing a hard reload is the proper way to deal with this.
            handleHardNavigation({
                url: as,
                router: this
            });
            // Changing the URL doesn't block executing the current code path.
            // So let's throw a cancellation error stop the routing logic.
            throw buildCancellationError();
        }
        console.error(err);
        try {
            let props;
            const { page: Component, styleSheets } = await this.fetchComponent('/_error');
            const routeInfo = {
                props,
                Component,
                styleSheets,
                err,
                error: err
            };
            if (!routeInfo.props) {
                try {
                    routeInfo.props = await this.getInitialProps(Component, {
                        err,
                        pathname,
                        query
                    });
                } catch (gipErr) {
                    console.error('Error in error page `getInitialProps`: ', gipErr);
                    routeInfo.props = {};
                }
            }
            return routeInfo;
        } catch (routeInfoErr) {
            return this.handleRouteInfoError((0, _iserror.default)(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + ''), pathname, query, as, routeProps, true);
        }
    }
    async getRouteInfo(param) {
        let { route: requestedRoute, pathname, query, as, resolvedAs, routeProps, locale, hasMiddleware, isPreview, unstable_skipClientCache, isQueryUpdating, isMiddlewareRewrite, isNotFound } = param;
        /**
     * This `route` binding can change if there's a rewrite
     * so we keep a reference to the original requested route
     * so we can store the cache for it and avoid re-requesting every time
     * for shallow routing purposes.
     */ let route = requestedRoute;
        try {
            var _data_effect, _data_effect1, _data_effect2, _data_response;
            let existingInfo = this.components[route];
            if (routeProps.shallow && existingInfo && this.route === route) {
                return existingInfo;
            }
            const handleCancelled = getCancelledHandler({
                route,
                router: this
            });
            if (hasMiddleware) {
                existingInfo = undefined;
            }
            let cachedRouteInfo = ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : undefined;
            const isBackground = isQueryUpdating;
            const fetchNextDataParams = {
                dataHref: this.pageLoader.getDataHref({
                    href: (0, _formaturl.formatWithValidation)({
                        pathname,
                        query
                    }),
                    skipInterpolation: true,
                    asPath: isNotFound ? '/404' : resolvedAs,
                    locale
                }),
                hasMiddleware: true,
                isServerRender: this.isSsr,
                parseJSON: true,
                inflightCache: isBackground ? this.sbc : this.sdc,
                persistCache: !isPreview,
                isPrefetch: false,
                unstable_skipClientCache,
                isBackground
            };
            let data = isQueryUpdating && !isMiddlewareRewrite ? null : await withMiddlewareEffects({
                fetchData: ()=>fetchNextData(fetchNextDataParams),
                asPath: isNotFound ? '/404' : resolvedAs,
                locale: locale,
                router: this
            }).catch((err)=>{
                // we don't hard error during query updating
                // as it's un-necessary and doesn't need to be fatal
                // unless it is a fallback route and the props can't
                // be loaded
                if (isQueryUpdating) {
                    return null;
                }
                throw err;
            });
            // when rendering error routes we don't apply middleware
            // effects
            if (data && (pathname === '/_error' || pathname === '/404')) {
                data.effect = undefined;
            }
            if (isQueryUpdating) {
                if (!data) {
                    data = {
                        json: self.__NEXT_DATA__.props
                    };
                } else {
                    data.json = self.__NEXT_DATA__.props;
                }
            }
            handleCancelled();
            if ((data == null ? void 0 : (_data_effect = data.effect) == null ? void 0 : _data_effect.type) === 'redirect-internal' || (data == null ? void 0 : (_data_effect1 = data.effect) == null ? void 0 : _data_effect1.type) === 'redirect-external') {
                return data.effect;
            }
            if ((data == null ? void 0 : (_data_effect2 = data.effect) == null ? void 0 : _data_effect2.type) === 'rewrite') {
                const resolvedRoute = (0, _removetrailingslash.removeTrailingSlash)(data.effect.resolvedHref);
                const pages = await this.pageLoader.getPageList();
                // during query updating the page must match although during
                // client-transition a redirect that doesn't match a page
                // can be returned and this should trigger a hard navigation
                // which is valid for incremental migration
                if (!isQueryUpdating || pages.includes(resolvedRoute)) {
                    route = resolvedRoute;
                    pathname = data.effect.resolvedHref;
                    query = {
                        ...query,
                        ...data.effect.parsedAs.query
                    };
                    resolvedAs = (0, _removebasepath.removeBasePath)((0, _normalizelocalepath.normalizeLocalePath)(data.effect.parsedAs.pathname, this.locales).pathname);
                    // Check again the cache with the new destination.
                    existingInfo = this.components[route];
                    if (routeProps.shallow && existingInfo && this.route === route && !hasMiddleware) {
                        // If we have a match with the current route due to rewrite,
                        // we can copy the existing information to the rewritten one.
                        // Then, we return the information along with the matched route.
                        return {
                            ...existingInfo,
                            route
                        };
                    }
                }
            }
            if ((0, _isapiroute.isAPIRoute)(route)) {
                handleHardNavigation({
                    url: as,
                    router: this
                });
                return new Promise(()=>{});
            }
            const routeInfo = cachedRouteInfo || await this.fetchComponent(route).then((res)=>({
                    Component: res.page,
                    styleSheets: res.styleSheets,
                    __N_SSG: res.mod.__N_SSG,
                    __N_SSP: res.mod.__N_SSP
                }));
            if ("TURBOPACK compile-time truthy", 1) {
                const { isValidElementType } = __turbopack_require__("[project]/node_modules/next/dist/compiled/react-is/index.js [app-client] (ecmascript)");
                if (!isValidElementType(routeInfo.Component)) {
                    throw new Error('The default export is not a React Component in page: "' + pathname + '"');
                }
            }
            const wasBailedPrefetch = data == null ? void 0 : (_data_response = data.response) == null ? void 0 : _data_response.headers.get('x-middleware-skip');
            const shouldFetchData = routeInfo.__N_SSG || routeInfo.__N_SSP;
            // For non-SSG prefetches that bailed before sending data
            // we clear the cache to fetch full response
            if (wasBailedPrefetch && (data == null ? void 0 : data.dataHref)) {
                delete this.sdc[data.dataHref];
            }
            const { props, cacheKey } = await this._getData(async ()=>{
                if (shouldFetchData) {
                    if ((data == null ? void 0 : data.json) && !wasBailedPrefetch) {
                        return {
                            cacheKey: data.cacheKey,
                            props: data.json
                        };
                    }
                    const dataHref = (data == null ? void 0 : data.dataHref) ? data.dataHref : this.pageLoader.getDataHref({
                        href: (0, _formaturl.formatWithValidation)({
                            pathname,
                            query
                        }),
                        asPath: resolvedAs,
                        locale
                    });
                    const fetched = await fetchNextData({
                        dataHref,
                        isServerRender: this.isSsr,
                        parseJSON: true,
                        inflightCache: wasBailedPrefetch ? {} : this.sdc,
                        persistCache: !isPreview,
                        isPrefetch: false,
                        unstable_skipClientCache
                    });
                    return {
                        cacheKey: fetched.cacheKey,
                        props: fetched.json || {}
                    };
                }
                return {
                    headers: {},
                    props: await this.getInitialProps(routeInfo.Component, {
                        pathname,
                        query,
                        asPath: as,
                        locale,
                        locales: this.locales,
                        defaultLocale: this.defaultLocale
                    })
                };
            });
            // Only bust the data cache for SSP routes although
            // middleware can skip cache per request with
            // x-middleware-cache: no-cache as well
            if (routeInfo.__N_SSP && fetchNextDataParams.dataHref && cacheKey) {
                delete this.sdc[cacheKey];
            }
            // we kick off a HEAD request in the background
            // when a non-prefetch request is made to signal revalidation
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            }
            props.pageProps = Object.assign({}, props.pageProps);
            routeInfo.props = props;
            routeInfo.route = route;
            routeInfo.query = query;
            routeInfo.resolvedAs = resolvedAs;
            this.components[route] = routeInfo;
            return routeInfo;
        } catch (err) {
            return this.handleRouteInfoError((0, _iserror.getProperError)(err), pathname, query, as, routeProps);
        }
    }
    set(state, data, resetScroll) {
        this.state = state;
        return this.sub(data, this.components['/_app'].Component, resetScroll);
    }
    /**
   * Callback to execute before replacing router state
   * @param cb callback to be executed
   */ beforePopState(cb) {
        this._bps = cb;
    }
    onlyAHashChange(as) {
        if (!this.asPath) return false;
        const [oldUrlNoHash, oldHash] = this.asPath.split('#', 2);
        const [newUrlNoHash, newHash] = as.split('#', 2);
        // Makes sure we scroll to the provided hash if the url/hash are the same
        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
            return true;
        }
        // If the urls are change, there's more than a hash change
        if (oldUrlNoHash !== newUrlNoHash) {
            return false;
        }
        // If the hash has changed, then it's a hash only change.
        // This check is necessary to handle both the enter and
        // leave hash === '' cases. The identity case falls through
        // and is treated as a next reload.
        return oldHash !== newHash;
    }
    scrollToHash(as) {
        const [, hash = ''] = as.split('#', 2);
        (0, _handlesmoothscroll.handleSmoothScroll)(()=>{
            // Scroll to top if the hash is just `#` with no value or `#top`
            // To mirror browsers
            if (hash === '' || hash === 'top') {
                window.scrollTo(0, 0);
                return;
            }
            // Decode hash to make non-latin anchor works.
            const rawHash = decodeURIComponent(hash);
            // First we check if the element by id is found
            const idEl = document.getElementById(rawHash);
            if (idEl) {
                idEl.scrollIntoView();
                return;
            }
            // If there's no element with the id, we check the `name` property
            // To mirror browsers
            const nameEl = document.getElementsByName(rawHash)[0];
            if (nameEl) {
                nameEl.scrollIntoView();
            }
        }, {
            onlyHashChange: this.onlyAHashChange(as)
        });
    }
    urlIsNew(asPath) {
        return this.asPath !== asPath;
    }
    /**
   * Prefetch page code, you may wait for the data during page rendering.
   * This feature only works in production!
   * @param url the href of prefetched page
   * @param asPath the as path of the prefetched page
   */ async prefetch(url, asPath, options) {
        if (asPath === void 0) asPath = url;
        if (options === void 0) options = {};
        // Prefetch is not supported in development mode because it would trigger on-demand-entries
        if ("TURBOPACK compile-time truthy", 1) {
            return;
        }
        "TURBOPACK unreachable";
        let parsed;
        const urlPathname = undefined;
        let pathname, query;
        const originalPathname = undefined;
        const pages = undefined;
        let resolvedAs;
        const locale = undefined;
        const isMiddlewareMatch = undefined;
        const data = undefined;
        const route = undefined;
    }
    async fetchComponent(route) {
        const handleCancelled = getCancelledHandler({
            route,
            router: this
        });
        try {
            const componentResult = await this.pageLoader.loadPage(route);
            handleCancelled();
            return componentResult;
        } catch (err) {
            handleCancelled();
            throw err;
        }
    }
    _getData(fn) {
        let cancelled = false;
        const cancel = ()=>{
            cancelled = true;
        };
        this.clc = cancel;
        return fn().then((data)=>{
            if (cancel === this.clc) {
                this.clc = null;
            }
            if (cancelled) {
                const err = new Error('Loading initial props cancelled');
                err.cancelled = true;
                throw err;
            }
            return data;
        });
    }
    getInitialProps(Component, ctx) {
        const { Component: App } = this.components['/_app'];
        const AppTree = this._wrapApp(App);
        ctx.AppTree = AppTree;
        return (0, _utils.loadGetInitialProps)(App, {
            AppTree,
            Component,
            router: this,
            ctx
        });
    }
    get route() {
        return this.state.route;
    }
    get pathname() {
        return this.state.pathname;
    }
    get query() {
        return this.state.query;
    }
    get asPath() {
        return this.state.asPath;
    }
    get locale() {
        return this.state.locale;
    }
    get isFallback() {
        return this.state.isFallback;
    }
    get isPreview() {
        return this.state.isPreview;
    }
    constructor(pathname, query, as, { initialProps, pageLoader, App, wrapApp, Component, err, subscription, isFallback, locale, locales, defaultLocale, domainLocales, isPreview }){
        // Server Data Cache (full data requests)
        this.sdc = {};
        // Server Background Cache (HEAD requests)
        this.sbc = {};
        this.isFirstPopStateEvent = true;
        this._key = createKey();
        this.onPopState = (e)=>{
            const { isFirstPopStateEvent } = this;
            this.isFirstPopStateEvent = false;
            const state = e.state;
            if (!state) {
                // We get state as undefined for two reasons.
                //  1. With older safari (< 8) and older chrome (< 34)
                //  2. When the URL changed with #
                //
                // In the both cases, we don't need to proceed and change the route.
                // (as it's already changed)
                // But we can simply replace the state with the new changes.
                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
                // So, doing the following for (1) does no harm.
                const { pathname, query } = this;
                this.changeState('replaceState', (0, _formaturl.formatWithValidation)({
                    pathname: (0, _addbasepath.addBasePath)(pathname),
                    query
                }), (0, _utils.getURL)());
                return;
            }
            // __NA is used to identify if the history entry can be handled by the app-router.
            if (state.__NA) {
                window.location.reload();
                return;
            }
            if (!state.__N) {
                return;
            }
            // Safari fires popstateevent when reopening the browser.
            if (isFirstPopStateEvent && this.locale === state.options.locale && state.as === this.asPath) {
                return;
            }
            let forcedScroll;
            const { url, as, options, key } = state;
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            }
            this._key = key;
            const { pathname } = (0, _parserelativeurl.parseRelativeUrl)(url);
            // Make sure we don't re-render on initial load,
            // can be caused by navigating back from an external site
            if (this.isSsr && as === (0, _addbasepath.addBasePath)(this.asPath) && pathname === (0, _addbasepath.addBasePath)(this.pathname)) {
                return;
            }
            // If the downstream application returns falsy, return.
            // They will then be responsible for handling the event.
            if (this._bps && !this._bps(state)) {
                return;
            }
            this.change('replaceState', url, as, Object.assign({}, options, {
                shallow: options.shallow && this._shallow,
                locale: options.locale || this.defaultLocale,
                // @ts-ignore internal value not exposed on types
                _h: 0
            }), forcedScroll);
        };
        // represents the current component key
        const route = (0, _removetrailingslash.removeTrailingSlash)(pathname);
        // set up the component cache (by route keys)
        this.components = {};
        // We should not keep the cache, if there's an error
        // Otherwise, this cause issues when when going back and
        // come again to the errored page.
        if (pathname !== '/_error') {
            this.components[route] = {
                Component,
                initial: true,
                props: initialProps,
                err,
                __N_SSG: initialProps && initialProps.__N_SSG,
                __N_SSP: initialProps && initialProps.__N_SSP
            };
        }
        this.components['/_app'] = {
            Component: App,
            styleSheets: []
        };
        // Backwards compat for Router.router.events
        // TODO: Should be remove the following major version as it was never documented
        this.events = Router.events;
        this.pageLoader = pageLoader;
        // if auto prerendered and dynamic route wait to update asPath
        // until after mount to prevent hydration mismatch
        const autoExportDynamic = (0, _isdynamic.isDynamicRoute)(pathname) && self.__NEXT_DATA__.autoExport;
        this.basePath = ("TURBOPACK compile-time value", "") || '';
        this.sub = subscription;
        this.clc = null;
        this._wrapApp = wrapApp;
        // make sure to ignore extra popState in safari on navigating
        // back from external site
        this.isSsr = true;
        this.isLocaleDomain = false;
        this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.isExperimentalCompile || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !("TURBOPACK compile-time value", false));
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
        this.state = {
            route,
            pathname,
            query,
            asPath: autoExportDynamic ? pathname : as,
            isPreview: !!isPreview,
            locale: ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : undefined,
            isFallback
        };
        this._initialMatchesMiddlewarePromise = Promise.resolve(false);
        if (typeof window !== 'undefined') {
            // make sure "as" doesn't start with double slashes or else it can
            // throw an error as it's considered invalid
            if (!as.startsWith('//')) {
                // in order for `e.state` to work on the `onpopstate` event
                // we have to register the initial route upon initialization
                const options = {
                    locale
                };
                const asPath = (0, _utils.getURL)();
                this._initialMatchesMiddlewarePromise = matchesMiddleware({
                    router: this,
                    locale,
                    asPath
                }).then((matches)=>{
                    options._shouldResolveHref = as !== pathname;
                    this.changeState('replaceState', matches ? asPath : (0, _formaturl.formatWithValidation)({
                        pathname: (0, _addbasepath.addBasePath)(pathname),
                        query
                    }), asPath, options);
                    return matches;
                });
            }
            window.addEventListener('popstate', this.onPopState);
            // enable custom scroll restoration handling when available
            // otherwise fallback to browser's default handling
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            }
        }
    }
}
Router.events = (0, _mitt.default)(); //# sourceMappingURL=router.js.map
}}),
"[project]/node_modules/next/dist/client/with-router.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return withRouter;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _jsxruntime = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _router = __turbopack_require__("[project]/node_modules/next/dist/client/router.js [app-client] (ecmascript)");
function withRouter(ComposedComponent) {
    function WithRouterWrapper(props) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(ComposedComponent, {
            router: (0, _router.useRouter)(),
            ...props
        });
    }
    WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps;
    WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;
    if ("TURBOPACK compile-time truthy", 1) {
        const name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
        WithRouterWrapper.displayName = "withRouter(" + name + ")";
    }
    return WithRouterWrapper;
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=with-router.js.map
}}),
"[project]/node_modules/next/dist/client/router.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/* global window */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    Router: null,
    createRouter: null,
    default: null,
    makePublicRouterInstance: null,
    useRouter: null,
    withRouter: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    Router: function() {
        return _router.default;
    },
    createRouter: function() {
        return createRouter;
    },
    // Export the singletonRouter and this is the public API.
    default: function() {
        return _default;
    },
    makePublicRouterInstance: function() {
        return makePublicRouterInstance;
    },
    useRouter: function() {
        return useRouter;
    },
    withRouter: function() {
        return _withrouter.default;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _router = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/router.js [app-client] (ecmascript)"));
const _routercontextsharedruntime = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router-context.shared-runtime.js [app-client] (ecmascript)");
const _iserror = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/lib/is-error.js [app-client] (ecmascript)"));
const _withrouter = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/client/with-router.js [app-client] (ecmascript)"));
const singletonRouter = {
    router: null,
    readyCallbacks: [],
    ready (callback) {
        if (this.router) return callback();
        if (typeof window !== 'undefined') {
            this.readyCallbacks.push(callback);
        }
    }
};
// Create public properties and methods of the router in the singletonRouter
const urlPropertyFields = [
    'pathname',
    'route',
    'query',
    'asPath',
    'components',
    'isFallback',
    'basePath',
    'locale',
    'locales',
    'defaultLocale',
    'isReady',
    'isPreview',
    'isLocaleDomain',
    'domainLocales'
];
const routerEvents = [
    'routeChangeStart',
    'beforeHistoryChange',
    'routeChangeComplete',
    'routeChangeError',
    'hashChangeStart',
    'hashChangeComplete'
];
const coreMethodFields = [
    'push',
    'replace',
    'reload',
    'back',
    'prefetch',
    'beforePopState'
];
// Events is a static property on the router, the router doesn't have to be initialized to use it
Object.defineProperty(singletonRouter, 'events', {
    get () {
        return _router.default.events;
    }
});
function getRouter() {
    if (!singletonRouter.router) {
        const message = 'No router instance found.\n' + 'You should only use "next/router" on the client side of your app.\n';
        throw new Error(message);
    }
    return singletonRouter.router;
}
urlPropertyFields.forEach((field)=>{
    // Here we need to use Object.defineProperty because we need to return
    // the property assigned to the actual router
    // The value might get changed as we change routes and this is the
    // proper way to access it
    Object.defineProperty(singletonRouter, field, {
        get () {
            const router = getRouter();
            return router[field];
        }
    });
});
coreMethodFields.forEach((field)=>{
    singletonRouter[field] = function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        const router = getRouter();
        return router[field](...args);
    };
});
routerEvents.forEach((event)=>{
    singletonRouter.ready(()=>{
        _router.default.events.on(event, function() {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                args[_key] = arguments[_key];
            }
            const eventField = "on" + event.charAt(0).toUpperCase() + event.substring(1);
            const _singletonRouter = singletonRouter;
            if (_singletonRouter[eventField]) {
                try {
                    _singletonRouter[eventField](...args);
                } catch (err) {
                    console.error("Error when running the Router event: " + eventField);
                    console.error((0, _iserror.default)(err) ? err.message + "\n" + err.stack : err + '');
                }
            }
        });
    });
});
const _default = singletonRouter;
function useRouter() {
    const router = _react.default.useContext(_routercontextsharedruntime.RouterContext);
    if (!router) {
        throw new Error('NextRouter was not mounted. https://nextjs.org/docs/messages/next-router-not-mounted');
    }
    return router;
}
function createRouter() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
        args[_key] = arguments[_key];
    }
    singletonRouter.router = new _router.default(...args);
    singletonRouter.readyCallbacks.forEach((cb)=>cb());
    singletonRouter.readyCallbacks = [];
    return singletonRouter.router;
}
function makePublicRouterInstance(router) {
    const scopedRouter = router;
    const instance = {};
    for (const property of urlPropertyFields){
        if (typeof scopedRouter[property] === 'object') {
            instance[property] = Object.assign(Array.isArray(scopedRouter[property]) ? [] : {}, scopedRouter[property]) // makes sure query is not stateful
            ;
            continue;
        }
        instance[property] = scopedRouter[property];
    }
    // Events is a static property on the router, the router doesn't have to be initialized to use it
    instance.events = _router.default.events;
    coreMethodFields.forEach((field)=>{
        instance[field] = function() {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                args[_key] = arguments[_key];
            }
            return scopedRouter[field](...args);
        };
    });
    return instance;
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=router.js.map
}}),
"[project]/node_modules/next/router.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
module.exports = __turbopack_require__("[project]/node_modules/next/dist/client/router.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/utils/invalidateNextRouterCache.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "invalidateNextRouterCache": (()=>invalidateNextRouterCache)
});
;
const invalidateNextRouterCache = ()=>{
    if (typeof window === "undefined") {
        return;
    }
    const invalidate = (cache)=>{
        Object.keys(cache).forEach((key)=>{
            delete cache[key];
        });
    };
    try {
        invalidate(window.next.router.sdc);
        invalidate(window.next.router.sbc);
    } catch (e) {
        return;
    }
};
;
 //# sourceMappingURL=invalidateNextRouterCache.js.map
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/pages/ClerkProvider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "ClerkProvider": (()=>ClerkProvider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/clerk-react/dist/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$internal$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/clerk-react/dist/internal.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$router$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/router.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/clerk-react/dist/chunk-JLDN3CXN.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$shared$2f$dist$2f$chunk$2d$TEIBNOQP$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/shared/dist/chunk-TEIBNOQP.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/clerk-react/dist/index.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$hooks$2f$useSafeLayoutEffect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/client-boundary/hooks/useSafeLayoutEffect.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$invalidateNextRouterCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/utils/invalidateNextRouterCache.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$removeBasePath$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/utils/removeBasePath.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$mergeNextClerkPropsWithEnv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/utils/mergeNextClerkPropsWithEnv.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$NextOptionsContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/client-boundary/NextOptionsContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$clerk$2d$js$2d$script$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/utils/clerk-js-script.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["setErrorThrowerOptions"])({
    packageName: "@clerk/nextjs"
});
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$shared$2f$dist$2f$chunk$2d$TEIBNOQP$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setClerkJsLoadingErrorPackageName"])("@clerk/nextjs");
function ClerkProvider({ children, ...props }) {
    var _a;
    const { __unstable_invokeMiddlewareOnAuthStateChange = true } = props;
    const { push, replace } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$router$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRouter"])();
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["ClerkProvider"].displayName = "ReactClerkProvider";
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$hooks$2f$useSafeLayoutEffect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSafeLayoutEffect"])({
        "ClerkProvider.useSafeLayoutEffect": ()=>{
            window.__unstable__onBeforeSetActive = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$invalidateNextRouterCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["invalidateNextRouterCache"];
        }
    }["ClerkProvider.useSafeLayoutEffect"], []);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$hooks$2f$useSafeLayoutEffect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSafeLayoutEffect"])({
        "ClerkProvider.useSafeLayoutEffect": ()=>{
            window.__unstable__onAfterSetActive = ({
                "ClerkProvider.useSafeLayoutEffect": ()=>{
                    if (__unstable_invokeMiddlewareOnAuthStateChange) {
                        void push(window.location.href);
                    }
                }
            })["ClerkProvider.useSafeLayoutEffect"];
        }
    }["ClerkProvider.useSafeLayoutEffect"], []);
    const navigate = (to)=>push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$removeBasePath$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["removeBasePath"])(to));
    const replaceNavigate = (to)=>replace((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$removeBasePath$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["removeBasePath"])(to));
    const mergedProps = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$mergeNextClerkPropsWithEnv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeNextClerkPropsWithEnv"])({
        ...props,
        routerPush: navigate,
        routerReplace: replaceNavigate
    });
    const initialState = ((_a = props.authServerSideProps) == null ? void 0 : _a.__clerk_ssr_state) || props.__clerk_ssr_state;
    return /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$NextOptionsContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClerkNextOptionsProvider"], {
        options: mergedProps
    }, /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["ClerkProvider"], {
        ...mergedProps,
        initialState
    }, /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$clerk$2d$js$2d$script$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClerkJSScript"], {
        router: "pages"
    }), children));
}
;
 //# sourceMappingURL=ClerkProvider.js.map
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/client-boundary/ClerkProvider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "ClerkProvider": (()=>ClerkProvider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$compat$2f$router$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/compat/router.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$app$2d$router$2f$client$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/app-router/client/ClerkProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$pages$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/pages/ClerkProvider.js [app-client] (ecmascript)");
"use client";
;
;
;
;
;
function ClerkProvider(props) {
    const router = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$compat$2f$router$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRouter"])();
    const Provider = router ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$pages$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClerkProvider"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$app$2d$router$2f$client$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClientClerkProvider"];
    return /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(Provider, {
        ...props
    });
}
;
 //# sourceMappingURL=ClerkProvider.js.map
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({
    "ClerkProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClerkProvider"]),
    "Protect": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Protect"]),
    "SignedIn": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["SignedIn"]),
    "SignedOut": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["SignedOut"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/client-boundary/ClerkProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/clerk-react/dist/chunk-JLDN3CXN.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({
    "ClerkProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["ClerkProvider"]),
    "Protect": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Protect"]),
    "SignedIn": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["SignedIn"]),
    "SignedOut": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["SignedOut"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <exports>");
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "ClerkProvider": (()=>ClerkProvider),
    "Protect": (()=>Protect),
    "SignedIn": (()=>SignedIn),
    "SignedOut": (()=>SignedOut)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript)");
;
;
;
;
;
const ClerkProvider = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.ClerkProvider;
const SignedIn = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.SignedIn;
const SignedOut = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.SignedOut;
const Protect = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.Protect;
;
 //# sourceMappingURL=index.js.map
}}),
}]);

//# sourceMappingURL=node_modules_da1ea8._.js.map