(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_1c1d82._.js", {

"[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
"production" !== ("TURBOPACK compile-time value", "development") && function() {
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE$2 ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function disabledLog() {}
    function disableLogs() {
        if (0 === disabledDepth) {
            prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd;
            var props = {
                configurable: !0,
                enumerable: !0,
                value: disabledLog,
                writable: !0
            };
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (0 === disabledDepth) {
            var props = {
                configurable: !0,
                enumerable: !0,
                writable: !0
            };
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        }
        0 > disabledDepth && console.error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    function describeBuiltInComponentFrame(name) {
        if (void 0 === prefix) try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
            suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
        return "\n" + prefix + name + suffix;
    }
    function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (void 0 !== frame) return frame;
        reentry = !0;
        frame = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher = null;
        previousDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = null;
        disableLogs();
        try {
            var RunInRootFrame = {
                DetermineComponentFrameRoot: function() {
                    try {
                        if (construct) {
                            var Fake = function() {
                                throw Error();
                            };
                            Object.defineProperty(Fake.prototype, "props", {
                                set: function() {
                                    throw Error();
                                }
                            });
                            if ("object" === typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(Fake, []);
                                } catch (x) {
                                    var control = x;
                                }
                                Reflect.construct(fn, [], Fake);
                            } else {
                                try {
                                    Fake.call();
                                } catch (x$0) {
                                    control = x$0;
                                }
                                fn.call(Fake.prototype);
                            }
                        } else {
                            try {
                                throw Error();
                            } catch (x$1) {
                                control = x$1;
                            }
                            (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {});
                        }
                    } catch (sample) {
                        if (sample && control && "string" === typeof sample.stack) return [
                            sample.stack,
                            control.stack
                        ];
                    }
                    return [
                        null,
                        null
                    ];
                }
            };
            RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
            namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
                value: "DetermineComponentFrameRoot"
            });
            var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
            if (sampleStack && controlStack) {
                var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
                for(_RunInRootFrame$Deter = namePropDescriptor = 0; namePropDescriptor < sampleLines.length && !sampleLines[namePropDescriptor].includes("DetermineComponentFrameRoot");)namePropDescriptor++;
                for(; _RunInRootFrame$Deter < controlLines.length && !controlLines[_RunInRootFrame$Deter].includes("DetermineComponentFrameRoot");)_RunInRootFrame$Deter++;
                if (namePropDescriptor === sampleLines.length || _RunInRootFrame$Deter === controlLines.length) for(namePropDescriptor = sampleLines.length - 1, _RunInRootFrame$Deter = controlLines.length - 1; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter && sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter];)_RunInRootFrame$Deter--;
                for(; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter; namePropDescriptor--, _RunInRootFrame$Deter--)if (sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                    if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {
                        do if (namePropDescriptor--, _RunInRootFrame$Deter--, 0 > _RunInRootFrame$Deter || sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                            var _frame = "\n" + sampleLines[namePropDescriptor].replace(" at new ", " at ");
                            fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName));
                            "function" === typeof fn && componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                        while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter)
                    }
                    break;
                }
            }
        } finally{
            reentry = !1, ReactSharedInternals.H = previousDispatcher, reenableLogs(), Error.prepareStackTrace = frame;
        }
        sampleLines = (sampleLines = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(sampleLines) : "";
        "function" === typeof fn && componentFrameCache.set(fn, sampleLines);
        return sampleLines;
    }
    function describeUnknownElementTypeFrameInDEV(type) {
        if (null == type) return "";
        if ("function" === typeof type) {
            var prototype = type.prototype;
            return describeNativeComponentFrame(type, !(!prototype || !prototype.isReactComponent));
        }
        if ("string" === typeof type) return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if ("object" === typeof type) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return type = describeNativeComponentFrame(type.render, !1), type;
            case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type);
            case REACT_LAZY_TYPE:
                prototype = type._payload;
                type = type._init;
                try {
                    return describeUnknownElementTypeFrameInDEV(type(prototype));
                } catch (x) {}
        }
        return "";
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self) {
        if ("string" === typeof type || "function" === typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || "object" === typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE$1 || void 0 !== type.getModuleId)) {
            var children = config.children;
            if (void 0 !== children) if (isStaticChildren) if (isArrayImpl(children)) {
                for(isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)validateChildKeys(children[isStaticChildren], type);
                Object.freeze && Object.freeze(children);
            } else console.error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else validateChildKeys(children, type);
        } else {
            children = "";
            if (void 0 === type || "object" === typeof type && null !== type && 0 === Object.keys(type).length) children += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            null === type ? isStaticChildren = "null" : isArrayImpl(type) ? isStaticChildren = "array" : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE ? (isStaticChildren = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", children = " Did you accidentally export a JSX literal instead of a component?") : isStaticChildren = typeof type;
            console.error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", isStaticChildren, children);
        }
        if (hasOwnProperty.call(config, "key")) {
            children = getComponentNameFromType(type);
            var keys = Object.keys(config).filter(function(k) {
                return "key" !== k;
            });
            isStaticChildren = 0 < keys.length ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}", console.error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', isStaticChildren, children, keys, children), didWarnAboutKeySpread[children + isStaticChildren] = !0);
        }
        children = null;
        void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = "" + maybeKey);
        hasValidKey(config) && (checkKeyStringCoercion(config.key), children = "" + config.key);
        if ("key" in config) {
            maybeKey = {};
            for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
        } else maybeKey = config;
        children && defineKeyPropWarningGetter(maybeKey, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, children, self, source, getOwner(), maybeKey);
    }
    function validateChildKeys(node, parentType) {
        if ("object" === typeof node && node && node.$$typeof !== REACT_CLIENT_REFERENCE) {
            if (isArrayImpl(node)) for(var i = 0; i < node.length; i++){
                var child = node[i];
                isValidElement(child) && validateExplicitKey(child, parentType);
            }
            else if (isValidElement(node)) node._store && (node._store.validated = 1);
            else if (null === node || "object" !== typeof node ? i = null : (i = MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL] || node["@@iterator"], i = "function" === typeof i ? i : null), "function" === typeof i && i !== node.entries && (i = i.call(node), i !== node)) for(; !(node = i.next()).done;)isValidElement(node.value) && validateExplicitKey(node.value, parentType);
        }
    }
    function isValidElement(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function validateExplicitKey(element, parentType) {
        if (element._store && !element._store.validated && null == element.key && (element._store.validated = 1, parentType = getCurrentComponentErrorInfo(parentType), !ownerHasKeyUseWarning[parentType])) {
            ownerHasKeyUseWarning[parentType] = !0;
            var childOwner = "";
            element && null != element._owner && element._owner !== getOwner() && (childOwner = null, "number" === typeof element._owner.tag ? childOwner = getComponentNameFromType(element._owner.type) : "string" === typeof element._owner.name && (childOwner = element._owner.name), childOwner = " It was passed a child from " + childOwner + ".");
            var prevGetCurrentStack = ReactSharedInternals.getCurrentStack;
            ReactSharedInternals.getCurrentStack = function() {
                var stack = describeUnknownElementTypeFrameInDEV(element.type);
                prevGetCurrentStack && (stack += prevGetCurrentStack() || "");
                return stack;
            };
            console.error('Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.', parentType, childOwner);
            ReactSharedInternals.getCurrentStack = prevGetCurrentStack;
        }
    }
    function getCurrentComponentErrorInfo(parentType) {
        var info = "", owner = getOwner();
        owner && (owner = getComponentNameFromType(owner.type)) && (info = "\n\nCheck the render method of `" + owner + "`.");
        info || (parentType = getComponentNameFromType(parentType)) && (info = "\n\nCheck the top-level render call using <" + parentType + ">.");
        return info;
    }
    var React = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, REACT_CLIENT_REFERENCE$2 = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, assign = Object.assign, REACT_CLIENT_REFERENCE$1 = Symbol.for("react.client.reference"), isArrayImpl = Array.isArray, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
    disabledLog.__reactDisabledLog = !0;
    var prefix, suffix, reentry = !1;
    var componentFrameCache = new ("function" === typeof WeakMap ? WeakMap : Map)();
    var REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), specialPropKeyWarningShown;
    var didWarnAboutElementRef = {};
    var didWarnAboutKeySpread = {}, ownerHasKeyUseWarning = {};
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = function(type, config, maybeKey, isStaticChildren, source, self) {
        return jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self);
    };
}();
}}),
"[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
if ("TURBOPACK compile-time falsy", 0) {
    "TURBOPACK unreachable";
} else {
    module.exports = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js [app-client] (ecmascript)");
}
}}),
"[project]/node_modules/@cesdk/engine/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "Color": (()=>o),
    "ConfigTypes": (()=>i),
    "DesignBlockType": (()=>a),
    "LogLevel": (()=>s),
    "MimeType": (()=>u),
    "Role": (()=>c),
    "default": (()=>l)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var e = {
    7643: (e, t, r)=>{
        var n = r(5557), o = r(4349), i = r(407), a = r(5134), s = r(9951);
        function u(e) {
            var t = -1, r = null == e ? 0 : e.length;
            for(this.clear(); ++t < r;){
                var n = e[t];
                this.set(n[0], n[1]);
            }
        }
        u.prototype.clear = n, u.prototype.delete = o, u.prototype.get = i, u.prototype.has = a, u.prototype.set = s, e.exports = u;
    },
    3872: (e, t, r)=>{
        var n = r(2470), o = r(7289), i = r(7614), a = r(3067), s = r(9346);
        function u(e) {
            var t = -1, r = null == e ? 0 : e.length;
            for(this.clear(); ++t < r;){
                var n = e[t];
                this.set(n[0], n[1]);
            }
        }
        u.prototype.clear = n, u.prototype.delete = o, u.prototype.get = i, u.prototype.has = a, u.prototype.set = s, e.exports = u;
    },
    5674: (e, t, r)=>{
        var n = r(489)(r(4818), "Map");
        e.exports = n;
    },
    2462: (e, t, r)=>{
        var n = r(6290), o = r(4951), i = r(440), a = r(6180), s = r(7719);
        function u(e) {
            var t = -1, r = null == e ? 0 : e.length;
            for(this.clear(); ++t < r;){
                var n = e[t];
                this.set(n[0], n[1]);
            }
        }
        u.prototype.clear = n, u.prototype.delete = o, u.prototype.get = i, u.prototype.has = a, u.prototype.set = s, e.exports = u;
    },
    4691: (e, t, r)=>{
        var n = r(3872), o = r(1490), i = r(2594), a = r(5953), s = r(4667), u = r(4615);
        function c(e) {
            var t = this.__data__ = new n(e);
            this.size = t.size;
        }
        c.prototype.clear = o, c.prototype.delete = i, c.prototype.get = a, c.prototype.has = s, c.prototype.set = u, e.exports = c;
    },
    9652: (e, t, r)=>{
        var n = r(4818).Symbol;
        e.exports = n;
    },
    4600: (e, t, r)=>{
        var n = r(4818).Uint8Array;
        e.exports = n;
    },
    6562: (e)=>{
        e.exports = function(e, t, r) {
            switch(r.length){
                case 0:
                    return e.call(t);
                case 1:
                    return e.call(t, r[0]);
                case 2:
                    return e.call(t, r[0], r[1]);
                case 3:
                    return e.call(t, r[0], r[1], r[2]);
            }
            return e.apply(t, r);
        };
    },
    7554: (e)=>{
        e.exports = function(e, t) {
            for(var r = -1, n = null == e ? 0 : e.length, o = 0, i = []; ++r < n;){
                var a = e[r];
                t(a, r, e) && (i[o++] = a);
            }
            return i;
        };
    },
    1998: (e, t, r)=>{
        var n = r(1453), o = r(5664), i = r(5860), a = r(9571), s = r(8347), u = r(1859), c = Object.prototype.hasOwnProperty;
        e.exports = function(e, t) {
            var r = i(e), l = !r && o(e), d = !r && !l && a(e), f = !r && !l && !d && u(e), m = r || l || d || f, p = m ? n(e.length, String) : [], h = p.length;
            for(var g in e)!t && !c.call(e, g) || m && ("length" == g || d && ("offset" == g || "parent" == g) || f && ("buffer" == g || "byteLength" == g || "byteOffset" == g) || s(g, h)) || p.push(g);
            return p;
        };
    },
    3675: (e)=>{
        e.exports = function(e, t) {
            for(var r = -1, n = null == e ? 0 : e.length, o = Array(n); ++r < n;)o[r] = t(e[r], r, e);
            return o;
        };
    },
    4656: (e)=>{
        e.exports = function(e, t) {
            for(var r = -1, n = t.length, o = e.length; ++r < n;)e[o + r] = t[r];
            return e;
        };
    },
    8247: (e)=>{
        var t = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
        e.exports = function(e) {
            return e.match(t) || [];
        };
    },
    1612: (e, t, r)=>{
        var n = r(6912), o = r(3355);
        e.exports = function(e, t, r) {
            (void 0 !== r && !o(e[t], r) || void 0 === r && !(t in e)) && n(e, t, r);
        };
    },
    6258: (e, t, r)=>{
        var n = r(6912), o = r(3355), i = Object.prototype.hasOwnProperty;
        e.exports = function(e, t, r) {
            var a = e[t];
            i.call(e, t) && o(a, r) && (void 0 !== r || t in e) || n(e, t, r);
        };
    },
    8620: (e, t, r)=>{
        var n = r(3355);
        e.exports = function(e, t) {
            for(var r = e.length; r--;)if (n(e[r][0], t)) return r;
            return -1;
        };
    },
    6912: (e, t, r)=>{
        var n = r(4698);
        e.exports = function(e, t, r) {
            "__proto__" == t && n ? n(e, t, {
                configurable: !0,
                enumerable: !0,
                value: r,
                writable: !0
            }) : e[t] = r;
        };
    },
    8528: (e, t, r)=>{
        var n = r(4820), o = Object.create, i = function() {
            function e() {}
            return function(t) {
                if (!n(t)) return {};
                if (o) return o(t);
                e.prototype = t;
                var r = new e;
                return e.prototype = void 0, r;
            };
        }();
        e.exports = i;
    },
    8288: (e, t, r)=>{
        var n = r(4656), o = r(1813);
        e.exports = function e(t, r, i, a, s) {
            var u = -1, c = t.length;
            for(i || (i = o), s || (s = []); ++u < c;){
                var l = t[u];
                r > 0 && i(l) ? r > 1 ? e(l, r - 1, i, a, s) : n(s, l) : a || (s[s.length] = l);
            }
            return s;
        };
    },
    3153: (e, t, r)=>{
        var n = r(7572)();
        e.exports = n;
    },
    2759: (e, t, r)=>{
        var n = r(9652), o = r(5135), i = r(3744), a = n ? n.toStringTag : void 0;
        e.exports = function(e) {
            return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : a && a in Object(e) ? o(e) : i(e);
        };
    },
    6651: (e, t, r)=>{
        var n = r(2759), o = r(1408);
        e.exports = function(e) {
            return o(e) && "[object Arguments]" == n(e);
        };
    },
    3216: (e, t, r)=>{
        var n = r(830), o = r(931), i = r(4820), a = r(1304), s = /^\[object .+?Constructor\]$/, u = Function.prototype, c = Object.prototype, l = u.toString, d = c.hasOwnProperty, f = RegExp("^" + l.call(d).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        e.exports = function(e) {
            return !(!i(e) || o(e)) && (n(e) ? f : s).test(a(e));
        };
    },
    9920: (e, t, r)=>{
        var n = r(2759), o = r(7906), i = r(1408), a = {};
        a["[object Float32Array]"] = a["[object Float64Array]"] = a["[object Int8Array]"] = a["[object Int16Array]"] = a["[object Int32Array]"] = a["[object Uint8Array]"] = a["[object Uint8ClampedArray]"] = a["[object Uint16Array]"] = a["[object Uint32Array]"] = !0, a["[object Arguments]"] = a["[object Array]"] = a["[object ArrayBuffer]"] = a["[object Boolean]"] = a["[object DataView]"] = a["[object Date]"] = a["[object Error]"] = a["[object Function]"] = a["[object Map]"] = a["[object Number]"] = a["[object Object]"] = a["[object RegExp]"] = a["[object Set]"] = a["[object String]"] = a["[object WeakMap]"] = !1, e.exports = function(e) {
            return i(e) && o(e.length) && !!a[n(e)];
        };
    },
    3339: (e, t, r)=>{
        var n = r(4820), o = r(7839), i = r(3003), a = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
            if (!n(e)) return i(e);
            var t = o(e), r = [];
            for(var s in e)("constructor" != s || !t && a.call(e, s)) && r.push(s);
            return r;
        };
    },
    7604: (e, t, r)=>{
        var n = r(4691), o = r(1612), i = r(3153), a = r(480), s = r(4820), u = r(2551), c = r(7700);
        e.exports = function e(t, r, l, d, f) {
            t !== r && i(r, function(i, u) {
                if (f || (f = new n), s(i)) a(t, r, u, l, e, d, f);
                else {
                    var m = d ? d(c(t, u), i, u + "", t, r, f) : void 0;
                    void 0 === m && (m = i), o(t, u, m);
                }
            }, u);
        };
    },
    480: (e, t, r)=>{
        var n = r(1612), o = r(8192), i = r(9947), a = r(6581), s = r(1172), u = r(5664), c = r(5860), l = r(5274), d = r(9571), f = r(830), m = r(4820), p = r(1969), h = r(1859), g = r(7700), v = r(2963);
        e.exports = function(e, t, r, y, b, _, w) {
            var E = g(e, r), x = g(t, r), k = w.get(x);
            if (k) n(e, r, k);
            else {
                var S = _ ? _(E, x, r + "", e, t, w) : void 0, C = void 0 === S;
                if (C) {
                    var T = c(x), A = !T && d(x), F = !T && !A && h(x);
                    S = x, T || A || F ? c(E) ? S = E : l(E) ? S = a(E) : A ? (C = !1, S = o(x, !0)) : F ? (C = !1, S = i(x, !0)) : S = [] : p(x) || u(x) ? (S = E, u(E) ? S = v(E) : m(E) && !f(E) || (S = s(x))) : C = !1;
                }
                C && (w.set(x, S), b(S, x, y, _, w), w.delete(x)), n(e, r, S);
            }
        };
    },
    1445: (e)=>{
        e.exports = function(e) {
            return function(t) {
                return null == t ? void 0 : t[e];
            };
        };
    },
    5757: (e, t, r)=>{
        var n = r(1191), o = r(2549), i = r(6613);
        e.exports = function(e, t) {
            return i(o(e, t, n), e + "");
        };
    },
    4274: (e, t, r)=>{
        var n = r(7477), o = r(4698), i = r(1191), a = o ? function(e, t) {
            return o(e, "toString", {
                configurable: !0,
                enumerable: !1,
                value: n(t),
                writable: !0
            });
        } : i;
        e.exports = a;
    },
    1453: (e)=>{
        e.exports = function(e, t) {
            for(var r = -1, n = Array(e); ++r < e;)n[r] = t(r);
            return n;
        };
    },
    5208: (e, t, r)=>{
        var n = r(9652), o = r(3675), i = r(5860), a = r(1918), s = n ? n.prototype : void 0, u = s ? s.toString : void 0;
        e.exports = function e(t) {
            if ("string" == typeof t) return t;
            if (i(t)) return o(t, e) + "";
            if (a(t)) return u ? u.call(t) : "";
            var r = t + "";
            return "0" == r && 1 / t == -1 / 0 ? "-0" : r;
        };
    },
    8275: (e)=>{
        e.exports = function(e) {
            return function(t) {
                return e(t);
            };
        };
    },
    1254: (e, t, r)=>{
        var n = r(4600);
        e.exports = function(e) {
            var t = new e.constructor(e.byteLength);
            return new n(t).set(new n(e)), t;
        };
    },
    8192: (e, t, r)=>{
        e = r.nmd(e);
        var n = r(4818), o = t && !t.nodeType && t, i = o && e && !e.nodeType && e, a = i && i.exports === o ? n.Buffer : void 0, s = a ? a.allocUnsafe : void 0;
        e.exports = function(e, t) {
            if (t) return e.slice();
            var r = e.length, n = s ? s(r) : new e.constructor(r);
            return e.copy(n), n;
        };
    },
    9947: (e, t, r)=>{
        var n = r(1254);
        e.exports = function(e, t) {
            var r = t ? n(e.buffer) : e.buffer;
            return new e.constructor(r, e.byteOffset, e.length);
        };
    },
    6581: (e)=>{
        e.exports = function(e, t) {
            var r = -1, n = e.length;
            for(t || (t = Array(n)); ++r < n;)t[r] = e[r];
            return t;
        };
    },
    7200: (e, t, r)=>{
        var n = r(6258), o = r(6912);
        e.exports = function(e, t, r, i) {
            var a = !r;
            r || (r = {});
            for(var s = -1, u = t.length; ++s < u;){
                var c = t[s], l = i ? i(r[c], e[c], c, r, e) : void 0;
                void 0 === l && (l = e[c]), a ? o(r, c, l) : n(r, c, l);
            }
            return r;
        };
    },
    8940: (e, t, r)=>{
        var n = r(4818)["__core-js_shared__"];
        e.exports = n;
    },
    3102: (e, t, r)=>{
        var n = r(5757), o = r(7072);
        e.exports = function(e) {
            return n(function(t, r) {
                var n = -1, i = r.length, a = i > 1 ? r[i - 1] : void 0, s = i > 2 ? r[2] : void 0;
                for(a = e.length > 3 && "function" == typeof a ? (i--, a) : void 0, s && o(r[0], r[1], s) && (a = i < 3 ? void 0 : a, i = 1), t = Object(t); ++n < i;){
                    var u = r[n];
                    u && e(t, u, n, a);
                }
                return t;
            });
        };
    },
    7572: (e)=>{
        e.exports = function(e) {
            return function(t, r, n) {
                for(var o = -1, i = Object(t), a = n(t), s = a.length; s--;){
                    var u = a[e ? s : ++o];
                    if (!1 === r(i[u], u, i)) break;
                }
                return t;
            };
        };
    },
    4698: (e, t, r)=>{
        var n = r(489), o = function() {
            try {
                var e = n(Object, "defineProperty");
                return e({}, "", {}), e;
            } catch (e) {}
        }();
        e.exports = o;
    },
    3566: (e, t, r)=>{
        var n = "object" == typeof r.g && r.g && r.g.Object === Object && r.g;
        e.exports = n;
    },
    6330: (e, t, r)=>{
        var n = r(5513);
        e.exports = function(e, t) {
            var r = e.__data__;
            return n(t) ? r["string" == typeof t ? "string" : "hash"] : r.map;
        };
    },
    489: (e, t, r)=>{
        var n = r(3216), o = r(3626);
        e.exports = function(e, t) {
            var r = o(e, t);
            return n(r) ? r : void 0;
        };
    },
    4966: (e, t, r)=>{
        var n = r(6148)(Object.getPrototypeOf, Object);
        e.exports = n;
    },
    5135: (e, t, r)=>{
        var n = r(9652), o = Object.prototype, i = o.hasOwnProperty, a = o.toString, s = n ? n.toStringTag : void 0;
        e.exports = function(e) {
            var t = i.call(e, s), r = e[s];
            try {
                e[s] = void 0;
                var n = !0;
            } catch (e) {}
            var o = a.call(e);
            return n && (t ? e[s] = r : delete e[s]), o;
        };
    },
    3626: (e)=>{
        e.exports = function(e, t) {
            return null == e ? void 0 : e[t];
        };
    },
    4530: (e)=>{
        var t = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
        e.exports = function(e) {
            return t.test(e);
        };
    },
    5557: (e, t, r)=>{
        var n = r(2037);
        e.exports = function() {
            this.__data__ = n ? n(null) : {}, this.size = 0;
        };
    },
    4349: (e)=>{
        e.exports = function(e) {
            var t = this.has(e) && delete this.__data__[e];
            return this.size -= t ? 1 : 0, t;
        };
    },
    407: (e, t, r)=>{
        var n = r(2037), o = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
            var t = this.__data__;
            if (n) {
                var r = t[e];
                return "__lodash_hash_undefined__" === r ? void 0 : r;
            }
            return o.call(t, e) ? t[e] : void 0;
        };
    },
    5134: (e, t, r)=>{
        var n = r(2037), o = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
            var t = this.__data__;
            return n ? void 0 !== t[e] : o.call(t, e);
        };
    },
    9951: (e, t, r)=>{
        var n = r(2037);
        e.exports = function(e, t) {
            var r = this.__data__;
            return this.size += this.has(e) ? 0 : 1, r[e] = n && void 0 === t ? "__lodash_hash_undefined__" : t, this;
        };
    },
    1172: (e, t, r)=>{
        var n = r(8528), o = r(4966), i = r(7839);
        e.exports = function(e) {
            return "function" != typeof e.constructor || i(e) ? {} : n(o(e));
        };
    },
    1813: (e, t, r)=>{
        var n = r(9652), o = r(5664), i = r(5860), a = n ? n.isConcatSpreadable : void 0;
        e.exports = function(e) {
            return i(e) || o(e) || !!(a && e && e[a]);
        };
    },
    8347: (e)=>{
        var t = /^(?:0|[1-9]\d*)$/;
        e.exports = function(e, r) {
            var n = typeof e;
            return !!(r = null == r ? 9007199254740991 : r) && ("number" == n || "symbol" != n && t.test(e)) && e > -1 && e % 1 == 0 && e < r;
        };
    },
    7072: (e, t, r)=>{
        var n = r(3355), o = r(8809), i = r(8347), a = r(4820);
        e.exports = function(e, t, r) {
            if (!a(r)) return !1;
            var s = typeof t;
            return !!("number" == s ? o(r) && i(t, r.length) : "string" == s && t in r) && n(r[t], e);
        };
    },
    5513: (e)=>{
        e.exports = function(e) {
            var t = typeof e;
            return "string" == t || "number" == t || "symbol" == t || "boolean" == t ? "__proto__" !== e : null === e;
        };
    },
    931: (e, t, r)=>{
        var n, o = r(8940), i = (n = /[^.]+$/.exec(o && o.keys && o.keys.IE_PROTO || "")) ? "Symbol(src)_1." + n : "";
        e.exports = function(e) {
            return !!i && i in e;
        };
    },
    7839: (e)=>{
        var t = Object.prototype;
        e.exports = function(e) {
            var r = e && e.constructor;
            return e === ("function" == typeof r && r.prototype || t);
        };
    },
    2470: (e)=>{
        e.exports = function() {
            this.__data__ = [], this.size = 0;
        };
    },
    7289: (e, t, r)=>{
        var n = r(8620), o = Array.prototype.splice;
        e.exports = function(e) {
            var t = this.__data__, r = n(t, e);
            return !(r < 0 || (r == t.length - 1 ? t.pop() : o.call(t, r, 1), --this.size, 0));
        };
    },
    7614: (e, t, r)=>{
        var n = r(8620);
        e.exports = function(e) {
            var t = this.__data__, r = n(t, e);
            return r < 0 ? void 0 : t[r][1];
        };
    },
    3067: (e, t, r)=>{
        var n = r(8620);
        e.exports = function(e) {
            return n(this.__data__, e) > -1;
        };
    },
    9346: (e, t, r)=>{
        var n = r(8620);
        e.exports = function(e, t) {
            var r = this.__data__, o = n(r, e);
            return o < 0 ? (++this.size, r.push([
                e,
                t
            ])) : r[o][1] = t, this;
        };
    },
    6290: (e, t, r)=>{
        var n = r(7643), o = r(3872), i = r(5674);
        e.exports = function() {
            this.size = 0, this.__data__ = {
                hash: new n,
                map: new (i || o),
                string: new n
            };
        };
    },
    4951: (e, t, r)=>{
        var n = r(6330);
        e.exports = function(e) {
            var t = n(this, e).delete(e);
            return this.size -= t ? 1 : 0, t;
        };
    },
    440: (e, t, r)=>{
        var n = r(6330);
        e.exports = function(e) {
            return n(this, e).get(e);
        };
    },
    6180: (e, t, r)=>{
        var n = r(6330);
        e.exports = function(e) {
            return n(this, e).has(e);
        };
    },
    7719: (e, t, r)=>{
        var n = r(6330);
        e.exports = function(e, t) {
            var r = n(this, e), o = r.size;
            return r.set(e, t), this.size += r.size == o ? 0 : 1, this;
        };
    },
    2037: (e, t, r)=>{
        var n = r(489)(Object, "create");
        e.exports = n;
    },
    3003: (e)=>{
        e.exports = function(e) {
            var t = [];
            if (null != e) for(var r in Object(e))t.push(r);
            return t;
        };
    },
    9693: (e, t, r)=>{
        e = r.nmd(e);
        var n = r(3566), o = t && !t.nodeType && t, i = o && e && !e.nodeType && e, a = i && i.exports === o && n.process, s = function() {
            try {
                return i && i.require && i.require("util").types || a && a.binding && a.binding("util");
            } catch (e) {}
        }();
        e.exports = s;
    },
    3744: (e)=>{
        var t = Object.prototype.toString;
        e.exports = function(e) {
            return t.call(e);
        };
    },
    6148: (e)=>{
        e.exports = function(e, t) {
            return function(r) {
                return e(t(r));
            };
        };
    },
    2549: (e, t, r)=>{
        var n = r(6562), o = Math.max;
        e.exports = function(e, t, r) {
            return t = o(void 0 === t ? e.length - 1 : t, 0), function() {
                for(var i = arguments, a = -1, s = o(i.length - t, 0), u = Array(s); ++a < s;)u[a] = i[t + a];
                a = -1;
                for(var c = Array(t + 1); ++a < t;)c[a] = i[a];
                return c[t] = r(u), n(e, this, c);
            };
        };
    },
    4818: (e, t, r)=>{
        var n = r(3566), o = "object" == typeof self && self && self.Object === Object && self, i = n || o || Function("return this")();
        e.exports = i;
    },
    7700: (e)=>{
        e.exports = function(e, t) {
            if (("constructor" !== t || "function" != typeof e[t]) && "__proto__" != t) return e[t];
        };
    },
    6613: (e, t, r)=>{
        var n = r(4274), o = r(3546)(n);
        e.exports = o;
    },
    3546: (e)=>{
        var t = Date.now;
        e.exports = function(e) {
            var r = 0, n = 0;
            return function() {
                var o = t(), i = 16 - (o - n);
                if (n = o, i > 0) {
                    if (++r >= 800) return arguments[0];
                } else r = 0;
                return e.apply(void 0, arguments);
            };
        };
    },
    1490: (e, t, r)=>{
        var n = r(3872);
        e.exports = function() {
            this.__data__ = new n, this.size = 0;
        };
    },
    2594: (e)=>{
        e.exports = function(e) {
            var t = this.__data__, r = t.delete(e);
            return this.size = t.size, r;
        };
    },
    5953: (e)=>{
        e.exports = function(e) {
            return this.__data__.get(e);
        };
    },
    4667: (e)=>{
        e.exports = function(e) {
            return this.__data__.has(e);
        };
    },
    4615: (e, t, r)=>{
        var n = r(3872), o = r(5674), i = r(2462);
        e.exports = function(e, t) {
            var r = this.__data__;
            if (r instanceof n) {
                var a = r.__data__;
                if (!o || a.length < 199) return a.push([
                    e,
                    t
                ]), this.size = ++r.size, this;
                r = this.__data__ = new i(a);
            }
            return r.set(e, t), this.size = r.size, this;
        };
    },
    1304: (e)=>{
        var t = Function.prototype.toString;
        e.exports = function(e) {
            if (null != e) {
                try {
                    return t.call(e);
                } catch (e) {}
                try {
                    return e + "";
                } catch (e) {}
            }
            return "";
        };
    },
    5153: (e)=>{
        var t = "a-z\\xdf-\\xf6\\xf8-\\xff", r = "A-Z\\xc0-\\xd6\\xd8-\\xde", n = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", o = "[" + n + "]", i = "\\d+", a = "[" + t + "]", s = "[^\\ud800-\\udfff" + n + i + "\\u2700-\\u27bf" + t + r + "]", u = "(?:\\ud83c[\\udde6-\\uddff]){2}", c = "[\\ud800-\\udbff][\\udc00-\\udfff]", l = "[" + r + "]", d = "(?:" + a + "|" + s + ")", f = "(?:" + l + "|" + s + ")", m = "(?:['’](?:d|ll|m|re|s|t|ve))?", p = "(?:['’](?:D|LL|M|RE|S|T|VE))?", h = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?", g = "[\\ufe0e\\ufe0f]?", v = g + h + "(?:\\u200d(?:" + [
            "[^\\ud800-\\udfff]",
            u,
            c
        ].join("|") + ")" + g + h + ")*", y = "(?:" + [
            "[\\u2700-\\u27bf]",
            u,
            c
        ].join("|") + ")" + v, b = RegExp([
            l + "?" + a + "+" + m + "(?=" + [
                o,
                l,
                "$"
            ].join("|") + ")",
            f + "+" + p + "(?=" + [
                o,
                l + d,
                "$"
            ].join("|") + ")",
            l + "?" + d + "+" + m,
            l + "+" + p,
            "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",
            "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",
            i,
            y
        ].join("|"), "g");
        e.exports = function(e) {
            return e.match(b) || [];
        };
    },
    7477: (e)=>{
        e.exports = function(e) {
            return function() {
                return e;
            };
        };
    },
    3355: (e)=>{
        e.exports = function(e, t) {
            return e === t || e != e && t != t;
        };
    },
    9423: (e, t, r)=>{
        var n = r(8288);
        e.exports = function(e) {
            return null != e && e.length ? n(e, 1) : [];
        };
    },
    1191: (e)=>{
        e.exports = function(e) {
            return e;
        };
    },
    5664: (e, t, r)=>{
        var n = r(6651), o = r(1408), i = Object.prototype, a = i.hasOwnProperty, s = i.propertyIsEnumerable, u = n(function() {
            return arguments;
        }()) ? n : function(e) {
            return o(e) && a.call(e, "callee") && !s.call(e, "callee");
        };
        e.exports = u;
    },
    5860: (e)=>{
        var t = Array.isArray;
        e.exports = t;
    },
    8809: (e, t, r)=>{
        var n = r(830), o = r(7906);
        e.exports = function(e) {
            return null != e && o(e.length) && !n(e);
        };
    },
    5274: (e, t, r)=>{
        var n = r(8809), o = r(1408);
        e.exports = function(e) {
            return o(e) && n(e);
        };
    },
    9571: (e, t, r)=>{
        e = r.nmd(e);
        var n = r(4818), o = r(8585), i = t && !t.nodeType && t, a = i && e && !e.nodeType && e, s = a && a.exports === i ? n.Buffer : void 0, u = (s ? s.isBuffer : void 0) || o;
        e.exports = u;
    },
    830: (e, t, r)=>{
        var n = r(2759), o = r(4820);
        e.exports = function(e) {
            if (!o(e)) return !1;
            var t = n(e);
            return "[object Function]" == t || "[object GeneratorFunction]" == t || "[object AsyncFunction]" == t || "[object Proxy]" == t;
        };
    },
    7906: (e)=>{
        e.exports = function(e) {
            return "number" == typeof e && e > -1 && e % 1 == 0 && e <= 9007199254740991;
        };
    },
    4820: (e)=>{
        e.exports = function(e) {
            var t = typeof e;
            return null != e && ("object" == t || "function" == t);
        };
    },
    1408: (e)=>{
        e.exports = function(e) {
            return null != e && "object" == typeof e;
        };
    },
    1969: (e, t, r)=>{
        var n = r(2759), o = r(4966), i = r(1408), a = Function.prototype, s = Object.prototype, u = a.toString, c = s.hasOwnProperty, l = u.call(Object);
        e.exports = function(e) {
            if (!i(e) || "[object Object]" != n(e)) return !1;
            var t = o(e);
            if (null === t) return !0;
            var r = c.call(t, "constructor") && t.constructor;
            return "function" == typeof r && r instanceof r && u.call(r) == l;
        };
    },
    1918: (e, t, r)=>{
        var n = r(2759), o = r(1408);
        e.exports = function(e) {
            return "symbol" == typeof e || o(e) && "[object Symbol]" == n(e);
        };
    },
    1859: (e, t, r)=>{
        var n = r(9920), o = r(8275), i = r(9693), a = i && i.isTypedArray, s = a ? o(a) : n;
        e.exports = s;
    },
    2551: (e, t, r)=>{
        var n = r(1998), o = r(3339), i = r(8809);
        e.exports = function(e) {
            return i(e) ? n(e, !0) : o(e);
        };
    },
    7168: (e, t, r)=>{
        var n = r(7604), o = r(3102)(function(e, t, r) {
            n(e, t, r);
        });
        e.exports = o;
    },
    8585: (e)=>{
        e.exports = function() {
            return !1;
        };
    },
    2963: (e, t, r)=>{
        var n = r(7200), o = r(2551);
        e.exports = function(e) {
            return n(e, o(e));
        };
    },
    8395: (e, t, r)=>{
        var n = r(5208);
        e.exports = function(e) {
            return null == e ? "" : n(e);
        };
    },
    5377: (e, t, r)=>{
        var n = r(7554), o = r(3675), i = r(1445), a = r(1453), s = r(5274), u = Math.max;
        e.exports = function(e) {
            if (!e || !e.length) return [];
            var t = 0;
            return e = n(e, function(e) {
                if (s(e)) return t = u(e.length, t), !0;
            }), a(t, function(t) {
                return o(e, i(t));
            });
        };
    },
    582: (e, t, r)=>{
        var n = r(8247), o = r(4530), i = r(8395), a = r(5153);
        e.exports = function(e, t, r) {
            return e = i(e), void 0 === (t = r ? void 0 : t) ? o(e) ? a(e) : n(e) : e.match(t) || [];
        };
    },
    3145: (e, t, r)=>{
        var n = r(5757)(r(5377));
        e.exports = n;
    },
    7984: (e, t, r)=>{
        e.exports = r.p + "assets/core/cesdk.data";
    },
    2934: (e, t, r)=>{
        e.exports = r.p + "assets/core/cesdk.wasm";
    }
}, t = {};
function r(n) {
    var o = t[n];
    if (void 0 !== o) return o.exports;
    var i = t[n] = {
        id: n,
        loaded: !1,
        exports: {}
    };
    return e[n](i, i.exports, r), i.loaded = !0, i.exports;
}
r.n = (e)=>{
    var t = e && e.__esModule ? ()=>e.default : ()=>e;
    return r.d(t, {
        a: t
    }), t;
}, r.d = (e, t)=>{
    for(var n in t)r.o(t, n) && !r.o(e, n) && Object.defineProperty(e, n, {
        enumerable: !0,
        get: t[n]
    });
}, r.g = function() {
    if ("object" == typeof globalThis) return globalThis;
    try {
        return this || new Function("return this")();
    } catch (e) {
        if ("object" == typeof window) return window;
    }
}(), r.o = (e, t)=>Object.prototype.hasOwnProperty.call(e, t), r.r = (e)=>{
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
    }), Object.defineProperty(e, "__esModule", {
        value: !0
    });
}, r.nmd = (e)=>(e.paths = [], e.children || (e.children = []), e), r.p = "";
var n = {};
(()=>{
    r.d(n, {
        Il: ()=>x,
        yQ: ()=>t,
        Ju: ()=>o,
        in: ()=>Ae,
        HY: ()=>_e,
        uU: ()=>w,
        ZP: ()=>xt
    });
    var e, t = {};
    r.r(t), function(e) {
        e.Scene = "//ly.img.ubq/scene", e.Stack = "//ly.img.ubq/stack", e.Camera = "//ly.img.ubq/camera", e.Page = "//ly.img.ubq/page", e.Image = "//ly.img.ubq/image", e.Video = "//ly.img.ubq/video", e.Text = "//ly.img.ubq/text", e.Sticker = "//ly.img.ubq/sticker", e.VectorPath = "//ly.img.ubq/vector_path", e.RectShape = "//ly.img.ubq/shapes/rect", e.LineShape = "//ly.img.ubq/shapes/line", e.StarShape = "//ly.img.ubq/shapes/star", e.PolygonShape = "//ly.img.ubq/shapes/polygon", e.EllipseShape = "//ly.img.ubq/shapes/ellipse", e.Group = "//ly.img.ubq/group";
    }(e || (e = {}));
    const o = e;
    var i, a, s, u, c, l, d, f, m, p, h, g, v, y, b;
    function _(e) {
        switch(e){
            case 0:
                return l.Left;
            case 1:
                return l.Middle;
            case 2:
                return l.Right;
            default:
                return l.Unknown;
        }
    }
    !function(e) {
        e[e.Pixel = 0] = "Pixel", e[e.Millimeter = 1] = "Millimeter", e[e.Inch = 2] = "Inch";
    }(i || (i = {})), function(e) {
        e.toDesignUnit = function(t) {
            return t === e.Pixel ? "px" : t === e.Millimeter ? "mm" : t === e.Inch ? "in" : void 0;
        }, e.fromDesignUnit = function(t) {
            return "px" === t ? e.Pixel : "mm" === t ? e.Millimeter : "in" === t ? e.Inch : void 0;
        }, e.getLabel = function(t) {
            switch(t){
                case e.Pixel:
                    return "px";
                case e.Millimeter:
                    return "mm";
                case e.Inch:
                    return "in";
                default:
                    return "";
            }
        }, e.convertToPoints = function(t, r, n) {
            switch(r){
                case e.Pixel:
                    return t / n * 72;
                case e.Inch:
                    return 72 * t;
                case e.Millimeter:
                    return 72 * t / 25.4;
                default:
                    throw new Error("Unknown design unit!");
            }
        };
    }(i || (i = {})), function(e) {
        e[e.Pending = 0] = "Pending", e[e.Ready = 1] = "Ready", e[e.Error = 2] = "Error";
    }(a || (a = {})), function(e) {
        e.Added = "DesignBlockAddedEvent", e.Updated = "DesignBlockUpdatedEvent", e.Removed = "DesignBlockRemovedEvent";
    }(s || (s = {})), function(e) {
        e[e.Left = 0] = "Left", e[e.Right = 1] = "Right", e[e.Center = 2] = "Center";
    }(u || (u = {})), function(e) {
        e[e.Top = 0] = "Top", e[e.Bottom = 1] = "Bottom", e[e.Center = 2] = "Center";
    }(c || (c = {})), function(e) {
        e[e.Left = 0] = "Left", e[e.Right = 1] = "Right", e[e.Middle = 2] = "Middle", e[e.Unknown = 255] = "Unknown";
    }(l || (l = {})), function(e) {
        e[e.Up = 0] = "Up", e[e.Down = 1] = "Down";
    }(d || (d = {})), function(e) {
        e[e.Key0 = 0] = "Key0", e[e.Key1 = 1] = "Key1", e[e.Key2 = 2] = "Key2", e[e.Key3 = 3] = "Key3", e[e.Key4 = 4] = "Key4", e[e.Key5 = 5] = "Key5", e[e.Key6 = 6] = "Key6", e[e.Key7 = 7] = "Key7", e[e.Key8 = 8] = "Key8", e[e.Key9 = 9] = "Key9", e[e.A = 10] = "A", e[e.B = 11] = "B", e[e.C = 12] = "C", e[e.D = 13] = "D", e[e.E = 14] = "E", e[e.F = 15] = "F", e[e.G = 16] = "G", e[e.H = 17] = "H", e[e.I = 18] = "I", e[e.J = 19] = "J", e[e.K = 20] = "K", e[e.L = 21] = "L", e[e.M = 22] = "M", e[e.N = 23] = "N", e[e.O = 24] = "O", e[e.P = 25] = "P", e[e.Q = 26] = "Q", e[e.R = 27] = "R", e[e.S = 28] = "S", e[e.T = 29] = "T", e[e.U = 30] = "U", e[e.V = 31] = "V", e[e.W = 32] = "W", e[e.X = 33] = "X", e[e.Y = 34] = "Y", e[e.Z = 35] = "Z", e[e.ArrowLeft = 36] = "ArrowLeft", e[e.ArrowRight = 37] = "ArrowRight", e[e.ArrowUp = 38] = "ArrowUp", e[e.ArrowDown = 39] = "ArrowDown", e[e.Backspace = 40] = "Backspace", e[e.Enter = 41] = "Enter", e[e.Space = 42] = "Space", e[e.Escape = 43] = "Escape", e[e.Delete = 44] = "Delete", e[e.Control = 45] = "Control", e[e.Option = 46] = "Option", e[e.Shift = 47] = "Shift", e[e.Unknown = 255] = "Unknown";
    }(f || (f = {})), function(e) {
        e[e.Thin = 100] = "Thin", e[e.ExtraLight = 200] = "ExtraLight", e[e.Light = 300] = "Light", e[e.Normal = 400] = "Normal", e[e.Medium = 500] = "Medium", e[e.SemiBold = 600] = "SemiBold", e[e.Bold = 700] = "Bold", e[e.ExtraBold = 800] = "ExtraBold", e[e.Heavy = 900] = "Heavy";
    }(m || (m = {})), function(e) {
        e[e.Normal = 0] = "Normal", e[e.Italic = 1] = "Italic";
    }(p || (p = {})), function(e) {
        e.Bold = "bold", e.Italic = "italic";
    }(h || (h = {})), function(e) {
        e[e.Undefined = 0] = "Undefined", e[e.DesignUnit = 1] = "DesignUnit", e[e.Percent = 2] = "Percent", e[e.Auto = 3] = "Auto";
    }(g || (g = {})), function(e) {
        e[e.Free = 0] = "Free", e[e.VerticalStack = 1] = "VerticalStack", e[e.HorizontalStack = 2] = "HorizontalStack";
    }(v || (v = {})), function(e) {
        e[e.Information = 0] = "Information", e[e.Warning = 1] = "Warning", e[e.Error = 2] = "Error";
    }(y || (y = {})), function(e) {
        e[e.Creator = 0] = "Creator", e[e.Adopter = 1] = "Adopter", e[e.Viewer = 2] = "Viewer", e[e.Presenter = 3] = "Presenter";
    }(b || (b = {}));
    const w = b;
    var E, x, k, S;
    !function(e) {
        e.Unknown = "", e.Boolean = "bool", e.Boolean2 = "ubq/math/bool2", e.Int = "int", e.UInt8 = "uint8_t", e.Int32 = "int32_t", e.UInt32 = "uint32_t", e.Int2 = "ubq/math/ivec2", e.Size2 = "ubq/types/Size2", e.Color = "ubq/types/Color", e.Double = "double", e.Float = "float", e.Float2 = "ubq/math/vec2", e.Float3 = "ubq/math/vec3", e.Float4 = "ubq/math/vec4", e.String = "string", e.HorizontalTextAlignment = "ubq/types/HorizontalTextAlignment", e.VerticalTextAlignment = "ubq/types/VerticalTextAlignment", e.Margin2D = "ubq/types/OuterMargin2D";
    }(E || (E = {})), function(e) {
        let t;
        !function(e) {
            e[e.sRGB = 0] = "sRGB", e[e.CMYK = 1] = "CMYK", e[e.SpotColor = 2] = "SpotColor";
        }(t = e.ColorSpace || (e.ColorSpace = {})), e.fromRGBA = function(e) {
            return {
                colorSpace: t.sRGB,
                components: {
                    x: e.r,
                    y: e.g,
                    z: e.b,
                    w: e.a
                },
                spotColor: {
                    name: "",
                    rgbApproximation: e,
                    cmykApproximation: {
                        c: .75,
                        m: .68,
                        y: .67,
                        k: .9
                    }
                }
            };
        }, e.toRGBA = function(e) {
            switch(e.colorSpace){
                case t.sRGB:
                    return {
                        r: e.components.x,
                        g: e.components.y,
                        b: e.components.z,
                        a: e.components.w
                    };
                case t.SpotColor:
                    return e.spotColor.rgbApproximation;
                case t.CMYK:
                    throw new Error("CMYK to RGBA conversion not supported!");
                default:
                    throw new Error("Unknown color space!");
            }
        };
    }(x || (x = {})), function(e) {
        e.Transform = "ubq/editMode/transform", e.Crop = "ubq/editMode/crop", e.Text = "ubq/editMode/text";
    }(k || (k = {})), function(e) {
        e[e.Arrow = 0] = "Arrow", e[e.Move = 1] = "Move", e[e.MoveNotPermitted = 2] = "MoveNotPermitted", e[e.Resize = 3] = "Resize", e[e.Rotate = 4] = "Rotate", e[e.Text = 5] = "Text";
    }(S || (S = {}));
    const C = (e, t)=>({
            x: e.x * t,
            y: e.y * t
        });
    function T(e, t, r = Number.EPSILON) {
        return Math.abs(e - t) < r;
    }
    class A {
        constructor(e){
            Object.defineProperty(this, "ubq", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), this.ubq = e;
        }
        useInternalAPI(e) {
            const t = this.ubq.getInternalAPI();
            try {
                return e(t);
            } finally{
                t.delete();
            }
        }
        async createElement(e, t, r) {
            const n = await this.execute("ubq/designblocks/create", e);
            this.execute("ubq/designblocks/addToParent", [
                n,
                t
            ]);
            const o = F(this.ubq.getLastFrameWidth(t)), i = F(this.ubq.getLastFrameHeight(t)), { position: a, size: s } = function(e, t, r = 8 / 13) {
                const n = ((e, t)=>{
                    const r = e.x / e.y, n = t.x / t.y;
                    return C(t, r > n ? e.y / t.y : e.x / t.x);
                })(e, t), o = C(n, r);
                return {
                    position: {
                        x: .5 * (e.x - o.x),
                        y: .5 * (e.y - o.y)
                    },
                    size: o
                };
            }({
                x: o,
                y: i
            }, {
                x: r.width,
                y: r.height
            }, 8 / 13);
            this.execute("ubq/layout/setAbsoluteSize", {
                id: n,
                size: {
                    width: s.x,
                    height: s.y
                }
            }), s.x || this.execute("ubq/layout/setAutoWidth", {
                id: n
            }), s.y || this.execute("ubq/layout/setAutoHeight", {
                id: n
            });
            const u = function(e = {
                x: 50,
                y: 50
            }) {
                return {
                    x: Math.random() * e.x,
                    y: Math.random() * e.y
                };
            }({
                x: .08 * o,
                y: .08 * i
            });
            return await this.execute("ubq/layout/setAbsolutePosition", {
                id: n,
                position: {
                    left: a.x + u.x,
                    top: a.y + u.y
                }
            }), n;
        }
        setValue(e, t, r, n) {
            return this.useInternalAPI((o)=>F(o.setValue(e, t, r, n)));
        }
        getValue(e, t, r) {
            return this.useInternalAPI((n)=>F(n.getValue(e, t, r)));
        }
        async getEditorState() {
            return this.execute("ubq/editor/getEditorState");
        }
        async setEditorState(e) {
            return this.execute("ubq/editor/setEditorState", e);
        }
        async execute(e, t) {
            return new Promise((r, n)=>{
                this.useInternalAPI((o)=>o.ubqExecute(e, t, (e)=>{
                        try {
                            const t = F(e);
                            r(t);
                        } catch (e) {
                            n(e);
                        }
                    })).delete();
            });
        }
    }
    function F(e) {
        if (e.isValid()) {
            const t = e.value();
            return e.delete(), t;
        }
        {
            const t = e.error(), r = t.publicMessage();
            throw t.delete(), e.delete(), new Error(r);
        }
    }
    const P = (e, t = !0)=>{
        const r = [];
        for(let t = 0; t < e.size(); t += 1)r.push(e.get(t));
        return t && e.delete(), r;
    };
    var D, L = function(e, t, r, n) {
        if ("a" === r && !n) throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
    };
    class j {
        constructor(e){
            D.set(this, void 0), function(e, t, r, n, o) {
                if ("TURBOPACK compile-time falsy", 0) {
                    "TURBOPACK unreachable";
                }
                if ("TURBOPACK compile-time falsy", 0) {
                    "TURBOPACK unreachable";
                }
                if ("function" == typeof t ? e !== t || !o : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
                ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : o ? o.value = r : t.set(e, r);
            }(this, D, e, "f");
        }
        addSource(e) {
            F(L(this, D, "f").addAssetSource(e.id, async (t, r, n)=>{
                const o = Object.assign(Object.assign({}, r), {
                    tags: P(r.tags),
                    groups: P(r.groups),
                    excludeGroups: P(r.excludeGroups)
                }), i = await e.findAssets(t, o);
                n.invoke(i);
            }, async (t, r)=>{
                const n = await e.getGroups(t);
                r.invoke(n);
            }, ()=>{
                try {
                    return e.getTypes();
                } catch (e) {
                    return console.error(e), [];
                }
            }, ()=>{
                var t;
                return e.credits ? {
                    name: e.credits.name,
                    url: null !== (t = e.credits.url) && void 0 !== t ? t : ""
                } : {
                    name: "",
                    url: ""
                };
            }, ()=>{
                var t;
                return e.license ? {
                    name: e.license.name,
                    url: null !== (t = e.license.url) && void 0 !== t ? t : ""
                } : {
                    name: "",
                    url: ""
                };
            }));
        }
        removeSource(e) {
            F(L(this, D, "f").removeAssetSource(e));
        }
        findAllSources() {
            return P(L(this, D, "f").findAllAssetSources());
        }
        findSourcesByType(e) {
            return P(L(this, D, "f").findAssetSourcesByType(e));
        }
        findAssetsInSource(e, t, r) {
            return new Promise((n)=>{
                var o, i, a, s, u, c, l;
                let d = null !== (o = null == r ? void 0 : r.tags) && void 0 !== o ? o : [];
                Array.isArray(d) || (d = [
                    d
                ]);
                const f = {
                    perPage: null !== (i = null == r ? void 0 : r.perPage) && void 0 !== i ? i : 0,
                    page: null !== (a = null == r ? void 0 : r.page) && void 0 !== a ? a : 0,
                    query: null !== (s = null == r ? void 0 : r.query) && void 0 !== s ? s : "",
                    tags: d,
                    groups: null !== (u = null == r ? void 0 : r.groups) && void 0 !== u ? u : [],
                    excludeGroups: null !== (c = null == r ? void 0 : r.excludeGroups) && void 0 !== c ? c : [],
                    locale: null !== (l = null == r ? void 0 : r.locale) && void 0 !== l ? l : ""
                };
                L(this, D, "f").findAssetSourceAssets(e, t, f, (e)=>{
                    const t = F(e), r = P(t.assets).map((e)=>{
                        var t, r, n, o, i, a, s, u;
                        const c = Object.assign(Object.assign({}, e), {
                            groups: P(e.groups),
                            size: {
                                width: e.width,
                                height: e.height
                            },
                            meta: void 0,
                            tags: P(e.tags)
                        });
                        return e.meta.size() > 0 && (c.meta = {}, P(e.meta.keys()).forEach((t)=>{
                            c.meta[t] = e.meta.get(t);
                        })), 0 === (null === (t = c.groups) || void 0 === t ? void 0 : t.length) && delete c.groups, c.locale || delete c.locale, c.label || delete c.label, 0 === (null === (r = c.tags) || void 0 === r ? void 0 : r.length) && delete c.tags, c.context.createdByRole || delete c.context.createdByRole, (null === (n = c.credits) || void 0 === n ? void 0 : n.name) || (null === (o = c.credits) || void 0 === o ? void 0 : o.url) ? c.credits.url || delete c.credits.url : delete c.credits, (null === (i = c.license) || void 0 === i ? void 0 : i.name) || (null === (a = c.license) || void 0 === a ? void 0 : a.url) ? c.license.url || delete c.license.url : delete c.license, (null === (s = c.utm) || void 0 === s ? void 0 : s.source) || (null === (u = c.utm) || void 0 === u ? void 0 : u.medium) ? (c.utm.source || delete c.utm.source, c.utm.medium || delete c.utm.medium) : delete c.utm, c;
                    });
                    n({
                        assets: r,
                        currentPage: t.currentPage,
                        nextPage: -1 === t.nextPage ? void 0 : t.nextPage,
                        total: t.total
                    });
                });
            });
        }
        async getGroupsInSource(e, t) {
            return new Promise((r)=>{
                L(this, D, "f").getAssetSourceGroups(e, t, (e)=>{
                    const t = F(e), n = P(t);
                    r(n);
                });
            });
        }
        getTypesInSource(e) {
            return P(F(L(this, D, "f").getAssetSourceTypes(e)));
        }
        hasTypeInSource(e, t) {
            return F(L(this, D, "f").hasAssetSourceType(e, t));
        }
        getSourceCredits(e) {
            const t = F(L(this, D, "f").getAssetSourceCredits(e));
            if (t.name || t.url) return t.url ? t : {
                name: t.name,
                url: void 0
            };
        }
        getSourceLicense(e) {
            const t = F(L(this, D, "f").getAssetSourceLicense(e));
            if (t.name || t.url) return t.url ? t : {
                name: t.name,
                url: void 0
            };
        }
    }
    D = new WeakMap;
    const B = {
        canManageAssets: !1,
        getGroups: ()=>Promise.resolve([]),
        findAssets () {
            throw new Error("Implementation required");
        },
        getAsset () {
            throw new Error("Implementation required");
        },
        updateAsset () {
            throw new Error("Implementation required");
        },
        addAsset () {
            throw new Error("Implementation required");
        },
        removeAsset () {
            throw new Error("Implementation required");
        },
        getTypes () {
            throw new Error("Implementation required");
        },
        hasType () {
            throw new Error("Implementation required");
        }
    };
    var M = r(9423), R = r.n(M), I = r(582), O = r.n(I), U = r(3145), q = r.n(U);
    const G = [
        o.RectShape,
        o.LineShape,
        o.StarShape,
        o.PolygonShape,
        o.EllipseShape
    ];
    var z, V, W, N, H, $, X, Y, Q = function(e, t, r, n, o) {
        if ("m" === n) throw new TypeError("Private method is not writable");
        if ("a" === n && !o) throw new TypeError("Private accessor was defined without a setter");
        if ("function" == typeof t ? e !== t || !o : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return "a" === n ? o.call(e, r) : o ? o.value = r : t.set(e, r), r;
    }, K = function(e, t, r, n) {
        if ("a" === r && !n) throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
    };
    V = new WeakMap, W = new WeakMap, N = new WeakMap, H = new WeakMap, $ = new WeakMap, z = new WeakSet, X = async function(e, t) {
        return this.helper.execute("ubq/assets/getMetadata", [
            e,
            t
        ]);
    }, Y = async function(e, t) {
        const r = await this.helper.execute("ubq/assets/getRegisteredCategoryIDsForType", t), n = [];
        return await Promise.all(r.map(async (t)=>{
            if (t.endsWith(e)) {
                const e = await this.helper.execute("ubq/assets/getAssetsInCategory", t);
                n.splice(n.length - 1, 0, ...e);
            }
        })), n;
    };
    class Z extends TypeError {
        constructor(e, t){
            let r;
            const { message: n, ...o } = e, { path: i } = e;
            super(0 === i.length ? n : "At path: " + i.join(".") + " -- " + n), this.value = void 0, this.key = void 0, this.type = void 0, this.refinement = void 0, this.path = void 0, this.branch = void 0, this.failures = void 0, Object.assign(this, o), this.name = this.constructor.name, this.failures = ()=>{
                var n;
                return null != (n = r) ? n : r = [
                    e,
                    ...t()
                ];
            };
        }
    }
    function J(e) {
        return "object" == typeof e && null != e;
    }
    function ee(e) {
        return "string" == typeof e ? JSON.stringify(e) : "" + e;
    }
    function te(e, t, r, n) {
        if (!0 === e) return;
        !1 === e ? e = {} : "string" == typeof e && (e = {
            message: e
        });
        const { path: o, branch: i } = t, { type: a } = r, { refinement: s, message: u = "Expected a value of type `" + a + "`" + (s ? " with refinement `" + s + "`" : "") + ", but received: `" + ee(n) + "`" } = e;
        return {
            value: n,
            type: a,
            refinement: s,
            key: o[o.length - 1],
            path: o,
            branch: i,
            ...e,
            message: u
        };
    }
    function* re(e, t, r, n) {
        var o;
        J(o = e) && "function" == typeof o[Symbol.iterator] || (e = [
            e
        ]);
        for (const o of e){
            const e = te(o, t, r, n);
            e && (yield e);
        }
    }
    function* ne(e, t, r = {}) {
        const { path: n = [], branch: o = [
            e
        ], coerce: i = !1, mask: a = !1 } = r, s = {
            path: n,
            branch: o
        };
        if (i && (e = t.coercer(e, s), a && "type" !== t.type && J(t.schema) && J(e) && !Array.isArray(e))) for(const r in e)void 0 === t.schema[r] && delete e[r];
        let u = !0;
        for (const r of t.validator(e, s))u = !1, yield [
            r,
            void 0
        ];
        for (let [r, c, l] of t.entries(e, s)){
            const t = ne(c, l, {
                path: void 0 === r ? n : [
                    ...n,
                    r
                ],
                branch: void 0 === r ? o : [
                    ...o,
                    c
                ],
                coerce: i,
                mask: a
            });
            for (const n of t)n[0] ? (u = !1, yield [
                n[0],
                void 0
            ]) : i && (c = n[1], void 0 === r ? e = c : e instanceof Map ? e.set(r, c) : e instanceof Set ? e.add(c) : J(e) && (e[r] = c));
        }
        if (u) for (const r of t.refiner(e, s))u = !1, yield [
            r,
            void 0
        ];
        u && (yield [
            void 0,
            e
        ]);
    }
    class oe {
        constructor(e){
            this.TYPE = void 0, this.type = void 0, this.schema = void 0, this.coercer = void 0, this.validator = void 0, this.refiner = void 0, this.entries = void 0;
            const { type: t, schema: r, validator: n, refiner: o, coercer: i = (e)=>e, entries: a = function*() {} } = e;
            this.type = t, this.schema = r, this.entries = a, this.coercer = i, this.validator = n ? (e, t)=>re(n(e, t), t, this, e) : ()=>[], this.refiner = o ? (e, t)=>re(o(e, t), t, this, e) : ()=>[];
        }
        assert(e) {
            return function(e, t) {
                const r = ie(e, t);
                if (r[0]) throw r[0];
            }(e, this);
        }
        create(e) {
            return function(e, t) {
                const r = ie(e, t, {
                    coerce: !0
                });
                if (r[0]) throw r[0];
                return r[1];
            }(e, this);
        }
        is(e) {
            return function(e, t) {
                return !ie(e, t)[0];
            }(e, this);
        }
        mask(e) {
            return function(e, t) {
                const r = ie(e, t, {
                    coerce: !0,
                    mask: !0
                });
                if (r[0]) throw r[0];
                return r[1];
            }(e, this);
        }
        validate(e, t = {}) {
            return ie(e, this, t);
        }
    }
    function ie(e, t, r = {}) {
        const n = ne(e, t, r), o = function(e) {
            const { done: t, value: r } = e.next();
            return t ? void 0 : r;
        }(n);
        return o[0] ? [
            new Z(o[0], function*() {
                for (const e of n)e[0] && (yield e[0]);
            }),
            void 0
        ] : [
            void 0,
            o[1]
        ];
    }
    function ae(e, t) {
        return new oe({
            type: e,
            schema: null,
            validator: t
        });
    }
    function se(e) {
        return new oe({
            type: "array",
            schema: e,
            *entries (t) {
                if (e && Array.isArray(t)) for (const [r, n] of t.entries())yield [
                    r,
                    n,
                    e
                ];
            },
            coercer: (e)=>Array.isArray(e) ? e.slice() : e,
            validator: (e)=>Array.isArray(e) || "Expected an array value, but received: " + ee(e)
        });
    }
    function ue() {
        return ae("boolean", (e)=>"boolean" == typeof e);
    }
    function ce() {
        return ae("integer", (e)=>"number" == typeof e && !isNaN(e) && Number.isInteger(e) || "Expected an integer, but received: " + ee(e));
    }
    function le() {
        return ae("number", (e)=>"number" == typeof e && !isNaN(e) || "Expected a number, but received: " + ee(e));
    }
    function de(e) {
        const t = e ? Object.keys(e) : [], r = ae("never", ()=>!1);
        return new oe({
            type: "object",
            schema: e || null,
            *entries (n) {
                if (e && J(n)) {
                    const o = new Set(Object.keys(n));
                    for (const r of t)o.delete(r), yield [
                        r,
                        n[r],
                        e[r]
                    ];
                    for (const e of o)yield [
                        e,
                        n[e],
                        r
                    ];
                }
            },
            validator: (e)=>J(e) || "Expected an object, but received: " + ee(e),
            coercer: (e)=>J(e) ? {
                    ...e
                } : e
        });
    }
    function fe() {
        return ae("string", (e)=>"string" == typeof e || "Expected a string, but received: " + ee(e));
    }
    function me(e, t, r = {}) {
        const { exclusive: n } = r;
        return ge(e, "max", (r)=>n ? r < t : r <= t || "Expected a " + e.type + " less than " + (n ? "" : "or equal to ") + t + " but received `" + r + "`");
    }
    function pe(e, t, r = {}) {
        const { exclusive: n } = r;
        return ge(e, "min", (r)=>n ? r > t : r >= t || "Expected a " + e.type + " greater than " + (n ? "" : "or equal to ") + t + " but received `" + r + "`");
    }
    function he(e) {
        return ge(e, "nonempty", (t)=>(function(e) {
                return e instanceof Map || e instanceof Set ? e.size : e.length;
            })(t) > 0 || "Expected a nonempty " + e.type + " but received an empty one");
    }
    function ge(e, t, r) {
        return new oe({
            ...e,
            *refiner (n, o) {
                yield* e.refiner(n, o);
                const i = re(r(n, o), o, e, n);
                for (const e of i)yield {
                    ...e,
                    refinement: t
                };
            }
        });
    }
    function ve(e, t, r) {
        const [n] = ie(t, r);
        if (n) throw n.message = `Error in argument '${e}': ${n.message}`, n;
    }
    function ye() {
        const e = /image\/(png|jpeg|x-tga)|video\/mp4|application\/octet-stream|application\/pdf/;
        return ae("MimeType", (t)=>!("string" != typeof t || !e.test(t)) || {
                message: `expected one of "image/png", "image/jpeg", "image/x-tga", "video/mp4", "application/pdf" or "application/octet-stream", but got "${t}"`
            });
    }
    var be;
    !function(e) {
        e.Png = "image/png", e.Jpeg = "image/jpeg", e.Tga = "image/x-tga", e.Mp4 = "video/mp4", e.Binary = "application/octet-stream", e.Pdf = "application/pdf", e.Zip = "application/zip";
    }(be || (be = {}));
    const _e = be;
    var we;
    !function(e) {
        e.Scene = "ubq/designblocks/SceneProps", e.Camera = "ubq/designblocks/Camera", e.Common = "ubq/designblocks/CommonDesignBlockProps", e.Page = "ubq/designblocks/Page", e.Image = "ubq/designblocks/Image", e.Video = "ubq/designblocks/Video", e.Sticker = "ubq/designblocks/Sticker", e.Text = "ubq/designblocks/CompositedText", e.Crop = "ubq/types/Crop", e.Scale = "ubq/scene/Scale", e.Opacity = "ubq/types/Opacity", e.FillColor = "ubq/types/FillColor", e.Fill = "ubq/designblocks/Fill", e.BackgroundColor = "ubq/types/BackgroundColor", e.Stroke = "ubq/types/Stroke", e.Group = "ubq/designblocks/Group", e.VectorPath = "ubq/designblocks/VectorPath", e.PendingState = "ubq/designblocks/PendingState", e.ErrorState = "ubq/designblocks/ErrorState";
    }(we || (we = {}));
    const Ee = we;
    var xe, ke, Se = function(e, t, r, n, o) {
        if ("m" === n) throw new TypeError("Private method is not writable");
        if ("a" === n && !o) throw new TypeError("Private accessor was defined without a setter");
        if ("function" == typeof t ? e !== t || !o : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return "a" === n ? o.call(e, r) : o ? o.value = r : t.set(e, r), r;
    }, Ce = function(e, t, r, n) {
        if ("a" === r && !n) throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
    };
    class Te {
        constructor(e){
            xe.set(this, void 0), ke.set(this, void 0), Se(this, xe, e, "f"), Se(this, ke, new A(e), "f");
        }
        async export(e, t = _e.Png, r = {}) {
            var n, o;
            ve("handle", e, le()), ve("mimeType", t, ye()), ve("options", r, de());
            const i = null != r.targetWidth && null != r.targetHeight, a = null !== (n = r.jpegQuality) && void 0 !== n ? n : .9, s = null !== (o = r.pngCompressionLevel) && void 0 !== o ? o : 5;
            return ve("jpegQuality", a, pe(me(le(), 1), 0, {
                exclusive: !0
            })), ve("pngCompressionLevel", s, pe(me(ce(), 9), 0)), null == r.targetWidth && null == r.targetHeight || (ve("targetWidth", r.targetWidth, le()), ve("targetHeight", r.targetHeight, le())), new Promise((n, o)=>{
                var u, c;
                Ce(this, xe, "f").exportToBuffer(e, t, (e)=>{
                    "error" in e ? o(e.error) : n(new Blob([
                        e
                    ], {
                        type: t
                    }));
                }, {
                    pngCompressionLevel: s,
                    jpegQuality: a,
                    useTargetSize: i,
                    targetWidth: null !== (u = r.targetWidth) && void 0 !== u ? u : 0,
                    targetHeight: null !== (c = r.targetHeight) && void 0 !== c ? c : 0
                });
            });
        }
        async unstable_exportVideo(e, t, r, n = _e.Mp4, o, i, a, s) {
            return ve("handle", e, le()), ve("mimeType", n, ye()), ve("resolutionWidth", o, ce()), ve("resolutionHeight", i, ce()), ve("framerate", a, le()), new Promise((u, c)=>{
                Ce(this, xe, "f").exportVideoToBuffer(e, t, r, n, s, (e)=>{
                    "error" in e ? c(e.error) : u(new Blob([
                        e
                    ], {
                        type: n
                    }));
                }, {
                    h264Profile: 77,
                    h264Level: 52,
                    framerate: a,
                    useTargetSize: !0,
                    targetWidth: o,
                    targetHeight: i
                });
            });
        }
        async loadFromString(e) {
            return ve("content", e, fe()), new Promise((t)=>{
                Ce(this, xe, "f").loadBlocksFromString(e, (e)=>{
                    const r = F(e);
                    t(P(r));
                });
            });
        }
        async saveToString(e) {
            return ve("blocks", e, se(le())), new Promise((t)=>{
                Ce(this, xe, "f").saveBlocksToString(e, (e)=>{
                    const r = F(e);
                    t(r);
                });
            });
        }
        create(e) {
            return ve("type", e, fe()), F(Ce(this, xe, "f").create(e));
        }
        unstable_createFromAsset(e, t, r, n) {
            return ve("id", e, fe()), ve("type", t, fe()), ve("mimeType", r, fe()), new Promise((o, i)=>{
                Ce(this, xe, "f").createFromAsset(e, t, r, n, (e)=>{
                    try {
                        o(F(e));
                    } catch (e) {
                        i(e);
                    }
                });
            });
        }
        getType(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getType(e));
        }
        setSelected(e, t) {
            return ve("id", e, ce()), ve("selected", t, ue()), F(Ce(this, xe, "f").setSelected(e, t));
        }
        isSelected(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").isSelected(e));
        }
        findAllSelected() {
            return P(Ce(this, xe, "f").findAllSelected());
        }
        isGroupable(e) {
            return ve("ids", e, he(se(le()))), F(Ce(this, xe, "f").isGroupable(e));
        }
        group(e) {
            return ve("ids", e, he(se(le()))), F(Ce(this, xe, "f").group(e));
        }
        ungroup(e) {
            return ve("id", e, le()), F(Ce(this, xe, "f").ungroup(e));
        }
        enterGroup(e) {
            return ve("id", e, le()), F(Ce(this, xe, "f").enterGroup(e));
        }
        exitGroup(e) {
            return ve("id", e, le()), F(Ce(this, xe, "f").exitGroup(e));
        }
        setName(e, t) {
            return ve("id", e, ce()), ve("name", t, fe()), Ce(this, ke, "f").setValue(e, Ee.Common, "name", t);
        }
        getName(e) {
            return ve("id", e, ce()), Ce(this, ke, "f").getValue(e, Ee.Common, "name");
        }
        findByName(e) {
            ve("name", e, fe());
            const t = Ce(this, xe, "f").findByName(e);
            return P(t);
        }
        findByType(e) {
            ve("type", e, fe());
            const t = F(Ce(this, xe, "f").findByType(e));
            return P(t);
        }
        findAll() {
            return P(Ce(this, xe, "f").findAll());
        }
        findAllPlaceholders() {
            return P(Ce(this, xe, "f").findAllPlaceholders());
        }
        isVisible(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").isVisible(e));
        }
        setVisible(e, t) {
            return ve("id", e, ce()), ve("visible", t, ue()), F(Ce(this, xe, "f").setVisible(e, t));
        }
        isClipped(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").isClipped(e));
        }
        setClipped(e, t) {
            return ve("id", e, ce()), ve("clipped", t, ue()), F(Ce(this, xe, "f").setClipped(e, t));
        }
        getPositionX(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getPositionX(e));
        }
        getPositionXMode(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getPositionXMode(e));
        }
        getPositionY(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getPositionY(e));
        }
        getPositionYMode(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getPositionYMode(e));
        }
        setPositionX(e, t) {
            return ve("id", e, ce()), ve("value", t, le()), F(Ce(this, xe, "f").setPositionX(e, t));
        }
        setPositionXMode(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setPositionXMode(e, t));
        }
        setPositionY(e, t) {
            return ve("id", e, ce()), ve("value", t, le()), F(Ce(this, xe, "f").setPositionY(e, t));
        }
        setPositionYMode(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setPositionYMode(e, t));
        }
        getRotation(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getRotation(e));
        }
        setRotation(e, t) {
            return ve("id", e, ce()), ve("radians", t, le()), F(Ce(this, xe, "f").setRotation(e, t));
        }
        getFlipHorizontal(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getFlip(e)).horizontal;
        }
        getFlipVertical(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getFlip(e)).vertical;
        }
        setFlipHorizontal(e, t) {
            return ve("id", e, ce()), ve("flip", t, ue()), F(Ce(this, xe, "f").setFlipHorizontal(e, t));
        }
        setFlipVertical(e, t) {
            return ve("id", e, ce()), ve("flip", t, ue()), F(Ce(this, xe, "f").setFlipVertical(e, t));
        }
        hasContentFillMode(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasContentFillMode(e));
        }
        hasPlaceholderContent(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasPlaceholderContent(e));
        }
        getWidth(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getWidth(e));
        }
        getWidthMode(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getWidthMode(e));
        }
        getHeight(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getHeight(e));
        }
        getHeightMode(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getHeightMode(e));
        }
        getContentFillMode(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getContentFillMode(e));
        }
        setWidth(e, t) {
            return ve("id", e, ce()), ve("value", t, le()), F(Ce(this, xe, "f").setWidth(e, t));
        }
        setWidthMode(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setWidthMode(e, t));
        }
        setHeight(e, t) {
            return ve("id", e, ce()), ve("value", t, le()), F(Ce(this, xe, "f").setHeight(e, t));
        }
        setHeightMode(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setHeightMode(e, t));
        }
        setContentFillMode(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setContentFillMode(e, t));
        }
        getFrameWidth(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getLastFrameWidth(e));
        }
        getFrameHeight(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getLastFrameHeight(e));
        }
        duplicate(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").duplicate(e));
        }
        destroy(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").destroy(e));
        }
        isValid(e) {
            return ve("id", e, ce()), Ce(this, xe, "f").isValid(e);
        }
        getParent(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasParent(e)) ? F(Ce(this, xe, "f").getParent(e)) : null;
        }
        getChildren(e) {
            ve("id", e, ce());
            const t = F(Ce(this, xe, "f").getChildren(e));
            return P(t);
        }
        insertChild(e, t, r) {
            return ve("parent", e, le()), ve("child", t, le()), ve("index", r, pe(le(), 0)), F(Ce(this, xe, "f").insertChild(e, t, r));
        }
        appendChild(e, t) {
            return ve("parent", e, le()), ve("child", t, le()), F(Ce(this, xe, "f").appendChild(e, t));
        }
        referencesAnyVariables(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").referencesAnyVariables(e));
        }
        getGlobalBoundingBoxX(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getGlobalBoundingBoxX(e));
        }
        getGlobalBoundingBoxY(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getGlobalBoundingBoxY(e));
        }
        getGlobalBoundingBoxWidth(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getGlobalBoundingBoxWidth(e));
        }
        getGlobalBoundingBoxHeight(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getGlobalBoundingBoxHeight(e));
        }
        scale(e, t, r = 0, n = 0) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").scale(e, t, r, n));
        }
        findAllProperties(e) {
            return ve("id", e, ce()), P(F(Ce(this, xe, "f").findAllProperties(e)));
        }
        getPropertyType(e) {
            return ve("property", e, fe()), F(Ce(this, xe, "f").getPropertyType(e));
        }
        getEnumValues(e) {
            return ve("enumProperty", e, fe()), P(F(Ce(this, xe, "f").getEnumValues(e)));
        }
        setBool(e, t, r) {
            return ve("id", e, ce()), ve("property", t, fe()), ve("value", r, ue()), F(Ce(this, xe, "f").setBool(e, t, r));
        }
        getBool(e, t) {
            return ve("id", e, ce()), ve("property", t, fe()), F(Ce(this, xe, "f").getBool(e, t));
        }
        setInt(e, t, r) {
            return ve("id", e, ce()), ve("property", t, fe()), ve("value", r, ce()), F(Ce(this, xe, "f").setInt(e, t, r));
        }
        getInt(e, t) {
            return ve("id", e, ce()), ve("property", t, fe()), F(Ce(this, xe, "f").getInt(e, t));
        }
        setFloat(e, t, r) {
            return ve("id", e, ce()), ve("property", t, fe()), ve("value", r, le()), F(Ce(this, xe, "f").setFloat(e, t, r));
        }
        getFloat(e, t) {
            return ve("id", e, ce()), ve("property", t, fe()), F(Ce(this, xe, "f").getFloat(e, t));
        }
        setString(e, t, r) {
            return ve("id", e, ce()), ve("property", t, fe()), ve("value", r, fe()), F(Ce(this, xe, "f").setString(e, t, r));
        }
        getString(e, t) {
            return ve("id", e, ce()), ve("property", t, fe()), F(Ce(this, xe, "f").getString(e, t));
        }
        setColorRGBA(e, t, r, n, o, i = 1) {
            return ve("id", e, ce()), ve("property", t, fe()), ve("r", r, le()), ve("g", n, le()), ve("b", o, le()), ve("a", i, le()), F(Ce(this, xe, "f").setColorRGBA(e, t, r, n, o, i));
        }
        getColorRGBA(e, t) {
            return ve("id", e, ce()), ve("property", t, fe()), F(Ce(this, xe, "f").getColorRGBA(e, t));
        }
        setEnum(e, t, r) {
            return ve("id", e, ce()), ve("property", t, fe()), ve("value", r, fe()), F(Ce(this, xe, "f").setEnum(e, t, r));
        }
        getEnum(e, t) {
            return ve("id", e, ce()), ve("property", t, fe()), F(Ce(this, xe, "f").getEnum(e, t));
        }
        hasCrop(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasCrop(e));
        }
        setCropScaleX(e, t) {
            return ve("id", e, ce()), ve("scaleX", t, le()), F(Ce(this, xe, "f").setCropScaleX(e, t));
        }
        setCropScaleY(e, t) {
            return ve("id", e, ce()), ve("scaleY", t, le()), F(Ce(this, xe, "f").setCropScaleY(e, t));
        }
        setCropRotation(e, t) {
            return ve("id", e, ce()), ve("rotation", t, le()), F(Ce(this, xe, "f").setCropRotation(e, t));
        }
        setCropTranslationX(e, t) {
            return ve("id", e, ce()), ve("translationX", t, le()), F(Ce(this, xe, "f").setCropTranslationX(e, t));
        }
        setCropTranslationY(e, t) {
            return ve("id", e, ce()), ve("translationY", t, le()), F(Ce(this, xe, "f").setCropTranslationY(e, t));
        }
        resetCrop(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").resetCrop(e));
        }
        getCropScaleX(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getCropScaleX(e));
        }
        getCropScaleY(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getCropScaleY(e));
        }
        getCropRotation(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getCropRotation(e));
        }
        getCropTranslationX(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getCropTranslationX(e));
        }
        getCropTranslationY(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getCropTranslationY(e));
        }
        hasOpacity(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasOpacity(e));
        }
        setOpacity(e, t) {
            return ve("id", e, ce()), ve("opacity", t, le()), F(Ce(this, xe, "f").setOpacity(e, t));
        }
        getOpacity(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getOpacity(e));
        }
        hasBlendMode(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasBlendMode(e));
        }
        setBlendMode(e, t) {
            return ve("id", e, ce()), ve("blendMode", t, fe()), F(Ce(this, xe, "f").setBlendMode(e, t));
        }
        getBlendMode(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getBlendMode(e));
        }
        hasFillColor(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasFillColor(e));
        }
        setFillColorRGBA(e, t, r, n, o = 1) {
            return ve("id", e, ce()), ve("r", t, le()), ve("g", r, le()), ve("b", n, le()), ve("a", o, le()), F(Ce(this, xe, "f").setFillColorRGBA(e, t, r, n, o));
        }
        getFillColorRGBA(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getFillColorRGBA(e));
        }
        setFillColorEnabled(e, t) {
            return ve("id", e, ce()), ve("enabled", t, ue()), F(Ce(this, xe, "f").setFillColorEnabled(e, t));
        }
        isFillColorEnabled(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").isFillColorEnabled(e));
        }
        hasBackgroundColor(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasBackgroundColor(e));
        }
        setBackgroundColorRGBA(e, t, r, n, o = 1) {
            return ve("id", e, ce()), ve("r", t, le()), ve("g", r, le()), ve("b", n, le()), ve("a", o, le()), F(Ce(this, xe, "f").setBackgroundColorRGBA(e, t, r, n, o));
        }
        getBackgroundColorRGBA(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getBackgroundColorRGBA(e));
        }
        setBackgroundColorEnabled(e, t) {
            return ve("id", e, ce()), ve("enabled", t, ue()), F(Ce(this, xe, "f").setBackgroundColorEnabled(e, t));
        }
        isBackgroundColorEnabled(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").isBackgroundColorEnabled(e));
        }
        hasStroke(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasStroke(e));
        }
        setStrokeEnabled(e, t) {
            return ve("id", e, ce()), ve("enabled", t, ue()), F(Ce(this, xe, "f").setStrokeEnabled(e, t));
        }
        isStrokeEnabled(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").isStrokeEnabled(e));
        }
        setStrokeColorRGBA(e, t, r, n, o = 1) {
            return ve("id", e, ce()), ve("r", t, le()), ve("g", r, le()), ve("b", n, le()), ve("a", o, le()), F(Ce(this, xe, "f").setStrokeColorRGBA(e, t, r, n, o));
        }
        getStrokeColorRGBA(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getStrokeColorRGBA(e));
        }
        setStrokeWidth(e, t) {
            return ve("id", e, ce()), ve("width", t, le()), F(Ce(this, xe, "f").setStrokeWidth(e, t));
        }
        getStrokeWidth(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getStrokeWidth(e));
        }
        setStrokeStyle(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setStrokeStyle(e, t));
        }
        getStrokeStyle(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getStrokeStyle(e));
        }
        setStrokePosition(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setStrokePosition(e, t));
        }
        getStrokePosition(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getStrokePosition(e));
        }
        setStrokeCornerGeometry(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setStrokeCornerGeometry(e, t));
        }
        getStrokeCornerGeometry(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getStrokeCornerGeometry(e));
        }
        hasOutline(e) {
            return ve("id", e, ce()), this.hasStroke(e);
        }
        setOutlineColorRGBA(e, t, r, n, o = 1) {
            return ve("id", e, ce()), ve("r", t, le()), ve("g", r, le()), ve("b", n, le()), ve("a", o, le()), this.setStrokeColorRGBA(e, t, r, n, o);
        }
        getOutlineColorRGBA(e) {
            return ve("id", e, ce()), this.getStrokeColorRGBA(e);
        }
        setOutlineEnabled(e, t) {
            return ve("id", e, ce()), ve("enabled", t, ue()), this.setStrokeEnabled(e, t);
        }
        isOutlineEnabled(e) {
            return ve("id", e, ce()), this.isStrokeEnabled(e);
        }
        setOutlineWidth(e, t) {
            return ve("id", e, ce()), ve("width", t, le()), this.setStrokeWidth(e, t);
        }
        getOutlineWidth(e) {
            return ve("id", e, ce()), this.getStrokeWidth(e);
        }
        hasDropShadow(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasDropShadow(e));
        }
        setDropShadowEnabled(e, t) {
            return ve("id", e, ce()), ve("enabled", t, ue()), F(Ce(this, xe, "f").setDropShadowEnabled(e, t));
        }
        isDropShadowEnabled(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").isDropShadowEnabled(e));
        }
        setDropShadowColorRGBA(e, t, r, n, o = 1) {
            return ve("id", e, ce()), ve("r", t, le()), ve("g", r, le()), ve("b", n, le()), ve("a", o, le()), F(Ce(this, xe, "f").setDropShadowColorRGBA(e, t, r, n, o));
        }
        getDropShadowColorRGBA(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getDropShadowColorRGBA(e));
        }
        setDropShadowXOffset(e, t) {
            return ve("id", e, ce()), ve("xOffset", t, le()), F(Ce(this, xe, "f").setDropShadowXOffset(e, t));
        }
        getDropShadowXOffset(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getDropShadowXOffset(e));
        }
        setDropShadowYOffset(e, t) {
            return ve("id", e, ce()), ve("yOffset", t, le()), F(Ce(this, xe, "f").setDropShadowYOffset(e, t));
        }
        getDropShadowYOffset(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getDropShadowYOffset(e));
        }
        setDropShadowXBlurRadius(e, t) {
            return ve("id", e, ce()), ve("xBlurRadius", t, le()), F(Ce(this, xe, "f").setDropShadowXBlurRadius(e, t));
        }
        getDropShadowXBlurRadius(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getDropShadowXBlurRadius(e));
        }
        setDropShadowYBlurRadius(e, t) {
            return ve("id", e, ce()), ve("yBlurRadius", t, le()), F(Ce(this, xe, "f").setDropShadowYBlurRadius(e, t));
        }
        getDropShadowYBlurRadius(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getDropShadowYBlurRadius(e));
        }
        setDropShadowClip(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setDropShadowClip(e, t));
        }
        getDropShadowClip(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getDropShadowClip(e));
        }
        hasFill(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasFill(e));
        }
        isFillEnabled(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").isFillEnabled(e));
        }
        setFillEnabled(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setFillEnabled(e, t));
        }
        getFill(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getFill(e));
        }
        setFillType(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setFillType(e, t));
        }
        getFillType(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getFillType(e));
        }
        setFillSolidColor(e, t, r, n, o = 1) {
            ve("id", e, ce()), F(Ce(this, xe, "f").setFillSolidColor(e, t, r, n, o));
        }
        getFillSolidColor(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getFillSolidColor(e));
        }
        setFillGradientType(e, t) {
            ve("id", e, ce()), F(Ce(this, xe, "f").setFillGradientType(e, t));
        }
        getFillGradientType(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getFillGradientType(e));
        }
        addFillGradientColorStop(e, t, r, n, o, i = 1) {
            ve("id", e, ce()), F(Ce(this, xe, "f").addFillGradientColorStop(e, t, r, n, o, i));
        }
        removeFillGradientColorStop(e, t) {
            ve("id", e, ce()), F(Ce(this, xe, "f").removeFillGradientColorStop(e, t));
        }
        getFillGradientColorStops(e) {
            return ve("id", e, ce()), P(Ce(this, xe, "f").getFillGradientColorStops(e));
        }
        setFillGradientColorStops(e, t) {
            ve("id", e, ce()), F(Ce(this, xe, "f").setFillGradientColorStops(e, t));
        }
        setFillGradientControlPoint(e, t, r, n) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setFillGradientControlPoint(e, t, r, n));
        }
        getFillGradientControlPointX(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getFillGradientControlPointX(e, t));
        }
        getFillGradientControlPointY(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getFillGradientControlPointY(e, t));
        }
        setFillGradientRadius(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").setFillGradientRadius(e, t));
        }
        getFillGradientRadius(e) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getFillGradientRadius(e));
        }
        setMetadata(e, t, r) {
            ve("id", e, ce()), F(Ce(this, xe, "f").setMetadata(e, t, r));
        }
        getMetadata(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").getMetadata(e, t));
        }
        hasMetadata(e, t) {
            return ve("id", e, ce()), F(Ce(this, xe, "f").hasMetadata(e, t));
        }
        removeMetadata(e, t) {
            ve("id", e, ce()), F(Ce(this, xe, "f").removeMetadata(e, t));
        }
    }
    xe = new WeakMap, ke = new WeakMap;
    var Ae, Fe = r(7168), Pe = r.n(Fe);
    !function(e) {
        e.Info = "Info", e.Warning = "Warning", e.Error = "Error";
    }(Ae || (Ae = {}));
    const De = {
        baseURL: "/extensions/",
        entries: [
            "ly.img.cesdk.filters.duotone",
            "ly.img.cesdk.filters.lut",
            "ly.img.cesdk.stickers.emoticons",
            "ly.img.cesdk.vectorpaths",
            "ly.img.cesdk.vectorpaths.abstract",
            "ly.img.cesdk.fonts",
            "ly.img.cesdk.images.samples",
            "ly.img.cesdk.effects",
            "ly.img.cesdk.stickers.doodle",
            "ly.img.cesdk.stickers.hand",
            "ly.img.cesdk.stickers.emoji"
        ]
    }, Le = {
        company_name: {
            value: "img.ly"
        },
        first_name: {
            value: "Charly"
        },
        last_name: {
            value: "Williams"
        },
        address: {
            value: "742 Evergreen Terrace"
        },
        city: {
            value: "Springfield"
        }
    }, je = (e, t)=>{
        const r = `[UBQ] ${e}`;
        switch(t){
            case Ae.Warning:
                console.warn(r);
                break;
            case Ae.Error:
                console.error(r);
                break;
            case Ae.Info:
            default:
                console.log(r);
        }
    }, Be = {
        log: je
    }, Me = {
        colorPalettes: {
            primary: {
                meta: {
                    default: !0
                },
                entries: [
                    "#FFFFFF",
                    "#000000",
                    "#6686FF",
                    "#66CCFF",
                    "#54FFEA",
                    "#E75050",
                    "#F28855",
                    "#FFF763"
                ]
            }
        },
        pageFormats: {
            "din-a0": {
                width: 1189,
                height: 841,
                unit: "mm"
            },
            "din-a1": {
                width: 841,
                height: 594,
                unit: "mm"
            },
            "din-a2": {
                width: 594,
                height: 420,
                unit: "mm"
            },
            "din-a3": {
                width: 420,
                height: 297,
                unit: "mm"
            },
            "din-a4": {
                width: 297,
                height: 210,
                unit: "mm"
            },
            "din-a5": {
                width: 210,
                height: 148,
                unit: "mm"
            },
            "din-a6": {
                meta: {
                    default: !0
                },
                width: 148,
                height: 105,
                unit: "mm"
            },
            "din-a65": {
                width: 210,
                height: 105,
                unit: "mm"
            },
            "din-b5": {
                width: 250,
                height: 176,
                unit: "mm"
            },
            square: {
                width: 105,
                height: 105,
                unit: "mm"
            },
            "twitter-profile": {
                width: 400,
                height: 400,
                unit: "px"
            },
            "twitter-image": {
                width: 1024,
                height: 512,
                unit: "px"
            },
            "twitter-header": {
                width: 1500,
                height: 500,
                unit: "px"
            },
            "instagram-profile": {
                width: 180,
                height: 180,
                unit: "px"
            },
            "instagram-photo": {
                width: 1080,
                height: 1080,
                unit: "px"
            },
            "instagram-story": {
                width: 1080,
                height: 1920,
                unit: "px"
            },
            "american-letter": {
                width: 8.5,
                height: 11,
                unit: "in"
            },
            "american-legal": {
                width: 8.5,
                height: 14,
                unit: "in"
            },
            "16:10": {
                width: 1600,
                height: 1e3,
                unit: "px"
            },
            "16:9": {
                width: 1600,
                height: 900,
                unit: "px"
            },
            "16:10@2400p": {
                width: 3840,
                height: 2400,
                unit: "px"
            },
            "16:9@2160p": {
                width: 3840,
                height: 2160,
                unit: "px"
            },
            "business-card": {
                width: 85,
                height: 55,
                unit: "mm"
            }
        }
    }, Re = {
        baseURL: "core/"
    }, Ie = {
        maskSpotColor: void 0,
        dpi: 300,
        pixelScaleFactor: 1
    }, Oe = {
        title: {
            fontFileUri: "bundle://ly.img.cesdk/fonts/imgly_font_inter_semibold.otf",
            show: !0
        },
        dimOutOfPageAreas: !0
    };
    function Ue(e, t = "undefined" == typeof window ? "" : window.location.href) {
        return new URL(e, "" === t ? void 0 : t).toString();
    }
    function qe(e) {
        return "/" !== e[e.length - 1] ? `${e}/` : e;
    }
    function Ge(e = {}) {
        var t, r, n, o, i, a, s, u, c, l, d, f, m, p, h;
        const g = {
            license: e.license,
            role: null !== (t = e.role) && void 0 !== t ? t : "Creator",
            featureFlags: null !== (r = e.featureFlags) && void 0 !== r ? r : {},
            baseURL: null !== (n = e.baseURL) && void 0 !== n ? n : "https://cdn.img.ly/packages/imgly/cesdk-engine/1.7.0-alpha.3/assets",
            core: null !== (o = e.core) && void 0 !== o ? o : Object.assign({}, Re),
            extensions: null !== (i = e.extensions) && void 0 !== i ? i : Object.assign({}, De),
            callbacks: null !== (a = e.callbacks) && void 0 !== a ? a : Object.assign({}, Be),
            variables: null !== (s = e.variables) && void 0 !== s ? s : Object.assign({}, Le),
            presets: null !== (u = e.presets) && void 0 !== u ? u : Object.assign({}, Me),
            scene: null !== (c = e.scene) && void 0 !== c ? c : Object.assign({}, Ie),
            page: Pe()({}, Oe, null !== (l = e.page) && void 0 !== l ? l : {}),
            assetSources: Pe()({}, e.assetSources),
            defaultFont: null !== (d = e.defaultFont) && void 0 !== d ? d : void 0
        };
        return null !== (f = (p = g.extensions).baseURL) && void 0 !== f || (p.baseURL = De.baseURL), null !== (m = (h = g.extensions).entries) && void 0 !== m || (h.entries = Object.assign({}, De.entries)), Object.entries(Me).forEach(([e, t])=>{
            var r;
            g.presets[e] = null !== (r = g.presets[e]) && void 0 !== r ? r : Object.assign({}, t);
        }), g.baseURL = Ue(g.baseURL), g.baseURL = qe(g.baseURL), g.core.baseURL = Ue(g.core.baseURL, g.baseURL), g.core.baseURL = qe(g.core.baseURL), g.extensions.baseURL = qe(g.extensions.baseURL), g.extensions.entries = g.extensions.entries.map((e)=>qe(e)), g;
    }
    var ze, Ve, We = function(e, t, r, n, o) {
        if ("m" === n) throw new TypeError("Private method is not writable");
        if ("a" === n && !o) throw new TypeError("Private accessor was defined without a setter");
        if ("function" == typeof t ? e !== t || !o : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return "a" === n ? o.call(e, r) : o ? o.value = r : t.set(e, r), r;
    }, Ne = function(e, t, r, n) {
        if ("a" === r && !n) throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
    };
    class He {
        constructor(e){
            ze.set(this, void 0), Ve.set(this, void 0), We(this, ze, e, "f"), We(this, Ve, new A(e), "f");
        }
        onStateChanged(e) {
            const t = Ne(this, ze, "f").subscribeToEditorState(e);
            return ()=>{
                F(Ne(this, ze, "f").unsubscribe(t));
            };
        }
        setEditMode(e) {
            ve("keypath", e, fe()), Ne(this, ze, "f").setEditMode(e);
        }
        getEditMode() {
            return Ne(this, ze, "f").getEditMode();
        }
        getCursorType() {
            return Ne(this, ze, "f").getCursorType();
        }
        getCursorRotation() {
            return Ne(this, ze, "f").getCursorRotation();
        }
        getTextCursorPositionInScreenSpaceX() {
            return Ne(this, ze, "f").getTextCursorPositionInScreenSpaceX();
        }
        getTextCursorPositionInScreenSpaceY() {
            return Ne(this, ze, "f").getTextCursorPositionInScreenSpaceY();
        }
        addUndoStep() {
            F(Ne(this, ze, "f").addUndoStep());
        }
        undo() {
            F(Ne(this, ze, "f").undo());
        }
        redo() {
            F(Ne(this, ze, "f").redo());
        }
        canUndo() {
            return F(Ne(this, ze, "f").canUndo());
        }
        canRedo() {
            return F(Ne(this, ze, "f").canRedo());
        }
        setSettingBool(e, t) {
            return ve("keypath", e, fe()), ve("value", t, ue()), F(Ne(this, ze, "f").setSettingBool(e, t));
        }
        getSettingBool(e) {
            return ve("keypath", e, fe()), F(Ne(this, ze, "f").getSettingBool(e));
        }
        setSettingInt(e, t) {
            return ve("keypath", e, fe()), ve("value", t, ce()), F(Ne(this, ze, "f").setSettingFloat(e, t));
        }
        getSettingInt(e) {
            return ve("keypath", e, fe()), F(Ne(this, ze, "f").getSettingFloat(e));
        }
        setSettingFloat(e, t) {
            return ve("keypath", e, fe()), ve("value", t, le()), F(Ne(this, ze, "f").setSettingFloat(e, t));
        }
        getSettingFloat(e) {
            return ve("keypath", e, fe()), F(Ne(this, ze, "f").getSettingFloat(e));
        }
        setSettingString(e, t) {
            return ve("keypath", e, fe()), ve("value", t, fe()), F(Ne(this, ze, "f").setSettingString(e, t));
        }
        getSettingString(e) {
            return ve("keypath", e, fe()), F(Ne(this, ze, "f").getSettingString(e));
        }
        setSettingColorRGBA(e, t, r, n, o = 1) {
            return ve("keypath", e, fe()), ve("r", t, le()), ve("g", r, le()), ve("b", n, le()), ve("a", o, le()), F(Ne(this, ze, "f").setSettingColorRGBA(e, t, r, n, o));
        }
        getSettingColorRGBA(e) {
            return ve("keypath", e, fe()), F(Ne(this, ze, "f").getSettingColorRGBA(e));
        }
        setSettingEnum(e, t) {
            return ve("keypath", e, fe()), ve("value", t, fe()), F(Ne(this, ze, "f").setSettingEnum(e, t));
        }
        getSettingEnum(e) {
            return ve("keypath", e, fe()), F(Ne(this, ze, "f").getSettingEnum(e));
        }
        setURIResolver(e) {
            return F(Ne(this, ze, "f").setURIResolver(e));
        }
        getAbsoluteURI(e) {
            return F(Ne(this, ze, "f").getAbsoluteURI(e));
        }
    }
    ze = new WeakMap, Ve = new WeakMap;
    var $e, Xe = function(e, t, r, n) {
        if ("a" === r && !n) throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
    };
    class Ye {
        constructor(e){
            $e.set(this, void 0), function(e, t, r, n, o) {
                if ("TURBOPACK compile-time falsy", 0) {
                    "TURBOPACK unreachable";
                }
                if ("TURBOPACK compile-time falsy", 0) {
                    "TURBOPACK unreachable";
                }
                if ("function" == typeof t ? e !== t || !o : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
                ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : o ? o.value = r : t.set(e, r);
            }(this, $e, e, "f");
        }
        subscribe(e, t) {
            ve("blocks", e, se());
            const r = Xe(this, $e, "f").subscribe(e, (e)=>{
                try {
                    t(P(e, !0));
                } catch (e) {
                    console.error(e);
                }
            });
            return ()=>{
                F(Xe(this, $e, "f").unsubscribe(r));
            };
        }
    }
    $e = new WeakMap;
    var Qe, Ke = (Qe = "undefined" != typeof document && document.currentScript ? document.currentScript.src : void 0, function(e) {
        var t, n, o = void 0 !== (e = e || {}) ? e : {};
        o.ready = new Promise(function(e, r) {
            t = e, n = r;
        }), o.expectedDataFileDownloads || (o.expectedDataFileDownloads = 0), o.expectedDataFileDownloads++, o.ENVIRONMENT_IS_PTHREAD || function(e) {
            "object" == typeof window ? window.encodeURIComponent(window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf("/")) + "/") : "undefined" == typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] && "undefined" != typeof location && encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf("/")) + "/");
            var t = "cesdk.data";
            "function" != typeof o.locateFilePackage || o.locateFile || (o.locateFile = o.locateFilePackage, v("warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)"));
            var r, n, i, a, s = o.locateFile ? o.locateFile(t, "") : t, u = e.remote_package_size, c = null, l = o.getPreloadedPackage ? o.getPreloadedPackage(s, u) : null;
            function d() {
                function t(e, t) {
                    if (!e) throw t + (new Error).stack;
                }
                function r(e, t, r) {
                    this.start = e, this.end = t, this.audio = r;
                }
                o.FS_createPath("/", "ly.img.cesdk", !0, !0), o.FS_createPath("/ly.img.cesdk", "images", !0, !0), o.FS_createPath("/ly.img.cesdk", "shaders", !0, !0), o.FS_createPath("/ly.img.cesdk/shaders", "common", !0, !0), o.FS_createPath("/ly.img.cesdk", "presets", !0, !0), o.FS_createPath("/ly.img.cesdk", "fonts", !0, !0), r.prototype = {
                    requests: {},
                    open: function(e, t) {
                        this.name = t, this.requests[t] = this, o.addRunDependency("fp " + this.name);
                    },
                    send: function() {},
                    onload: function() {
                        var e = this.byteArray.subarray(this.start, this.end);
                        this.finish(e);
                    },
                    finish: function(e) {
                        o.FS_createDataFile(this.name, null, e, !0, !0, !0), o.removeRunDependency("fp " + this.name), this.requests[this.name] = null;
                    }
                };
                for(var n = e.files, i = 0; i < n.length; ++i)new r(n[i].start, n[i].end, n[i].audio || 0).open("GET", n[i].filename);
                function a(n) {
                    t(n, "Loading data file failed."), t(n instanceof ArrayBuffer, "bad input to processPackageData");
                    var i = new Uint8Array(n);
                    r.prototype.byteArray = i;
                    for(var a = e.files, s = 0; s < a.length; ++s)r.prototype.requests[a[s].filename].onload();
                    o.removeRunDependency("datafile_cesdk.data");
                }
                o.addRunDependency("datafile_cesdk.data"), o.preloadResults || (o.preloadResults = {}), o.preloadResults["cesdk.data"] = {
                    fromCache: !1
                }, l ? (a(l), l = null) : c = a;
            }
            l || (r = s, n = u, i = function(e) {
                c ? (c(e), c = null) : l = e;
            }, (a = new XMLHttpRequest).open("GET", r, !0), a.responseType = "arraybuffer", a.onprogress = function(e) {
                var t = r, i = n;
                if (e.total && (i = e.total), e.loaded) {
                    a.addedTotal ? o.dataFileDownloads[t].loaded = e.loaded : (a.addedTotal = !0, o.dataFileDownloads || (o.dataFileDownloads = {}), o.dataFileDownloads[t] = {
                        loaded: e.loaded,
                        total: i
                    });
                    var s = 0, u = 0, c = 0;
                    for(var l in o.dataFileDownloads){
                        var d = o.dataFileDownloads[l];
                        s += d.total, u += d.loaded, c++;
                    }
                    s = Math.ceil(s * o.expectedDataFileDownloads / c), o.setStatus && o.setStatus("Downloading data... (" + u + "/" + s + ")");
                } else o.dataFileDownloads || o.setStatus && o.setStatus("Downloading data...");
            }, a.onerror = function(e) {
                throw new Error("NetworkError for: " + r);
            }, a.onload = function(e) {
                if (!(200 == a.status || 304 == a.status || 206 == a.status || 0 == a.status && a.response)) throw new Error(a.statusText + " : " + a.responseURL);
                var t = a.response;
                i(t);
            }, a.send(null)), o.calledRun ? d() : (o.preRun || (o.preRun = []), o.preRun.push(d));
        }({
            files: [
                {
                    filename: "/ly.img.cesdk/images/watermark.png",
                    start: 0,
                    end: 90147
                },
                {
                    filename: "/ly.img.cesdk/shaders/liquid.sksl",
                    start: 90147,
                    end: 90629
                },
                {
                    filename: "/ly.img.cesdk/shaders/mirror.sksl",
                    start: 90629,
                    end: 91083
                },
                {
                    filename: "/ly.img.cesdk/shaders/outliner.sksl",
                    start: 91083,
                    end: 92720
                },
                {
                    filename: "/ly.img.cesdk/shaders/tv_glitch.sksl",
                    start: 92720,
                    end: 93438
                },
                {
                    filename: "/ly.img.cesdk/shaders/mask_color.sksl",
                    start: 93438,
                    end: 93940
                },
                {
                    filename: "/ly.img.cesdk/shaders/lut_filter.sksl",
                    start: 93940,
                    end: 96803
                },
                {
                    filename: "/ly.img.cesdk/shaders/vignette.sksl",
                    start: 96803,
                    end: 97175
                },
                {
                    filename: "/ly.img.cesdk/shaders/sharpie.sksl",
                    start: 97175,
                    end: 99480
                },
                {
                    filename: "/ly.img.cesdk/shaders/hsp_selective_adjustments.sksl",
                    start: 99480,
                    end: 113080
                },
                {
                    filename: "/ly.img.cesdk/shaders/half_tone.sksl",
                    start: 113080,
                    end: 113574
                },
                {
                    filename: "/ly.img.cesdk/shaders/tiltshift.sksl",
                    start: 113574,
                    end: 114156
                },
                {
                    filename: "/ly.img.cesdk/shaders/pixelize.sksl",
                    start: 114156,
                    end: 114456
                },
                {
                    filename: "/ly.img.cesdk/shaders/linocut.sksl",
                    start: 114456,
                    end: 115241
                },
                {
                    filename: "/ly.img.cesdk/shaders/glow.sksl",
                    start: 115241,
                    end: 116208
                },
                {
                    filename: "/ly.img.cesdk/shaders/radial_pixel.sksl",
                    start: 116208,
                    end: 116771
                },
                {
                    filename: "/ly.img.cesdk/shaders/black_and_white_color_mixer.sksl",
                    start: 116771,
                    end: 123088
                },
                {
                    filename: "/ly.img.cesdk/shaders/shifter.sksl",
                    start: 123088,
                    end: 123772
                },
                {
                    filename: "/ly.img.cesdk/shaders/posterize.sksl",
                    start: 123772,
                    end: 123984
                },
                {
                    filename: "/ly.img.cesdk/shaders/dot_pattern.sksl",
                    start: 123984,
                    end: 124499
                },
                {
                    filename: "/ly.img.cesdk/shaders/adjustments.sksl",
                    start: 124499,
                    end: 128388
                },
                {
                    filename: "/ly.img.cesdk/shaders/extrude_blur.sksl",
                    start: 128388,
                    end: 130505
                },
                {
                    filename: "/ly.img.cesdk/shaders/duotone_filter.sksl",
                    start: 130505,
                    end: 131469
                },
                {
                    filename: "/ly.img.cesdk/shaders/cross_cut.sksl",
                    start: 131469,
                    end: 132416
                },
                {
                    filename: "/ly.img.cesdk/shaders/placeholder_overlay_lines.sksl",
                    start: 132416,
                    end: 132997
                },
                {
                    filename: "/ly.img.cesdk/shaders/common/ubq_constants.sksl",
                    start: 132997,
                    end: 133487
                },
                {
                    filename: "/ly.img.cesdk/shaders/common/ubq_adjustments.sksl",
                    start: 133487,
                    end: 138050
                },
                {
                    filename: "/ly.img.cesdk/shaders/common/ubq_color_conversions.sksl",
                    start: 138050,
                    end: 148035
                },
                {
                    filename: "/ly.img.cesdk/shaders/common/ubq_hue_constants.sksl",
                    start: 148035,
                    end: 151202
                },
                {
                    filename: "/ly.img.cesdk/shaders/common/ubq_noise.sksl",
                    start: 151202,
                    end: 153840
                },
                {
                    filename: "/ly.img.cesdk/presets/.keep",
                    start: 153840,
                    end: 153840
                },
                {
                    filename: "/ly.img.cesdk/fonts/imgly_font_inter_semibold.otf",
                    start: 153840,
                    end: 424600
                }
            ],
            remote_package_size: 424600,
            package_uuid: "1949b8e7-78f0-4489-9566-abd14425b227"
        }), "object" == typeof window && "object" == typeof window.performance ? o.performance = performance : "object" == typeof r.g && "object" == typeof r.g.perf_hooks && "object" == typeof r.g.perf_hooks.performance ? o.performance = r.g.perf_hooks.performance : o.performance = {
            mark: function() {},
            measure: function() {}
        }, o.emscripten_ubq_asyncFetchStates = new Map, o.emscripten_ubq_asyncFetchCompletedBytes = new Map, o.emscripten_ubq_asyncFetchTotalBytes = new Map, o.emscripten_ubq_asyncFetchHeaders = new Map, o.emscripten_ubq_asyncFetchNextHandle = 0, o.emscripten_ubq_asyncFetchNextHeaderHandle = 0;
        const i = [
            "GET",
            "POST"
        ];
        o.emscripten_ubq_codec_decoders = new Map, o.emscripten_ubq_codec_encoders = new Map, o.emscripten_ubq_codec_decoderNextHandle = 1, o.emscripten_ubq_codec_encoderNextHandle = 1, o.emscripten_ubq_codec_createVideoDecoder = function(e) {
            const t = new VideoDecoder({
                output: (r)=>{
                    if (t.decodedFrames %= t.numberOfFrames, t.decodedFrames++, t.probing && 1 === t.decodedFrames) return (n = o.ctx).bindTexture(n.TEXTURE_2D, e[0]), n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, n.RGBA, n.UNSIGNED_BYTE, r), void r.close();
                    if (t.decodeQueueSize > 0 || t.probing) return void r.close();
                    var n = o.ctx;
                    const i = (t.decodedFrames - 1) % e.length;
                    n.bindTexture(n.TEXTURE_2D, e[i]), n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, n.RGBA, n.UNSIGNED_BYTE, r), r.close(), t.textureUploadFlag = !0;
                },
                error: (e)=>console.error(e)
            });
            return t.decodedFrames = 0, t;
        };
        var a, s, u, c = Object.assign({}, o), l = [], d = "./this.program", f = (e, t)=>{
            throw t;
        }, m = "object" == typeof window, p = "function" == typeof importScripts, h = ("object" == typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] && "object" == typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions.node, "");
        (m || p) && (p ? h = self.location.href : "undefined" != typeof document && document.currentScript && (h = document.currentScript.src), Qe && (h = Qe), h = 0 !== h.indexOf("blob:") ? h.substr(0, h.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", a = (e)=>{
            var t = new XMLHttpRequest;
            return t.open("GET", e, !1), t.send(null), t.responseText;
        }, p && (u = (e)=>{
            var t = new XMLHttpRequest;
            return t.open("GET", e, !1), t.responseType = "arraybuffer", t.send(null), new Uint8Array(t.response);
        }), s = (e, t, r)=>{
            var n = new XMLHttpRequest;
            n.open("GET", e, !0), n.responseType = "arraybuffer", n.onload = ()=>{
                200 == n.status || 0 == n.status && n.response ? t(n.response) : r();
            }, n.onerror = r, n.send(null);
        });
        var g = o.print || console.log.bind(console), v = o.printErr || console.warn.bind(console);
        function y(e) {
            y.shown || (y.shown = {}), y.shown[e] || (y.shown[e] = 1, v(e));
        }
        Object.assign(o, c), c = null, o.arguments && (l = o.arguments), o.thisProgram && (d = o.thisProgram), o.quit && (f = o.quit);
        var b, _ = 0;
        o.wasmBinary && (b = o.wasmBinary);
        var w, E = o.noExitRuntime || !0;
        "object" != typeof WebAssembly && pe("no native wasm support detected");
        var x, k = !1;
        function S(e, t) {
            e || pe(t);
        }
        var C = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0;
        function T(e, t, r) {
            for(var n = t + r, o = t; e[o] && !(o >= n);)++o;
            if (o - t > 16 && e.subarray && C) return C.decode(e.subarray(t, o));
            for(var i = ""; t < o;){
                var a = e[t++];
                if (128 & a) {
                    var s = 63 & e[t++];
                    if (192 != (224 & a)) {
                        var u = 63 & e[t++];
                        if ((a = 224 == (240 & a) ? (15 & a) << 12 | s << 6 | u : (7 & a) << 18 | s << 12 | u << 6 | 63 & e[t++]) < 65536) i += String.fromCharCode(a);
                        else {
                            var c = a - 65536;
                            i += String.fromCharCode(55296 | c >> 10, 56320 | 1023 & c);
                        }
                    } else i += String.fromCharCode((31 & a) << 6 | s);
                } else i += String.fromCharCode(a);
            }
            return i;
        }
        function A(e, t) {
            return e ? T(B, e, t) : "";
        }
        function F(e, t, r, n) {
            if (!(n > 0)) return 0;
            for(var o = r, i = r + n - 1, a = 0; a < e.length; ++a){
                var s = e.charCodeAt(a);
                if (s >= 55296 && s <= 57343 && (s = 65536 + ((1023 & s) << 10) | 1023 & e.charCodeAt(++a)), s <= 127) {
                    if (r >= i) break;
                    t[r++] = s;
                } else if (s <= 2047) {
                    if (r + 1 >= i) break;
                    t[r++] = 192 | s >> 6, t[r++] = 128 | 63 & s;
                } else if (s <= 65535) {
                    if (r + 2 >= i) break;
                    t[r++] = 224 | s >> 12, t[r++] = 128 | s >> 6 & 63, t[r++] = 128 | 63 & s;
                } else {
                    if (r + 3 >= i) break;
                    t[r++] = 240 | s >> 18, t[r++] = 128 | s >> 12 & 63, t[r++] = 128 | s >> 6 & 63, t[r++] = 128 | 63 & s;
                }
            }
            return t[r] = 0, r - o;
        }
        function P(e, t, r) {
            return F(e, B, t, r);
        }
        function D(e) {
            for(var t = 0, r = 0; r < e.length; ++r){
                var n = e.charCodeAt(r);
                n >= 55296 && n <= 57343 && (n = 65536 + ((1023 & n) << 10) | 1023 & e.charCodeAt(++r)), n <= 127 ? ++t : t += n <= 2047 ? 2 : n <= 65535 ? 3 : 4;
            }
            return t;
        }
        var L, j, B, M, R, I, O, U, q, G = "undefined" != typeof TextDecoder ? new TextDecoder("utf-16le") : void 0;
        function z(e, t) {
            for(var r = e, n = r >> 1, o = n + t / 2; !(n >= o) && R[n];)++n;
            if ((r = n << 1) - e > 32 && G) return G.decode(B.subarray(e, r));
            for(var i = "", a = 0; !(a >= t / 2); ++a){
                var s = M[e + 2 * a >> 1];
                if (0 == s) break;
                i += String.fromCharCode(s);
            }
            return i;
        }
        function V(e, t, r) {
            if (void 0 === r && (r = 2147483647), r < 2) return 0;
            for(var n = t, o = (r -= 2) < 2 * e.length ? r / 2 : e.length, i = 0; i < o; ++i){
                var a = e.charCodeAt(i);
                M[t >> 1] = a, t += 2;
            }
            return M[t >> 1] = 0, t - n;
        }
        function W(e) {
            return 2 * e.length;
        }
        function N(e, t) {
            for(var r = 0, n = ""; !(r >= t / 4);){
                var o = I[e + 4 * r >> 2];
                if (0 == o) break;
                if (++r, o >= 65536) {
                    var i = o - 65536;
                    n += String.fromCharCode(55296 | i >> 10, 56320 | 1023 & i);
                } else n += String.fromCharCode(o);
            }
            return n;
        }
        function H(e, t, r) {
            if (void 0 === r && (r = 2147483647), r < 4) return 0;
            for(var n = t, o = n + r - 4, i = 0; i < e.length; ++i){
                var a = e.charCodeAt(i);
                if (a >= 55296 && a <= 57343 && (a = 65536 + ((1023 & a) << 10) | 1023 & e.charCodeAt(++i)), I[t >> 2] = a, (t += 4) + 4 > o) break;
            }
            return I[t >> 2] = 0, t - n;
        }
        function $(e) {
            for(var t = 0, r = 0; r < e.length; ++r){
                var n = e.charCodeAt(r);
                n >= 55296 && n <= 57343 && ++r, t += 4;
            }
            return t;
        }
        function X(e) {
            var t = D(e) + 1, r = jr(t);
            return r && F(e, j, r, t), r;
        }
        function Y(e) {
            var t = D(e) + 1, r = Gr(t);
            return F(e, j, r, t), r;
        }
        function Q(e) {
            L = e, o.HEAP8 = j = new Int8Array(e), o.HEAP16 = M = new Int16Array(e), o.HEAP32 = I = new Int32Array(e), o.HEAPU8 = B = new Uint8Array(e), o.HEAPU16 = R = new Uint16Array(e), o.HEAPU32 = O = new Uint32Array(e), o.HEAPF32 = U = new Float32Array(e), o.HEAPF64 = q = new Float64Array(e);
        }
        o.INITIAL_MEMORY;
        var K, Z = [], J = [], ee = [], te = [], re = [], ne = !1;
        function oe() {
            return E || !1;
        }
        var ie, ae, se, ue, ce = 0, le = null, de = null;
        function fe(e) {
            ce++, o.monitorRunDependencies && o.monitorRunDependencies(ce);
        }
        function me(e) {
            if (ce--, o.monitorRunDependencies && o.monitorRunDependencies(ce), 0 == ce && (null !== le && (clearInterval(le), le = null), de)) {
                var t = de;
                de = null, t();
            }
        }
        function pe(e) {
            o.onAbort && o.onAbort(e), v(e = "Aborted(" + e + ")"), k = !0, x = 1, e += ". Build with -s ASSERTIONS=1 for more info.";
            var t = new WebAssembly.RuntimeError(e);
            throw n(t), t;
        }
        function he(e) {
            return e.startsWith("data:application/octet-stream;base64,");
        }
        function ge(e) {
            try {
                if (e == ie && b) return new Uint8Array(b);
                if (u) return u(e);
                throw "both async and sync fetching of the wasm failed";
            } catch (e) {
                pe(e);
            }
        }
        function ve(e) {
            for(; e.length > 0;){
                var t = e.shift();
                if ("function" != typeof t) {
                    var r = t.func;
                    "number" == typeof r ? void 0 === t.arg ? be(r)() : be(r)(t.arg) : r(void 0 === t.arg ? null : t.arg);
                } else t(o);
            }
        }
        o.preloadedImages = {}, o.preloadedAudios = {}, he(ie = "cesdk.wasm") || (ae = ie, ie = o.locateFile ? o.locateFile(ae, h) : h + ae);
        var ye = [];
        function be(e) {
            var t = ye[e];
            return t || (e >= ye.length && (ye.length = e + 1), ye[e] = t = K.get(e)), t;
        }
        function _e(e) {
            if (e instanceof zr || "unwind" == e) return x;
            f(1, e);
        }
        function we(e) {
            this.excPtr = e, this.ptr = e - 16, this.set_type = function(e) {
                I[this.ptr + 4 >> 2] = e;
            }, this.get_type = function() {
                return I[this.ptr + 4 >> 2];
            }, this.set_destructor = function(e) {
                I[this.ptr + 8 >> 2] = e;
            }, this.get_destructor = function() {
                return I[this.ptr + 8 >> 2];
            }, this.set_refcount = function(e) {
                I[this.ptr >> 2] = e;
            }, this.set_caught = function(e) {
                e = e ? 1 : 0, j[this.ptr + 12 >> 0] = e;
            }, this.get_caught = function() {
                return 0 != j[this.ptr + 12 >> 0];
            }, this.set_rethrown = function(e) {
                e = e ? 1 : 0, j[this.ptr + 13 >> 0] = e;
            }, this.get_rethrown = function() {
                return 0 != j[this.ptr + 13 >> 0];
            }, this.init = function(e, t) {
                this.set_type(e), this.set_destructor(t), this.set_refcount(0), this.set_caught(!1), this.set_rethrown(!1);
            }, this.add_ref = function() {
                var e = I[this.ptr >> 2];
                I[this.ptr >> 2] = e + 1;
            }, this.release_ref = function() {
                var e = I[this.ptr >> 2];
                return I[this.ptr >> 2] = e - 1, 1 === e;
            };
        }
        function Ee(e) {
            return I[Mr() >> 2] = e, e;
        }
        var xe = {
            splitPath: function(e) {
                return /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1);
            },
            normalizeArray: function(e, t) {
                for(var r = 0, n = e.length - 1; n >= 0; n--){
                    var o = e[n];
                    "." === o ? e.splice(n, 1) : ".." === o ? (e.splice(n, 1), r++) : r && (e.splice(n, 1), r--);
                }
                if (t) for(; r; r--)e.unshift("..");
                return e;
            },
            normalize: function(e) {
                var t = "/" === e.charAt(0), r = "/" === e.substr(-1);
                return (e = xe.normalizeArray(e.split("/").filter(function(e) {
                    return !!e;
                }), !t).join("/")) || t || (e = "."), e && r && (e += "/"), (t ? "/" : "") + e;
            },
            dirname: function(e) {
                var t = xe.splitPath(e), r = t[0], n = t[1];
                return r || n ? (n && (n = n.substr(0, n.length - 1)), r + n) : ".";
            },
            basename: function(e) {
                if ("/" === e) return "/";
                var t = (e = (e = xe.normalize(e)).replace(/\/$/, "")).lastIndexOf("/");
                return -1 === t ? e : e.substr(t + 1);
            },
            extname: function(e) {
                return xe.splitPath(e)[3];
            },
            join: function() {
                var e = Array.prototype.slice.call(arguments, 0);
                return xe.normalize(e.join("/"));
            },
            join2: function(e, t) {
                return xe.normalize(e + "/" + t);
            }
        }, ke = {
            resolve: function() {
                for(var e = "", t = !1, r = arguments.length - 1; r >= -1 && !t; r--){
                    var n = r >= 0 ? arguments[r] : Te.cwd();
                    if ("string" != typeof n) throw new TypeError("Arguments to path.resolve must be strings");
                    if (!n) return "";
                    e = n + "/" + e, t = "/" === n.charAt(0);
                }
                return (t ? "/" : "") + (e = xe.normalizeArray(e.split("/").filter(function(e) {
                    return !!e;
                }), !t).join("/")) || ".";
            },
            relative: function(e, t) {
                function r(e) {
                    for(var t = 0; t < e.length && "" === e[t]; t++);
                    for(var r = e.length - 1; r >= 0 && "" === e[r]; r--);
                    return t > r ? [] : e.slice(t, r - t + 1);
                }
                e = ke.resolve(e).substr(1), t = ke.resolve(t).substr(1);
                for(var n = r(e.split("/")), o = r(t.split("/")), i = Math.min(n.length, o.length), a = i, s = 0; s < i; s++)if (n[s] !== o[s]) {
                    a = s;
                    break;
                }
                var u = [];
                for(s = a; s < n.length; s++)u.push("..");
                return (u = u.concat(o.slice(a))).join("/");
            }
        }, Se = {
            ttys: [],
            init: function() {},
            shutdown: function() {},
            register: function(e, t) {
                Se.ttys[e] = {
                    input: [],
                    output: [],
                    ops: t
                }, Te.registerDevice(e, Se.stream_ops);
            },
            stream_ops: {
                open: function(e) {
                    var t = Se.ttys[e.node.rdev];
                    if (!t) throw new Te.ErrnoError(43);
                    e.tty = t, e.seekable = !1;
                },
                close: function(e) {
                    e.tty.ops.flush(e.tty);
                },
                flush: function(e) {
                    e.tty.ops.flush(e.tty);
                },
                read: function(e, t, r, n, o) {
                    if (!e.tty || !e.tty.ops.get_char) throw new Te.ErrnoError(60);
                    for(var i = 0, a = 0; a < n; a++){
                        var s;
                        try {
                            s = e.tty.ops.get_char(e.tty);
                        } catch (e) {
                            throw new Te.ErrnoError(29);
                        }
                        if (void 0 === s && 0 === i) throw new Te.ErrnoError(6);
                        if (null == s) break;
                        i++, t[r + a] = s;
                    }
                    return i && (e.node.timestamp = Date.now()), i;
                },
                write: function(e, t, r, n, o) {
                    if (!e.tty || !e.tty.ops.put_char) throw new Te.ErrnoError(60);
                    try {
                        for(var i = 0; i < n; i++)e.tty.ops.put_char(e.tty, t[r + i]);
                    } catch (e) {
                        throw new Te.ErrnoError(29);
                    }
                    return n && (e.node.timestamp = Date.now()), i;
                }
            },
            default_tty_ops: {
                get_char: function(e) {
                    if (!e.input.length) {
                        var t = null;
                        if ("undefined" != typeof window && "function" == typeof window.prompt ? null !== (t = window.prompt("Input: ")) && (t += "\n") : "function" == typeof readline && null !== (t = readline()) && (t += "\n"), !t) return null;
                        e.input = Pr(t, !0);
                    }
                    return e.input.shift();
                },
                put_char: function(e, t) {
                    null === t || 10 === t ? (g(T(e.output, 0)), e.output = []) : 0 != t && e.output.push(t);
                },
                flush: function(e) {
                    e.output && e.output.length > 0 && (g(T(e.output, 0)), e.output = []);
                }
            },
            default_tty1_ops: {
                put_char: function(e, t) {
                    null === t || 10 === t ? (v(T(e.output, 0)), e.output = []) : 0 != t && e.output.push(t);
                },
                flush: function(e) {
                    e.output && e.output.length > 0 && (v(T(e.output, 0)), e.output = []);
                }
            }
        };
        var Ce = {
            ops_table: null,
            mount: function(e) {
                return Ce.createNode(null, "/", 16895, 0);
            },
            createNode: function(e, t, r, n) {
                if (Te.isBlkdev(r) || Te.isFIFO(r)) throw new Te.ErrnoError(63);
                Ce.ops_table || (Ce.ops_table = {
                    dir: {
                        node: {
                            getattr: Ce.node_ops.getattr,
                            setattr: Ce.node_ops.setattr,
                            lookup: Ce.node_ops.lookup,
                            mknod: Ce.node_ops.mknod,
                            rename: Ce.node_ops.rename,
                            unlink: Ce.node_ops.unlink,
                            rmdir: Ce.node_ops.rmdir,
                            readdir: Ce.node_ops.readdir,
                            symlink: Ce.node_ops.symlink
                        },
                        stream: {
                            llseek: Ce.stream_ops.llseek
                        }
                    },
                    file: {
                        node: {
                            getattr: Ce.node_ops.getattr,
                            setattr: Ce.node_ops.setattr
                        },
                        stream: {
                            llseek: Ce.stream_ops.llseek,
                            read: Ce.stream_ops.read,
                            write: Ce.stream_ops.write,
                            allocate: Ce.stream_ops.allocate,
                            mmap: Ce.stream_ops.mmap,
                            msync: Ce.stream_ops.msync
                        }
                    },
                    link: {
                        node: {
                            getattr: Ce.node_ops.getattr,
                            setattr: Ce.node_ops.setattr,
                            readlink: Ce.node_ops.readlink
                        },
                        stream: {}
                    },
                    chrdev: {
                        node: {
                            getattr: Ce.node_ops.getattr,
                            setattr: Ce.node_ops.setattr
                        },
                        stream: Te.chrdev_stream_ops
                    }
                });
                var o = Te.createNode(e, t, r, n);
                return Te.isDir(o.mode) ? (o.node_ops = Ce.ops_table.dir.node, o.stream_ops = Ce.ops_table.dir.stream, o.contents = {}) : Te.isFile(o.mode) ? (o.node_ops = Ce.ops_table.file.node, o.stream_ops = Ce.ops_table.file.stream, o.usedBytes = 0, o.contents = null) : Te.isLink(o.mode) ? (o.node_ops = Ce.ops_table.link.node, o.stream_ops = Ce.ops_table.link.stream) : Te.isChrdev(o.mode) && (o.node_ops = Ce.ops_table.chrdev.node, o.stream_ops = Ce.ops_table.chrdev.stream), o.timestamp = Date.now(), e && (e.contents[t] = o, e.timestamp = o.timestamp), o;
            },
            getFileDataAsTypedArray: function(e) {
                return e.contents ? e.contents.subarray ? e.contents.subarray(0, e.usedBytes) : new Uint8Array(e.contents) : new Uint8Array(0);
            },
            expandFileStorage: function(e, t) {
                var r = e.contents ? e.contents.length : 0;
                if (!(r >= t)) {
                    t = Math.max(t, r * (r < 1048576 ? 2 : 1.125) >>> 0), 0 != r && (t = Math.max(t, 256));
                    var n = e.contents;
                    e.contents = new Uint8Array(t), e.usedBytes > 0 && e.contents.set(n.subarray(0, e.usedBytes), 0);
                }
            },
            resizeFileStorage: function(e, t) {
                if (e.usedBytes != t) if (0 == t) e.contents = null, e.usedBytes = 0;
                else {
                    var r = e.contents;
                    e.contents = new Uint8Array(t), r && e.contents.set(r.subarray(0, Math.min(t, e.usedBytes))), e.usedBytes = t;
                }
            },
            node_ops: {
                getattr: function(e) {
                    var t = {};
                    return t.dev = Te.isChrdev(e.mode) ? e.id : 1, t.ino = e.id, t.mode = e.mode, t.nlink = 1, t.uid = 0, t.gid = 0, t.rdev = e.rdev, Te.isDir(e.mode) ? t.size = 4096 : Te.isFile(e.mode) ? t.size = e.usedBytes : Te.isLink(e.mode) ? t.size = e.link.length : t.size = 0, t.atime = new Date(e.timestamp), t.mtime = new Date(e.timestamp), t.ctime = new Date(e.timestamp), t.blksize = 4096, t.blocks = Math.ceil(t.size / t.blksize), t;
                },
                setattr: function(e, t) {
                    void 0 !== t.mode && (e.mode = t.mode), void 0 !== t.timestamp && (e.timestamp = t.timestamp), void 0 !== t.size && Ce.resizeFileStorage(e, t.size);
                },
                lookup: function(e, t) {
                    throw Te.genericErrors[44];
                },
                mknod: function(e, t, r, n) {
                    return Ce.createNode(e, t, r, n);
                },
                rename: function(e, t, r) {
                    if (Te.isDir(e.mode)) {
                        var n;
                        try {
                            n = Te.lookupNode(t, r);
                        } catch (e) {}
                        if (n) for(var o in n.contents)throw new Te.ErrnoError(55);
                    }
                    delete e.parent.contents[e.name], e.parent.timestamp = Date.now(), e.name = r, t.contents[r] = e, t.timestamp = e.parent.timestamp, e.parent = t;
                },
                unlink: function(e, t) {
                    delete e.contents[t], e.timestamp = Date.now();
                },
                rmdir: function(e, t) {
                    var r = Te.lookupNode(e, t);
                    for(var n in r.contents)throw new Te.ErrnoError(55);
                    delete e.contents[t], e.timestamp = Date.now();
                },
                readdir: function(e) {
                    var t = [
                        ".",
                        ".."
                    ];
                    for(var r in e.contents)e.contents.hasOwnProperty(r) && t.push(r);
                    return t;
                },
                symlink: function(e, t, r) {
                    var n = Ce.createNode(e, t, 41471, 0);
                    return n.link = r, n;
                },
                readlink: function(e) {
                    if (!Te.isLink(e.mode)) throw new Te.ErrnoError(28);
                    return e.link;
                }
            },
            stream_ops: {
                read: function(e, t, r, n, o) {
                    var i = e.node.contents;
                    if (o >= e.node.usedBytes) return 0;
                    var a = Math.min(e.node.usedBytes - o, n);
                    if (a > 8 && i.subarray) t.set(i.subarray(o, o + a), r);
                    else for(var s = 0; s < a; s++)t[r + s] = i[o + s];
                    return a;
                },
                write: function(e, t, r, n, o, i) {
                    if (t.buffer === j.buffer && (i = !1), !n) return 0;
                    var a = e.node;
                    if (a.timestamp = Date.now(), t.subarray && (!a.contents || a.contents.subarray)) {
                        if (i) return a.contents = t.subarray(r, r + n), a.usedBytes = n, n;
                        if (0 === a.usedBytes && 0 === o) return a.contents = t.slice(r, r + n), a.usedBytes = n, n;
                        if (o + n <= a.usedBytes) return a.contents.set(t.subarray(r, r + n), o), n;
                    }
                    if (Ce.expandFileStorage(a, o + n), a.contents.subarray && t.subarray) a.contents.set(t.subarray(r, r + n), o);
                    else for(var s = 0; s < n; s++)a.contents[o + s] = t[r + s];
                    return a.usedBytes = Math.max(a.usedBytes, o + n), n;
                },
                llseek: function(e, t, r) {
                    var n = t;
                    if (1 === r ? n += e.position : 2 === r && Te.isFile(e.node.mode) && (n += e.node.usedBytes), n < 0) throw new Te.ErrnoError(28);
                    return n;
                },
                allocate: function(e, t, r) {
                    Ce.expandFileStorage(e.node, t + r), e.node.usedBytes = Math.max(e.node.usedBytes, t + r);
                },
                mmap: function(e, t, r, n, o, i) {
                    if (0 !== t) throw new Te.ErrnoError(28);
                    if (!Te.isFile(e.node.mode)) throw new Te.ErrnoError(43);
                    var a, s, u = e.node.contents;
                    if (2 & i || u.buffer !== L) {
                        if ((n > 0 || n + r < u.length) && (u = u.subarray ? u.subarray(n, n + r) : Array.prototype.slice.call(u, n, n + r)), s = !0, !(a = function(e) {
                            e = function(e, t) {
                                return 65536 * Math.ceil(e / 65536);
                            }(e);
                            var t = Ir(65536, e);
                            return t ? (function(e, t) {
                                B.fill(0, e, e + t);
                            }(t, e), t) : 0;
                        }(r))) throw new Te.ErrnoError(48);
                        j.set(u, a);
                    } else s = !1, a = u.byteOffset;
                    return {
                        ptr: a,
                        allocated: s
                    };
                },
                msync: function(e, t, r, n, o) {
                    if (!Te.isFile(e.node.mode)) throw new Te.ErrnoError(43);
                    return 2 & o || Ce.stream_ops.write(e, t, 0, n, r, !1), 0;
                }
            }
        }, Te = {
            root: null,
            mounts: [],
            devices: {},
            streams: [],
            nextInode: 1,
            nameTable: null,
            currentPath: "/",
            initialized: !1,
            ignorePermissions: !0,
            ErrnoError: null,
            genericErrors: {},
            filesystems: null,
            syncFSRequests: 0,
            lookupPath: (e, t = {})=>{
                if (!(e = ke.resolve(Te.cwd(), e))) return {
                    path: "",
                    node: null
                };
                if ((t = Object.assign({
                    follow_mount: !0,
                    recurse_count: 0
                }, t)).recurse_count > 8) throw new Te.ErrnoError(32);
                for(var r = xe.normalizeArray(e.split("/").filter((e)=>!!e), !1), n = Te.root, o = "/", i = 0; i < r.length; i++){
                    var a = i === r.length - 1;
                    if (a && t.parent) break;
                    if (n = Te.lookupNode(n, r[i]), o = xe.join2(o, r[i]), Te.isMountpoint(n) && (!a || a && t.follow_mount) && (n = n.mounted.root), !a || t.follow) for(var s = 0; Te.isLink(n.mode);){
                        var u = Te.readlink(o);
                        if (o = ke.resolve(xe.dirname(o), u), n = Te.lookupPath(o, {
                            recurse_count: t.recurse_count + 1
                        }).node, s++ > 40) throw new Te.ErrnoError(32);
                    }
                }
                return {
                    path: o,
                    node: n
                };
            },
            getPath: (e)=>{
                for(var t;;){
                    if (Te.isRoot(e)) {
                        var r = e.mount.mountpoint;
                        return t ? "/" !== r[r.length - 1] ? r + "/" + t : r + t : r;
                    }
                    t = t ? e.name + "/" + t : e.name, e = e.parent;
                }
            },
            hashName: (e, t)=>{
                for(var r = 0, n = 0; n < t.length; n++)r = (r << 5) - r + t.charCodeAt(n) | 0;
                return (e + r >>> 0) % Te.nameTable.length;
            },
            hashAddNode: (e)=>{
                var t = Te.hashName(e.parent.id, e.name);
                e.name_next = Te.nameTable[t], Te.nameTable[t] = e;
            },
            hashRemoveNode: (e)=>{
                var t = Te.hashName(e.parent.id, e.name);
                if (Te.nameTable[t] === e) Te.nameTable[t] = e.name_next;
                else for(var r = Te.nameTable[t]; r;){
                    if (r.name_next === e) {
                        r.name_next = e.name_next;
                        break;
                    }
                    r = r.name_next;
                }
            },
            lookupNode: (e, t)=>{
                var r = Te.mayLookup(e);
                if (r) throw new Te.ErrnoError(r, e);
                for(var n = Te.hashName(e.id, t), o = Te.nameTable[n]; o; o = o.name_next){
                    var i = o.name;
                    if (o.parent.id === e.id && i === t) return o;
                }
                return Te.lookup(e, t);
            },
            createNode: (e, t, r, n)=>{
                var o = new Te.FSNode(e, t, r, n);
                return Te.hashAddNode(o), o;
            },
            destroyNode: (e)=>{
                Te.hashRemoveNode(e);
            },
            isRoot: (e)=>e === e.parent,
            isMountpoint: (e)=>!!e.mounted,
            isFile: (e)=>32768 == (61440 & e),
            isDir: (e)=>16384 == (61440 & e),
            isLink: (e)=>40960 == (61440 & e),
            isChrdev: (e)=>8192 == (61440 & e),
            isBlkdev: (e)=>24576 == (61440 & e),
            isFIFO: (e)=>4096 == (61440 & e),
            isSocket: (e)=>49152 == (49152 & e),
            flagModes: {
                r: 0,
                "r+": 2,
                w: 577,
                "w+": 578,
                a: 1089,
                "a+": 1090
            },
            modeStringToFlags: (e)=>{
                var t = Te.flagModes[e];
                if (void 0 === t) throw new Error("Unknown file open mode: " + e);
                return t;
            },
            flagsToPermissionString: (e)=>{
                var t = [
                    "r",
                    "w",
                    "rw"
                ][3 & e];
                return 512 & e && (t += "w"), t;
            },
            nodePermissions: (e, t)=>Te.ignorePermissions || (!t.includes("r") || 292 & e.mode) && (!t.includes("w") || 146 & e.mode) && (!t.includes("x") || 73 & e.mode) ? 0 : 2,
            mayLookup: (e)=>Te.nodePermissions(e, "x") || (e.node_ops.lookup ? 0 : 2),
            mayCreate: (e, t)=>{
                try {
                    return Te.lookupNode(e, t), 20;
                } catch (e) {}
                return Te.nodePermissions(e, "wx");
            },
            mayDelete: (e, t, r)=>{
                var n;
                try {
                    n = Te.lookupNode(e, t);
                } catch (e) {
                    return e.errno;
                }
                var o = Te.nodePermissions(e, "wx");
                if (o) return o;
                if (r) {
                    if (!Te.isDir(n.mode)) return 54;
                    if (Te.isRoot(n) || Te.getPath(n) === Te.cwd()) return 10;
                } else if (Te.isDir(n.mode)) return 31;
                return 0;
            },
            mayOpen: (e, t)=>e ? Te.isLink(e.mode) ? 32 : Te.isDir(e.mode) && ("r" !== Te.flagsToPermissionString(t) || 512 & t) ? 31 : Te.nodePermissions(e, Te.flagsToPermissionString(t)) : 44,
            MAX_OPEN_FDS: 4096,
            nextfd: (e = 0, t = Te.MAX_OPEN_FDS)=>{
                for(var r = e; r <= t; r++)if (!Te.streams[r]) return r;
                throw new Te.ErrnoError(33);
            },
            getStream: (e)=>Te.streams[e],
            createStream: (e, t, r)=>{
                Te.FSStream || (Te.FSStream = function() {}, Te.FSStream.prototype = {
                    object: {
                        get: function() {
                            return this.node;
                        },
                        set: function(e) {
                            this.node = e;
                        }
                    },
                    isRead: {
                        get: function() {
                            return 1 != (2097155 & this.flags);
                        }
                    },
                    isWrite: {
                        get: function() {
                            return 0 != (2097155 & this.flags);
                        }
                    },
                    isAppend: {
                        get: function() {
                            return 1024 & this.flags;
                        }
                    }
                }), e = Object.assign(new Te.FSStream, e);
                var n = Te.nextfd(t, r);
                return e.fd = n, Te.streams[n] = e, e;
            },
            closeStream: (e)=>{
                Te.streams[e] = null;
            },
            chrdev_stream_ops: {
                open: (e)=>{
                    var t = Te.getDevice(e.node.rdev);
                    e.stream_ops = t.stream_ops, e.stream_ops.open && e.stream_ops.open(e);
                },
                llseek: ()=>{
                    throw new Te.ErrnoError(70);
                }
            },
            major: (e)=>e >> 8,
            minor: (e)=>255 & e,
            makedev: (e, t)=>e << 8 | t,
            registerDevice: (e, t)=>{
                Te.devices[e] = {
                    stream_ops: t
                };
            },
            getDevice: (e)=>Te.devices[e],
            getMounts: (e)=>{
                for(var t = [], r = [
                    e
                ]; r.length;){
                    var n = r.pop();
                    t.push(n), r.push.apply(r, n.mounts);
                }
                return t;
            },
            syncfs: (e, t)=>{
                "function" == typeof e && (t = e, e = !1), Te.syncFSRequests++, Te.syncFSRequests > 1 && v("warning: " + Te.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
                var r = Te.getMounts(Te.root.mount), n = 0;
                function o(e) {
                    return Te.syncFSRequests--, t(e);
                }
                function i(e) {
                    if (e) return i.errored ? void 0 : (i.errored = !0, o(e));
                    ++n >= r.length && o(null);
                }
                r.forEach((t)=>{
                    if (!t.type.syncfs) return i(null);
                    t.type.syncfs(t, e, i);
                });
            },
            mount: (e, t, r)=>{
                var n, o = "/" === r, i = !r;
                if (o && Te.root) throw new Te.ErrnoError(10);
                if (!o && !i) {
                    var a = Te.lookupPath(r, {
                        follow_mount: !1
                    });
                    if (r = a.path, n = a.node, Te.isMountpoint(n)) throw new Te.ErrnoError(10);
                    if (!Te.isDir(n.mode)) throw new Te.ErrnoError(54);
                }
                var s = {
                    type: e,
                    opts: t,
                    mountpoint: r,
                    mounts: []
                }, u = e.mount(s);
                return u.mount = s, s.root = u, o ? Te.root = u : n && (n.mounted = s, n.mount && n.mount.mounts.push(s)), u;
            },
            unmount: (e)=>{
                var t = Te.lookupPath(e, {
                    follow_mount: !1
                });
                if (!Te.isMountpoint(t.node)) throw new Te.ErrnoError(28);
                var r = t.node, n = r.mounted, o = Te.getMounts(n);
                Object.keys(Te.nameTable).forEach((e)=>{
                    for(var t = Te.nameTable[e]; t;){
                        var r = t.name_next;
                        o.includes(t.mount) && Te.destroyNode(t), t = r;
                    }
                }), r.mounted = null;
                var i = r.mount.mounts.indexOf(n);
                r.mount.mounts.splice(i, 1);
            },
            lookup: (e, t)=>e.node_ops.lookup(e, t),
            mknod: (e, t, r)=>{
                var n = Te.lookupPath(e, {
                    parent: !0
                }).node, o = xe.basename(e);
                if (!o || "." === o || ".." === o) throw new Te.ErrnoError(28);
                var i = Te.mayCreate(n, o);
                if (i) throw new Te.ErrnoError(i);
                if (!n.node_ops.mknod) throw new Te.ErrnoError(63);
                return n.node_ops.mknod(n, o, t, r);
            },
            create: (e, t)=>(t = void 0 !== t ? t : 438, t &= 4095, t |= 32768, Te.mknod(e, t, 0)),
            mkdir: (e, t)=>(t = void 0 !== t ? t : 511, t &= 1023, t |= 16384, Te.mknod(e, t, 0)),
            mkdirTree: (e, t)=>{
                for(var r = e.split("/"), n = "", o = 0; o < r.length; ++o)if (r[o]) {
                    n += "/" + r[o];
                    try {
                        Te.mkdir(n, t);
                    } catch (e) {
                        if (20 != e.errno) throw e;
                    }
                }
            },
            mkdev: (e, t, r)=>(void 0 === r && (r = t, t = 438), t |= 8192, Te.mknod(e, t, r)),
            symlink: (e, t)=>{
                if (!ke.resolve(e)) throw new Te.ErrnoError(44);
                var r = Te.lookupPath(t, {
                    parent: !0
                }).node;
                if (!r) throw new Te.ErrnoError(44);
                var n = xe.basename(t), o = Te.mayCreate(r, n);
                if (o) throw new Te.ErrnoError(o);
                if (!r.node_ops.symlink) throw new Te.ErrnoError(63);
                return r.node_ops.symlink(r, n, e);
            },
            rename: (e, t)=>{
                var r, n, o = xe.dirname(e), i = xe.dirname(t), a = xe.basename(e), s = xe.basename(t);
                if (r = Te.lookupPath(e, {
                    parent: !0
                }).node, n = Te.lookupPath(t, {
                    parent: !0
                }).node, !r || !n) throw new Te.ErrnoError(44);
                if (r.mount !== n.mount) throw new Te.ErrnoError(75);
                var u, c = Te.lookupNode(r, a), l = ke.relative(e, i);
                if ("." !== l.charAt(0)) throw new Te.ErrnoError(28);
                if ("." !== (l = ke.relative(t, o)).charAt(0)) throw new Te.ErrnoError(55);
                try {
                    u = Te.lookupNode(n, s);
                } catch (e) {}
                if (c !== u) {
                    var d = Te.isDir(c.mode), f = Te.mayDelete(r, a, d);
                    if (f) throw new Te.ErrnoError(f);
                    if (f = u ? Te.mayDelete(n, s, d) : Te.mayCreate(n, s)) throw new Te.ErrnoError(f);
                    if (!r.node_ops.rename) throw new Te.ErrnoError(63);
                    if (Te.isMountpoint(c) || u && Te.isMountpoint(u)) throw new Te.ErrnoError(10);
                    if (n !== r && (f = Te.nodePermissions(r, "w"))) throw new Te.ErrnoError(f);
                    Te.hashRemoveNode(c);
                    try {
                        r.node_ops.rename(c, n, s);
                    } catch (e) {
                        throw e;
                    } finally{
                        Te.hashAddNode(c);
                    }
                }
            },
            rmdir: (e)=>{
                var t = Te.lookupPath(e, {
                    parent: !0
                }).node, r = xe.basename(e), n = Te.lookupNode(t, r), o = Te.mayDelete(t, r, !0);
                if (o) throw new Te.ErrnoError(o);
                if (!t.node_ops.rmdir) throw new Te.ErrnoError(63);
                if (Te.isMountpoint(n)) throw new Te.ErrnoError(10);
                t.node_ops.rmdir(t, r), Te.destroyNode(n);
            },
            readdir: (e)=>{
                var t = Te.lookupPath(e, {
                    follow: !0
                }).node;
                if (!t.node_ops.readdir) throw new Te.ErrnoError(54);
                return t.node_ops.readdir(t);
            },
            unlink: (e)=>{
                var t = Te.lookupPath(e, {
                    parent: !0
                }).node;
                if (!t) throw new Te.ErrnoError(44);
                var r = xe.basename(e), n = Te.lookupNode(t, r), o = Te.mayDelete(t, r, !1);
                if (o) throw new Te.ErrnoError(o);
                if (!t.node_ops.unlink) throw new Te.ErrnoError(63);
                if (Te.isMountpoint(n)) throw new Te.ErrnoError(10);
                t.node_ops.unlink(t, r), Te.destroyNode(n);
            },
            readlink: (e)=>{
                var t = Te.lookupPath(e).node;
                if (!t) throw new Te.ErrnoError(44);
                if (!t.node_ops.readlink) throw new Te.ErrnoError(28);
                return ke.resolve(Te.getPath(t.parent), t.node_ops.readlink(t));
            },
            stat: (e, t)=>{
                var r = Te.lookupPath(e, {
                    follow: !t
                }).node;
                if (!r) throw new Te.ErrnoError(44);
                if (!r.node_ops.getattr) throw new Te.ErrnoError(63);
                return r.node_ops.getattr(r);
            },
            lstat: (e)=>Te.stat(e, !0),
            chmod: (e, t, r)=>{
                var n;
                if (!(n = "string" == typeof e ? Te.lookupPath(e, {
                    follow: !r
                }).node : e).node_ops.setattr) throw new Te.ErrnoError(63);
                n.node_ops.setattr(n, {
                    mode: 4095 & t | -4096 & n.mode,
                    timestamp: Date.now()
                });
            },
            lchmod: (e, t)=>{
                Te.chmod(e, t, !0);
            },
            fchmod: (e, t)=>{
                var r = Te.getStream(e);
                if (!r) throw new Te.ErrnoError(8);
                Te.chmod(r.node, t);
            },
            chown: (e, t, r, n)=>{
                var o;
                if (!(o = "string" == typeof e ? Te.lookupPath(e, {
                    follow: !n
                }).node : e).node_ops.setattr) throw new Te.ErrnoError(63);
                o.node_ops.setattr(o, {
                    timestamp: Date.now()
                });
            },
            lchown: (e, t, r)=>{
                Te.chown(e, t, r, !0);
            },
            fchown: (e, t, r)=>{
                var n = Te.getStream(e);
                if (!n) throw new Te.ErrnoError(8);
                Te.chown(n.node, t, r);
            },
            truncate: (e, t)=>{
                if (t < 0) throw new Te.ErrnoError(28);
                var r;
                if (!(r = "string" == typeof e ? Te.lookupPath(e, {
                    follow: !0
                }).node : e).node_ops.setattr) throw new Te.ErrnoError(63);
                if (Te.isDir(r.mode)) throw new Te.ErrnoError(31);
                if (!Te.isFile(r.mode)) throw new Te.ErrnoError(28);
                var n = Te.nodePermissions(r, "w");
                if (n) throw new Te.ErrnoError(n);
                r.node_ops.setattr(r, {
                    size: t,
                    timestamp: Date.now()
                });
            },
            ftruncate: (e, t)=>{
                var r = Te.getStream(e);
                if (!r) throw new Te.ErrnoError(8);
                if (0 == (2097155 & r.flags)) throw new Te.ErrnoError(28);
                Te.truncate(r.node, t);
            },
            utime: (e, t, r)=>{
                var n = Te.lookupPath(e, {
                    follow: !0
                }).node;
                n.node_ops.setattr(n, {
                    timestamp: Math.max(t, r)
                });
            },
            open: (e, t, r, n, i)=>{
                if ("" === e) throw new Te.ErrnoError(44);
                var a;
                if (r = void 0 === r ? 438 : r, r = 64 & (t = "string" == typeof t ? Te.modeStringToFlags(t) : t) ? 4095 & r | 32768 : 0, "object" == typeof e) a = e;
                else {
                    e = xe.normalize(e);
                    try {
                        a = Te.lookupPath(e, {
                            follow: !(131072 & t)
                        }).node;
                    } catch (e) {}
                }
                var s = !1;
                if (64 & t) if (a) {
                    if (128 & t) throw new Te.ErrnoError(20);
                } else a = Te.mknod(e, r, 0), s = !0;
                if (!a) throw new Te.ErrnoError(44);
                if (Te.isChrdev(a.mode) && (t &= -513), 65536 & t && !Te.isDir(a.mode)) throw new Te.ErrnoError(54);
                if (!s) {
                    var u = Te.mayOpen(a, t);
                    if (u) throw new Te.ErrnoError(u);
                }
                512 & t && Te.truncate(a, 0), t &= -131713;
                var c = Te.createStream({
                    node: a,
                    path: Te.getPath(a),
                    flags: t,
                    seekable: !0,
                    position: 0,
                    stream_ops: a.stream_ops,
                    ungotten: [],
                    error: !1
                }, n, i);
                return c.stream_ops.open && c.stream_ops.open(c), !o.logReadFiles || 1 & t || (Te.readFiles || (Te.readFiles = {}), e in Te.readFiles || (Te.readFiles[e] = 1)), c;
            },
            close: (e)=>{
                if (Te.isClosed(e)) throw new Te.ErrnoError(8);
                e.getdents && (e.getdents = null);
                try {
                    e.stream_ops.close && e.stream_ops.close(e);
                } catch (e) {
                    throw e;
                } finally{
                    Te.closeStream(e.fd);
                }
                e.fd = null;
            },
            isClosed: (e)=>null === e.fd,
            llseek: (e, t, r)=>{
                if (Te.isClosed(e)) throw new Te.ErrnoError(8);
                if (!e.seekable || !e.stream_ops.llseek) throw new Te.ErrnoError(70);
                if (0 != r && 1 != r && 2 != r) throw new Te.ErrnoError(28);
                return e.position = e.stream_ops.llseek(e, t, r), e.ungotten = [], e.position;
            },
            read: (e, t, r, n, o)=>{
                if (n < 0 || o < 0) throw new Te.ErrnoError(28);
                if (Te.isClosed(e)) throw new Te.ErrnoError(8);
                if (1 == (2097155 & e.flags)) throw new Te.ErrnoError(8);
                if (Te.isDir(e.node.mode)) throw new Te.ErrnoError(31);
                if (!e.stream_ops.read) throw new Te.ErrnoError(28);
                var i = void 0 !== o;
                if (i) {
                    if (!e.seekable) throw new Te.ErrnoError(70);
                } else o = e.position;
                var a = e.stream_ops.read(e, t, r, n, o);
                return i || (e.position += a), a;
            },
            write: (e, t, r, n, o, i)=>{
                if (n < 0 || o < 0) throw new Te.ErrnoError(28);
                if (Te.isClosed(e)) throw new Te.ErrnoError(8);
                if (0 == (2097155 & e.flags)) throw new Te.ErrnoError(8);
                if (Te.isDir(e.node.mode)) throw new Te.ErrnoError(31);
                if (!e.stream_ops.write) throw new Te.ErrnoError(28);
                e.seekable && 1024 & e.flags && Te.llseek(e, 0, 2);
                var a = void 0 !== o;
                if (a) {
                    if (!e.seekable) throw new Te.ErrnoError(70);
                } else o = e.position;
                var s = e.stream_ops.write(e, t, r, n, o, i);
                return a || (e.position += s), s;
            },
            allocate: (e, t, r)=>{
                if (Te.isClosed(e)) throw new Te.ErrnoError(8);
                if (t < 0 || r <= 0) throw new Te.ErrnoError(28);
                if (0 == (2097155 & e.flags)) throw new Te.ErrnoError(8);
                if (!Te.isFile(e.node.mode) && !Te.isDir(e.node.mode)) throw new Te.ErrnoError(43);
                if (!e.stream_ops.allocate) throw new Te.ErrnoError(138);
                e.stream_ops.allocate(e, t, r);
            },
            mmap: (e, t, r, n, o, i)=>{
                if (0 != (2 & o) && 0 == (2 & i) && 2 != (2097155 & e.flags)) throw new Te.ErrnoError(2);
                if (1 == (2097155 & e.flags)) throw new Te.ErrnoError(2);
                if (!e.stream_ops.mmap) throw new Te.ErrnoError(43);
                return e.stream_ops.mmap(e, t, r, n, o, i);
            },
            msync: (e, t, r, n, o)=>e && e.stream_ops.msync ? e.stream_ops.msync(e, t, r, n, o) : 0,
            munmap: (e)=>0,
            ioctl: (e, t, r)=>{
                if (!e.stream_ops.ioctl) throw new Te.ErrnoError(59);
                return e.stream_ops.ioctl(e, t, r);
            },
            readFile: (e, t = {})=>{
                if (t.flags = t.flags || 0, t.encoding = t.encoding || "binary", "utf8" !== t.encoding && "binary" !== t.encoding) throw new Error('Invalid encoding type "' + t.encoding + '"');
                var r, n = Te.open(e, t.flags), o = Te.stat(e).size, i = new Uint8Array(o);
                return Te.read(n, i, 0, o, 0), "utf8" === t.encoding ? r = T(i, 0) : "binary" === t.encoding && (r = i), Te.close(n), r;
            },
            writeFile: (e, t, r = {})=>{
                r.flags = r.flags || 577;
                var n = Te.open(e, r.flags, r.mode);
                if ("string" == typeof t) {
                    var o = new Uint8Array(D(t) + 1), i = F(t, o, 0, o.length);
                    Te.write(n, o, 0, i, void 0, r.canOwn);
                } else {
                    if (!ArrayBuffer.isView(t)) throw new Error("Unsupported data type");
                    Te.write(n, t, 0, t.byteLength, void 0, r.canOwn);
                }
                Te.close(n);
            },
            cwd: ()=>Te.currentPath,
            chdir: (e)=>{
                var t = Te.lookupPath(e, {
                    follow: !0
                });
                if (null === t.node) throw new Te.ErrnoError(44);
                if (!Te.isDir(t.node.mode)) throw new Te.ErrnoError(54);
                var r = Te.nodePermissions(t.node, "x");
                if (r) throw new Te.ErrnoError(r);
                Te.currentPath = t.path;
            },
            createDefaultDirectories: ()=>{
                Te.mkdir("/tmp"), Te.mkdir("/home"), Te.mkdir("/home/web_user");
            },
            createDefaultDevices: ()=>{
                Te.mkdir("/dev"), Te.registerDevice(Te.makedev(1, 3), {
                    read: ()=>0,
                    write: (e, t, r, n, o)=>n
                }), Te.mkdev("/dev/null", Te.makedev(1, 3)), Se.register(Te.makedev(5, 0), Se.default_tty_ops), Se.register(Te.makedev(6, 0), Se.default_tty1_ops), Te.mkdev("/dev/tty", Te.makedev(5, 0)), Te.mkdev("/dev/tty1", Te.makedev(6, 0));
                var e = function() {
                    if ("object" == typeof crypto && "function" == typeof crypto.getRandomValues) {
                        var e = new Uint8Array(1);
                        return function() {
                            return crypto.getRandomValues(e), e[0];
                        };
                    }
                    return function() {
                        pe("randomDevice");
                    };
                }();
                Te.createDevice("/dev", "random", e), Te.createDevice("/dev", "urandom", e), Te.mkdir("/dev/shm"), Te.mkdir("/dev/shm/tmp");
            },
            createSpecialDirectories: ()=>{
                Te.mkdir("/proc");
                var e = Te.mkdir("/proc/self");
                Te.mkdir("/proc/self/fd"), Te.mount({
                    mount: ()=>{
                        var t = Te.createNode(e, "fd", 16895, 73);
                        return t.node_ops = {
                            lookup: (e, t)=>{
                                var r = +t, n = Te.getStream(r);
                                if (!n) throw new Te.ErrnoError(8);
                                var o = {
                                    parent: null,
                                    mount: {
                                        mountpoint: "fake"
                                    },
                                    node_ops: {
                                        readlink: ()=>n.path
                                    }
                                };
                                return o.parent = o, o;
                            }
                        }, t;
                    }
                }, {}, "/proc/self/fd");
            },
            createStandardStreams: ()=>{
                o.stdin ? Te.createDevice("/dev", "stdin", o.stdin) : Te.symlink("/dev/tty", "/dev/stdin"), o.stdout ? Te.createDevice("/dev", "stdout", null, o.stdout) : Te.symlink("/dev/tty", "/dev/stdout"), o.stderr ? Te.createDevice("/dev", "stderr", null, o.stderr) : Te.symlink("/dev/tty1", "/dev/stderr"), Te.open("/dev/stdin", 0), Te.open("/dev/stdout", 1), Te.open("/dev/stderr", 1);
            },
            ensureErrnoError: ()=>{
                Te.ErrnoError || (Te.ErrnoError = function(e, t) {
                    this.node = t, this.setErrno = function(e) {
                        this.errno = e;
                    }, this.setErrno(e), this.message = "FS error";
                }, Te.ErrnoError.prototype = new Error, Te.ErrnoError.prototype.constructor = Te.ErrnoError, [
                    44
                ].forEach((e)=>{
                    Te.genericErrors[e] = new Te.ErrnoError(e), Te.genericErrors[e].stack = "<generic error, no stack>";
                }));
            },
            staticInit: ()=>{
                Te.ensureErrnoError(), Te.nameTable = new Array(4096), Te.mount(Ce, {}, "/"), Te.createDefaultDirectories(), Te.createDefaultDevices(), Te.createSpecialDirectories(), Te.filesystems = {
                    MEMFS: Ce
                };
            },
            init: (e, t, r)=>{
                Te.init.initialized = !0, Te.ensureErrnoError(), o.stdin = e || o.stdin, o.stdout = t || o.stdout, o.stderr = r || o.stderr, Te.createStandardStreams();
            },
            quit: ()=>{
                Te.init.initialized = !1;
                for(var e = 0; e < Te.streams.length; e++){
                    var t = Te.streams[e];
                    t && Te.close(t);
                }
            },
            getMode: (e, t)=>{
                var r = 0;
                return e && (r |= 365), t && (r |= 146), r;
            },
            findObject: (e, t)=>{
                var r = Te.analyzePath(e, t);
                return r.exists ? r.object : null;
            },
            analyzePath: (e, t)=>{
                try {
                    e = (n = Te.lookupPath(e, {
                        follow: !t
                    })).path;
                } catch (e) {}
                var r = {
                    isRoot: !1,
                    exists: !1,
                    error: 0,
                    name: null,
                    path: null,
                    object: null,
                    parentExists: !1,
                    parentPath: null,
                    parentObject: null
                };
                try {
                    var n = Te.lookupPath(e, {
                        parent: !0
                    });
                    r.parentExists = !0, r.parentPath = n.path, r.parentObject = n.node, r.name = xe.basename(e), n = Te.lookupPath(e, {
                        follow: !t
                    }), r.exists = !0, r.path = n.path, r.object = n.node, r.name = n.node.name, r.isRoot = "/" === n.path;
                } catch (e) {
                    r.error = e.errno;
                }
                return r;
            },
            createPath: (e, t, r, n)=>{
                e = "string" == typeof e ? e : Te.getPath(e);
                for(var o = t.split("/").reverse(); o.length;){
                    var i = o.pop();
                    if (i) {
                        var a = xe.join2(e, i);
                        try {
                            Te.mkdir(a);
                        } catch (e) {}
                        e = a;
                    }
                }
                return a;
            },
            createFile: (e, t, r, n, o)=>{
                var i = xe.join2("string" == typeof e ? e : Te.getPath(e), t), a = Te.getMode(n, o);
                return Te.create(i, a);
            },
            createDataFile: (e, t, r, n, o, i)=>{
                var a = t;
                e && (e = "string" == typeof e ? e : Te.getPath(e), a = t ? xe.join2(e, t) : e);
                var s = Te.getMode(n, o), u = Te.create(a, s);
                if (r) {
                    if ("string" == typeof r) {
                        for(var c = new Array(r.length), l = 0, d = r.length; l < d; ++l)c[l] = r.charCodeAt(l);
                        r = c;
                    }
                    Te.chmod(u, 146 | s);
                    var f = Te.open(u, 577);
                    Te.write(f, r, 0, r.length, 0, i), Te.close(f), Te.chmod(u, s);
                }
                return u;
            },
            createDevice: (e, t, r, n)=>{
                var o = xe.join2("string" == typeof e ? e : Te.getPath(e), t), i = Te.getMode(!!r, !!n);
                Te.createDevice.major || (Te.createDevice.major = 64);
                var a = Te.makedev(Te.createDevice.major++, 0);
                return Te.registerDevice(a, {
                    open: (e)=>{
                        e.seekable = !1;
                    },
                    close: (e)=>{
                        n && n.buffer && n.buffer.length && n(10);
                    },
                    read: (e, t, n, o, i)=>{
                        for(var a = 0, s = 0; s < o; s++){
                            var u;
                            try {
                                u = r();
                            } catch (e) {
                                throw new Te.ErrnoError(29);
                            }
                            if (void 0 === u && 0 === a) throw new Te.ErrnoError(6);
                            if (null == u) break;
                            a++, t[n + s] = u;
                        }
                        return a && (e.node.timestamp = Date.now()), a;
                    },
                    write: (e, t, r, o, i)=>{
                        for(var a = 0; a < o; a++)try {
                            n(t[r + a]);
                        } catch (e) {
                            throw new Te.ErrnoError(29);
                        }
                        return o && (e.node.timestamp = Date.now()), a;
                    }
                }), Te.mkdev(o, i, a);
            },
            forceLoadFile: (e)=>{
                if (e.isDevice || e.isFolder || e.link || e.contents) return !0;
                if ("undefined" != typeof XMLHttpRequest) throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
                if (!a) throw new Error("Cannot load without read() or XMLHttpRequest.");
                try {
                    e.contents = Pr(a(e.url), !0), e.usedBytes = e.contents.length;
                } catch (e) {
                    throw new Te.ErrnoError(29);
                }
            },
            createLazyFile: (e, t, r, n, o)=>{
                function i() {
                    this.lengthKnown = !1, this.chunks = [];
                }
                if (i.prototype.get = function(e) {
                    if (!(e > this.length - 1 || e < 0)) {
                        var t = e % this.chunkSize, r = e / this.chunkSize | 0;
                        return this.getter(r)[t];
                    }
                }, i.prototype.setDataGetter = function(e) {
                    this.getter = e;
                }, i.prototype.cacheLength = function() {
                    var e = new XMLHttpRequest;
                    if (e.open("HEAD", r, !1), e.send(null), !(e.status >= 200 && e.status < 300 || 304 === e.status)) throw new Error("Couldn't load " + r + ". Status: " + e.status);
                    var t, n = Number(e.getResponseHeader("Content-length")), o = (t = e.getResponseHeader("Accept-Ranges")) && "bytes" === t, i = (t = e.getResponseHeader("Content-Encoding")) && "gzip" === t, a = 1048576;
                    o || (a = n);
                    var s = this;
                    s.setDataGetter((e)=>{
                        var t = e * a, o = (e + 1) * a - 1;
                        if (o = Math.min(o, n - 1), void 0 === s.chunks[e] && (s.chunks[e] = ((e, t)=>{
                            if (e > t) throw new Error("invalid range (" + e + ", " + t + ") or no bytes requested!");
                            if (t > n - 1) throw new Error("only " + n + " bytes available! programmer error!");
                            var o = new XMLHttpRequest;
                            if (o.open("GET", r, !1), n !== a && o.setRequestHeader("Range", "bytes=" + e + "-" + t), o.responseType = "arraybuffer", o.overrideMimeType && o.overrideMimeType("text/plain; charset=x-user-defined"), o.send(null), !(o.status >= 200 && o.status < 300 || 304 === o.status)) throw new Error("Couldn't load " + r + ". Status: " + o.status);
                            return void 0 !== o.response ? new Uint8Array(o.response || []) : Pr(o.responseText || "", !0);
                        })(t, o)), void 0 === s.chunks[e]) throw new Error("doXHR failed!");
                        return s.chunks[e];
                    }), !i && n || (a = n = 1, n = this.getter(0).length, a = n, g("LazyFiles on gzip forces download of the whole file when length is accessed")), this._length = n, this._chunkSize = a, this.lengthKnown = !0;
                }, "undefined" != typeof XMLHttpRequest) {
                    if (!p) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
                    var a = new i;
                    Object.defineProperties(a, {
                        length: {
                            get: function() {
                                return this.lengthKnown || this.cacheLength(), this._length;
                            }
                        },
                        chunkSize: {
                            get: function() {
                                return this.lengthKnown || this.cacheLength(), this._chunkSize;
                            }
                        }
                    });
                    var s = {
                        isDevice: !1,
                        contents: a
                    };
                } else s = {
                    isDevice: !1,
                    url: r
                };
                var u = Te.createFile(e, t, s, n, o);
                s.contents ? u.contents = s.contents : s.url && (u.contents = null, u.url = s.url), Object.defineProperties(u, {
                    usedBytes: {
                        get: function() {
                            return this.contents.length;
                        }
                    }
                });
                var c = {};
                return Object.keys(u.stream_ops).forEach((e)=>{
                    var t = u.stream_ops[e];
                    c[e] = function() {
                        return Te.forceLoadFile(u), t.apply(null, arguments);
                    };
                }), c.read = (e, t, r, n, o)=>{
                    Te.forceLoadFile(u);
                    var i = e.node.contents;
                    if (o >= i.length) return 0;
                    var a = Math.min(i.length - o, n);
                    if (i.slice) for(var s = 0; s < a; s++)t[r + s] = i[o + s];
                    else for(s = 0; s < a; s++)t[r + s] = i.get(o + s);
                    return a;
                }, u.stream_ops = c, u;
            },
            createPreloadedFile: (e, t, r, n, o, i, a, u, c, l)=>{
                var d = t ? ke.resolve(xe.join2(e, t)) : e;
                function f(r) {
                    function s(r) {
                        l && l(), u || Te.createDataFile(e, t, r, n, o, c), i && i(), me();
                    }
                    Ht.handledByPreloadPlugin(r, d, s, ()=>{
                        a && a(), me();
                    }) || s(r);
                }
                fe(), "string" == typeof r ? function(e, t, r, n) {
                    var o = "al " + e;
                    s(e, function(t) {
                        S(t, 'Loading data file "' + e + '" failed (no arrayBuffer).'), f(new Uint8Array(t)), o && me();
                    }, function(t) {
                        if (!r) throw 'Loading data file "' + e + '" failed.';
                        r();
                    }), o && fe();
                }(r, 0, a) : f(r);
            },
            indexedDB: ()=>window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB,
            DB_NAME: ()=>"EM_FS_" + window.location.pathname,
            DB_VERSION: 20,
            DB_STORE_NAME: "FILE_DATA",
            saveFilesToDB: (e, t, r)=>{
                t = t || (()=>{}), r = r || (()=>{});
                var n = Te.indexedDB();
                try {
                    var o = n.open(Te.DB_NAME(), Te.DB_VERSION);
                } catch (e) {
                    return r(e);
                }
                o.onupgradeneeded = ()=>{
                    g("creating db"), o.result.createObjectStore(Te.DB_STORE_NAME);
                }, o.onsuccess = ()=>{
                    var n = o.result.transaction([
                        Te.DB_STORE_NAME
                    ], "readwrite"), i = n.objectStore(Te.DB_STORE_NAME), a = 0, s = 0, u = e.length;
                    function c() {
                        0 == s ? t() : r();
                    }
                    e.forEach((e)=>{
                        var t = i.put(Te.analyzePath(e).object.contents, e);
                        t.onsuccess = ()=>{
                            ++a + s == u && c();
                        }, t.onerror = ()=>{
                            s++, a + s == u && c();
                        };
                    }), n.onerror = r;
                }, o.onerror = r;
            },
            loadFilesFromDB: (e, t, r)=>{
                t = t || (()=>{}), r = r || (()=>{});
                var n = Te.indexedDB();
                try {
                    var o = n.open(Te.DB_NAME(), Te.DB_VERSION);
                } catch (e) {
                    return r(e);
                }
                o.onupgradeneeded = r, o.onsuccess = ()=>{
                    var n = o.result;
                    try {
                        var i = n.transaction([
                            Te.DB_STORE_NAME
                        ], "readonly");
                    } catch (e) {
                        return void r(e);
                    }
                    var a = i.objectStore(Te.DB_STORE_NAME), s = 0, u = 0, c = e.length;
                    function l() {
                        0 == u ? t() : r();
                    }
                    e.forEach((e)=>{
                        var t = a.get(e);
                        t.onsuccess = ()=>{
                            Te.analyzePath(e).exists && Te.unlink(e), Te.createDataFile(xe.dirname(e), xe.basename(e), t.result, !0, !0, !0), ++s + u == c && l();
                        }, t.onerror = ()=>{
                            u++, s + u == c && l();
                        };
                    }), i.onerror = r;
                }, o.onerror = r;
            }
        }, Ae = {
            DEFAULT_POLLMASK: 5,
            calculateAt: function(e, t, r) {
                if ("/" === t[0]) return t;
                var n;
                if (-100 === e) n = Te.cwd();
                else {
                    var o = Te.getStream(e);
                    if (!o) throw new Te.ErrnoError(8);
                    n = o.path;
                }
                if (0 == t.length) {
                    if (!r) throw new Te.ErrnoError(44);
                    return n;
                }
                return xe.join2(n, t);
            },
            doStat: function(e, t, r) {
                try {
                    var n = e(t);
                } catch (e) {
                    if (e && e.node && xe.normalize(t) !== xe.normalize(Te.getPath(e.node))) return -54;
                    throw e;
                }
                return I[r >> 2] = n.dev, I[r + 4 >> 2] = 0, I[r + 8 >> 2] = n.ino, I[r + 12 >> 2] = n.mode, I[r + 16 >> 2] = n.nlink, I[r + 20 >> 2] = n.uid, I[r + 24 >> 2] = n.gid, I[r + 28 >> 2] = n.rdev, I[r + 32 >> 2] = 0, ue = [
                    n.size >>> 0,
                    (se = n.size, +Math.abs(se) >= 1 ? se > 0 ? (0 | Math.min(+Math.floor(se / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((se - +(~~se >>> 0)) / 4294967296) >>> 0 : 0)
                ], I[r + 40 >> 2] = ue[0], I[r + 44 >> 2] = ue[1], I[r + 48 >> 2] = 4096, I[r + 52 >> 2] = n.blocks, I[r + 56 >> 2] = n.atime.getTime() / 1e3 | 0, I[r + 60 >> 2] = 0, I[r + 64 >> 2] = n.mtime.getTime() / 1e3 | 0, I[r + 68 >> 2] = 0, I[r + 72 >> 2] = n.ctime.getTime() / 1e3 | 0, I[r + 76 >> 2] = 0, ue = [
                    n.ino >>> 0,
                    (se = n.ino, +Math.abs(se) >= 1 ? se > 0 ? (0 | Math.min(+Math.floor(se / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((se - +(~~se >>> 0)) / 4294967296) >>> 0 : 0)
                ], I[r + 80 >> 2] = ue[0], I[r + 84 >> 2] = ue[1], 0;
            },
            doMsync: function(e, t, r, n, o) {
                var i = B.slice(e, e + r);
                Te.msync(t, i, o, r, n);
            },
            doMkdir: function(e, t) {
                return "/" === (e = xe.normalize(e))[e.length - 1] && (e = e.substr(0, e.length - 1)), Te.mkdir(e, t, 0), 0;
            },
            doMknod: function(e, t, r) {
                switch(61440 & t){
                    case 32768:
                    case 8192:
                    case 24576:
                    case 4096:
                    case 49152:
                        break;
                    default:
                        return -28;
                }
                return Te.mknod(e, t, r), 0;
            },
            doReadlink: function(e, t, r) {
                if (r <= 0) return -28;
                var n = Te.readlink(e), o = Math.min(r, D(n)), i = j[t + o];
                return P(n, t, r + 1), j[t + o] = i, o;
            },
            doAccess: function(e, t) {
                if (-8 & t) return -28;
                var r = Te.lookupPath(e, {
                    follow: !0
                }).node;
                if (!r) return -44;
                var n = "";
                return 4 & t && (n += "r"), 2 & t && (n += "w"), 1 & t && (n += "x"), n && Te.nodePermissions(r, n) ? -2 : 0;
            },
            doDup: function(e, t, r) {
                var n = Te.getStream(r);
                return n && Te.close(n), Te.open(e, t, 0, r, r).fd;
            },
            doReadv: function(e, t, r, n) {
                for(var o = 0, i = 0; i < r; i++){
                    var a = I[t + 8 * i >> 2], s = I[t + (8 * i + 4) >> 2], u = Te.read(e, j, a, s, n);
                    if (u < 0) return -1;
                    if (o += u, u < s) break;
                }
                return o;
            },
            doWritev: function(e, t, r, n) {
                for(var o = 0, i = 0; i < r; i++){
                    var a = I[t + 8 * i >> 2], s = I[t + (8 * i + 4) >> 2], u = Te.write(e, j, a, s, n);
                    if (u < 0) return -1;
                    o += u;
                }
                return o;
            },
            varargs: void 0,
            get: function() {
                return Ae.varargs += 4, I[Ae.varargs - 4 >> 2];
            },
            getStr: function(e) {
                return A(e);
            },
            getStreamFromFD: function(e) {
                var t = Te.getStream(e);
                if (!t) throw new Te.ErrnoError(8);
                return t;
            },
            get64: function(e, t) {
                return e;
            }
        }, Fe = {};
        function Pe(e) {
            for(; e.length;){
                var t = e.pop();
                e.pop()(t);
            }
        }
        function De(e) {
            return this.fromWireType(O[e >> 2]);
        }
        var Le = {}, je = {}, Be = {};
        function Me(e) {
            if (void 0 === e) return "_unknown";
            var t = (e = e.replace(/[^a-zA-Z0-9_]/g, "$")).charCodeAt(0);
            return t >= 48 && t <= 57 ? "_" + e : e;
        }
        function Re(e, t) {
            return e = Me(e), new Function("body", "return function " + e + '() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(t);
        }
        function Ie(e, t) {
            var r = Re(t, function(e) {
                this.name = t, this.message = e;
                var r = new Error(e).stack;
                void 0 !== r && (this.stack = this.toString() + "\n" + r.replace(/^Error(:[^\n]*)?\n/, ""));
            });
            return r.prototype = Object.create(e.prototype), r.prototype.constructor = r, r.prototype.toString = function() {
                return void 0 === this.message ? this.name : this.name + ": " + this.message;
            }, r;
        }
        var Oe = void 0;
        function Ue(e) {
            throw new Oe(e);
        }
        function qe(e, t, r) {
            function n(t) {
                var n = r(t);
                n.length !== e.length && Ue("Mismatched type converter count");
                for(var o = 0; o < e.length; ++o)$e(e[o], n[o]);
            }
            e.forEach(function(e) {
                Be[e] = t;
            });
            var o = new Array(t.length), i = [], a = 0;
            t.forEach(function(e, t) {
                je.hasOwnProperty(e) ? o[t] = je[e] : (i.push(e), Le.hasOwnProperty(e) || (Le[e] = []), Le[e].push(function() {
                    o[t] = je[e], ++a === i.length && n(o);
                }));
            }), 0 === i.length && n(o);
        }
        var Ge = {};
        function ze(e) {
            switch(e){
                case 1:
                    return 0;
                case 2:
                    return 1;
                case 4:
                    return 2;
                case 8:
                    return 3;
                default:
                    throw new TypeError("Unknown type size: " + e);
            }
        }
        var Ve = void 0;
        function We(e) {
            for(var t = "", r = e; B[r];)t += Ve[B[r++]];
            return t;
        }
        var Ne = void 0;
        function He(e) {
            throw new Ne(e);
        }
        function $e(e, t, r = {}) {
            if (!("argPackAdvance" in t)) throw new TypeError("registerType registeredInstance requires argPackAdvance");
            var n = t.name;
            if (e || He('type "' + n + '" must have a positive integer typeid pointer'), je.hasOwnProperty(e)) {
                if (r.ignoreDuplicateRegistrations) return;
                He("Cannot register type '" + n + "' twice");
            }
            if (je[e] = t, delete Be[e], Le.hasOwnProperty(e)) {
                var o = Le[e];
                delete Le[e], o.forEach(function(e) {
                    e();
                });
            }
        }
        function Xe(e) {
            He(e.$$.ptrType.registeredClass.name + " instance already deleted");
        }
        var Ye = !1;
        function Ke(e) {}
        function Ze(e) {
            e.count.value -= 1, 0 === e.count.value && function(e) {
                e.smartPtr ? e.smartPtrType.rawDestructor(e.smartPtr) : e.ptrType.registeredClass.rawDestructor(e.ptr);
            }(e);
        }
        function Je(e, t, r) {
            if (t === r) return e;
            if (void 0 === r.baseClass) return null;
            var n = Je(e, t, r.baseClass);
            return null === n ? null : r.downcast(n);
        }
        var et = {};
        var tt = [];
        function rt() {
            for(; tt.length;){
                var e = tt.pop();
                e.$$.deleteScheduled = !1, e.delete();
            }
        }
        var nt = void 0;
        var ot = {};
        function it(e, t) {
            return t.ptrType && t.ptr || Ue("makeClassHandle requires ptr and ptrType"), !!t.smartPtrType != !!t.smartPtr && Ue("Both smartPtrType and smartPtr must be specified"), t.count = {
                value: 1
            }, at(Object.create(e, {
                $$: {
                    value: t
                }
            }));
        }
        function at(e) {
            return "undefined" == typeof FinalizationRegistry ? (at = (e)=>e, e) : (Ye = new FinalizationRegistry((e)=>{
                Ze(e.$$);
            }), at = (e)=>{
                var t = e.$$;
                if (t.smartPtr) {
                    var r = {
                        $$: t
                    };
                    Ye.register(e, r, e);
                }
                return e;
            }, Ke = (e)=>Ye.unregister(e), at(e));
        }
        function st() {}
        function ut(e, t, r) {
            if (void 0 === e[t].overloadTable) {
                var n = e[t];
                e[t] = function() {
                    return e[t].overloadTable.hasOwnProperty(arguments.length) || He("Function '" + r + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + e[t].overloadTable + ")!"), e[t].overloadTable[arguments.length].apply(this, arguments);
                }, e[t].overloadTable = [], e[t].overloadTable[n.argCount] = n;
            }
        }
        function ct(e, t, r) {
            o.hasOwnProperty(e) ? ((void 0 === r || void 0 !== o[e].overloadTable && void 0 !== o[e].overloadTable[r]) && He("Cannot register public name '" + e + "' twice"), ut(o, e, e), o.hasOwnProperty(r) && He("Cannot register multiple overloads of a function with the same number of arguments (" + r + ")!"), o[e].overloadTable[r] = t) : (o[e] = t, void 0 !== r && (o[e].numArguments = r));
        }
        function lt(e, t, r, n, o, i, a, s) {
            this.name = e, this.constructor = t, this.instancePrototype = r, this.rawDestructor = n, this.baseClass = o, this.getActualType = i, this.upcast = a, this.downcast = s, this.pureVirtualFunctions = [];
        }
        function dt(e, t, r) {
            for(; t !== r;)t.upcast || He("Expected null or instance of " + r.name + ", got an instance of " + t.name), e = t.upcast(e), t = t.baseClass;
            return e;
        }
        function ft(e, t) {
            if (null === t) return this.isReference && He("null is not a valid " + this.name), 0;
            t.$$ || He('Cannot pass "' + Dt(t) + '" as a ' + this.name), t.$$.ptr || He("Cannot pass deleted object as a pointer of type " + this.name);
            var r = t.$$.ptrType.registeredClass;
            return dt(t.$$.ptr, r, this.registeredClass);
        }
        function mt(e, t) {
            var r;
            if (null === t) return this.isReference && He("null is not a valid " + this.name), this.isSmartPointer ? (r = this.rawConstructor(), null !== e && e.push(this.rawDestructor, r), r) : 0;
            t.$$ || He('Cannot pass "' + Dt(t) + '" as a ' + this.name), t.$$.ptr || He("Cannot pass deleted object as a pointer of type " + this.name), !this.isConst && t.$$.ptrType.isConst && He("Cannot convert argument of type " + (t.$$.smartPtrType ? t.$$.smartPtrType.name : t.$$.ptrType.name) + " to parameter type " + this.name);
            var n = t.$$.ptrType.registeredClass;
            if (r = dt(t.$$.ptr, n, this.registeredClass), this.isSmartPointer) switch(void 0 === t.$$.smartPtr && He("Passing raw pointer to smart pointer is illegal"), this.sharingPolicy){
                case 0:
                    t.$$.smartPtrType === this ? r = t.$$.smartPtr : He("Cannot convert argument of type " + (t.$$.smartPtrType ? t.$$.smartPtrType.name : t.$$.ptrType.name) + " to parameter type " + this.name);
                    break;
                case 1:
                    r = t.$$.smartPtr;
                    break;
                case 2:
                    if (t.$$.smartPtrType === this) r = t.$$.smartPtr;
                    else {
                        var o = t.clone();
                        r = this.rawShare(r, At.toHandle(function() {
                            o.delete();
                        })), null !== e && e.push(this.rawDestructor, r);
                    }
                    break;
                default:
                    He("Unsupporting sharing policy");
            }
            return r;
        }
        function pt(e, t) {
            if (null === t) return this.isReference && He("null is not a valid " + this.name), 0;
            t.$$ || He('Cannot pass "' + Dt(t) + '" as a ' + this.name), t.$$.ptr || He("Cannot pass deleted object as a pointer of type " + this.name), t.$$.ptrType.isConst && He("Cannot convert argument of type " + t.$$.ptrType.name + " to parameter type " + this.name);
            var r = t.$$.ptrType.registeredClass;
            return dt(t.$$.ptr, r, this.registeredClass);
        }
        function ht(e, t, r, n, o, i, a, s, u, c, l) {
            this.name = e, this.registeredClass = t, this.isReference = r, this.isConst = n, this.isSmartPointer = o, this.pointeeType = i, this.sharingPolicy = a, this.rawGetPointee = s, this.rawConstructor = u, this.rawShare = c, this.rawDestructor = l, o || void 0 !== t.baseClass ? this.toWireType = mt : n ? (this.toWireType = ft, this.destructorFunction = null) : (this.toWireType = pt, this.destructorFunction = null);
        }
        function gt(e, t, r) {
            o.hasOwnProperty(e) || Ue("Replacing nonexistant public symbol"), void 0 !== o[e].overloadTable && void 0 !== r ? o[e].overloadTable[r] = t : (o[e] = t, o[e].argCount = r);
        }
        function vt(e, t, r) {
            return e.includes("j") ? function(e, t, r) {
                var n = o["dynCall_" + e];
                return r && r.length ? n.apply(null, [
                    t
                ].concat(r)) : n.call(null, t);
            }(e, t, r) : be(t).apply(null, r);
        }
        function yt(e, t) {
            var r, n, o, i = (e = We(e)).includes("j") ? (r = e, n = t, o = [], function() {
                return o.length = 0, Object.assign(o, arguments), vt(r, n, o);
            }) : be(t);
            return "function" != typeof i && He("unknown function pointer with signature " + e + ": " + t), i;
        }
        var bt = void 0;
        function _t(e) {
            var t = Rr(e), r = We(t);
            return Br(t), r;
        }
        function wt(e, t) {
            var r = [], n = {};
            throw t.forEach(function e(t) {
                n[t] || je[t] || (Be[t] ? Be[t].forEach(e) : (r.push(t), n[t] = !0));
            }), new bt(e + ": " + r.map(_t).join([
                ", "
            ]));
        }
        function Et(e, t) {
            for(var r = [], n = 0; n < e; n++)r.push(I[(t >> 2) + n]);
            return r;
        }
        function xt(e, t) {
            if (!(e instanceof Function)) throw new TypeError("new_ called with constructor type " + typeof e + " which is not a function");
            var r = Re(e.name || "unknownFunctionName", function() {});
            r.prototype = e.prototype;
            var n = new r, o = e.apply(n, t);
            return o instanceof Object ? o : n;
        }
        function kt(e, t, r, n, o) {
            var i = t.length;
            i < 2 && He("argTypes array size mismatch! Must at least get return value and 'this' types!");
            for(var a = null !== t[1] && null !== r, s = !1, u = 1; u < t.length; ++u)if (null !== t[u] && void 0 === t[u].destructorFunction) {
                s = !0;
                break;
            }
            var c = "void" !== t[0].name, l = "", d = "";
            for(u = 0; u < i - 2; ++u)l += (0 !== u ? ", " : "") + "arg" + u, d += (0 !== u ? ", " : "") + "arg" + u + "Wired";
            var f = "return function " + Me(e) + "(" + l + ") {\nif (arguments.length !== " + (i - 2) + ") {\nthrowBindingError('function " + e + " called with ' + arguments.length + ' arguments, expected " + (i - 2) + " args!');\n}\n";
            s && (f += "var destructors = [];\n");
            var m = s ? "destructors" : "null", p = [
                "throwBindingError",
                "invoker",
                "fn",
                "runDestructors",
                "retType",
                "classParam"
            ], h = [
                He,
                n,
                o,
                Pe,
                t[0],
                t[1]
            ];
            for(a && (f += "var thisWired = classParam.toWireType(" + m + ", this);\n"), u = 0; u < i - 2; ++u)f += "var arg" + u + "Wired = argType" + u + ".toWireType(" + m + ", arg" + u + "); // " + t[u + 2].name + "\n", p.push("argType" + u), h.push(t[u + 2]);
            if (a && (d = "thisWired" + (d.length > 0 ? ", " : "") + d), f += (c ? "var rv = " : "") + "invoker(fn" + (d.length > 0 ? ", " : "") + d + ");\n", s) f += "runDestructors(destructors);\n";
            else for(u = a ? 1 : 2; u < t.length; ++u){
                var g = 1 === u ? "thisWired" : "arg" + (u - 2) + "Wired";
                null !== t[u].destructorFunction && (f += g + "_dtor(" + g + "); // " + t[u].name + "\n", p.push(g + "_dtor"), h.push(t[u].destructorFunction));
            }
            return c && (f += "var ret = retType.fromWireType(rv);\nreturn ret;\n"), f += "}\n", p.push(f), xt(Function, p).apply(null, h);
        }
        var St = [], Ct = [
            {},
            {
                value: void 0
            },
            {
                value: null
            },
            {
                value: !0
            },
            {
                value: !1
            }
        ];
        function Tt(e) {
            e > 4 && 0 == --Ct[e].refcount && (Ct[e] = void 0, St.push(e));
        }
        var At = {
            toValue: function(e) {
                return e || He("Cannot use deleted val. handle = " + e), Ct[e].value;
            },
            toHandle: function(e) {
                switch(e){
                    case void 0:
                        return 1;
                    case null:
                        return 2;
                    case !0:
                        return 3;
                    case !1:
                        return 4;
                    default:
                        var t = St.length ? St.pop() : Ct.length;
                        return Ct[t] = {
                            refcount: 1,
                            value: e
                        }, t;
                }
            }
        };
        function Ft(e, t, r) {
            switch(t){
                case 0:
                    return function(e) {
                        var t = r ? j : B;
                        return this.fromWireType(t[e]);
                    };
                case 1:
                    return function(e) {
                        var t = r ? M : R;
                        return this.fromWireType(t[e >> 1]);
                    };
                case 2:
                    return function(e) {
                        var t = r ? I : O;
                        return this.fromWireType(t[e >> 2]);
                    };
                default:
                    throw new TypeError("Unknown integer type: " + e);
            }
        }
        function Pt(e, t) {
            var r = je[e];
            return void 0 === r && He(t + " has unknown type " + _t(e)), r;
        }
        function Dt(e) {
            if (null === e) return "null";
            var t = typeof e;
            return "object" === t || "array" === t || "function" === t ? e.toString() : "" + e;
        }
        function Lt(e, t) {
            switch(t){
                case 2:
                    return function(e) {
                        return this.fromWireType(U[e >> 2]);
                    };
                case 3:
                    return function(e) {
                        return this.fromWireType(q[e >> 3]);
                    };
                default:
                    throw new TypeError("Unknown float type: " + e);
            }
        }
        function jt(e, t, r) {
            switch(t){
                case 0:
                    return r ? function(e) {
                        return j[e];
                    } : function(e) {
                        return B[e];
                    };
                case 1:
                    return r ? function(e) {
                        return M[e >> 1];
                    } : function(e) {
                        return R[e >> 1];
                    };
                case 2:
                    return r ? function(e) {
                        return I[e >> 2];
                    } : function(e) {
                        return O[e >> 2];
                    };
                default:
                    throw new TypeError("Unknown integer type: " + e);
            }
        }
        function Bt(e, t) {
            for(var r = new Array(e), n = 0; n < e; ++n)r[n] = Pt(I[(t >> 2) + n], "parameter " + n);
            return r;
        }
        var Mt = {};
        function Rt(e) {
            var t = Mt[e];
            return void 0 === t ? We(e) : t;
        }
        var It = [];
        function Ot() {
            return "object" == typeof globalThis ? globalThis : Function("return this")();
        }
        var Ut, qt = [], Gt = {};
        function zt(e, t) {
            if (Ht.mainLoop.timingMode = e, Ht.mainLoop.timingValue = t, !Ht.mainLoop.func) return 1;
            if (Ht.mainLoop.running || (Ht.mainLoop.running = !0), 0 == e) Ht.mainLoop.scheduler = function() {
                var e = 0 | Math.max(0, Ht.mainLoop.tickStartTime + t - Ut());
                setTimeout(Ht.mainLoop.runner, e);
            }, Ht.mainLoop.method = "timeout";
            else if (1 == e) Ht.mainLoop.scheduler = function() {
                Ht.requestAnimationFrame(Ht.mainLoop.runner);
            }, Ht.mainLoop.method = "rAF";
            else if (2 == e) {
                if ("undefined" == typeof setImmediate) {
                    var r = [], n = "setimmediate";
                    addEventListener("message", function(e) {
                        e.data !== n && e.data.target !== n || (e.stopPropagation(), r.shift()());
                    }, !0), setImmediate = function(e) {
                        r.push(e), p ? (void 0 === o.setImmediates && (o.setImmediates = []), o.setImmediates.push(e), postMessage({
                            target: n
                        })) : postMessage(n, "*");
                    };
                }
                Ht.mainLoop.scheduler = function() {
                    setImmediate(Ht.mainLoop.runner);
                }, Ht.mainLoop.method = "immediate";
            }
            return 0;
        }
        function Vt(e) {
            Wr(e);
        }
        function Wt(e, t) {
            if (!ne && !k) if (t) e();
            else try {
                e();
            } catch (e) {
                _e(e);
            }
        }
        function Nt(e, t) {
            return setTimeout(function() {
                Wt(e);
            }, t);
        }
        Ut = ()=>performance.now();
        var Ht = {
            mainLoop: {
                running: !1,
                scheduler: null,
                method: "",
                currentlyRunningMainloop: 0,
                func: null,
                arg: 0,
                timingMode: 0,
                timingValue: 0,
                currentFrameNumber: 0,
                queue: [],
                pause: function() {
                    Ht.mainLoop.scheduler = null, Ht.mainLoop.currentlyRunningMainloop++;
                },
                resume: function() {
                    Ht.mainLoop.currentlyRunningMainloop++;
                    var e = Ht.mainLoop.timingMode, t = Ht.mainLoop.timingValue, r = Ht.mainLoop.func;
                    Ht.mainLoop.func = null, function(e, t, r, n, o) {
                        S(!Ht.mainLoop.func, "emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters."), Ht.mainLoop.func = e, Ht.mainLoop.arg = n;
                        var i = Ht.mainLoop.currentlyRunningMainloop;
                        function a() {
                            return !(i < Ht.mainLoop.currentlyRunningMainloop && (function() {
                                if ("TURBOPACK compile-time falsy", 0) {
                                    "TURBOPACK unreachable";
                                }
                            }(), 1));
                        }
                        if (Ht.mainLoop.running = !1, Ht.mainLoop.runner = function() {
                            if (!k) if (Ht.mainLoop.queue.length > 0) {
                                var t = Date.now(), r = Ht.mainLoop.queue.shift();
                                if (r.func(r.arg), Ht.mainLoop.remainingBlockers) {
                                    var n = Ht.mainLoop.remainingBlockers, o = n % 1 == 0 ? n - 1 : Math.floor(n);
                                    r.counted ? Ht.mainLoop.remainingBlockers = o : (o += .5, Ht.mainLoop.remainingBlockers = (8 * n + o) / 9);
                                }
                                if (g('main loop blocker "' + r.name + '" took ' + (Date.now() - t) + " ms"), Ht.mainLoop.updateStatus(), !a()) return;
                                setTimeout(Ht.mainLoop.runner, 0);
                            } else a() && (Ht.mainLoop.currentFrameNumber = Ht.mainLoop.currentFrameNumber + 1 | 0, 1 == Ht.mainLoop.timingMode && Ht.mainLoop.timingValue > 1 && Ht.mainLoop.currentFrameNumber % Ht.mainLoop.timingValue != 0 ? Ht.mainLoop.scheduler() : (0 == Ht.mainLoop.timingMode && (Ht.mainLoop.tickStartTime = Ut()), Ht.mainLoop.runIter(e), a() && ("object" == typeof SDL && SDL.audio && SDL.audio.queueNewAudioData && SDL.audio.queueNewAudioData(), Ht.mainLoop.scheduler())));
                        }, o || (("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : zt(1, 1), Ht.mainLoop.scheduler()), r) throw "unwind";
                    }(r, 0, !1, Ht.mainLoop.arg, !0), zt(e, t), Ht.mainLoop.scheduler();
                },
                updateStatus: function() {
                    if (o.setStatus) {
                        var e = o.statusMessage || "Please wait...", t = Ht.mainLoop.remainingBlockers, r = Ht.mainLoop.expectedBlockers;
                        t ? t < r ? o.setStatus(e + " (" + (r - t) + "/" + r + ")") : o.setStatus(e) : o.setStatus("");
                    }
                },
                runIter: function(e) {
                    if (!k) {
                        if (o.preMainLoop && !1 === o.preMainLoop()) return;
                        Wt(e), o.postMainLoop && o.postMainLoop();
                    }
                }
            },
            isFullscreen: !1,
            pointerLock: !1,
            moduleContextCreatedCallbacks: [],
            workers: [],
            init: function() {
                if (o.preloadPlugins || (o.preloadPlugins = []), !Ht.initted) {
                    Ht.initted = !0;
                    try {
                        new Blob, Ht.hasBlobConstructor = !0;
                    } catch (e) {
                        Ht.hasBlobConstructor = !1, g("warning: no blob constructor, cannot create blobs with mimetypes");
                    }
                    Ht.BlobBuilder = "undefined" != typeof MozBlobBuilder ? MozBlobBuilder : "undefined" != typeof WebKitBlobBuilder ? WebKitBlobBuilder : Ht.hasBlobConstructor ? null : g("warning: no BlobBuilder"), Ht.URLObject = "undefined" != typeof window ? window.URL ? window.URL : window.webkitURL : void 0, o.noImageDecoding || void 0 !== Ht.URLObject || (g("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available."), o.noImageDecoding = !0);
                    var e = {
                        canHandle: function(e) {
                            return !o.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(e);
                        },
                        handle: function(e, t, r, n) {
                            var i = null;
                            if (Ht.hasBlobConstructor) try {
                                (i = new Blob([
                                    e
                                ], {
                                    type: Ht.getMimetype(t)
                                })).size !== e.length && (i = new Blob([
                                    new Uint8Array(e).buffer
                                ], {
                                    type: Ht.getMimetype(t)
                                }));
                            } catch (e) {
                                y("Blob constructor present but fails: " + e + "; falling back to blob builder");
                            }
                            if (!i) {
                                var a = new Ht.BlobBuilder;
                                a.append(new Uint8Array(e).buffer), i = a.getBlob();
                            }
                            var s = Ht.URLObject.createObjectURL(i), u = new Image;
                            u.onload = ()=>{
                                S(u.complete, "Image " + t + " could not be decoded");
                                var n = document.createElement("canvas");
                                n.width = u.width, n.height = u.height, n.getContext("2d").drawImage(u, 0, 0), o.preloadedImages[t] = n, Ht.URLObject.revokeObjectURL(s), r && r(e);
                            }, u.onerror = (e)=>{
                                g("Image " + s + " could not be decoded"), n && n();
                            }, u.src = s;
                        }
                    };
                    o.preloadPlugins.push(e);
                    var t = {
                        canHandle: function(e) {
                            return !o.noAudioDecoding && e.substr(-4) in {
                                ".ogg": 1,
                                ".wav": 1,
                                ".mp3": 1
                            };
                        },
                        handle: function(e, t, r, n) {
                            var i = !1;
                            function a(n) {
                                i || (i = !0, o.preloadedAudios[t] = n, r && r(e));
                            }
                            function s() {
                                i || (i = !0, o.preloadedAudios[t] = new Audio, n && n());
                            }
                            if (!Ht.hasBlobConstructor) return s();
                            try {
                                var u = new Blob([
                                    e
                                ], {
                                    type: Ht.getMimetype(t)
                                });
                            } catch (e) {
                                return s();
                            }
                            var c = Ht.URLObject.createObjectURL(u), l = new Audio;
                            l.addEventListener("canplaythrough", function() {
                                a(l);
                            }, !1), l.onerror = function(r) {
                                i || (g("warning: browser could not fully decode audio " + t + ", trying slower base64 approach"), l.src = "data:audio/x-" + t.substr(-3) + ";base64," + function(e) {
                                    for(var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", r = "", n = 0, o = 0, i = 0; i < e.length; i++)for(n = n << 8 | e[i], o += 8; o >= 6;){
                                        var a = n >> o - 6 & 63;
                                        o -= 6, r += t[a];
                                    }
                                    return 2 == o ? (r += t[(3 & n) << 4], r += "==") : 4 == o && (r += t[(15 & n) << 2], r += "="), r;
                                }(e), a(l));
                            }, l.src = c, Nt(function() {
                                a(l);
                            }, 1e4);
                        }
                    };
                    o.preloadPlugins.push(t);
                    var r = o.canvas;
                    r && (r.requestPointerLock = r.requestPointerLock || r.mozRequestPointerLock || r.webkitRequestPointerLock || r.msRequestPointerLock || function() {}, r.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock || document.webkitExitPointerLock || document.msExitPointerLock || function() {}, r.exitPointerLock = r.exitPointerLock.bind(document), document.addEventListener("pointerlockchange", n, !1), document.addEventListener("mozpointerlockchange", n, !1), document.addEventListener("webkitpointerlockchange", n, !1), document.addEventListener("mspointerlockchange", n, !1), o.elementPointerLock && r.addEventListener("click", function(e) {
                        !Ht.pointerLock && o.canvas.requestPointerLock && (o.canvas.requestPointerLock(), e.preventDefault());
                    }, !1));
                }
                function n() {
                    Ht.pointerLock = document.pointerLockElement === o.canvas || document.mozPointerLockElement === o.canvas || document.webkitPointerLockElement === o.canvas || document.msPointerLockElement === o.canvas;
                }
            },
            handledByPreloadPlugin: function(e, t, r, n) {
                Ht.init();
                var i = !1;
                return o.preloadPlugins.forEach(function(o) {
                    i || o.canHandle(t) && (o.handle(e, t, r, n), i = !0);
                }), i;
            },
            createContext: function(e, t, r, n) {
                if (t && o.ctx && e == o.canvas) return o.ctx;
                var i, a;
                if (t) {
                    var s = {
                        antialias: !1,
                        alpha: !1,
                        majorVersion: "undefined" != typeof WebGL2RenderingContext ? 2 : 1
                    };
                    if (n) for(var u in n)s[u] = n[u];
                    void 0 !== Xt && (a = Xt.createContext(e, s)) && (i = Xt.getContext(a).GLctx);
                } else i = e.getContext("2d");
                return i ? (r && (t || S(void 0 === Sr, "cannot set in module if GLctx is used, but we are a non-GL context that would replace it"), o.ctx = i, t && Xt.makeContextCurrent(a), o.useWebGL = t, Ht.moduleContextCreatedCallbacks.forEach(function(e) {
                    e();
                }), Ht.init()), i) : null;
            },
            destroyContext: function(e, t, r) {},
            fullscreenHandlersInstalled: !1,
            lockPointer: void 0,
            resizeCanvas: void 0,
            requestFullscreen: function(e, t) {
                Ht.lockPointer = e, Ht.resizeCanvas = t, void 0 === Ht.lockPointer && (Ht.lockPointer = !0), void 0 === Ht.resizeCanvas && (Ht.resizeCanvas = !1);
                var r = o.canvas;
                function n() {
                    Ht.isFullscreen = !1;
                    var e = r.parentNode;
                    (document.fullscreenElement || document.mozFullScreenElement || document.msFullscreenElement || document.webkitFullscreenElement || document.webkitCurrentFullScreenElement) === e ? (r.exitFullscreen = Ht.exitFullscreen, Ht.lockPointer && r.requestPointerLock(), Ht.isFullscreen = !0, Ht.resizeCanvas ? Ht.setFullscreenCanvasSize() : Ht.updateCanvasDimensions(r)) : (e.parentNode.insertBefore(r, e), e.parentNode.removeChild(e), Ht.resizeCanvas ? Ht.setWindowedCanvasSize() : Ht.updateCanvasDimensions(r)), o.onFullScreen && o.onFullScreen(Ht.isFullscreen), o.onFullscreen && o.onFullscreen(Ht.isFullscreen);
                }
                Ht.fullscreenHandlersInstalled || (Ht.fullscreenHandlersInstalled = !0, document.addEventListener("fullscreenchange", n, !1), document.addEventListener("mozfullscreenchange", n, !1), document.addEventListener("webkitfullscreenchange", n, !1), document.addEventListener("MSFullscreenChange", n, !1));
                var i = document.createElement("div");
                r.parentNode.insertBefore(i, r), i.appendChild(r), i.requestFullscreen = i.requestFullscreen || i.mozRequestFullScreen || i.msRequestFullscreen || (i.webkitRequestFullscreen ? function() {
                    i.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
                } : null) || (i.webkitRequestFullScreen ? function() {
                    i.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
                } : null), i.requestFullscreen();
            },
            exitFullscreen: function() {
                return !!Ht.isFullscreen && ((document.exitFullscreen || document.cancelFullScreen || document.mozCancelFullScreen || document.msExitFullscreen || document.webkitCancelFullScreen || function() {}).apply(document, []), !0);
            },
            nextRAF: 0,
            fakeRequestAnimationFrame: function(e) {
                var t = Date.now();
                if (0 === Ht.nextRAF) Ht.nextRAF = t + 1e3 / 60;
                else for(; t + 2 >= Ht.nextRAF;)Ht.nextRAF += 1e3 / 60;
                var r = Math.max(Ht.nextRAF - t, 0);
                setTimeout(e, r);
            },
            requestAnimationFrame: function(e) {
                "function" != typeof requestAnimationFrame ? (0, Ht.fakeRequestAnimationFrame)(e) : requestAnimationFrame(e);
            },
            safeSetTimeout: function(e) {
                return Nt(e);
            },
            safeRequestAnimationFrame: function(e) {
                return Ht.requestAnimationFrame(function() {
                    Wt(e);
                });
            },
            getMimetype: function(e) {
                return ({
                    jpg: "image/jpeg",
                    jpeg: "image/jpeg",
                    png: "image/png",
                    bmp: "image/bmp",
                    ogg: "audio/ogg",
                    wav: "audio/wav",
                    mp3: "audio/mpeg"
                })[e.substr(e.lastIndexOf(".") + 1)];
            },
            getUserMedia: function(e) {
                window.getUserMedia || (window.getUserMedia = navigator.getUserMedia || navigator.mozGetUserMedia), window.getUserMedia(e);
            },
            getMovementX: function(e) {
                return e.movementX || e.mozMovementX || e.webkitMovementX || 0;
            },
            getMovementY: function(e) {
                return e.movementY || e.mozMovementY || e.webkitMovementY || 0;
            },
            getMouseWheelDelta: function(e) {
                var t = 0;
                switch(e.type){
                    case "DOMMouseScroll":
                        t = e.detail / 3;
                        break;
                    case "mousewheel":
                        t = e.wheelDelta / 120;
                        break;
                    case "wheel":
                        switch(t = e.deltaY, e.deltaMode){
                            case 0:
                                t /= 100;
                                break;
                            case 1:
                                t /= 3;
                                break;
                            case 2:
                                t *= 80;
                                break;
                            default:
                                throw "unrecognized mouse wheel delta mode: " + e.deltaMode;
                        }
                        break;
                    default:
                        throw "unrecognized mouse wheel event: " + e.type;
                }
                return t;
            },
            mouseX: 0,
            mouseY: 0,
            mouseMovementX: 0,
            mouseMovementY: 0,
            touches: {},
            lastTouches: {},
            calculateMouseEvent: function(e) {
                if (Ht.pointerLock) "mousemove" != e.type && "mozMovementX" in e ? Ht.mouseMovementX = Ht.mouseMovementY = 0 : (Ht.mouseMovementX = Ht.getMovementX(e), Ht.mouseMovementY = Ht.getMovementY(e)), "undefined" != typeof SDL ? (Ht.mouseX = SDL.mouseX + Ht.mouseMovementX, Ht.mouseY = SDL.mouseY + Ht.mouseMovementY) : (Ht.mouseX += Ht.mouseMovementX, Ht.mouseY += Ht.mouseMovementY);
                else {
                    var t = o.canvas.getBoundingClientRect(), r = o.canvas.width, n = o.canvas.height, i = void 0 !== window.scrollX ? window.scrollX : window.pageXOffset, a = void 0 !== window.scrollY ? window.scrollY : window.pageYOffset;
                    if ("touchstart" === e.type || "touchend" === e.type || "touchmove" === e.type) {
                        var s = e.touch;
                        if (void 0 === s) return;
                        var u = s.pageX - (i + t.left), c = s.pageY - (a + t.top), l = {
                            x: u *= r / t.width,
                            y: c *= n / t.height
                        };
                        if ("touchstart" === e.type) Ht.lastTouches[s.identifier] = l, Ht.touches[s.identifier] = l;
                        else if ("touchend" === e.type || "touchmove" === e.type) {
                            var d = Ht.touches[s.identifier];
                            d || (d = l), Ht.lastTouches[s.identifier] = d, Ht.touches[s.identifier] = l;
                        }
                        return;
                    }
                    var f = e.pageX - (i + t.left), m = e.pageY - (a + t.top);
                    f *= r / t.width, m *= n / t.height, Ht.mouseMovementX = f - Ht.mouseX, Ht.mouseMovementY = m - Ht.mouseY, Ht.mouseX = f, Ht.mouseY = m;
                }
            },
            resizeListeners: [],
            updateResizeListeners: function() {
                var e = o.canvas;
                Ht.resizeListeners.forEach(function(t) {
                    t(e.width, e.height);
                });
            },
            setCanvasSize: function(e, t, r) {
                var n = o.canvas;
                Ht.updateCanvasDimensions(n, e, t), r || Ht.updateResizeListeners();
            },
            windowedWidth: 0,
            windowedHeight: 0,
            setFullscreenCanvasSize: function() {
                if ("undefined" != typeof SDL) {
                    var e = O[SDL.screen >> 2];
                    e |= 8388608, I[SDL.screen >> 2] = e;
                }
                Ht.updateCanvasDimensions(o.canvas), Ht.updateResizeListeners();
            },
            setWindowedCanvasSize: function() {
                if ("undefined" != typeof SDL) {
                    var e = O[SDL.screen >> 2];
                    e &= -8388609, I[SDL.screen >> 2] = e;
                }
                Ht.updateCanvasDimensions(o.canvas), Ht.updateResizeListeners();
            },
            updateCanvasDimensions: function(e, t, r) {
                t && r ? (e.widthNative = t, e.heightNative = r) : (t = e.widthNative, r = e.heightNative);
                var n = t, i = r;
                if (o.forcedAspectRatio && o.forcedAspectRatio > 0 && (n / i < o.forcedAspectRatio ? n = Math.round(i * o.forcedAspectRatio) : i = Math.round(n / o.forcedAspectRatio)), (document.fullscreenElement || document.mozFullScreenElement || document.msFullscreenElement || document.webkitFullscreenElement || document.webkitCurrentFullScreenElement) === e.parentNode && "undefined" != typeof screen) {
                    var a = Math.min(screen.width / n, screen.height / i);
                    n = Math.round(n * a), i = Math.round(i * a);
                }
                Ht.resizeCanvas ? (e.width != n && (e.width = n), e.height != i && (e.height = i), void 0 !== e.style && (e.style.removeProperty("width"), e.style.removeProperty("height"))) : (e.width != t && (e.width = t), e.height != r && (e.height = r), void 0 !== e.style && (n != t || i != r ? (e.style.setProperty("width", n + "px", "important"), e.style.setProperty("height", i + "px", "important")) : (e.style.removeProperty("width"), e.style.removeProperty("height"))));
            }
        }, $t = {
            errorCode: 12288,
            defaultDisplayInitialized: !1,
            currentContext: 0,
            currentReadSurface: 0,
            currentDrawSurface: 0,
            contextAttributes: {
                alpha: !1,
                depth: !1,
                stencil: !1,
                antialias: !1
            },
            stringCache: {},
            setErrorCode: function(e) {
                $t.errorCode = e;
            },
            chooseConfig: function(e, t, r, n, o) {
                if (62e3 != e) return $t.setErrorCode(12296), 0;
                if (t) for(;;){
                    var i = I[t >> 2];
                    if (12321 == i) {
                        var a = I[t + 4 >> 2];
                        $t.contextAttributes.alpha = a > 0;
                    } else if (12325 == i) {
                        var s = I[t + 4 >> 2];
                        $t.contextAttributes.depth = s > 0;
                    } else if (12326 == i) {
                        var u = I[t + 4 >> 2];
                        $t.contextAttributes.stencil = u > 0;
                    } else if (12337 == i) {
                        var c = I[t + 4 >> 2];
                        $t.contextAttributes.antialias = c > 0;
                    } else if (12338 == i) c = I[t + 4 >> 2], $t.contextAttributes.antialias = 1 == c;
                    else if (12544 == i) {
                        var l = I[t + 4 >> 2];
                        $t.contextAttributes.lowLatency = 12547 != l;
                    } else if (12344 == i) break;
                    t += 8;
                }
                return r && n || o ? (o && (I[o >> 2] = 1), r && n > 0 && (I[r >> 2] = 62002), $t.setErrorCode(12288), 1) : ($t.setErrorCode(12300), 0);
            }
        }, Xt = {
            counter: 1,
            buffers: [],
            programs: [],
            framebuffers: [],
            renderbuffers: [],
            textures: [],
            shaders: [],
            vaos: [],
            contexts: [],
            offscreenCanvases: {},
            queries: [],
            samplers: [],
            transformFeedbacks: [],
            syncs: [],
            stringCache: {},
            stringiCache: {},
            unpackAlignment: 4,
            recordError: function(e) {
                Xt.lastError || (Xt.lastError = e);
            },
            getNewId: function(e) {
                for(var t = Xt.counter++, r = e.length; r < t; r++)e[r] = null;
                return t;
            },
            getSource: function(e, t, r, n) {
                for(var o = "", i = 0; i < t; ++i){
                    var a = n ? I[n + 4 * i >> 2] : -1;
                    o += A(I[r + 4 * i >> 2], a < 0 ? void 0 : a);
                }
                return o;
            },
            createContext: function(e, t) {
                e.getContextSafariWebGL2Fixed || (e.getContextSafariWebGL2Fixed = e.getContext, e.getContext = function(t, r) {
                    var n = e.getContextSafariWebGL2Fixed(t, r);
                    return "webgl" == t == n instanceof WebGLRenderingContext ? n : null;
                });
                var r = t.majorVersion > 1 ? e.getContext("webgl2", t) : e.getContext("webgl", t);
                return r ? Xt.registerContext(r, t) : 0;
            },
            registerContext: function(e, t) {
                var r = Xt.getNewId(Xt.contexts), n = {
                    handle: r,
                    attributes: t,
                    version: t.majorVersion,
                    GLctx: e
                };
                return e.canvas && (e.canvas.GLctxObject = n), Xt.contexts[r] = n, (void 0 === t.enableExtensionsByDefault || t.enableExtensionsByDefault) && Xt.initExtensions(n), r;
            },
            makeContextCurrent: function(e) {
                return Xt.currentContext = Xt.contexts[e], o.ctx = Sr = Xt.currentContext && Xt.currentContext.GLctx, !(e && !Sr);
            },
            getContext: function(e) {
                return Xt.contexts[e];
            },
            deleteContext: function(e) {
                Xt.currentContext === Xt.contexts[e] && (Xt.currentContext = null), "object" == typeof pr && pr.removeAllHandlersOnTarget(Xt.contexts[e].GLctx.canvas), Xt.contexts[e] && Xt.contexts[e].GLctx.canvas && (Xt.contexts[e].GLctx.canvas.GLctxObject = void 0), Xt.contexts[e] = null;
            },
            initExtensions: function(e) {
                if (e || (e = Xt.currentContext), !e.initExtensionsDone) {
                    e.initExtensionsDone = !0;
                    var t, r = e.GLctx;
                    !function(e) {
                        var t = e.getExtension("ANGLE_instanced_arrays");
                        t && (e.vertexAttribDivisor = function(e, r) {
                            t.vertexAttribDivisorANGLE(e, r);
                        }, e.drawArraysInstanced = function(e, r, n, o) {
                            t.drawArraysInstancedANGLE(e, r, n, o);
                        }, e.drawElementsInstanced = function(e, r, n, o, i) {
                            t.drawElementsInstancedANGLE(e, r, n, o, i);
                        });
                    }(r), function(e) {
                        var t = e.getExtension("OES_vertex_array_object");
                        t && (e.createVertexArray = function() {
                            return t.createVertexArrayOES();
                        }, e.deleteVertexArray = function(e) {
                            t.deleteVertexArrayOES(e);
                        }, e.bindVertexArray = function(e) {
                            t.bindVertexArrayOES(e);
                        }, e.isVertexArray = function(e) {
                            return t.isVertexArrayOES(e);
                        });
                    }(r), function(e) {
                        var t = e.getExtension("WEBGL_draw_buffers");
                        t && (e.drawBuffers = function(e, r) {
                            t.drawBuffersWEBGL(e, r);
                        });
                    }(r), (t = r).dibvbi = t.getExtension("WEBGL_draw_instanced_base_vertex_base_instance"), function(e) {
                        e.mdibvbi = e.getExtension("WEBGL_multi_draw_instanced_base_vertex_base_instance");
                    }(r), e.version >= 2 && (r.disjointTimerQueryExt = r.getExtension("EXT_disjoint_timer_query_webgl2")), (e.version < 2 || !r.disjointTimerQueryExt) && (r.disjointTimerQueryExt = r.getExtension("EXT_disjoint_timer_query")), function(e) {
                        e.multiDrawWebgl = e.getExtension("WEBGL_multi_draw");
                    }(r), (r.getSupportedExtensions() || []).forEach(function(e) {
                        e.includes("lose_context") || e.includes("debug") || r.getExtension(e);
                    });
                }
            }
        };
        function Yt(e, t) {
            return (e >>> 0) + 4294967296 * t;
        }
        var Qt = [];
        function Kt(e, t, r, n) {
            for(var o = 0; o < e; o++){
                var i = Sr[r](), a = i && Xt.getNewId(n);
                i ? (i.name = a, n[a] = i) : Xt.recordError(1282), I[t + 4 * o >> 2] = a;
            }
        }
        function Zt(e, t, r, n, o, i, a, s) {
            t = Xt.programs[t];
            var u = Sr[e](t, r);
            if (u) {
                var c = s && P(u.name, s, n);
                o && (I[o >> 2] = c), i && (I[i >> 2] = u.size), a && (I[a >> 2] = u.type);
            }
        }
        function Jt(e, t) {
            O[e >> 2] = t, O[e + 4 >> 2] = (t - O[e >> 2]) / 4294967296;
        }
        function er(e, t, r) {
            if (t) {
                var n = void 0;
                switch(e){
                    case 36346:
                        n = 1;
                        break;
                    case 36344:
                        return void (0 != r && 1 != r && Xt.recordError(1280));
                    case 34814:
                    case 36345:
                        n = 0;
                        break;
                    case 34466:
                        var o = Sr.getParameter(34467);
                        n = o ? o.length : 0;
                        break;
                    case 33309:
                        if (Xt.currentContext.version < 2) return void Xt.recordError(1282);
                        n = 2 * (Sr.getSupportedExtensions() || []).length;
                        break;
                    case 33307:
                    case 33308:
                        if (Xt.currentContext.version < 2) return void Xt.recordError(1280);
                        n = 33307 == e ? 3 : 0;
                }
                if (void 0 === n) {
                    var i = Sr.getParameter(e);
                    switch(typeof i){
                        case "number":
                            n = i;
                            break;
                        case "boolean":
                            n = i ? 1 : 0;
                            break;
                        case "string":
                            return void Xt.recordError(1280);
                        case "object":
                            if (null === i) switch(e){
                                case 34964:
                                case 35725:
                                case 34965:
                                case 36006:
                                case 36007:
                                case 32873:
                                case 34229:
                                case 36662:
                                case 36663:
                                case 35053:
                                case 35055:
                                case 36010:
                                case 35097:
                                case 35869:
                                case 32874:
                                case 36389:
                                case 35983:
                                case 35368:
                                case 34068:
                                    n = 0;
                                    break;
                                default:
                                    return void Xt.recordError(1280);
                            }
                            else {
                                if (i instanceof Float32Array || i instanceof Uint32Array || i instanceof Int32Array || i instanceof Array) {
                                    for(var a = 0; a < i.length; ++a)switch(r){
                                        case 0:
                                            I[t + 4 * a >> 2] = i[a];
                                            break;
                                        case 2:
                                            U[t + 4 * a >> 2] = i[a];
                                            break;
                                        case 4:
                                            j[t + a >> 0] = i[a] ? 1 : 0;
                                    }
                                    return;
                                }
                                try {
                                    n = 0 | i.name;
                                } catch (t) {
                                    return Xt.recordError(1280), void v("GL_INVALID_ENUM in glGet" + r + "v: Unknown object returned from WebGL getParameter(" + e + ")! (error: " + t + ")");
                                }
                            }
                            break;
                        default:
                            return Xt.recordError(1280), void v("GL_INVALID_ENUM in glGet" + r + "v: Native code calling glGet" + r + "v(" + e + ") and it returns " + i + " of type " + typeof i + "!");
                    }
                }
                switch(r){
                    case 1:
                        Jt(t, n);
                        break;
                    case 0:
                        I[t >> 2] = n;
                        break;
                    case 2:
                        U[t >> 2] = n;
                        break;
                    case 4:
                        j[t >> 0] = n ? 1 : 0;
                }
            } else Xt.recordError(1281);
        }
        function tr(e, t, r, n) {
            if (r) {
                var o, i = Sr.getIndexedParameter(e, t);
                switch(typeof i){
                    case "boolean":
                        o = i ? 1 : 0;
                        break;
                    case "number":
                        o = i;
                        break;
                    case "object":
                        if (null === i) switch(e){
                            case 35983:
                            case 35368:
                                o = 0;
                                break;
                            default:
                                return void Xt.recordError(1280);
                        }
                        else {
                            if (!(i instanceof WebGLBuffer)) return void Xt.recordError(1280);
                            o = 0 | i.name;
                        }
                        break;
                    default:
                        return void Xt.recordError(1280);
                }
                switch(n){
                    case 1:
                        Jt(r, o);
                        break;
                    case 0:
                        I[r >> 2] = o;
                        break;
                    case 2:
                        U[r >> 2] = o;
                        break;
                    case 4:
                        j[r >> 0] = o ? 1 : 0;
                        break;
                    default:
                        throw "internal emscriptenWebGLGetIndexed() error, bad type: " + n;
                }
            } else Xt.recordError(1281);
        }
        function rr(e) {
            var t = D(e) + 1, r = jr(t);
            return P(e, r, t), r;
        }
        function nr(e) {
            return "]" == e.slice(-1) && e.lastIndexOf("[");
        }
        function or(e) {
            var t, r, n = e.uniformLocsById, o = e.uniformSizeAndIdsByName;
            if (!n) for(e.uniformLocsById = n = {}, e.uniformArrayNamesById = {}, t = 0; t < Sr.getProgramParameter(e, 35718); ++t){
                var i = Sr.getActiveUniform(e, t), a = i.name, s = i.size, u = nr(a), c = u > 0 ? a.slice(0, u) : a, l = e.uniformIdCounter;
                for(e.uniformIdCounter += s, o[c] = [
                    s,
                    l
                ], r = 0; r < s; ++r)n[l] = r, e.uniformArrayNamesById[l++] = c;
            }
        }
        function ir(e) {
            var t = Sr.currentProgram;
            if (t) {
                var r = t.uniformLocsById[e];
                return "number" == typeof r && (t.uniformLocsById[e] = r = Sr.getUniformLocation(t, t.uniformArrayNamesById[e] + (r > 0 ? "[" + r + "]" : ""))), r;
            }
            Xt.recordError(1282);
        }
        function ar(e, t, r, n) {
            if (r) {
                or(e = Xt.programs[e]);
                var o = Sr.getUniform(e, ir(t));
                if ("number" == typeof o || "boolean" == typeof o) switch(n){
                    case 0:
                        I[r >> 2] = o;
                        break;
                    case 2:
                        U[r >> 2] = o;
                }
                else for(var i = 0; i < o.length; i++)switch(n){
                    case 0:
                        I[r + 4 * i >> 2] = o[i];
                        break;
                    case 2:
                        U[r + 4 * i >> 2] = o[i];
                }
            } else Xt.recordError(1281);
        }
        function sr(e, t, r, n) {
            if (r) {
                var o = Sr.getVertexAttrib(e, t);
                if (34975 == t) I[r >> 2] = o && o.name;
                else if ("number" == typeof o || "boolean" == typeof o) switch(n){
                    case 0:
                        I[r >> 2] = o;
                        break;
                    case 2:
                        U[r >> 2] = o;
                        break;
                    case 5:
                        I[r >> 2] = Math.fround(o);
                }
                else for(var i = 0; i < o.length; i++)switch(n){
                    case 0:
                        I[r + 4 * i >> 2] = o[i];
                        break;
                    case 2:
                        U[r + 4 * i >> 2] = o[i];
                        break;
                    case 5:
                        I[r + 4 * i >> 2] = Math.fround(o[i]);
                }
            } else Xt.recordError(1281);
        }
        function ur(e) {
            return 0 == (e -= 5120) ? j : 1 == e ? B : 2 == e ? M : 4 == e ? I : 6 == e ? U : 5 == e || 28922 == e || 28520 == e || 30779 == e || 30782 == e ? O : R;
        }
        function cr(e) {
            return 31 - Math.clz32(e.BYTES_PER_ELEMENT);
        }
        function lr(e, t, r, n, o, i) {
            var a = ur(e), s = cr(a), u = 1 << s, c = function(e) {
                return ({
                    5: 3,
                    6: 4,
                    8: 2,
                    29502: 3,
                    29504: 4,
                    26917: 2,
                    26918: 2,
                    29846: 3,
                    29847: 4
                })[e - 6402] || 1;
            }(t) * u, l = function(e, t, r, n) {
                var o;
                return t * (e * r + (o = n) - 1 & -o);
            }(r, n, c, Xt.unpackAlignment);
            return a.subarray(o >> s, o + l >> s);
        }
        var dr = [], fr = [];
        function mr(e) {
            try {
                return w.grow(e - L.byteLength + 65535 >>> 16), Q(w.buffer), 1;
            } catch (e) {}
        }
        var pr = {
            inEventHandler: 0,
            removeAllEventListeners: function() {
                for(var e = pr.eventHandlers.length - 1; e >= 0; --e)pr._removeHandler(e);
                pr.eventHandlers = [], pr.deferredCalls = [];
            },
            registerRemoveEventListeners: function() {
                pr.removeEventListenersRegistered || (te.push(pr.removeAllEventListeners), pr.removeEventListenersRegistered = !0);
            },
            deferredCalls: [],
            deferCall: function(e, t, r) {
                function n(e, t) {
                    if (e.length != t.length) return !1;
                    for(var r in e)if (e[r] != t[r]) return !1;
                    return !0;
                }
                for(var o in pr.deferredCalls){
                    var i = pr.deferredCalls[o];
                    if (i.targetFunction == e && n(i.argsList, r)) return;
                }
                pr.deferredCalls.push({
                    targetFunction: e,
                    precedence: t,
                    argsList: r
                }), pr.deferredCalls.sort(function(e, t) {
                    return e.precedence < t.precedence;
                });
            },
            removeDeferredCalls: function(e) {
                for(var t = 0; t < pr.deferredCalls.length; ++t)pr.deferredCalls[t].targetFunction == e && (pr.deferredCalls.splice(t, 1), --t);
            },
            canPerformEventHandlerRequests: function() {
                return pr.inEventHandler && pr.currentEventHandler.allowsDeferredCalls;
            },
            runDeferredCalls: function() {
                if (pr.canPerformEventHandlerRequests()) for(var e = 0; e < pr.deferredCalls.length; ++e){
                    var t = pr.deferredCalls[e];
                    pr.deferredCalls.splice(e, 1), --e, t.targetFunction.apply(null, t.argsList);
                }
            },
            eventHandlers: [],
            removeAllHandlersOnTarget: function(e, t) {
                for(var r = 0; r < pr.eventHandlers.length; ++r)pr.eventHandlers[r].target != e || t && t != pr.eventHandlers[r].eventTypeString || pr._removeHandler(r--);
            },
            _removeHandler: function(e) {
                var t = pr.eventHandlers[e];
                t.target.removeEventListener(t.eventTypeString, t.eventListenerFunc, t.useCapture), pr.eventHandlers.splice(e, 1);
            },
            registerOrRemoveHandler: function(e) {
                var t = function(t) {
                    ++pr.inEventHandler, pr.currentEventHandler = e, pr.runDeferredCalls(), e.handlerFunc(t), pr.runDeferredCalls(), --pr.inEventHandler;
                };
                if (e.callbackfunc) e.eventListenerFunc = t, e.target.addEventListener(e.eventTypeString, t, e.useCapture), pr.eventHandlers.push(e), pr.registerRemoveEventListeners();
                else for(var r = 0; r < pr.eventHandlers.length; ++r)pr.eventHandlers[r].target == e.target && pr.eventHandlers[r].eventTypeString == e.eventTypeString && pr._removeHandler(r--);
            },
            getNodeNameForTarget: function(e) {
                return e ? e == window ? "#window" : e == screen ? "#screen" : e && e.nodeName ? e.nodeName : "" : "";
            },
            fullscreenEnabled: function() {
                return document.fullscreenEnabled || document.webkitFullscreenEnabled;
            }
        }, hr = [
            "default",
            "low-power",
            "high-performance"
        ], gr = [
            0,
            "undefined" != typeof document ? document : 0,
            "undefined" != typeof window ? window : 0
        ];
        function vr(e, t) {
            var r = t >> 2, n = I[r + 6], o = {
                alpha: !!I[r + 0],
                depth: !!I[r + 1],
                stencil: !!I[r + 2],
                antialias: !!I[r + 3],
                premultipliedAlpha: !!I[r + 4],
                preserveDrawingBuffer: !!I[r + 5],
                powerPreference: hr[n],
                failIfMajorPerformanceCaveat: !!I[r + 7],
                majorVersion: I[r + 8],
                minorVersion: I[r + 9],
                enableExtensionsByDefault: I[r + 10],
                explicitSwapControl: I[r + 11],
                proxyContextToMainThread: I[r + 12],
                renderViaOffscreenBackBuffer: I[r + 13]
            }, i = function(e) {
                return function(e) {
                    var t;
                    return e = (t = e) > 2 ? A(t) : t, gr[e] || ("undefined" != typeof document ? document.querySelector(e) : void 0);
                }(e);
            }(e);
            return i ? o.explicitSwapControl ? 0 : Xt.createContext(i, o) : 0;
        }
        var yr = {};
        function br() {
            if (!br.strings) {
                var e = {
                    USER: "web_user",
                    LOGNAME: "web_user",
                    PATH: "/",
                    PWD: "/",
                    HOME: "/home/web_user",
                    LANG: ("object" == typeof navigator && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8",
                    _: d || "./this.program"
                };
                for(var t in yr)void 0 === yr[t] ? delete e[t] : e[t] = yr[t];
                var r = [];
                for(var t in e)r.push(t + "=" + e[t]);
                br.strings = r;
            }
            return br.strings;
        }
        function _r(e) {
            return e % 4 == 0 && (e % 100 != 0 || e % 400 == 0);
        }
        function wr(e, t) {
            for(var r = 0, n = 0; n <= t; r += e[n++]);
            return r;
        }
        var Er = [
            31,
            29,
            31,
            30,
            31,
            30,
            31,
            31,
            30,
            31,
            30,
            31
        ], xr = [
            31,
            28,
            31,
            30,
            31,
            30,
            31,
            31,
            30,
            31,
            30,
            31
        ];
        function kr(e, t) {
            for(var r = new Date(e.getTime()); t > 0;){
                var n = _r(r.getFullYear()), o = r.getMonth(), i = (n ? Er : xr)[o];
                if (!(t > i - r.getDate())) return r.setDate(r.getDate() + t), r;
                t -= i - r.getDate() + 1, r.setDate(1), o < 11 ? r.setMonth(o + 1) : (r.setMonth(0), r.setFullYear(r.getFullYear() + 1));
            }
            return r;
        }
        var Sr, Cr = function(e, t, r, n) {
            e || (e = this), this.parent = e, this.mount = e.mount, this.mounted = null, this.id = Te.nextInode++, this.name = t, this.mode = r, this.node_ops = {}, this.stream_ops = {}, this.rdev = n;
        };
        Object.defineProperties(Cr.prototype, {
            read: {
                get: function() {
                    return 365 == (365 & this.mode);
                },
                set: function(e) {
                    e ? this.mode |= 365 : this.mode &= -366;
                }
            },
            write: {
                get: function() {
                    return 146 == (146 & this.mode);
                },
                set: function(e) {
                    e ? this.mode |= 146 : this.mode &= -147;
                }
            },
            isFolder: {
                get: function() {
                    return Te.isDir(this.mode);
                }
            },
            isDevice: {
                get: function() {
                    return Te.isChrdev(this.mode);
                }
            }
        }), Te.FSNode = Cr, Te.staticInit(), o.FS_createPath = Te.createPath, o.FS_createDataFile = Te.createDataFile, o.FS_createPreloadedFile = Te.createPreloadedFile, o.FS_createLazyFile = Te.createLazyFile, o.FS_createDevice = Te.createDevice, o.FS_unlink = Te.unlink, Oe = o.InternalError = Ie(Error, "InternalError"), function() {
            for(var e = new Array(256), t = 0; t < 256; ++t)e[t] = String.fromCharCode(t);
            Ve = e;
        }(), Ne = o.BindingError = Ie(Error, "BindingError"), st.prototype.isAliasOf = function(e) {
            if (!(this instanceof st)) return !1;
            if (!(e instanceof st)) return !1;
            for(var t = this.$$.ptrType.registeredClass, r = this.$$.ptr, n = e.$$.ptrType.registeredClass, o = e.$$.ptr; t.baseClass;)r = t.upcast(r), t = t.baseClass;
            for(; n.baseClass;)o = n.upcast(o), n = n.baseClass;
            return t === n && r === o;
        }, st.prototype.clone = function() {
            if (this.$$.ptr || Xe(this), this.$$.preservePointerOnDelete) return this.$$.count.value += 1, this;
            var e, t = at(Object.create(Object.getPrototypeOf(this), {
                $$: {
                    value: (e = this.$$, {
                        count: e.count,
                        deleteScheduled: e.deleteScheduled,
                        preservePointerOnDelete: e.preservePointerOnDelete,
                        ptr: e.ptr,
                        ptrType: e.ptrType,
                        smartPtr: e.smartPtr,
                        smartPtrType: e.smartPtrType
                    })
                }
            }));
            return t.$$.count.value += 1, t.$$.deleteScheduled = !1, t;
        }, st.prototype.delete = function() {
            this.$$.ptr || Xe(this), this.$$.deleteScheduled && !this.$$.preservePointerOnDelete && He("Object already scheduled for deletion"), Ke(this), Ze(this.$$), this.$$.preservePointerOnDelete || (this.$$.smartPtr = void 0, this.$$.ptr = void 0);
        }, st.prototype.isDeleted = function() {
            return !this.$$.ptr;
        }, st.prototype.deleteLater = function() {
            return this.$$.ptr || Xe(this), this.$$.deleteScheduled && !this.$$.preservePointerOnDelete && He("Object already scheduled for deletion"), tt.push(this), 1 === tt.length && nt && nt(rt), this.$$.deleteScheduled = !0, this;
        }, o.getInheritedInstanceCount = function() {
            return Object.keys(ot).length;
        }, o.getLiveInheritedInstances = function() {
            var e = [];
            for(var t in ot)ot.hasOwnProperty(t) && e.push(ot[t]);
            return e;
        }, o.flushPendingDeletes = rt, o.setDelayFunction = function(e) {
            nt = e, tt.length && nt && nt(rt);
        }, ht.prototype.getPointee = function(e) {
            return this.rawGetPointee && (e = this.rawGetPointee(e)), e;
        }, ht.prototype.destructor = function(e) {
            this.rawDestructor && this.rawDestructor(e);
        }, ht.prototype.argPackAdvance = 8, ht.prototype.readValueFromPointer = De, ht.prototype.deleteObject = function(e) {
            null !== e && e.delete();
        }, ht.prototype.fromWireType = function(e) {
            var t = this.getPointee(e);
            if (!t) return this.destructor(e), null;
            var r = function(e, t) {
                return t = function(e, t) {
                    for(void 0 === t && He("ptr should not be undefined"); e.baseClass;)t = e.upcast(t), e = e.baseClass;
                    return t;
                }(e, t), ot[t];
            }(this.registeredClass, t);
            if (void 0 !== r) {
                if (0 === r.$$.count.value) return r.$$.ptr = t, r.$$.smartPtr = e, r.clone();
                var n = r.clone();
                return this.destructor(e), n;
            }
            function o() {
                return this.isSmartPointer ? it(this.registeredClass.instancePrototype, {
                    ptrType: this.pointeeType,
                    ptr: t,
                    smartPtrType: this,
                    smartPtr: e
                }) : it(this.registeredClass.instancePrototype, {
                    ptrType: this,
                    ptr: e
                });
            }
            var i, a = this.registeredClass.getActualType(t), s = et[a];
            if (!s) return o.call(this);
            i = this.isConst ? s.constPointerType : s.pointerType;
            var u = Je(t, this.registeredClass, i.registeredClass);
            return null === u ? o.call(this) : this.isSmartPointer ? it(i.registeredClass.instancePrototype, {
                ptrType: i,
                ptr: u,
                smartPtrType: this,
                smartPtr: e
            }) : it(i.registeredClass.instancePrototype, {
                ptrType: i,
                ptr: u
            });
        }, bt = o.UnboundTypeError = Ie(Error, "UnboundTypeError"), o.count_emval_handles = function() {
            for(var e = 0, t = 5; t < Ct.length; ++t)void 0 !== Ct[t] && ++e;
            return e;
        }, o.get_first_emval = function() {
            for(var e = 5; e < Ct.length; ++e)if (void 0 !== Ct[e]) return Ct[e];
            return null;
        }, o.requestFullscreen = function(e, t) {
            Ht.requestFullscreen(e, t);
        }, o.requestAnimationFrame = function(e) {
            Ht.requestAnimationFrame(e);
        }, o.setCanvasSize = function(e, t, r) {
            Ht.setCanvasSize(e, t, r);
        }, o.pauseMainLoop = function() {
            Ht.mainLoop.pause();
        }, o.resumeMainLoop = function() {
            Ht.mainLoop.resume();
        }, o.getUserMedia = function() {
            Ht.getUserMedia();
        }, o.createContext = function(e, t, r, n) {
            return Ht.createContext(e, t, r, n);
        };
        for(var Tr = 0; Tr < 32; ++Tr)Qt.push(new Array(Tr));
        var Ar = new Float32Array(288);
        for(Tr = 0; Tr < 288; ++Tr)dr[Tr] = Ar.subarray(0, Tr + 1);
        var Fr = new Int32Array(288);
        for(Tr = 0; Tr < 288; ++Tr)fr[Tr] = Fr.subarray(0, Tr + 1);
        function Pr(e, t, r) {
            var n = r > 0 ? r : D(e) + 1, o = new Array(n), i = F(e, o, 0, o.length);
            return t && (o.length = i), o;
        }
        "function" == typeof atob && atob;
        var Dr, Lr = {
            __cxa_allocate_exception: function(e) {
                return jr(e + 16) + 16;
            },
            __cxa_throw: function(e, t, r) {
                throw new we(e).init(t, r), e;
            },
            __syscall_fcntl64: function(e, t, r) {
                Ae.varargs = r;
                try {
                    var n = Ae.getStreamFromFD(e);
                    switch(t){
                        case 0:
                            return (o = Ae.get()) < 0 ? -28 : Te.open(n.path, n.flags, 0, o).fd;
                        case 1:
                        case 2:
                        case 6:
                        case 7:
                            return 0;
                        case 3:
                            return n.flags;
                        case 4:
                            var o = Ae.get();
                            return n.flags |= o, 0;
                        case 5:
                            return o = Ae.get(), M[o + 0 >> 1] = 2, 0;
                        case 16:
                        case 8:
                        default:
                            return -28;
                        case 9:
                            return Ee(28), -1;
                    }
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return -e.errno;
                }
            },
            __syscall_fstat64: function(e, t) {
                try {
                    var r = Ae.getStreamFromFD(e);
                    return Ae.doStat(Te.stat, r.path, t);
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return -e.errno;
                }
            },
            __syscall_fstatat64: function(e, t, r, n) {
                try {
                    t = Ae.getStr(t);
                    var o = 256 & n, i = 4096 & n;
                    return n &= -4353, t = Ae.calculateAt(e, t, i), Ae.doStat(o ? Te.lstat : Te.stat, t, r);
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return -e.errno;
                }
            },
            __syscall_getdents64: function(e, t, r) {
                try {
                    var n = Ae.getStreamFromFD(e);
                    n.getdents || (n.getdents = Te.readdir(n.path));
                    for(var o = 280, i = 0, a = Te.llseek(n, 0, 1), s = Math.floor(a / o); s < n.getdents.length && i + o <= r;){
                        var u, c, l = n.getdents[s];
                        if ("." === l) u = n.node.id, c = 4;
                        else if (".." === l) u = Te.lookupPath(n.path, {
                            parent: !0
                        }).node.id, c = 4;
                        else {
                            var d = Te.lookupNode(n.node, l);
                            u = d.id, c = Te.isChrdev(d.mode) ? 2 : Te.isDir(d.mode) ? 4 : Te.isLink(d.mode) ? 10 : 8;
                        }
                        ue = [
                            u >>> 0,
                            (se = u, +Math.abs(se) >= 1 ? se > 0 ? (0 | Math.min(+Math.floor(se / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((se - +(~~se >>> 0)) / 4294967296) >>> 0 : 0)
                        ], I[t + i >> 2] = ue[0], I[t + i + 4 >> 2] = ue[1], ue = [
                            (s + 1) * o >>> 0,
                            (se = (s + 1) * o, +Math.abs(se) >= 1 ? se > 0 ? (0 | Math.min(+Math.floor(se / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((se - +(~~se >>> 0)) / 4294967296) >>> 0 : 0)
                        ], I[t + i + 8 >> 2] = ue[0], I[t + i + 12 >> 2] = ue[1], M[t + i + 16 >> 1] = 280, j[t + i + 18 >> 0] = c, P(l, t + i + 19, 256), i += o, s += 1;
                    }
                    return Te.llseek(n, s * o, 0), i;
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return -e.errno;
                }
            },
            __syscall_ioctl: function(e, t, r) {
                Ae.varargs = r;
                try {
                    var n = Ae.getStreamFromFD(e);
                    switch(t){
                        case 21509:
                        case 21505:
                        case 21510:
                        case 21511:
                        case 21512:
                        case 21506:
                        case 21507:
                        case 21508:
                        case 21523:
                        case 21524:
                            return n.tty ? 0 : -59;
                        case 21519:
                            if (!n.tty) return -59;
                            var o = Ae.get();
                            return I[o >> 2] = 0, 0;
                        case 21520:
                            return n.tty ? -28 : -59;
                        case 21531:
                            return o = Ae.get(), Te.ioctl(n, t, o);
                        default:
                            pe("bad ioctl syscall " + t);
                    }
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return -e.errno;
                }
            },
            __syscall_lstat64: function(e, t) {
                try {
                    return e = Ae.getStr(e), Ae.doStat(Te.lstat, e, t);
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return -e.errno;
                }
            },
            __syscall_open: function(e, t, r) {
                Ae.varargs = r;
                try {
                    var n = Ae.getStr(e), o = r ? Ae.get() : 0;
                    return Te.open(n, t, o).fd;
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return -e.errno;
                }
            },
            __syscall_stat64: function(e, t) {
                try {
                    return e = Ae.getStr(e), Ae.doStat(Te.stat, e, t);
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return -e.errno;
                }
            },
            _dlopen_js: function(e, t) {
                pe("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking");
            },
            _dlsym_js: function(e, t) {
                pe("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking");
            },
            _embind_finalize_value_array: function(e) {
                var t = Fe[e];
                delete Fe[e];
                var r = t.elements, n = r.length, o = r.map(function(e) {
                    return e.getterReturnType;
                }).concat(r.map(function(e) {
                    return e.setterArgumentType;
                })), i = t.rawConstructor, a = t.rawDestructor;
                qe([
                    e
                ], o, function(e) {
                    return r.forEach(function(t, r) {
                        var o = e[r], i = t.getter, a = t.getterContext, s = e[r + n], u = t.setter, c = t.setterContext;
                        t.read = (e)=>o.fromWireType(i(a, e)), t.write = (e, t)=>{
                            var r = [];
                            u(c, e, s.toWireType(r, t)), Pe(r);
                        };
                    }), [
                        {
                            name: t.name,
                            fromWireType: function(e) {
                                for(var t = new Array(n), o = 0; o < n; ++o)t[o] = r[o].read(e);
                                return a(e), t;
                            },
                            toWireType: function(e, o) {
                                if (n !== o.length) throw new TypeError("Incorrect number of tuple elements for " + t.name + ": expected=" + n + ", actual=" + o.length);
                                for(var s = i(), u = 0; u < n; ++u)r[u].write(s, o[u]);
                                return null !== e && e.push(a, s), s;
                            },
                            argPackAdvance: 8,
                            readValueFromPointer: De,
                            destructorFunction: a
                        }
                    ];
                });
            },
            _embind_finalize_value_object: function(e) {
                var t = Ge[e];
                delete Ge[e];
                var r = t.rawConstructor, n = t.rawDestructor, o = t.fields;
                qe([
                    e
                ], o.map(function(e) {
                    return e.getterReturnType;
                }).concat(o.map(function(e) {
                    return e.setterArgumentType;
                })), function(e) {
                    var i = {};
                    return o.forEach(function(t, r) {
                        var n = t.fieldName, a = e[r], s = t.getter, u = t.getterContext, c = e[r + o.length], l = t.setter, d = t.setterContext;
                        i[n] = {
                            read: function(e) {
                                return a.fromWireType(s(u, e));
                            },
                            write: function(e, t) {
                                var r = [];
                                l(d, e, c.toWireType(r, t)), Pe(r);
                            }
                        };
                    }), [
                        {
                            name: t.name,
                            fromWireType: function(e) {
                                var t = {};
                                for(var r in i)t[r] = i[r].read(e);
                                return n(e), t;
                            },
                            toWireType: function(e, t) {
                                for(var o in i)if (!(o in t)) throw new TypeError('Missing field:  "' + o + '"');
                                var a = r();
                                for(o in i)i[o].write(a, t[o]);
                                return null !== e && e.push(n, a), a;
                            },
                            argPackAdvance: 8,
                            readValueFromPointer: De,
                            destructorFunction: n
                        }
                    ];
                });
            },
            _embind_register_bigint: function(e, t, r, n, o) {},
            _embind_register_bool: function(e, t, r, n, o) {
                var i = ze(r);
                $e(e, {
                    name: t = We(t),
                    fromWireType: function(e) {
                        return !!e;
                    },
                    toWireType: function(e, t) {
                        return t ? n : o;
                    },
                    argPackAdvance: 8,
                    readValueFromPointer: function(e) {
                        var n;
                        if (1 === r) n = j;
                        else if (2 === r) n = M;
                        else {
                            if (4 !== r) throw new TypeError("Unknown boolean type size: " + t);
                            n = I;
                        }
                        return this.fromWireType(n[e >> i]);
                    },
                    destructorFunction: null
                });
            },
            _embind_register_class: function(e, t, r, n, o, i, a, s, u, c, l, d, f) {
                l = We(l), i = yt(o, i), s && (s = yt(a, s)), c && (c = yt(u, c)), f = yt(d, f);
                var m = Me(l);
                ct(m, function() {
                    wt("Cannot construct " + l + " due to unbound types", [
                        n
                    ]);
                }), qe([
                    e,
                    t,
                    r
                ], n ? [
                    n
                ] : [], function(t) {
                    var r, o;
                    t = t[0], o = n ? (r = t.registeredClass).instancePrototype : st.prototype;
                    var a = Re(m, function() {
                        if (Object.getPrototypeOf(this) !== u) throw new Ne("Use 'new' to construct " + l);
                        if (void 0 === d.constructor_body) throw new Ne(l + " has no accessible constructor");
                        var e = d.constructor_body[arguments.length];
                        if (void 0 === e) throw new Ne("Tried to invoke ctor of " + l + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(d.constructor_body).toString() + ") parameters instead!");
                        return e.apply(this, arguments);
                    }), u = Object.create(o, {
                        constructor: {
                            value: a
                        }
                    });
                    a.prototype = u;
                    var d = new lt(l, a, u, f, r, i, s, c), p = new ht(l, d, !0, !1, !1), h = new ht(l + "*", d, !1, !1, !1), g = new ht(l + " const*", d, !1, !0, !1);
                    return et[e] = {
                        pointerType: h,
                        constPointerType: g
                    }, gt(m, a), [
                        p,
                        h,
                        g
                    ];
                });
            },
            _embind_register_class_constructor: function(e, t, r, n, o, i) {
                S(t > 0);
                var a = Et(t, r);
                o = yt(n, o), qe([], [
                    e
                ], function(e) {
                    var r = "constructor " + (e = e[0]).name;
                    if (void 0 === e.registeredClass.constructor_body && (e.registeredClass.constructor_body = []), void 0 !== e.registeredClass.constructor_body[t - 1]) throw new Ne("Cannot register multiple constructors with identical number of parameters (" + (t - 1) + ") for class '" + e.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
                    return e.registeredClass.constructor_body[t - 1] = ()=>{
                        wt("Cannot construct " + e.name + " due to unbound types", a);
                    }, qe([], a, function(n) {
                        return n.splice(1, 0, null), e.registeredClass.constructor_body[t - 1] = kt(r, n, null, o, i), [];
                    }), [];
                });
            },
            _embind_register_class_function: function(e, t, r, n, o, i, a, s) {
                var u = Et(r, n);
                t = We(t), i = yt(o, i), qe([], [
                    e
                ], function(e) {
                    var n = (e = e[0]).name + "." + t;
                    function o() {
                        wt("Cannot call " + n + " due to unbound types", u);
                    }
                    t.startsWith("@@") && (t = Symbol[t.substring(2)]), s && e.registeredClass.pureVirtualFunctions.push(t);
                    var c = e.registeredClass.instancePrototype, l = c[t];
                    return void 0 === l || void 0 === l.overloadTable && l.className !== e.name && l.argCount === r - 2 ? (o.argCount = r - 2, o.className = e.name, c[t] = o) : (ut(c, t, n), c[t].overloadTable[r - 2] = o), qe([], u, function(o) {
                        var s = kt(n, o, e, i, a);
                        return void 0 === c[t].overloadTable ? (s.argCount = r - 2, c[t] = s) : c[t].overloadTable[r - 2] = s, [];
                    }), [];
                });
            },
            _embind_register_emval: function(e, t) {
                $e(e, {
                    name: t = We(t),
                    fromWireType: function(e) {
                        var t = At.toValue(e);
                        return Tt(e), t;
                    },
                    toWireType: function(e, t) {
                        return At.toHandle(t);
                    },
                    argPackAdvance: 8,
                    readValueFromPointer: De,
                    destructorFunction: null
                });
            },
            _embind_register_enum: function(e, t, r, n) {
                var o = ze(r);
                function i() {}
                t = We(t), i.values = {}, $e(e, {
                    name: t,
                    constructor: i,
                    fromWireType: function(e) {
                        return this.constructor.values[e];
                    },
                    toWireType: function(e, t) {
                        return t.value;
                    },
                    argPackAdvance: 8,
                    readValueFromPointer: Ft(t, o, n),
                    destructorFunction: null
                }), ct(t, i);
            },
            _embind_register_enum_value: function(e, t, r) {
                var n = Pt(e, "enum");
                t = We(t);
                var o = n.constructor, i = Object.create(n.constructor.prototype, {
                    value: {
                        value: r
                    },
                    constructor: {
                        value: Re(n.name + "_" + t, function() {})
                    }
                });
                o.values[r] = i, o[t] = i;
            },
            _embind_register_float: function(e, t, r) {
                var n = ze(r);
                $e(e, {
                    name: t = We(t),
                    fromWireType: function(e) {
                        return e;
                    },
                    toWireType: function(e, t) {
                        return t;
                    },
                    argPackAdvance: 8,
                    readValueFromPointer: Lt(t, n),
                    destructorFunction: null
                });
            },
            _embind_register_function: function(e, t, r, n, o, i) {
                var a = Et(t, r);
                e = We(e), o = yt(n, o), ct(e, function() {
                    wt("Cannot call " + e + " due to unbound types", a);
                }, t - 1), qe([], a, function(r) {
                    var n = [
                        r[0],
                        null
                    ].concat(r.slice(1));
                    return gt(e, kt(e, n, null, o, i), t - 1), [];
                });
            },
            _embind_register_integer: function(e, t, r, n, o) {
                t = We(t), -1 === o && (o = 4294967295);
                var i = ze(r), a = (e)=>e;
                if (0 === n) {
                    var s = 32 - 8 * r;
                    a = (e)=>e << s >>> s;
                }
                var u = t.includes("unsigned");
                $e(e, {
                    name: t,
                    fromWireType: a,
                    toWireType: u ? function(e, t) {
                        return this.name, t >>> 0;
                    } : function(e, t) {
                        return this.name, t;
                    },
                    argPackAdvance: 8,
                    readValueFromPointer: jt(t, i, 0 !== n),
                    destructorFunction: null
                });
            },
            _embind_register_memory_view: function(e, t, r) {
                var n = [
                    Int8Array,
                    Uint8Array,
                    Int16Array,
                    Uint16Array,
                    Int32Array,
                    Uint32Array,
                    Float32Array,
                    Float64Array
                ][t];
                function o(e) {
                    var t = O, r = t[e >>= 2], o = t[e + 1];
                    return new n(L, o, r);
                }
                $e(e, {
                    name: r = We(r),
                    fromWireType: o,
                    argPackAdvance: 8,
                    readValueFromPointer: o
                }, {
                    ignoreDuplicateRegistrations: !0
                });
            },
            _embind_register_smart_ptr: function(e, t, r, n, o, i, a, s, u, c, l, d) {
                r = We(r), i = yt(o, i), s = yt(a, s), c = yt(u, c), d = yt(l, d), qe([
                    e
                ], [
                    t
                ], function(e) {
                    return e = e[0], [
                        new ht(r, e.registeredClass, !1, !1, !0, e, n, i, s, c, d)
                    ];
                });
            },
            _embind_register_std_string: function(e, t) {
                var r = "std::string" === (t = We(t));
                $e(e, {
                    name: t,
                    fromWireType: function(e) {
                        var t, n = O[e >> 2];
                        if (r) for(var o = e + 4, i = 0; i <= n; ++i){
                            var a = e + 4 + i;
                            if (i == n || 0 == B[a]) {
                                var s = A(o, a - o);
                                void 0 === t ? t = s : (t += String.fromCharCode(0), t += s), o = a + 1;
                            }
                        }
                        else {
                            var u = new Array(n);
                            for(i = 0; i < n; ++i)u[i] = String.fromCharCode(B[e + 4 + i]);
                            t = u.join("");
                        }
                        return Br(e), t;
                    },
                    toWireType: function(e, t) {
                        t instanceof ArrayBuffer && (t = new Uint8Array(t));
                        var n = "string" == typeof t;
                        n || t instanceof Uint8Array || t instanceof Uint8ClampedArray || t instanceof Int8Array || He("Cannot pass non-string to std::string");
                        var o = (r && n ? ()=>D(t) : ()=>t.length)(), i = jr(4 + o + 1);
                        if (O[i >> 2] = o, r && n) P(t, i + 4, o + 1);
                        else if (n) for(var a = 0; a < o; ++a){
                            var s = t.charCodeAt(a);
                            s > 255 && (Br(i), He("String has UTF-16 code units that do not fit in 8 bits")), B[i + 4 + a] = s;
                        }
                        else for(a = 0; a < o; ++a)B[i + 4 + a] = t[a];
                        return null !== e && e.push(Br, i), i;
                    },
                    argPackAdvance: 8,
                    readValueFromPointer: De,
                    destructorFunction: function(e) {
                        Br(e);
                    }
                });
            },
            _embind_register_std_wstring: function(e, t, r) {
                var n, o, i, a, s;
                r = We(r), 2 === t ? (n = z, o = V, a = W, i = ()=>R, s = 1) : 4 === t && (n = N, o = H, a = $, i = ()=>O, s = 2), $e(e, {
                    name: r,
                    fromWireType: function(e) {
                        for(var r, o = O[e >> 2], a = i(), u = e + 4, c = 0; c <= o; ++c){
                            var l = e + 4 + c * t;
                            if (c == o || 0 == a[l >> s]) {
                                var d = n(u, l - u);
                                void 0 === r ? r = d : (r += String.fromCharCode(0), r += d), u = l + t;
                            }
                        }
                        return Br(e), r;
                    },
                    toWireType: function(e, n) {
                        "string" != typeof n && He("Cannot pass non-string to C++ string type " + r);
                        var i = a(n), u = jr(4 + i + t);
                        return O[u >> 2] = i >> s, o(n, u + 4, i + t), null !== e && e.push(Br, u), u;
                    },
                    argPackAdvance: 8,
                    readValueFromPointer: De,
                    destructorFunction: function(e) {
                        Br(e);
                    }
                });
            },
            _embind_register_value_array: function(e, t, r, n, o, i) {
                Fe[e] = {
                    name: We(t),
                    rawConstructor: yt(r, n),
                    rawDestructor: yt(o, i),
                    elements: []
                };
            },
            _embind_register_value_array_element: function(e, t, r, n, o, i, a, s, u) {
                Fe[e].elements.push({
                    getterReturnType: t,
                    getter: yt(r, n),
                    getterContext: o,
                    setterArgumentType: i,
                    setter: yt(a, s),
                    setterContext: u
                });
            },
            _embind_register_value_object: function(e, t, r, n, o, i) {
                Ge[e] = {
                    name: We(t),
                    rawConstructor: yt(r, n),
                    rawDestructor: yt(o, i),
                    fields: []
                };
            },
            _embind_register_value_object_field: function(e, t, r, n, o, i, a, s, u, c) {
                Ge[e].fields.push({
                    fieldName: We(t),
                    getterReturnType: r,
                    getter: yt(n, o),
                    getterContext: i,
                    setterArgumentType: a,
                    setter: yt(s, u),
                    setterContext: c
                });
            },
            _embind_register_void: function(e, t) {
                $e(e, {
                    isVoid: !0,
                    name: t = We(t),
                    argPackAdvance: 0,
                    fromWireType: function() {},
                    toWireType: function(e, t) {}
                });
            },
            _emscripten_throw_longjmp: function() {
                throw 1 / 0;
            },
            _emval_as: function(e, t, r) {
                e = At.toValue(e), t = Pt(t, "emval::as");
                var n = [], o = At.toHandle(n);
                return I[r >> 2] = o, t.toWireType(n, e);
            },
            _emval_call: function(e, t, r, n) {
                e = At.toValue(e);
                for(var o = Bt(t, r), i = new Array(t), a = 0; a < t; ++a){
                    var s = o[a];
                    i[a] = s.readValueFromPointer(n), n += s.argPackAdvance;
                }
                var u = e.apply(void 0, i);
                return At.toHandle(u);
            },
            _emval_call_method: function(e, t, r, n, o) {
                return (e = It[e])(t = At.toValue(t), r = Rt(r), function(e) {
                    var t = [];
                    return I[e >> 2] = At.toHandle(t), t;
                }(n), o);
            },
            _emval_call_void_method: function(e, t, r, n) {
                (e = It[e])(t = At.toValue(t), r = Rt(r), null, n);
            },
            _emval_decref: Tt,
            _emval_equals: function(e, t) {
                return (e = At.toValue(e)) == At.toValue(t);
            },
            _emval_get_global: function(e) {
                return 0 === e ? At.toHandle(Ot()) : (e = Rt(e), At.toHandle(Ot()[e]));
            },
            _emval_get_method_caller: function(e, t) {
                var r = Bt(e, t), n = r[0], o = n.name + "_$" + r.slice(1).map(function(e) {
                    return e.name;
                }).join("_") + "$", i = qt[o];
                if (void 0 !== i) return i;
                for(var a = [
                    "retType"
                ], s = [
                    n
                ], u = "", c = 0; c < e - 1; ++c)u += (0 !== c ? ", " : "") + "arg" + c, a.push("argType" + c), s.push(r[1 + c]);
                var l, d, f = "return function " + Me("methodCaller_" + o) + "(handle, name, destructors, args) {\n", m = 0;
                for(c = 0; c < e - 1; ++c)f += "    var arg" + c + " = argType" + c + ".readValueFromPointer(args" + (m ? "+" + m : "") + ");\n", m += r[c + 1].argPackAdvance;
                for(f += "    var rv = handle[name](" + u + ");\n", c = 0; c < e - 1; ++c)r[c + 1].deleteObject && (f += "    argType" + c + ".deleteObject(arg" + c + ");\n");
                return n.isVoid || (f += "    return retType.toWireType(destructors, rv);\n"), f += "};\n", a.push(f), l = xt(Function, a).apply(null, s), d = It.length, It.push(l), i = d, qt[o] = i, i;
            },
            _emval_get_property: function(e, t) {
                return e = At.toValue(e), t = At.toValue(t), At.toHandle(e[t]);
            },
            _emval_incref: function(e) {
                e > 4 && (Ct[e].refcount += 1);
            },
            _emval_instanceof: function(e, t) {
                return (e = At.toValue(e)) instanceof At.toValue(t);
            },
            _emval_is_number: function(e) {
                return "number" == typeof (e = At.toValue(e));
            },
            _emval_is_string: function(e) {
                return "string" == typeof (e = At.toValue(e));
            },
            _emval_new: function(e, t, r, n) {
                e = At.toValue(e);
                var i = Gt[t];
                return i || (i = function(e) {
                    for(var t = "", r = 0; r < e; ++r)t += (0 !== r ? ", " : "") + "arg" + r;
                    var n = "return function emval_allocator_" + e + "(constructor, argTypes, args) {\n";
                    for(r = 0; r < e; ++r)n += "var argType" + r + " = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + " + r + '], "parameter ' + r + '");\nvar arg' + r + " = argType" + r + ".readValueFromPointer(args);\nargs += argType" + r + "['argPackAdvance'];\n";
                    return n += "var obj = new constructor(" + t + ");\nreturn valueToHandle(obj);\n}\n", new Function("requireRegisteredType", "Module", "valueToHandle", n)(Pt, o, At.toHandle);
                }(t), Gt[t] = i), i(e, r, n);
            },
            _emval_new_array: function() {
                return At.toHandle([]);
            },
            _emval_new_cstring: function(e) {
                return At.toHandle(Rt(e));
            },
            _emval_new_object: function() {
                return At.toHandle({});
            },
            _emval_run_destructors: function(e) {
                Pe(At.toValue(e)), Tt(e);
            },
            _emval_set_property: function(e, t, r) {
                e = At.toValue(e), t = At.toValue(t), r = At.toValue(r), e[t] = r;
            },
            _emval_take_value: function(e, t) {
                var r = (e = Pt(e, "_emval_take_value")).readValueFromPointer(t);
                return At.toHandle(r);
            },
            _emval_throw: function(e) {
                throw At.toValue(e);
            },
            _gmtime_js: function(e, t) {
                var r = new Date(1e3 * I[e >> 2]);
                I[t >> 2] = r.getUTCSeconds(), I[t + 4 >> 2] = r.getUTCMinutes(), I[t + 8 >> 2] = r.getUTCHours(), I[t + 12 >> 2] = r.getUTCDate(), I[t + 16 >> 2] = r.getUTCMonth(), I[t + 20 >> 2] = r.getUTCFullYear() - 1900, I[t + 24 >> 2] = r.getUTCDay();
                var n = Date.UTC(r.getUTCFullYear(), 0, 1, 0, 0, 0, 0), o = (r.getTime() - n) / 864e5 | 0;
                I[t + 28 >> 2] = o;
            },
            _localtime_js: function(e, t) {
                var r = new Date(1e3 * I[e >> 2]);
                I[t >> 2] = r.getSeconds(), I[t + 4 >> 2] = r.getMinutes(), I[t + 8 >> 2] = r.getHours(), I[t + 12 >> 2] = r.getDate(), I[t + 16 >> 2] = r.getMonth(), I[t + 20 >> 2] = r.getFullYear() - 1900, I[t + 24 >> 2] = r.getDay();
                var n = new Date(r.getFullYear(), 0, 1), o = (r.getTime() - n.getTime()) / 864e5 | 0;
                I[t + 28 >> 2] = o, I[t + 36 >> 2] = -60 * r.getTimezoneOffset();
                var i = new Date(r.getFullYear(), 6, 1).getTimezoneOffset(), a = n.getTimezoneOffset(), s = 0 | (i != a && r.getTimezoneOffset() == Math.min(a, i));
                I[t + 32 >> 2] = s;
            },
            _mktime_js: function(e) {
                var t = new Date(I[e + 20 >> 2] + 1900, I[e + 16 >> 2], I[e + 12 >> 2], I[e + 8 >> 2], I[e + 4 >> 2], I[e >> 2], 0), r = I[e + 32 >> 2], n = t.getTimezoneOffset(), o = new Date(t.getFullYear(), 0, 1), i = new Date(t.getFullYear(), 6, 1).getTimezoneOffset(), a = o.getTimezoneOffset(), s = Math.min(a, i);
                if (r < 0) I[e + 32 >> 2] = Number(i != a && s == n);
                else if (r > 0 != (s == n)) {
                    var u = Math.max(a, i), c = r > 0 ? s : u;
                    t.setTime(t.getTime() + 6e4 * (c - n));
                }
                I[e + 24 >> 2] = t.getDay();
                var l = (t.getTime() - o.getTime()) / 864e5 | 0;
                return I[e + 28 >> 2] = l, I[e >> 2] = t.getSeconds(), I[e + 4 >> 2] = t.getMinutes(), I[e + 8 >> 2] = t.getHours(), I[e + 12 >> 2] = t.getDate(), I[e + 16 >> 2] = t.getMonth(), t.getTime() / 1e3 | 0;
            },
            _mmap_js: function(e, t, r, n, o, i, a, s) {
                try {
                    var u = Te.getStream(o);
                    if (!u) return -8;
                    var c = Te.mmap(u, e, t, i, r, n), l = c.ptr;
                    return I[a >> 2] = c.allocated, l;
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return -e.errno;
                }
            },
            _munmap_js: function(e, t, r, n, o, i) {
                try {
                    var a = Te.getStream(o);
                    a && (2 & r && Ae.doMsync(e, a, t, n, i), Te.munmap(a));
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return -e.errno;
                }
            },
            _tzset_js: function e(t, r, n) {
                e.called || (e.called = !0, function(e, t, r) {
                    var n = (new Date).getFullYear(), o = new Date(n, 0, 1), i = new Date(n, 6, 1), a = o.getTimezoneOffset(), s = i.getTimezoneOffset(), u = Math.max(a, s);
                    function c(e) {
                        var t = e.toTimeString().match(/\(([A-Za-z ]+)\)$/);
                        return t ? t[1] : "GMT";
                    }
                    I[e >> 2] = 60 * u, I[t >> 2] = Number(a != s);
                    var l = c(o), d = c(i), f = X(l), m = X(d);
                    s < a ? (I[r >> 2] = f, I[r + 4 >> 2] = m) : (I[r >> 2] = m, I[r + 4 >> 2] = f);
                }(t, r, n));
            },
            abort: function() {
                pe("");
            },
            clock_gettime: function(e, t) {
                var r;
                if (0 === e) r = Date.now();
                else {
                    if (1 !== e && 4 !== e) return Ee(28), -1;
                    r = Ut();
                }
                return I[t >> 2] = r / 1e3 | 0, I[t + 4 >> 2] = r % 1e3 * 1e3 * 1e3 | 0, 0;
            },
            eglChooseConfig: function(e, t, r, n, o) {
                return $t.chooseConfig(e, t, r, n, o);
            },
            eglCreateContext: function(e, t, r, n) {
                if (62e3 != e) return $t.setErrorCode(12296), 0;
                for(var i = 1;;){
                    var a = I[n >> 2];
                    if (12440 != a) {
                        if (12344 == a) break;
                        return $t.setErrorCode(12292), 0;
                    }
                    i = I[n + 4 >> 2], n += 8;
                }
                return i < 2 || i > 3 ? ($t.setErrorCode(12293), 0) : ($t.contextAttributes.majorVersion = i - 1, $t.contextAttributes.minorVersion = 0, $t.context = Xt.createContext(o.canvas, $t.contextAttributes), 0 != $t.context ? ($t.setErrorCode(12288), Xt.makeContextCurrent($t.context), o.useWebGL = !0, Ht.moduleContextCreatedCallbacks.forEach(function(e) {
                    e();
                }), Xt.makeContextCurrent(null), 62004) : ($t.setErrorCode(12297), 0));
            },
            eglCreateWindowSurface: function(e, t, r, n) {
                return 62e3 != e ? ($t.setErrorCode(12296), 0) : 62002 != t ? ($t.setErrorCode(12293), 0) : ($t.setErrorCode(12288), 62006);
            },
            eglDestroyContext: function(e, t) {
                return 62e3 != e ? ($t.setErrorCode(12296), 0) : 62004 != t ? ($t.setErrorCode(12294), 0) : (Xt.deleteContext($t.context), $t.setErrorCode(12288), $t.currentContext == t && ($t.currentContext = 0), 1);
            },
            eglDestroySurface: function(e, t) {
                return 62e3 != e ? ($t.setErrorCode(12296), 0) : 62006 != t ? ($t.setErrorCode(12301), 1) : ($t.currentReadSurface == t && ($t.currentReadSurface = 0), $t.currentDrawSurface == t && ($t.currentDrawSurface = 0), $t.setErrorCode(12288), 1);
            },
            eglGetConfigAttrib: function(e, t, r, n) {
                if (62e3 != e) return $t.setErrorCode(12296), 0;
                if (62002 != t) return $t.setErrorCode(12293), 0;
                if (!n) return $t.setErrorCode(12300), 0;
                switch($t.setErrorCode(12288), r){
                    case 12320:
                        return I[n >> 2] = $t.contextAttributes.alpha ? 32 : 24, 1;
                    case 12321:
                        return I[n >> 2] = $t.contextAttributes.alpha ? 8 : 0, 1;
                    case 12322:
                    case 12323:
                    case 12324:
                        return I[n >> 2] = 8, 1;
                    case 12325:
                        return I[n >> 2] = $t.contextAttributes.depth ? 24 : 0, 1;
                    case 12326:
                        return I[n >> 2] = $t.contextAttributes.stencil ? 8 : 0, 1;
                    case 12327:
                    case 12335:
                    case 12340:
                        return I[n >> 2] = 12344, 1;
                    case 12328:
                        return I[n >> 2] = 62002, 1;
                    case 12329:
                    case 12333:
                    case 12334:
                    case 12345:
                    case 12346:
                    case 12347:
                    case 12349:
                    case 12350:
                    case 12354:
                        return I[n >> 2] = 0, 1;
                    case 12330:
                    case 12332:
                        return I[n >> 2] = 4096, 1;
                    case 12331:
                        return I[n >> 2] = 16777216, 1;
                    case 12337:
                        return I[n >> 2] = $t.contextAttributes.antialias ? 4 : 0, 1;
                    case 12338:
                        return I[n >> 2] = $t.contextAttributes.antialias ? 1 : 0, 1;
                    case 12339:
                    case 12352:
                        return I[n >> 2] = 4, 1;
                    case 12341:
                    case 12342:
                    case 12343:
                        return I[n >> 2] = -1, 1;
                    case 12348:
                        return I[n >> 2] = 1, 1;
                    case 12351:
                        return I[n >> 2] = 12430, 1;
                    default:
                        return $t.setErrorCode(12292), 0;
                }
            },
            eglGetDisplay: function(e) {
                return $t.setErrorCode(12288), 62e3;
            },
            eglGetError: function() {
                return $t.errorCode;
            },
            eglInitialize: function(e, t, r) {
                return 62e3 == e ? (t && (I[t >> 2] = 1), r && (I[r >> 2] = 4), $t.defaultDisplayInitialized = !0, $t.setErrorCode(12288), 1) : ($t.setErrorCode(12296), 0);
            },
            eglMakeCurrent: function(e, t, r, n) {
                return 62e3 != e ? ($t.setErrorCode(12296), 0) : 0 != n && 62004 != n ? ($t.setErrorCode(12294), 0) : 0 != r && 62006 != r || 0 != t && 62006 != t ? ($t.setErrorCode(12301), 0) : (Xt.makeContextCurrent(n ? $t.context : null), $t.currentContext = n, $t.currentDrawSurface = t, $t.currentReadSurface = r, $t.setErrorCode(12288), 1);
            },
            eglSwapBuffers: function() {
                if ($t.defaultDisplayInitialized) if (o.ctx) {
                    if (!o.ctx.isContextLost()) return $t.setErrorCode(12288), 1;
                    $t.setErrorCode(12302);
                } else $t.setErrorCode(12290);
                else $t.setErrorCode(12289);
                return 0;
            },
            eglTerminate: function(e) {
                return 62e3 != e ? ($t.setErrorCode(12296), 0) : ($t.currentContext = 0, $t.currentReadSurface = 0, $t.currentDrawSurface = 0, $t.defaultDisplayInitialized = !1, $t.setErrorCode(12288), 1);
            },
            emscripten_console_error: function(e) {
                console.error(A(e));
            },
            emscripten_console_log: function(e) {
                console.log(A(e));
            },
            emscripten_console_warn: function(e) {
                console.warn(A(e));
            },
            emscripten_debugger: function() {},
            emscripten_get_heap_max: function() {
                return 2147483648;
            },
            emscripten_get_now: Ut,
            emscripten_glActiveTexture: function(e) {
                Sr.activeTexture(e);
            },
            emscripten_glAttachShader: function(e, t) {
                Sr.attachShader(Xt.programs[e], Xt.shaders[t]);
            },
            emscripten_glBeginQuery: function(e, t) {
                Sr.beginQuery(e, Xt.queries[t]);
            },
            emscripten_glBeginQueryEXT: function(e, t) {
                Sr.disjointTimerQueryExt.beginQueryEXT(e, Xt.queries[t]);
            },
            emscripten_glBeginTransformFeedback: function(e) {
                Sr.beginTransformFeedback(e);
            },
            emscripten_glBindAttribLocation: function(e, t, r) {
                Sr.bindAttribLocation(Xt.programs[e], t, A(r));
            },
            emscripten_glBindBuffer: function(e, t) {
                35051 == e ? Sr.currentPixelPackBufferBinding = t : 35052 == e && (Sr.currentPixelUnpackBufferBinding = t), Sr.bindBuffer(e, Xt.buffers[t]);
            },
            emscripten_glBindBufferBase: function(e, t, r) {
                Sr.bindBufferBase(e, t, Xt.buffers[r]);
            },
            emscripten_glBindBufferRange: function(e, t, r, n, o) {
                Sr.bindBufferRange(e, t, Xt.buffers[r], n, o);
            },
            emscripten_glBindFramebuffer: function(e, t) {
                Sr.bindFramebuffer(e, Xt.framebuffers[t]);
            },
            emscripten_glBindRenderbuffer: function(e, t) {
                Sr.bindRenderbuffer(e, Xt.renderbuffers[t]);
            },
            emscripten_glBindSampler: function(e, t) {
                Sr.bindSampler(e, Xt.samplers[t]);
            },
            emscripten_glBindTexture: function(e, t) {
                Sr.bindTexture(e, Xt.textures[t]);
            },
            emscripten_glBindTransformFeedback: function(e, t) {
                Sr.bindTransformFeedback(e, Xt.transformFeedbacks[t]);
            },
            emscripten_glBindVertexArray: function(e) {
                Sr.bindVertexArray(Xt.vaos[e]);
            },
            emscripten_glBindVertexArrayOES: function(e) {
                Sr.bindVertexArray(Xt.vaos[e]);
            },
            emscripten_glBlendColor: function(e, t, r, n) {
                Sr.blendColor(e, t, r, n);
            },
            emscripten_glBlendEquation: function(e) {
                Sr.blendEquation(e);
            },
            emscripten_glBlendEquationSeparate: function(e, t) {
                Sr.blendEquationSeparate(e, t);
            },
            emscripten_glBlendFunc: function(e, t) {
                Sr.blendFunc(e, t);
            },
            emscripten_glBlendFuncSeparate: function(e, t, r, n) {
                Sr.blendFuncSeparate(e, t, r, n);
            },
            emscripten_glBlitFramebuffer: function(e, t, r, n, o, i, a, s, u, c) {
                Sr.blitFramebuffer(e, t, r, n, o, i, a, s, u, c);
            },
            emscripten_glBufferData: function(e, t, r, n) {
                Xt.currentContext.version >= 2 ? r ? Sr.bufferData(e, B, n, r, t) : Sr.bufferData(e, t, n) : Sr.bufferData(e, r ? B.subarray(r, r + t) : t, n);
            },
            emscripten_glBufferSubData: function(e, t, r, n) {
                Xt.currentContext.version >= 2 ? Sr.bufferSubData(e, t, B, n, r) : Sr.bufferSubData(e, t, B.subarray(n, n + r));
            },
            emscripten_glCheckFramebufferStatus: function(e) {
                return Sr.checkFramebufferStatus(e);
            },
            emscripten_glClear: function(e) {
                Sr.clear(e);
            },
            emscripten_glClearBufferfi: function(e, t, r, n) {
                Sr.clearBufferfi(e, t, r, n);
            },
            emscripten_glClearBufferfv: function(e, t, r) {
                Sr.clearBufferfv(e, t, U, r >> 2);
            },
            emscripten_glClearBufferiv: function(e, t, r) {
                Sr.clearBufferiv(e, t, I, r >> 2);
            },
            emscripten_glClearBufferuiv: function(e, t, r) {
                Sr.clearBufferuiv(e, t, O, r >> 2);
            },
            emscripten_glClearColor: function(e, t, r, n) {
                Sr.clearColor(e, t, r, n);
            },
            emscripten_glClearDepthf: function(e) {
                Sr.clearDepth(e);
            },
            emscripten_glClearStencil: function(e) {
                Sr.clearStencil(e);
            },
            emscripten_glClientWaitSync: function(e, t, r, n) {
                return Sr.clientWaitSync(Xt.syncs[e], t, Yt(r, n));
            },
            emscripten_glColorMask: function(e, t, r, n) {
                Sr.colorMask(!!e, !!t, !!r, !!n);
            },
            emscripten_glCompileShader: function(e) {
                Sr.compileShader(Xt.shaders[e]);
            },
            emscripten_glCompressedTexImage2D: function(e, t, r, n, o, i, a, s) {
                Xt.currentContext.version >= 2 ? Sr.currentPixelUnpackBufferBinding ? Sr.compressedTexImage2D(e, t, r, n, o, i, a, s) : Sr.compressedTexImage2D(e, t, r, n, o, i, B, s, a) : Sr.compressedTexImage2D(e, t, r, n, o, i, s ? B.subarray(s, s + a) : null);
            },
            emscripten_glCompressedTexImage3D: function(e, t, r, n, o, i, a, s, u) {
                Sr.currentPixelUnpackBufferBinding ? Sr.compressedTexImage3D(e, t, r, n, o, i, a, s, u) : Sr.compressedTexImage3D(e, t, r, n, o, i, a, B, u, s);
            },
            emscripten_glCompressedTexSubImage2D: function(e, t, r, n, o, i, a, s, u) {
                Xt.currentContext.version >= 2 ? Sr.currentPixelUnpackBufferBinding ? Sr.compressedTexSubImage2D(e, t, r, n, o, i, a, s, u) : Sr.compressedTexSubImage2D(e, t, r, n, o, i, a, B, u, s) : Sr.compressedTexSubImage2D(e, t, r, n, o, i, a, u ? B.subarray(u, u + s) : null);
            },
            emscripten_glCompressedTexSubImage3D: function(e, t, r, n, o, i, a, s, u, c, l) {
                Sr.currentPixelUnpackBufferBinding ? Sr.compressedTexSubImage3D(e, t, r, n, o, i, a, s, u, c, l) : Sr.compressedTexSubImage3D(e, t, r, n, o, i, a, s, u, B, l, c);
            },
            emscripten_glCopyBufferSubData: function(e, t, r, n, o) {
                Sr.copyBufferSubData(e, t, r, n, o);
            },
            emscripten_glCopyTexImage2D: function(e, t, r, n, o, i, a, s) {
                Sr.copyTexImage2D(e, t, r, n, o, i, a, s);
            },
            emscripten_glCopyTexSubImage2D: function(e, t, r, n, o, i, a, s) {
                Sr.copyTexSubImage2D(e, t, r, n, o, i, a, s);
            },
            emscripten_glCopyTexSubImage3D: function(e, t, r, n, o, i, a, s, u) {
                Sr.copyTexSubImage3D(e, t, r, n, o, i, a, s, u);
            },
            emscripten_glCreateProgram: function() {
                var e = Xt.getNewId(Xt.programs), t = Sr.createProgram();
                return t.name = e, t.maxUniformLength = t.maxAttributeLength = t.maxUniformBlockNameLength = 0, t.uniformIdCounter = 1, Xt.programs[e] = t, e;
            },
            emscripten_glCreateShader: function(e) {
                var t = Xt.getNewId(Xt.shaders);
                return Xt.shaders[t] = Sr.createShader(e), t;
            },
            emscripten_glCullFace: function(e) {
                Sr.cullFace(e);
            },
            emscripten_glDeleteBuffers: function(e, t) {
                for(var r = 0; r < e; r++){
                    var n = I[t + 4 * r >> 2], o = Xt.buffers[n];
                    o && (Sr.deleteBuffer(o), o.name = 0, Xt.buffers[n] = null, n == Sr.currentPixelPackBufferBinding && (Sr.currentPixelPackBufferBinding = 0), n == Sr.currentPixelUnpackBufferBinding && (Sr.currentPixelUnpackBufferBinding = 0));
                }
            },
            emscripten_glDeleteFramebuffers: function(e, t) {
                for(var r = 0; r < e; ++r){
                    var n = I[t + 4 * r >> 2], o = Xt.framebuffers[n];
                    o && (Sr.deleteFramebuffer(o), o.name = 0, Xt.framebuffers[n] = null);
                }
            },
            emscripten_glDeleteProgram: function(e) {
                if (e) {
                    var t = Xt.programs[e];
                    t ? (Sr.deleteProgram(t), t.name = 0, Xt.programs[e] = null) : Xt.recordError(1281);
                }
            },
            emscripten_glDeleteQueries: function(e, t) {
                for(var r = 0; r < e; r++){
                    var n = I[t + 4 * r >> 2], o = Xt.queries[n];
                    o && (Sr.deleteQuery(o), Xt.queries[n] = null);
                }
            },
            emscripten_glDeleteQueriesEXT: function(e, t) {
                for(var r = 0; r < e; r++){
                    var n = I[t + 4 * r >> 2], o = Xt.queries[n];
                    o && (Sr.disjointTimerQueryExt.deleteQueryEXT(o), Xt.queries[n] = null);
                }
            },
            emscripten_glDeleteRenderbuffers: function(e, t) {
                for(var r = 0; r < e; r++){
                    var n = I[t + 4 * r >> 2], o = Xt.renderbuffers[n];
                    o && (Sr.deleteRenderbuffer(o), o.name = 0, Xt.renderbuffers[n] = null);
                }
            },
            emscripten_glDeleteSamplers: function(e, t) {
                for(var r = 0; r < e; r++){
                    var n = I[t + 4 * r >> 2], o = Xt.samplers[n];
                    o && (Sr.deleteSampler(o), o.name = 0, Xt.samplers[n] = null);
                }
            },
            emscripten_glDeleteShader: function(e) {
                if (e) {
                    var t = Xt.shaders[e];
                    t ? (Sr.deleteShader(t), Xt.shaders[e] = null) : Xt.recordError(1281);
                }
            },
            emscripten_glDeleteSync: function(e) {
                if (e) {
                    var t = Xt.syncs[e];
                    t ? (Sr.deleteSync(t), t.name = 0, Xt.syncs[e] = null) : Xt.recordError(1281);
                }
            },
            emscripten_glDeleteTextures: function(e, t) {
                for(var r = 0; r < e; r++){
                    var n = I[t + 4 * r >> 2], o = Xt.textures[n];
                    o && (Sr.deleteTexture(o), o.name = 0, Xt.textures[n] = null);
                }
            },
            emscripten_glDeleteTransformFeedbacks: function(e, t) {
                for(var r = 0; r < e; r++){
                    var n = I[t + 4 * r >> 2], o = Xt.transformFeedbacks[n];
                    o && (Sr.deleteTransformFeedback(o), o.name = 0, Xt.transformFeedbacks[n] = null);
                }
            },
            emscripten_glDeleteVertexArrays: function(e, t) {
                for(var r = 0; r < e; r++){
                    var n = I[t + 4 * r >> 2];
                    Sr.deleteVertexArray(Xt.vaos[n]), Xt.vaos[n] = null;
                }
            },
            emscripten_glDeleteVertexArraysOES: function(e, t) {
                for(var r = 0; r < e; r++){
                    var n = I[t + 4 * r >> 2];
                    Sr.deleteVertexArray(Xt.vaos[n]), Xt.vaos[n] = null;
                }
            },
            emscripten_glDepthFunc: function(e) {
                Sr.depthFunc(e);
            },
            emscripten_glDepthMask: function(e) {
                Sr.depthMask(!!e);
            },
            emscripten_glDepthRangef: function(e, t) {
                Sr.depthRange(e, t);
            },
            emscripten_glDetachShader: function(e, t) {
                Sr.detachShader(Xt.programs[e], Xt.shaders[t]);
            },
            emscripten_glDisable: function(e) {
                Sr.disable(e);
            },
            emscripten_glDisableVertexAttribArray: function(e) {
                Sr.disableVertexAttribArray(e);
            },
            emscripten_glDrawArrays: function(e, t, r) {
                Sr.drawArrays(e, t, r);
            },
            emscripten_glDrawArraysInstanced: function(e, t, r, n) {
                Sr.drawArraysInstanced(e, t, r, n);
            },
            emscripten_glDrawArraysInstancedANGLE: function(e, t, r, n) {
                Sr.drawArraysInstanced(e, t, r, n);
            },
            emscripten_glDrawArraysInstancedARB: function(e, t, r, n) {
                Sr.drawArraysInstanced(e, t, r, n);
            },
            emscripten_glDrawArraysInstancedBaseInstanceWEBGL: function(e, t, r, n, o) {
                Sr.dibvbi.drawArraysInstancedBaseInstanceWEBGL(e, t, r, n, o);
            },
            emscripten_glDrawArraysInstancedEXT: function(e, t, r, n) {
                Sr.drawArraysInstanced(e, t, r, n);
            },
            emscripten_glDrawArraysInstancedNV: function(e, t, r, n) {
                Sr.drawArraysInstanced(e, t, r, n);
            },
            emscripten_glDrawBuffers: function(e, t) {
                for(var r = Qt[e], n = 0; n < e; n++)r[n] = I[t + 4 * n >> 2];
                Sr.drawBuffers(r);
            },
            emscripten_glDrawBuffersEXT: function(e, t) {
                for(var r = Qt[e], n = 0; n < e; n++)r[n] = I[t + 4 * n >> 2];
                Sr.drawBuffers(r);
            },
            emscripten_glDrawBuffersWEBGL: function(e, t) {
                for(var r = Qt[e], n = 0; n < e; n++)r[n] = I[t + 4 * n >> 2];
                Sr.drawBuffers(r);
            },
            emscripten_glDrawElements: function(e, t, r, n) {
                Sr.drawElements(e, t, r, n);
            },
            emscripten_glDrawElementsInstanced: function(e, t, r, n, o) {
                Sr.drawElementsInstanced(e, t, r, n, o);
            },
            emscripten_glDrawElementsInstancedANGLE: function(e, t, r, n, o) {
                Sr.drawElementsInstanced(e, t, r, n, o);
            },
            emscripten_glDrawElementsInstancedARB: function(e, t, r, n, o) {
                Sr.drawElementsInstanced(e, t, r, n, o);
            },
            emscripten_glDrawElementsInstancedBaseVertexBaseInstanceWEBGL: function(e, t, r, n, o, i, a) {
                Sr.dibvbi.drawElementsInstancedBaseVertexBaseInstanceWEBGL(e, t, r, n, o, i, a);
            },
            emscripten_glDrawElementsInstancedEXT: function(e, t, r, n, o) {
                Sr.drawElementsInstanced(e, t, r, n, o);
            },
            emscripten_glDrawElementsInstancedNV: function(e, t, r, n, o) {
                Sr.drawElementsInstanced(e, t, r, n, o);
            },
            emscripten_glDrawRangeElements: function(e, t, r, n, o, i) {
                !function(e, t, r, n) {
                    Sr.drawElements(e, t, r, n);
                }(e, n, o, i);
            },
            emscripten_glEnable: function(e) {
                Sr.enable(e);
            },
            emscripten_glEnableVertexAttribArray: function(e) {
                Sr.enableVertexAttribArray(e);
            },
            emscripten_glEndQuery: function(e) {
                Sr.endQuery(e);
            },
            emscripten_glEndQueryEXT: function(e) {
                Sr.disjointTimerQueryExt.endQueryEXT(e);
            },
            emscripten_glEndTransformFeedback: function() {
                Sr.endTransformFeedback();
            },
            emscripten_glFenceSync: function(e, t) {
                var r = Sr.fenceSync(e, t);
                if (r) {
                    var n = Xt.getNewId(Xt.syncs);
                    return r.name = n, Xt.syncs[n] = r, n;
                }
                return 0;
            },
            emscripten_glFinish: function() {
                Sr.finish();
            },
            emscripten_glFlush: function() {
                Sr.flush();
            },
            emscripten_glFramebufferRenderbuffer: function(e, t, r, n) {
                Sr.framebufferRenderbuffer(e, t, r, Xt.renderbuffers[n]);
            },
            emscripten_glFramebufferTexture2D: function(e, t, r, n, o) {
                Sr.framebufferTexture2D(e, t, r, Xt.textures[n], o);
            },
            emscripten_glFramebufferTextureLayer: function(e, t, r, n, o) {
                Sr.framebufferTextureLayer(e, t, Xt.textures[r], n, o);
            },
            emscripten_glFrontFace: function(e) {
                Sr.frontFace(e);
            },
            emscripten_glGenBuffers: function(e, t) {
                Kt(e, t, "createBuffer", Xt.buffers);
            },
            emscripten_glGenFramebuffers: function(e, t) {
                Kt(e, t, "createFramebuffer", Xt.framebuffers);
            },
            emscripten_glGenQueries: function(e, t) {
                Kt(e, t, "createQuery", Xt.queries);
            },
            emscripten_glGenQueriesEXT: function(e, t) {
                for(var r = 0; r < e; r++){
                    var n = Sr.disjointTimerQueryExt.createQueryEXT();
                    if (!n) {
                        for(Xt.recordError(1282); r < e;)I[t + 4 * r++ >> 2] = 0;
                        return;
                    }
                    var o = Xt.getNewId(Xt.queries);
                    n.name = o, Xt.queries[o] = n, I[t + 4 * r >> 2] = o;
                }
            },
            emscripten_glGenRenderbuffers: function(e, t) {
                Kt(e, t, "createRenderbuffer", Xt.renderbuffers);
            },
            emscripten_glGenSamplers: function(e, t) {
                Kt(e, t, "createSampler", Xt.samplers);
            },
            emscripten_glGenTextures: function(e, t) {
                Kt(e, t, "createTexture", Xt.textures);
            },
            emscripten_glGenTransformFeedbacks: function(e, t) {
                Kt(e, t, "createTransformFeedback", Xt.transformFeedbacks);
            },
            emscripten_glGenVertexArrays: function(e, t) {
                Kt(e, t, "createVertexArray", Xt.vaos);
            },
            emscripten_glGenVertexArraysOES: function(e, t) {
                Kt(e, t, "createVertexArray", Xt.vaos);
            },
            emscripten_glGenerateMipmap: function(e) {
                Sr.generateMipmap(e);
            },
            emscripten_glGetActiveAttrib: function(e, t, r, n, o, i, a) {
                Zt("getActiveAttrib", e, t, r, n, o, i, a);
            },
            emscripten_glGetActiveUniform: function(e, t, r, n, o, i, a) {
                Zt("getActiveUniform", e, t, r, n, o, i, a);
            },
            emscripten_glGetActiveUniformBlockName: function(e, t, r, n, o) {
                e = Xt.programs[e];
                var i = Sr.getActiveUniformBlockName(e, t);
                if (i) if (o && r > 0) {
                    var a = P(i, o, r);
                    n && (I[n >> 2] = a);
                } else n && (I[n >> 2] = 0);
            },
            emscripten_glGetActiveUniformBlockiv: function(e, t, r, n) {
                if (n) if (e = Xt.programs[e], 35393 != r) {
                    var o = Sr.getActiveUniformBlockParameter(e, t, r);
                    if (null !== o) if (35395 == r) for(var i = 0; i < o.length; i++)I[n + 4 * i >> 2] = o[i];
                    else I[n >> 2] = o;
                } else {
                    var a = Sr.getActiveUniformBlockName(e, t);
                    I[n >> 2] = a.length + 1;
                }
                else Xt.recordError(1281);
            },
            emscripten_glGetActiveUniformsiv: function(e, t, r, n, o) {
                if (o) if (t > 0 && 0 == r) Xt.recordError(1281);
                else {
                    e = Xt.programs[e];
                    for(var i = [], a = 0; a < t; a++)i.push(I[r + 4 * a >> 2]);
                    var s = Sr.getActiveUniforms(e, i, n);
                    if (s) {
                        var u = s.length;
                        for(a = 0; a < u; a++)I[o + 4 * a >> 2] = s[a];
                    }
                }
                else Xt.recordError(1281);
            },
            emscripten_glGetAttachedShaders: function(e, t, r, n) {
                var o = Sr.getAttachedShaders(Xt.programs[e]), i = o.length;
                i > t && (i = t), I[r >> 2] = i;
                for(var a = 0; a < i; ++a){
                    var s = Xt.shaders.indexOf(o[a]);
                    I[n + 4 * a >> 2] = s;
                }
            },
            emscripten_glGetAttribLocation: function(e, t) {
                return Sr.getAttribLocation(Xt.programs[e], A(t));
            },
            emscripten_glGetBooleanv: function(e, t) {
                er(e, t, 4);
            },
            emscripten_glGetBufferParameteri64v: function(e, t, r) {
                r ? Jt(r, Sr.getBufferParameter(e, t)) : Xt.recordError(1281);
            },
            emscripten_glGetBufferParameteriv: function(e, t, r) {
                r ? I[r >> 2] = Sr.getBufferParameter(e, t) : Xt.recordError(1281);
            },
            emscripten_glGetError: function() {
                var e = Sr.getError() || Xt.lastError;
                return Xt.lastError = 0, e;
            },
            emscripten_glGetFloatv: function(e, t) {
                er(e, t, 2);
            },
            emscripten_glGetFragDataLocation: function(e, t) {
                return Sr.getFragDataLocation(Xt.programs[e], A(t));
            },
            emscripten_glGetFramebufferAttachmentParameteriv: function(e, t, r, n) {
                var o = Sr.getFramebufferAttachmentParameter(e, t, r);
                (o instanceof WebGLRenderbuffer || o instanceof WebGLTexture) && (o = 0 | o.name), I[n >> 2] = o;
            },
            emscripten_glGetInteger64i_v: function(e, t, r) {
                tr(e, t, r, 1);
            },
            emscripten_glGetInteger64v: function(e, t) {
                er(e, t, 1);
            },
            emscripten_glGetIntegeri_v: function(e, t, r) {
                tr(e, t, r, 0);
            },
            emscripten_glGetIntegerv: function(e, t) {
                er(e, t, 0);
            },
            emscripten_glGetInternalformativ: function(e, t, r, n, o) {
                if (n < 0) Xt.recordError(1281);
                else if (o) {
                    var i = Sr.getInternalformatParameter(e, t, r);
                    if (null !== i) for(var a = 0; a < i.length && a < n; ++a)I[o + 4 * a >> 2] = i[a];
                } else Xt.recordError(1281);
            },
            emscripten_glGetProgramBinary: function(e, t, r, n, o) {
                Xt.recordError(1282);
            },
            emscripten_glGetProgramInfoLog: function(e, t, r, n) {
                var o = Sr.getProgramInfoLog(Xt.programs[e]);
                null === o && (o = "(unknown error)");
                var i = t > 0 && n ? P(o, n, t) : 0;
                r && (I[r >> 2] = i);
            },
            emscripten_glGetProgramiv: function(e, t, r) {
                if (r) if (e >= Xt.counter) Xt.recordError(1281);
                else if (e = Xt.programs[e], 35716 == t) {
                    var n = Sr.getProgramInfoLog(e);
                    null === n && (n = "(unknown error)"), I[r >> 2] = n.length + 1;
                } else if (35719 == t) {
                    if (!e.maxUniformLength) for(var o = 0; o < Sr.getProgramParameter(e, 35718); ++o)e.maxUniformLength = Math.max(e.maxUniformLength, Sr.getActiveUniform(e, o).name.length + 1);
                    I[r >> 2] = e.maxUniformLength;
                } else if (35722 == t) {
                    if (!e.maxAttributeLength) for(o = 0; o < Sr.getProgramParameter(e, 35721); ++o)e.maxAttributeLength = Math.max(e.maxAttributeLength, Sr.getActiveAttrib(e, o).name.length + 1);
                    I[r >> 2] = e.maxAttributeLength;
                } else if (35381 == t) {
                    if (!e.maxUniformBlockNameLength) for(o = 0; o < Sr.getProgramParameter(e, 35382); ++o)e.maxUniformBlockNameLength = Math.max(e.maxUniformBlockNameLength, Sr.getActiveUniformBlockName(e, o).length + 1);
                    I[r >> 2] = e.maxUniformBlockNameLength;
                } else I[r >> 2] = Sr.getProgramParameter(e, t);
                else Xt.recordError(1281);
            },
            emscripten_glGetQueryObjecti64vEXT: function(e, t, r) {
                if (r) {
                    var n, o = Xt.queries[e];
                    Jt(r, "boolean" == typeof (n = Xt.currentContext.version < 2 ? Sr.disjointTimerQueryExt.getQueryObjectEXT(o, t) : Sr.getQueryParameter(o, t)) ? n ? 1 : 0 : n);
                } else Xt.recordError(1281);
            },
            emscripten_glGetQueryObjectivEXT: function(e, t, r) {
                if (r) {
                    var n, o = Xt.queries[e], i = Sr.disjointTimerQueryExt.getQueryObjectEXT(o, t);
                    n = "boolean" == typeof i ? i ? 1 : 0 : i, I[r >> 2] = n;
                } else Xt.recordError(1281);
            },
            emscripten_glGetQueryObjectui64vEXT: function(e, t, r) {
                if (r) {
                    var n, o = Xt.queries[e];
                    Jt(r, "boolean" == typeof (n = Xt.currentContext.version < 2 ? Sr.disjointTimerQueryExt.getQueryObjectEXT(o, t) : Sr.getQueryParameter(o, t)) ? n ? 1 : 0 : n);
                } else Xt.recordError(1281);
            },
            emscripten_glGetQueryObjectuiv: function(e, t, r) {
                if (r) {
                    var n, o = Xt.queries[e], i = Sr.getQueryParameter(o, t);
                    n = "boolean" == typeof i ? i ? 1 : 0 : i, I[r >> 2] = n;
                } else Xt.recordError(1281);
            },
            emscripten_glGetQueryObjectuivEXT: function(e, t, r) {
                if (r) {
                    var n, o = Xt.queries[e], i = Sr.disjointTimerQueryExt.getQueryObjectEXT(o, t);
                    n = "boolean" == typeof i ? i ? 1 : 0 : i, I[r >> 2] = n;
                } else Xt.recordError(1281);
            },
            emscripten_glGetQueryiv: function(e, t, r) {
                r ? I[r >> 2] = Sr.getQuery(e, t) : Xt.recordError(1281);
            },
            emscripten_glGetQueryivEXT: function(e, t, r) {
                r ? I[r >> 2] = Sr.disjointTimerQueryExt.getQueryEXT(e, t) : Xt.recordError(1281);
            },
            emscripten_glGetRenderbufferParameteriv: function(e, t, r) {
                r ? I[r >> 2] = Sr.getRenderbufferParameter(e, t) : Xt.recordError(1281);
            },
            emscripten_glGetSamplerParameterfv: function(e, t, r) {
                r ? U[r >> 2] = Sr.getSamplerParameter(Xt.samplers[e], t) : Xt.recordError(1281);
            },
            emscripten_glGetSamplerParameteriv: function(e, t, r) {
                r ? I[r >> 2] = Sr.getSamplerParameter(Xt.samplers[e], t) : Xt.recordError(1281);
            },
            emscripten_glGetShaderInfoLog: function(e, t, r, n) {
                var o = Sr.getShaderInfoLog(Xt.shaders[e]);
                null === o && (o = "(unknown error)");
                var i = t > 0 && n ? P(o, n, t) : 0;
                r && (I[r >> 2] = i);
            },
            emscripten_glGetShaderPrecisionFormat: function(e, t, r, n) {
                var o = Sr.getShaderPrecisionFormat(e, t);
                I[r >> 2] = o.rangeMin, I[r + 4 >> 2] = o.rangeMax, I[n >> 2] = o.precision;
            },
            emscripten_glGetShaderSource: function(e, t, r, n) {
                var o = Sr.getShaderSource(Xt.shaders[e]);
                if (o) {
                    var i = t > 0 && n ? P(o, n, t) : 0;
                    r && (I[r >> 2] = i);
                }
            },
            emscripten_glGetShaderiv: function(e, t, r) {
                if (r) if (35716 == t) {
                    var n = Sr.getShaderInfoLog(Xt.shaders[e]);
                    null === n && (n = "(unknown error)");
                    var o = n ? n.length + 1 : 0;
                    I[r >> 2] = o;
                } else if (35720 == t) {
                    var i = Sr.getShaderSource(Xt.shaders[e]), a = i ? i.length + 1 : 0;
                    I[r >> 2] = a;
                } else I[r >> 2] = Sr.getShaderParameter(Xt.shaders[e], t);
                else Xt.recordError(1281);
            },
            emscripten_glGetString: function(e) {
                var t = Xt.stringCache[e];
                if (!t) {
                    switch(e){
                        case 7939:
                            var r = Sr.getSupportedExtensions() || [];
                            t = rr((r = r.concat(r.map(function(e) {
                                return "GL_" + e;
                            }))).join(" "));
                            break;
                        case 7936:
                        case 7937:
                        case 37445:
                        case 37446:
                            var n = Sr.getParameter(e);
                            n || Xt.recordError(1280), t = n && rr(n);
                            break;
                        case 7938:
                            var o = Sr.getParameter(7938);
                            t = rr(o = Xt.currentContext.version >= 2 ? "OpenGL ES 3.0 (" + o + ")" : "OpenGL ES 2.0 (" + o + ")");
                            break;
                        case 35724:
                            var i = Sr.getParameter(35724), a = i.match(/^WebGL GLSL ES ([0-9]\.[0-9][0-9]?)(?:$| .*)/);
                            null !== a && (3 == a[1].length && (a[1] = a[1] + "0"), i = "OpenGL ES GLSL ES " + a[1] + " (" + i + ")"), t = rr(i);
                            break;
                        default:
                            Xt.recordError(1280);
                    }
                    Xt.stringCache[e] = t;
                }
                return t;
            },
            emscripten_glGetStringi: function(e, t) {
                if (Xt.currentContext.version < 2) return Xt.recordError(1282), 0;
                var r = Xt.stringiCache[e];
                if (r) return t < 0 || t >= r.length ? (Xt.recordError(1281), 0) : r[t];
                if (7939 === e) {
                    var n = Sr.getSupportedExtensions() || [];
                    return n = (n = n.concat(n.map(function(e) {
                        return "GL_" + e;
                    }))).map(function(e) {
                        return rr(e);
                    }), r = Xt.stringiCache[e] = n, t < 0 || t >= r.length ? (Xt.recordError(1281), 0) : r[t];
                }
                return Xt.recordError(1280), 0;
            },
            emscripten_glGetSynciv: function(e, t, r, n, o) {
                if (r < 0) Xt.recordError(1281);
                else if (o) {
                    var i = Sr.getSyncParameter(Xt.syncs[e], t);
                    null !== i && (I[o >> 2] = i, n && (I[n >> 2] = 1));
                } else Xt.recordError(1281);
            },
            emscripten_glGetTexParameterfv: function(e, t, r) {
                r ? U[r >> 2] = Sr.getTexParameter(e, t) : Xt.recordError(1281);
            },
            emscripten_glGetTexParameteriv: function(e, t, r) {
                r ? I[r >> 2] = Sr.getTexParameter(e, t) : Xt.recordError(1281);
            },
            emscripten_glGetTransformFeedbackVarying: function(e, t, r, n, o, i, a) {
                e = Xt.programs[e];
                var s = Sr.getTransformFeedbackVarying(e, t);
                if (s) {
                    if (a && r > 0) {
                        var u = P(s.name, a, r);
                        n && (I[n >> 2] = u);
                    } else n && (I[n >> 2] = 0);
                    o && (I[o >> 2] = s.size), i && (I[i >> 2] = s.type);
                }
            },
            emscripten_glGetUniformBlockIndex: function(e, t) {
                return Sr.getUniformBlockIndex(Xt.programs[e], A(t));
            },
            emscripten_glGetUniformIndices: function(e, t, r, n) {
                if (n) if (t > 0 && (0 == r || 0 == n)) Xt.recordError(1281);
                else {
                    e = Xt.programs[e];
                    for(var o = [], i = 0; i < t; i++)o.push(A(I[r + 4 * i >> 2]));
                    var a = Sr.getUniformIndices(e, o);
                    if (a) {
                        var s = a.length;
                        for(i = 0; i < s; i++)I[n + 4 * i >> 2] = a[i];
                    }
                }
                else Xt.recordError(1281);
            },
            emscripten_glGetUniformLocation: function(e, t) {
                if (t = A(t), e = Xt.programs[e]) {
                    or(e);
                    var r = e.uniformLocsById, n = 0, o = t, i = nr(t);
                    i > 0 && (s = t.slice(i + 1), n = parseInt(s) >>> 0, o = t.slice(0, i));
                    var a = e.uniformSizeAndIdsByName[o];
                    if (a && n < a[0] && (r[n += a[1]] = r[n] || Sr.getUniformLocation(e, t))) return n;
                } else Xt.recordError(1281);
                var s;
                return -1;
            },
            emscripten_glGetUniformfv: function(e, t, r) {
                ar(e, t, r, 2);
            },
            emscripten_glGetUniformiv: function(e, t, r) {
                ar(e, t, r, 0);
            },
            emscripten_glGetUniformuiv: function(e, t, r) {
                ar(e, t, r, 0);
            },
            emscripten_glGetVertexAttribIiv: function(e, t, r) {
                sr(e, t, r, 0);
            },
            emscripten_glGetVertexAttribIuiv: function(e, t, r) {
                sr(e, t, r, 0);
            },
            emscripten_glGetVertexAttribPointerv: function(e, t, r) {
                r ? I[r >> 2] = Sr.getVertexAttribOffset(e, t) : Xt.recordError(1281);
            },
            emscripten_glGetVertexAttribfv: function(e, t, r) {
                sr(e, t, r, 2);
            },
            emscripten_glGetVertexAttribiv: function(e, t, r) {
                sr(e, t, r, 5);
            },
            emscripten_glHint: function(e, t) {
                Sr.hint(e, t);
            },
            emscripten_glInvalidateFramebuffer: function(e, t, r) {
                for(var n = Qt[t], o = 0; o < t; o++)n[o] = I[r + 4 * o >> 2];
                Sr.invalidateFramebuffer(e, n);
            },
            emscripten_glInvalidateSubFramebuffer: function(e, t, r, n, o, i, a) {
                for(var s = Qt[t], u = 0; u < t; u++)s[u] = I[r + 4 * u >> 2];
                Sr.invalidateSubFramebuffer(e, s, n, o, i, a);
            },
            emscripten_glIsBuffer: function(e) {
                var t = Xt.buffers[e];
                return t ? Sr.isBuffer(t) : 0;
            },
            emscripten_glIsEnabled: function(e) {
                return Sr.isEnabled(e);
            },
            emscripten_glIsFramebuffer: function(e) {
                var t = Xt.framebuffers[e];
                return t ? Sr.isFramebuffer(t) : 0;
            },
            emscripten_glIsProgram: function(e) {
                return (e = Xt.programs[e]) ? Sr.isProgram(e) : 0;
            },
            emscripten_glIsQuery: function(e) {
                var t = Xt.queries[e];
                return t ? Sr.isQuery(t) : 0;
            },
            emscripten_glIsQueryEXT: function(e) {
                var t = Xt.queries[e];
                return t ? Sr.disjointTimerQueryExt.isQueryEXT(t) : 0;
            },
            emscripten_glIsRenderbuffer: function(e) {
                var t = Xt.renderbuffers[e];
                return t ? Sr.isRenderbuffer(t) : 0;
            },
            emscripten_glIsSampler: function(e) {
                var t = Xt.samplers[e];
                return t ? Sr.isSampler(t) : 0;
            },
            emscripten_glIsShader: function(e) {
                var t = Xt.shaders[e];
                return t ? Sr.isShader(t) : 0;
            },
            emscripten_glIsSync: function(e) {
                return Sr.isSync(Xt.syncs[e]);
            },
            emscripten_glIsTexture: function(e) {
                var t = Xt.textures[e];
                return t ? Sr.isTexture(t) : 0;
            },
            emscripten_glIsTransformFeedback: function(e) {
                return Sr.isTransformFeedback(Xt.transformFeedbacks[e]);
            },
            emscripten_glIsVertexArray: function(e) {
                var t = Xt.vaos[e];
                return t ? Sr.isVertexArray(t) : 0;
            },
            emscripten_glIsVertexArrayOES: function(e) {
                var t = Xt.vaos[e];
                return t ? Sr.isVertexArray(t) : 0;
            },
            emscripten_glLineWidth: function(e) {
                Sr.lineWidth(e);
            },
            emscripten_glLinkProgram: function(e) {
                e = Xt.programs[e], Sr.linkProgram(e), e.uniformLocsById = 0, e.uniformSizeAndIdsByName = {};
            },
            emscripten_glMultiDrawArraysInstancedBaseInstanceWEBGL: function(e, t, r, n, o, i) {
                Sr.mdibvbi.multiDrawArraysInstancedBaseInstanceWEBGL(e, I, t >> 2, I, r >> 2, I, n >> 2, O, o >> 2, i);
            },
            emscripten_glMultiDrawElementsInstancedBaseVertexBaseInstanceWEBGL: function(e, t, r, n, o, i, a, s) {
                Sr.mdibvbi.multiDrawElementsInstancedBaseVertexBaseInstanceWEBGL(e, I, t >> 2, r, I, n >> 2, I, o >> 2, I, i >> 2, O, a >> 2, s);
            },
            emscripten_glPauseTransformFeedback: function() {
                Sr.pauseTransformFeedback();
            },
            emscripten_glPixelStorei: function(e, t) {
                3317 == e && (Xt.unpackAlignment = t), Sr.pixelStorei(e, t);
            },
            emscripten_glPolygonOffset: function(e, t) {
                Sr.polygonOffset(e, t);
            },
            emscripten_glProgramBinary: function(e, t, r, n) {
                Xt.recordError(1280);
            },
            emscripten_glProgramParameteri: function(e, t, r) {
                Xt.recordError(1280);
            },
            emscripten_glQueryCounterEXT: function(e, t) {
                Sr.disjointTimerQueryExt.queryCounterEXT(Xt.queries[e], t);
            },
            emscripten_glReadBuffer: function(e) {
                Sr.readBuffer(e);
            },
            emscripten_glReadPixels: function(e, t, r, n, o, i, a) {
                if (Xt.currentContext.version >= 2) if (Sr.currentPixelPackBufferBinding) Sr.readPixels(e, t, r, n, o, i, a);
                else {
                    var s = ur(i);
                    Sr.readPixels(e, t, r, n, o, i, s, a >> cr(s));
                }
                else {
                    var u = lr(i, o, r, n, a);
                    u ? Sr.readPixels(e, t, r, n, o, i, u) : Xt.recordError(1280);
                }
            },
            emscripten_glReleaseShaderCompiler: function() {},
            emscripten_glRenderbufferStorage: function(e, t, r, n) {
                Sr.renderbufferStorage(e, t, r, n);
            },
            emscripten_glRenderbufferStorageMultisample: function(e, t, r, n, o) {
                Sr.renderbufferStorageMultisample(e, t, r, n, o);
            },
            emscripten_glResumeTransformFeedback: function() {
                Sr.resumeTransformFeedback();
            },
            emscripten_glSampleCoverage: function(e, t) {
                Sr.sampleCoverage(e, !!t);
            },
            emscripten_glSamplerParameterf: function(e, t, r) {
                Sr.samplerParameterf(Xt.samplers[e], t, r);
            },
            emscripten_glSamplerParameterfv: function(e, t, r) {
                var n = U[r >> 2];
                Sr.samplerParameterf(Xt.samplers[e], t, n);
            },
            emscripten_glSamplerParameteri: function(e, t, r) {
                Sr.samplerParameteri(Xt.samplers[e], t, r);
            },
            emscripten_glSamplerParameteriv: function(e, t, r) {
                var n = I[r >> 2];
                Sr.samplerParameteri(Xt.samplers[e], t, n);
            },
            emscripten_glScissor: function(e, t, r, n) {
                Sr.scissor(e, t, r, n);
            },
            emscripten_glShaderBinary: function() {
                Xt.recordError(1280);
            },
            emscripten_glShaderSource: function(e, t, r, n) {
                var o = Xt.getSource(e, t, r, n);
                if (Xt.currentContext.version >= 2 && o.includes("#version 100")) {
                    var i = "";
                    (o = (o = o.replace(/#extension GL_OES_standard_derivatives : enable/g, "")).replace(/#extension GL_EXT_shader_texture_lod : enable/g, "")).includes("gl_FragColor") && (i += "out mediump vec4 GL_FragColor;\n", o = o.replace(/gl_FragColor/g, "GL_FragColor")), o = (o = (o = (o = (o = (o = (o = (o = (o = (o = (o = (o = o.includes("attribute") ? (o = o.replace(/attribute/g, "in")).replace(/varying/g, "out") : o.replace(/varying/g, "in")).replace(/textureCubeLodEXT/g, "textureCubeLod")).replace(/texture2DLodEXT/g, "texture2DLod")).replace(/texture2DProjLodEXT/g, "texture2DProjLod")).replace(/texture2DGradEXT/g, "texture2DGrad")).replace(/texture2DProjGradEXT/g, "texture2DProjGrad")).replace(/textureCubeGradEXT/g, "textureCubeGrad")).replace(/textureCube/g, "texture")).replace(/texture1D/g, "texture")).replace(/texture2D/g, "texture")).replace(/texture3D/g, "texture")).replace(/#version 100/g, "#version 300 es\n" + i);
                }
                Sr.shaderSource(Xt.shaders[e], o);
            },
            emscripten_glStencilFunc: function(e, t, r) {
                Sr.stencilFunc(e, t, r);
            },
            emscripten_glStencilFuncSeparate: function(e, t, r, n) {
                Sr.stencilFuncSeparate(e, t, r, n);
            },
            emscripten_glStencilMask: function(e) {
                Sr.stencilMask(e);
            },
            emscripten_glStencilMaskSeparate: function(e, t) {
                Sr.stencilMaskSeparate(e, t);
            },
            emscripten_glStencilOp: function(e, t, r) {
                Sr.stencilOp(e, t, r);
            },
            emscripten_glStencilOpSeparate: function(e, t, r, n) {
                Sr.stencilOpSeparate(e, t, r, n);
            },
            emscripten_glTexImage2D: function(e, t, r, n, o, i, a, s, u) {
                if (Xt.currentContext.version >= 2 && (6402 == a && 6402 == r && 5125 == s && (r = 33190), 36193 == s && (s = 5131, 6408 == a && 6408 == r && (r = 34842)), 34041 == r && (r = 35056)), Xt.currentContext.version >= 2) if (Sr.currentPixelUnpackBufferBinding) Sr.texImage2D(e, t, r, n, o, i, a, s, u);
                else if (u) {
                    var c = ur(s);
                    Sr.texImage2D(e, t, r, n, o, i, a, s, c, u >> cr(c));
                } else Sr.texImage2D(e, t, r, n, o, i, a, s, null);
                else Sr.texImage2D(e, t, r, n, o, i, a, s, u ? lr(s, a, n, o, u) : null);
            },
            emscripten_glTexImage3D: function(e, t, r, n, o, i, a, s, u, c) {
                if (Sr.currentPixelUnpackBufferBinding) Sr.texImage3D(e, t, r, n, o, i, a, s, u, c);
                else if (c) {
                    var l = ur(u);
                    Sr.texImage3D(e, t, r, n, o, i, a, s, u, l, c >> cr(l));
                } else Sr.texImage3D(e, t, r, n, o, i, a, s, u, null);
            },
            emscripten_glTexParameterf: function(e, t, r) {
                Sr.texParameterf(e, t, r);
            },
            emscripten_glTexParameterfv: function(e, t, r) {
                var n = U[r >> 2];
                Sr.texParameterf(e, t, n);
            },
            emscripten_glTexParameteri: function(e, t, r) {
                Sr.texParameteri(e, t, r);
            },
            emscripten_glTexParameteriv: function(e, t, r) {
                var n = I[r >> 2];
                Sr.texParameteri(e, t, n);
            },
            emscripten_glTexStorage2D: function(e, t, r, n, o) {
                Sr.texStorage2D(e, t, r, n, o);
            },
            emscripten_glTexStorage3D: function(e, t, r, n, o, i) {
                Sr.texStorage3D(e, t, r, n, o, i);
            },
            emscripten_glTexSubImage2D: function(e, t, r, n, o, i, a, s, u) {
                if (Xt.currentContext.version >= 2 && 36193 == s && (s = 5131), Xt.currentContext.version >= 2) if (Sr.currentPixelUnpackBufferBinding) Sr.texSubImage2D(e, t, r, n, o, i, a, s, u);
                else if (u) {
                    var c = ur(s);
                    Sr.texSubImage2D(e, t, r, n, o, i, a, s, c, u >> cr(c));
                } else Sr.texSubImage2D(e, t, r, n, o, i, a, s, null);
                else {
                    var l = null;
                    u && (l = lr(s, a, o, i, u)), Sr.texSubImage2D(e, t, r, n, o, i, a, s, l);
                }
            },
            emscripten_glTexSubImage3D: function(e, t, r, n, o, i, a, s, u, c, l) {
                if (Sr.currentPixelUnpackBufferBinding) Sr.texSubImage3D(e, t, r, n, o, i, a, s, u, c, l);
                else if (l) {
                    var d = ur(c);
                    Sr.texSubImage3D(e, t, r, n, o, i, a, s, u, c, d, l >> cr(d));
                } else Sr.texSubImage3D(e, t, r, n, o, i, a, s, u, c, null);
            },
            emscripten_glTransformFeedbackVaryings: function(e, t, r, n) {
                e = Xt.programs[e];
                for(var o = [], i = 0; i < t; i++)o.push(A(I[r + 4 * i >> 2]));
                Sr.transformFeedbackVaryings(e, o, n);
            },
            emscripten_glUniform1f: function(e, t) {
                Sr.uniform1f(ir(e), t);
            },
            emscripten_glUniform1fv: function(e, t, r) {
                if (Xt.currentContext.version >= 2) Sr.uniform1fv(ir(e), U, r >> 2, t);
                else {
                    if (t <= 288) for(var n = dr[t - 1], o = 0; o < t; ++o)n[o] = U[r + 4 * o >> 2];
                    else n = U.subarray(r >> 2, r + 4 * t >> 2);
                    Sr.uniform1fv(ir(e), n);
                }
            },
            emscripten_glUniform1i: function(e, t) {
                Sr.uniform1i(ir(e), t);
            },
            emscripten_glUniform1iv: function(e, t, r) {
                if (Xt.currentContext.version >= 2) Sr.uniform1iv(ir(e), I, r >> 2, t);
                else {
                    if (t <= 288) for(var n = fr[t - 1], o = 0; o < t; ++o)n[o] = I[r + 4 * o >> 2];
                    else n = I.subarray(r >> 2, r + 4 * t >> 2);
                    Sr.uniform1iv(ir(e), n);
                }
            },
            emscripten_glUniform1ui: function(e, t) {
                Sr.uniform1ui(ir(e), t);
            },
            emscripten_glUniform1uiv: function(e, t, r) {
                Sr.uniform1uiv(ir(e), O, r >> 2, t);
            },
            emscripten_glUniform2f: function(e, t, r) {
                Sr.uniform2f(ir(e), t, r);
            },
            emscripten_glUniform2fv: function(e, t, r) {
                if (Xt.currentContext.version >= 2) Sr.uniform2fv(ir(e), U, r >> 2, 2 * t);
                else {
                    if (t <= 144) for(var n = dr[2 * t - 1], o = 0; o < 2 * t; o += 2)n[o] = U[r + 4 * o >> 2], n[o + 1] = U[r + (4 * o + 4) >> 2];
                    else n = U.subarray(r >> 2, r + 8 * t >> 2);
                    Sr.uniform2fv(ir(e), n);
                }
            },
            emscripten_glUniform2i: function(e, t, r) {
                Sr.uniform2i(ir(e), t, r);
            },
            emscripten_glUniform2iv: function(e, t, r) {
                if (Xt.currentContext.version >= 2) Sr.uniform2iv(ir(e), I, r >> 2, 2 * t);
                else {
                    if (t <= 144) for(var n = fr[2 * t - 1], o = 0; o < 2 * t; o += 2)n[o] = I[r + 4 * o >> 2], n[o + 1] = I[r + (4 * o + 4) >> 2];
                    else n = I.subarray(r >> 2, r + 8 * t >> 2);
                    Sr.uniform2iv(ir(e), n);
                }
            },
            emscripten_glUniform2ui: function(e, t, r) {
                Sr.uniform2ui(ir(e), t, r);
            },
            emscripten_glUniform2uiv: function(e, t, r) {
                Sr.uniform2uiv(ir(e), O, r >> 2, 2 * t);
            },
            emscripten_glUniform3f: function(e, t, r, n) {
                Sr.uniform3f(ir(e), t, r, n);
            },
            emscripten_glUniform3fv: function(e, t, r) {
                if (Xt.currentContext.version >= 2) Sr.uniform3fv(ir(e), U, r >> 2, 3 * t);
                else {
                    if (t <= 96) for(var n = dr[3 * t - 1], o = 0; o < 3 * t; o += 3)n[o] = U[r + 4 * o >> 2], n[o + 1] = U[r + (4 * o + 4) >> 2], n[o + 2] = U[r + (4 * o + 8) >> 2];
                    else n = U.subarray(r >> 2, r + 12 * t >> 2);
                    Sr.uniform3fv(ir(e), n);
                }
            },
            emscripten_glUniform3i: function(e, t, r, n) {
                Sr.uniform3i(ir(e), t, r, n);
            },
            emscripten_glUniform3iv: function(e, t, r) {
                if (Xt.currentContext.version >= 2) Sr.uniform3iv(ir(e), I, r >> 2, 3 * t);
                else {
                    if (t <= 96) for(var n = fr[3 * t - 1], o = 0; o < 3 * t; o += 3)n[o] = I[r + 4 * o >> 2], n[o + 1] = I[r + (4 * o + 4) >> 2], n[o + 2] = I[r + (4 * o + 8) >> 2];
                    else n = I.subarray(r >> 2, r + 12 * t >> 2);
                    Sr.uniform3iv(ir(e), n);
                }
            },
            emscripten_glUniform3ui: function(e, t, r, n) {
                Sr.uniform3ui(ir(e), t, r, n);
            },
            emscripten_glUniform3uiv: function(e, t, r) {
                Sr.uniform3uiv(ir(e), O, r >> 2, 3 * t);
            },
            emscripten_glUniform4f: function(e, t, r, n, o) {
                Sr.uniform4f(ir(e), t, r, n, o);
            },
            emscripten_glUniform4fv: function(e, t, r) {
                if (Xt.currentContext.version >= 2) Sr.uniform4fv(ir(e), U, r >> 2, 4 * t);
                else {
                    if (t <= 72) {
                        var n = dr[4 * t - 1], o = U;
                        r >>= 2;
                        for(var i = 0; i < 4 * t; i += 4){
                            var a = r + i;
                            n[i] = o[a], n[i + 1] = o[a + 1], n[i + 2] = o[a + 2], n[i + 3] = o[a + 3];
                        }
                    } else n = U.subarray(r >> 2, r + 16 * t >> 2);
                    Sr.uniform4fv(ir(e), n);
                }
            },
            emscripten_glUniform4i: function(e, t, r, n, o) {
                Sr.uniform4i(ir(e), t, r, n, o);
            },
            emscripten_glUniform4iv: function(e, t, r) {
                if (Xt.currentContext.version >= 2) Sr.uniform4iv(ir(e), I, r >> 2, 4 * t);
                else {
                    if (t <= 72) for(var n = fr[4 * t - 1], o = 0; o < 4 * t; o += 4)n[o] = I[r + 4 * o >> 2], n[o + 1] = I[r + (4 * o + 4) >> 2], n[o + 2] = I[r + (4 * o + 8) >> 2], n[o + 3] = I[r + (4 * o + 12) >> 2];
                    else n = I.subarray(r >> 2, r + 16 * t >> 2);
                    Sr.uniform4iv(ir(e), n);
                }
            },
            emscripten_glUniform4ui: function(e, t, r, n, o) {
                Sr.uniform4ui(ir(e), t, r, n, o);
            },
            emscripten_glUniform4uiv: function(e, t, r) {
                Sr.uniform4uiv(ir(e), O, r >> 2, 4 * t);
            },
            emscripten_glUniformBlockBinding: function(e, t, r) {
                e = Xt.programs[e], Sr.uniformBlockBinding(e, t, r);
            },
            emscripten_glUniformMatrix2fv: function(e, t, r, n) {
                if (Xt.currentContext.version >= 2) Sr.uniformMatrix2fv(ir(e), !!r, U, n >> 2, 4 * t);
                else {
                    if (t <= 72) for(var o = dr[4 * t - 1], i = 0; i < 4 * t; i += 4)o[i] = U[n + 4 * i >> 2], o[i + 1] = U[n + (4 * i + 4) >> 2], o[i + 2] = U[n + (4 * i + 8) >> 2], o[i + 3] = U[n + (4 * i + 12) >> 2];
                    else o = U.subarray(n >> 2, n + 16 * t >> 2);
                    Sr.uniformMatrix2fv(ir(e), !!r, o);
                }
            },
            emscripten_glUniformMatrix2x3fv: function(e, t, r, n) {
                Sr.uniformMatrix2x3fv(ir(e), !!r, U, n >> 2, 6 * t);
            },
            emscripten_glUniformMatrix2x4fv: function(e, t, r, n) {
                Sr.uniformMatrix2x4fv(ir(e), !!r, U, n >> 2, 8 * t);
            },
            emscripten_glUniformMatrix3fv: function(e, t, r, n) {
                if (Xt.currentContext.version >= 2) Sr.uniformMatrix3fv(ir(e), !!r, U, n >> 2, 9 * t);
                else {
                    if (t <= 32) for(var o = dr[9 * t - 1], i = 0; i < 9 * t; i += 9)o[i] = U[n + 4 * i >> 2], o[i + 1] = U[n + (4 * i + 4) >> 2], o[i + 2] = U[n + (4 * i + 8) >> 2], o[i + 3] = U[n + (4 * i + 12) >> 2], o[i + 4] = U[n + (4 * i + 16) >> 2], o[i + 5] = U[n + (4 * i + 20) >> 2], o[i + 6] = U[n + (4 * i + 24) >> 2], o[i + 7] = U[n + (4 * i + 28) >> 2], o[i + 8] = U[n + (4 * i + 32) >> 2];
                    else o = U.subarray(n >> 2, n + 36 * t >> 2);
                    Sr.uniformMatrix3fv(ir(e), !!r, o);
                }
            },
            emscripten_glUniformMatrix3x2fv: function(e, t, r, n) {
                Sr.uniformMatrix3x2fv(ir(e), !!r, U, n >> 2, 6 * t);
            },
            emscripten_glUniformMatrix3x4fv: function(e, t, r, n) {
                Sr.uniformMatrix3x4fv(ir(e), !!r, U, n >> 2, 12 * t);
            },
            emscripten_glUniformMatrix4fv: function(e, t, r, n) {
                if (Xt.currentContext.version >= 2) Sr.uniformMatrix4fv(ir(e), !!r, U, n >> 2, 16 * t);
                else {
                    if (t <= 18) {
                        var o = dr[16 * t - 1], i = U;
                        n >>= 2;
                        for(var a = 0; a < 16 * t; a += 16){
                            var s = n + a;
                            o[a] = i[s], o[a + 1] = i[s + 1], o[a + 2] = i[s + 2], o[a + 3] = i[s + 3], o[a + 4] = i[s + 4], o[a + 5] = i[s + 5], o[a + 6] = i[s + 6], o[a + 7] = i[s + 7], o[a + 8] = i[s + 8], o[a + 9] = i[s + 9], o[a + 10] = i[s + 10], o[a + 11] = i[s + 11], o[a + 12] = i[s + 12], o[a + 13] = i[s + 13], o[a + 14] = i[s + 14], o[a + 15] = i[s + 15];
                        }
                    } else o = U.subarray(n >> 2, n + 64 * t >> 2);
                    Sr.uniformMatrix4fv(ir(e), !!r, o);
                }
            },
            emscripten_glUniformMatrix4x2fv: function(e, t, r, n) {
                Sr.uniformMatrix4x2fv(ir(e), !!r, U, n >> 2, 8 * t);
            },
            emscripten_glUniformMatrix4x3fv: function(e, t, r, n) {
                Sr.uniformMatrix4x3fv(ir(e), !!r, U, n >> 2, 12 * t);
            },
            emscripten_glUseProgram: function(e) {
                e = Xt.programs[e], Sr.useProgram(e), Sr.currentProgram = e;
            },
            emscripten_glValidateProgram: function(e) {
                Sr.validateProgram(Xt.programs[e]);
            },
            emscripten_glVertexAttrib1f: function(e, t) {
                Sr.vertexAttrib1f(e, t);
            },
            emscripten_glVertexAttrib1fv: function(e, t) {
                Sr.vertexAttrib1f(e, U[t >> 2]);
            },
            emscripten_glVertexAttrib2f: function(e, t, r) {
                Sr.vertexAttrib2f(e, t, r);
            },
            emscripten_glVertexAttrib2fv: function(e, t) {
                Sr.vertexAttrib2f(e, U[t >> 2], U[t + 4 >> 2]);
            },
            emscripten_glVertexAttrib3f: function(e, t, r, n) {
                Sr.vertexAttrib3f(e, t, r, n);
            },
            emscripten_glVertexAttrib3fv: function(e, t) {
                Sr.vertexAttrib3f(e, U[t >> 2], U[t + 4 >> 2], U[t + 8 >> 2]);
            },
            emscripten_glVertexAttrib4f: function(e, t, r, n, o) {
                Sr.vertexAttrib4f(e, t, r, n, o);
            },
            emscripten_glVertexAttrib4fv: function(e, t) {
                Sr.vertexAttrib4f(e, U[t >> 2], U[t + 4 >> 2], U[t + 8 >> 2], U[t + 12 >> 2]);
            },
            emscripten_glVertexAttribDivisor: function(e, t) {
                Sr.vertexAttribDivisor(e, t);
            },
            emscripten_glVertexAttribDivisorANGLE: function(e, t) {
                Sr.vertexAttribDivisor(e, t);
            },
            emscripten_glVertexAttribDivisorARB: function(e, t) {
                Sr.vertexAttribDivisor(e, t);
            },
            emscripten_glVertexAttribDivisorEXT: function(e, t) {
                Sr.vertexAttribDivisor(e, t);
            },
            emscripten_glVertexAttribDivisorNV: function(e, t) {
                Sr.vertexAttribDivisor(e, t);
            },
            emscripten_glVertexAttribI4i: function(e, t, r, n, o) {
                Sr.vertexAttribI4i(e, t, r, n, o);
            },
            emscripten_glVertexAttribI4iv: function(e, t) {
                Sr.vertexAttribI4i(e, I[t >> 2], I[t + 4 >> 2], I[t + 8 >> 2], I[t + 12 >> 2]);
            },
            emscripten_glVertexAttribI4ui: function(e, t, r, n, o) {
                Sr.vertexAttribI4ui(e, t, r, n, o);
            },
            emscripten_glVertexAttribI4uiv: function(e, t) {
                Sr.vertexAttribI4ui(e, O[t >> 2], O[t + 4 >> 2], O[t + 8 >> 2], O[t + 12 >> 2]);
            },
            emscripten_glVertexAttribIPointer: function(e, t, r, n, o) {
                Sr.vertexAttribIPointer(e, t, r, n, o);
            },
            emscripten_glVertexAttribPointer: function(e, t, r, n, o, i) {
                Sr.vertexAttribPointer(e, t, r, !!n, o, i);
            },
            emscripten_glViewport: function(e, t, r, n) {
                Sr.viewport(e, t, r, n);
            },
            emscripten_glWaitSync: function(e, t, r, n) {
                Sr.waitSync(Xt.syncs[e], t, Yt(r, n));
            },
            emscripten_memcpy_big: function(e, t, r) {
                B.copyWithin(e, t, t + r);
            },
            emscripten_resize_heap: function(e) {
                var t, r = B.length, n = 2147483648;
                if ((e >>>= 0) > n) return !1;
                for(var o = 1; o <= 4; o *= 2){
                    var i = r * (1 + .2 / o);
                    if (i = Math.min(i, e + 100663296), mr(Math.min(n, (t = Math.max(e, i)) + (65536 - t % 65536) % 65536))) return !0;
                }
                return !1;
            },
            emscripten_ubq_codec_createDecoder: function(e, t, r, n, i, a, s, u, c) {
                const l = o.UTF8ToString(e, e + t), d = o.HEAPU8.subarray(a, a + s), f = o.HEAPU32.subarray(u / 4, u / 4 + c), m = o.emscripten_ubq_codec_decoderNextHandle++, p = [];
                for(let e = 0; e < c; e++)p[e] = Xt.textures[f[e]];
                const h = {
                    codec: l,
                    codedWidth: r,
                    codedHeight: n,
                    description: new Uint8Array(d)
                };
                try {
                    const e = o.emscripten_ubq_codec_createVideoDecoder(p);
                    e.configure(h), e.numberOfFrames = i, o.emscripten_ubq_codec_decoders.set(m, {
                        videoDecoder: e,
                        decoderConfig: h,
                        textures: p
                    });
                } catch  {
                    return 0;
                }
                return m;
            },
            emscripten_ubq_codec_createEncoder: function(e, t, r, n, i) {
                const a = o.UTF8ToString(e, e + t), s = o.emscripten_ubq_codec_encoderNextHandle++, u = o.specialHTMLTargets["!canvas"];
                u.width = r, u.height = n;
                const c = {
                    codec: a,
                    width: r,
                    height: n,
                    avc: {
                        format: "annexb"
                    },
                    fps: i
                };
                try {
                    const e = new VideoEncoder({
                        output: (e)=>{
                            const t = o._malloc(e.byteLength), r = o.HEAPU8.subarray(t, t + e.byteLength);
                            e.copyTo(r), o.emscripten_ubq_codec_muxChunk(s, t, e.byteLength), o._free(t);
                        },
                        error: (e)=>console.error(e)
                    });
                    e.configure(c), o.emscripten_ubq_codec_encoders.set(s, {
                        videoEncoder: e,
                        encoderConfig: c,
                        groupOfPictures: 150,
                        frameIndex: 0
                    });
                } catch  {
                    return 0;
                }
                return s;
            },
            emscripten_ubq_codec_decodeSample: function(e, t, r, n, i, a) {
                const s = o.emscripten_ubq_codec_decoders.get(e);
                "closed" === s.videoDecoder.state && (s.videoDecoder = o.emscripten_ubq_codec_createVideoDecoder(s.texture), s.videoDecoder.configure(s.decoderConfig));
                const u = s.videoDecoder, c = o.HEAPU8.subarray(i, i + a), l = new EncodedVideoChunk({
                    type: t ? "key" : "delta",
                    timestamp: r,
                    duration: n,
                    data: c
                });
                try {
                    u.decode(l);
                } catch (e) {
                    return console.error(e), !1;
                }
                return !0;
            },
            emscripten_ubq_codec_destroyDecoder: function(e) {
                o.emscripten_ubq_codec_decoders.get(e).videoDecoder.close(), o.emscripten_ubq_codec_decoders.delete(e);
            },
            emscripten_ubq_codec_destroyEncoder: function(e) {
                o.emscripten_ubq_codec_encoders.get(e).videoEncoder.close(), o.emscripten_ubq_codec_encoders.delete(e);
            },
            emscripten_ubq_codec_encodeFrame: function(e, t, r) {
                const n = o.emscripten_ubq_codec_encoders.get(e), i = 1e6 * n.frameIndex / n.encoderConfig.fps, a = n.frameIndex % n.groupOfPictures == 0, s = o.specialHTMLTargets["!canvas"], u = new VideoFrame(s, {
                    timestamp: i
                });
                n.videoEncoder.encode(u, {
                    keyFrame: a
                }), u.close(), n.frameIndex++;
            },
            emscripten_ubq_codec_finalizeEncoding: async function(e) {
                var t = o.emscripten_ubq_codec_getOnFinalizedEncodingCallback();
                const r = o.emscripten_ubq_codec_encoders.get(e);
                await r.videoEncoder.flush(), t.invoke();
            },
            emscripten_ubq_codec_flushDecoder: async function(e) {
                const t = o.emscripten_ubq_codec_decoders.get(e).videoDecoder;
                await t.flush(), t.decodedFrames = 0;
            },
            emscripten_ubq_codec_getNumberOfDecodedFrames: function(e) {
                return o.emscripten_ubq_codec_decoders.get(e).videoDecoder.decodedFrames;
            },
            emscripten_ubq_codec_isSupported: function() {
                return "undefined" != typeof VideoFrame && "undefined" != typeof VideoDecoder && "undefined" != typeof VideoEncoder;
            },
            emscripten_ubq_codec_startProbing: function(e) {
                const t = o.emscripten_ubq_codec_decoders.get(e).videoDecoder;
                t.decodedFrames = 0, t.probing = !0;
            },
            emscripten_ubq_codec_stopProbing: function(e) {
                const t = o.emscripten_ubq_codec_decoders.get(e).videoDecoder;
                t.probing = !1, t.decodedFrames = 0;
            },
            emscripten_ubq_codec_testAndClearTextureUpdateFlag: function(e) {
                const t = o.emscripten_ubq_codec_decoders.get(e), r = !0 === t.videoDecoder.textureUploadFlag;
                return t.videoDecoder.textureUploadFlag = !1, r;
            },
            emscripten_ubq_fetch_allocateFetchResult: function(e) {
                if (o.emscripten_ubq_asyncFetchStates.has(e)) {
                    const t = o.emscripten_ubq_asyncFetchStates.get(e);
                    if (2 == t.state) return !0;
                    if (1 == t.state) {
                        const r = t.result.length, n = o._malloc(r);
                        return o.HEAPU8.set(t.result, n), t.resultAddress = n, t.resultLength = r, t.state = 2, o.emscripten_ubq_asyncFetchStates.set(e, t), !0;
                    }
                }
                return !1;
            },
            emscripten_ubq_fetch_createHeader: function(e, t, r, n) {
                let i = o.UTF8ToString(e, t), a = o.UTF8ToString(r, n), s = o.emscripten_ubq_asyncFetchNextHeaderHandle++;
                return o.emscripten_ubq_asyncFetchHeaders.set(s, {
                    key: i,
                    value: a
                }), s;
            },
            emscripten_ubq_fetch_deleteHeader: function(e) {
                return o.emscripten_ubq_asyncFetchHeaders.has(e) ? o.emscripten_ubq_asyncFetchHeaders.get(e) : 0;
            },
            emscripten_ubq_fetch_dispatchAsyncFetch: function(e, t, r, n, a, s, u, c, l) {
                let d = o.UTF8ToString(t, r), f = o.UTF8ToString(c, l), m = o.emscripten_ubq_asyncFetchNextHandle++;
                o.emscripten_ubq_asyncFetchStates.set(m, {
                    state: 0
                });
                let p = {};
                for(let e = 0; e < a; e++){
                    const t = o.getValue(n + 4 * e, "i32"), r = o.emscripten_ubq_asyncFetchHeaders.get(t);
                    p[r.key] = r.value;
                }
                const h = i[e];
                let g;
                return "GET" !== h && "HEAD" !== h && (g = new Uint8Array(o.HEAPU8.buffer, s, u)), fetch(d, {
                    method: h,
                    headers: p,
                    body: g,
                    mode: "cors",
                    credentials: f
                }).then((e)=>{
                    if (e.status >= 200 && e.status <= 209) {
                        let t = 0;
                        return e.headers.has("Content-Length") && (t = +e.headers.get("Content-Length")), o.emscripten_ubq_asyncFetchTotalBytes.set(m, t), async function(e, t) {
                            const r = e.getReader();
                            let n = 0, i = [];
                            for(;;){
                                const { done: e, value: t } = await r.read();
                                if (e) break;
                                i.push(t), n += t.length, o.emscripten_ubq_asyncFetchCompletedBytes.set(m, n);
                            }
                            let a = new Uint8Array(n), s = 0;
                            for (let e of i)a.set(e, s), s += e.length;
                            return a;
                        }(e.body);
                    }
                    return Promise.reject(e.statusText);
                }).then((e)=>{
                    o.emscripten_ubq_asyncFetchStates.set(m, {
                        state: 1,
                        result: e
                    });
                }).catch((e)=>{
                    o.emscripten_ubq_asyncFetchStates.set(m, {
                        state: 3,
                        error: e
                    });
                }), m;
            },
            emscripten_ubq_fetch_freeFetchResult: function(e) {
                return !!o.emscripten_ubq_asyncFetchStates.has(e) && (o.emscripten_ubq_asyncFetchStates.delete(e), !0);
            },
            emscripten_ubq_fetch_getFetchCompletedBytes: function(e) {
                return o.emscripten_ubq_asyncFetchCompletedBytes.has(e) ? o.emscripten_ubq_asyncFetchCompletedBytes.get(e) : 0;
            },
            emscripten_ubq_fetch_getFetchResultAddress: function(e) {
                if (o.emscripten_ubq_asyncFetchStates.has(e)) {
                    const t = o.emscripten_ubq_asyncFetchStates.get(e);
                    if (2 == t.state) return t.resultAddress;
                }
                return -1;
            },
            emscripten_ubq_fetch_getFetchResultLength: function(e) {
                if (o.emscripten_ubq_asyncFetchStates.has(e)) {
                    const t = o.emscripten_ubq_asyncFetchStates.get(e);
                    if (2 == t.state) return t.resultLength;
                }
                return -1;
            },
            emscripten_ubq_fetch_getFetchState: function(e) {
                return o.emscripten_ubq_asyncFetchStates.has(e) ? o.emscripten_ubq_asyncFetchStates.get(e).state : -1;
            },
            emscripten_ubq_fetch_getFetchTotalBytes: function(e) {
                return o.emscripten_ubq_asyncFetchTotalBytes.has(e) ? o.emscripten_ubq_asyncFetchTotalBytes.get(e) : 0;
            },
            emscripten_webgl_create_context: function(e, t) {
                return vr(e, t);
            },
            emscripten_webgl_destroy_context: function(e) {
                Xt.currentContext == e && (Xt.currentContext = 0), Xt.deleteContext(e);
            },
            emscripten_webgl_init_context_attributes: function(e) {
                for(var t = e >> 2, r = 0; r < 14; ++r)I[t + r] = 0;
                I[t + 0] = I[t + 1] = I[t + 3] = I[t + 4] = I[t + 8] = I[t + 10] = 1;
            },
            emscripten_webgl_make_context_current: function(e) {
                return Xt.makeContextCurrent(e) ? 0 : -5;
            },
            environ_get: function(e, t) {
                var r = 0;
                return br().forEach(function(n, o) {
                    var i = t + r;
                    I[e + 4 * o >> 2] = i, function(e, t, r) {
                        for(var n = 0; n < e.length; ++n)j[t++ >> 0] = e.charCodeAt(n);
                        j[t >> 0] = 0;
                    }(n, i), r += n.length + 1;
                }), 0;
            },
            environ_sizes_get: function(e, t) {
                var r = br();
                I[e >> 2] = r.length;
                var n = 0;
                return r.forEach(function(e) {
                    n += e.length + 1;
                }), I[t >> 2] = n, 0;
            },
            exit: Vt,
            fd_close: function(e) {
                try {
                    var t = Ae.getStreamFromFD(e);
                    return Te.close(t), 0;
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return e.errno;
                }
            },
            fd_pread: function(e, t, r, n, o, i) {
                try {
                    var a = Ae.getStreamFromFD(e), s = Ae.doReadv(a, t, r, n);
                    return I[i >> 2] = s, 0;
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return e.errno;
                }
            },
            fd_read: function(e, t, r, n) {
                try {
                    var o = Ae.getStreamFromFD(e), i = Ae.doReadv(o, t, r);
                    return I[n >> 2] = i, 0;
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return e.errno;
                }
            },
            fd_seek: function(e, t, r, n, o) {
                try {
                    var i = Ae.getStreamFromFD(e), a = 4294967296 * r + (t >>> 0), s = 9007199254740992;
                    return a <= -s || a >= s ? -61 : (Te.llseek(i, a, n), ue = [
                        i.position >>> 0,
                        (se = i.position, +Math.abs(se) >= 1 ? se > 0 ? (0 | Math.min(+Math.floor(se / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((se - +(~~se >>> 0)) / 4294967296) >>> 0 : 0)
                    ], I[o >> 2] = ue[0], I[o + 4 >> 2] = ue[1], i.getdents && 0 === a && 0 === n && (i.getdents = null), 0);
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return e.errno;
                }
            },
            fd_write: function(e, t, r, n) {
                try {
                    var o = Ae.getStreamFromFD(e), i = Ae.doWritev(o, t, r);
                    return I[n >> 2] = i, 0;
                } catch (e) {
                    if (void 0 === Te || !(e instanceof Te.ErrnoError)) throw e;
                    return e.errno;
                }
            },
            getTempRet0: function() {
                return _;
            },
            gettimeofday: function(e) {
                var t = Date.now();
                return I[e >> 2] = t / 1e3 | 0, I[e + 4 >> 2] = t % 1e3 * 1e3 | 0, 0;
            },
            invoke_ii: function(e, t) {
                var r = Ur();
                try {
                    return be(e)(t);
                } catch (e) {
                    if (qr(r), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_iii: function(e, t, r) {
                var n = Ur();
                try {
                    return be(e)(t, r);
                } catch (e) {
                    if (qr(n), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_iiii: function(e, t, r, n) {
                var o = Ur();
                try {
                    return be(e)(t, r, n);
                } catch (e) {
                    if (qr(o), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_iiiii: function(e, t, r, n, o) {
                var i = Ur();
                try {
                    return be(e)(t, r, n, o);
                } catch (e) {
                    if (qr(i), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_iiiiii: function(e, t, r, n, o, i) {
                var a = Ur();
                try {
                    return be(e)(t, r, n, o, i);
                } catch (e) {
                    if (qr(a), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_iiiiiii: function(e, t, r, n, o, i, a) {
                var s = Ur();
                try {
                    return be(e)(t, r, n, o, i, a);
                } catch (e) {
                    if (qr(s), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_v: function(e) {
                var t = Ur();
                try {
                    be(e)();
                } catch (e) {
                    if (qr(t), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_vi: function(e, t) {
                var r = Ur();
                try {
                    be(e)(t);
                } catch (e) {
                    if (qr(r), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_vii: function(e, t, r) {
                var n = Ur();
                try {
                    be(e)(t, r);
                } catch (e) {
                    if (qr(n), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_viii: function(e, t, r, n) {
                var o = Ur();
                try {
                    be(e)(t, r, n);
                } catch (e) {
                    if (qr(o), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_viiii: function(e, t, r, n, o) {
                var i = Ur();
                try {
                    be(e)(t, r, n, o);
                } catch (e) {
                    if (qr(i), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_viiiii: function(e, t, r, n, o, i) {
                var a = Ur();
                try {
                    be(e)(t, r, n, o, i);
                } catch (e) {
                    if (qr(a), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_viiiiii: function(e, t, r, n, o, i, a) {
                var s = Ur();
                try {
                    be(e)(t, r, n, o, i, a);
                } catch (e) {
                    if (qr(s), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            invoke_viiiiiiiii: function(e, t, r, n, o, i, a, s, u, c) {
                var l = Ur();
                try {
                    be(e)(t, r, n, o, i, a, s, u, c);
                } catch (e) {
                    if (qr(l), e !== e + 0) throw e;
                    Or(1, 0);
                }
            },
            setTempRet0: function(e) {
                _ = e;
            },
            strftime_l: function(e, t, r, n) {
                return function(e, t, r, n) {
                    var o = I[n + 40 >> 2], i = {
                        tm_sec: I[n >> 2],
                        tm_min: I[n + 4 >> 2],
                        tm_hour: I[n + 8 >> 2],
                        tm_mday: I[n + 12 >> 2],
                        tm_mon: I[n + 16 >> 2],
                        tm_year: I[n + 20 >> 2],
                        tm_wday: I[n + 24 >> 2],
                        tm_yday: I[n + 28 >> 2],
                        tm_isdst: I[n + 32 >> 2],
                        tm_gmtoff: I[n + 36 >> 2],
                        tm_zone: o ? A(o) : ""
                    }, a = A(r), s = {
                        "%c": "%a %b %d %H:%M:%S %Y",
                        "%D": "%m/%d/%y",
                        "%F": "%Y-%m-%d",
                        "%h": "%b",
                        "%r": "%I:%M:%S %p",
                        "%R": "%H:%M",
                        "%T": "%H:%M:%S",
                        "%x": "%m/%d/%y",
                        "%X": "%H:%M:%S",
                        "%Ec": "%c",
                        "%EC": "%C",
                        "%Ex": "%m/%d/%y",
                        "%EX": "%H:%M:%S",
                        "%Ey": "%y",
                        "%EY": "%Y",
                        "%Od": "%d",
                        "%Oe": "%e",
                        "%OH": "%H",
                        "%OI": "%I",
                        "%Om": "%m",
                        "%OM": "%M",
                        "%OS": "%S",
                        "%Ou": "%u",
                        "%OU": "%U",
                        "%OV": "%V",
                        "%Ow": "%w",
                        "%OW": "%W",
                        "%Oy": "%y"
                    };
                    for(var u in s)a = a.replace(new RegExp(u, "g"), s[u]);
                    var c = [
                        "Sunday",
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday"
                    ], l = [
                        "January",
                        "February",
                        "March",
                        "April",
                        "May",
                        "June",
                        "July",
                        "August",
                        "September",
                        "October",
                        "November",
                        "December"
                    ];
                    function d(e, t, r) {
                        for(var n = "number" == typeof e ? e.toString() : e || ""; n.length < t;)n = r[0] + n;
                        return n;
                    }
                    function f(e, t) {
                        return d(e, t, "0");
                    }
                    function m(e, t) {
                        function r(e) {
                            return e < 0 ? -1 : e > 0 ? 1 : 0;
                        }
                        var n;
                        return 0 === (n = r(e.getFullYear() - t.getFullYear())) && 0 === (n = r(e.getMonth() - t.getMonth())) && (n = r(e.getDate() - t.getDate())), n;
                    }
                    function p(e) {
                        switch(e.getDay()){
                            case 0:
                                return new Date(e.getFullYear() - 1, 11, 29);
                            case 1:
                                return e;
                            case 2:
                                return new Date(e.getFullYear(), 0, 3);
                            case 3:
                                return new Date(e.getFullYear(), 0, 2);
                            case 4:
                                return new Date(e.getFullYear(), 0, 1);
                            case 5:
                                return new Date(e.getFullYear() - 1, 11, 31);
                            case 6:
                                return new Date(e.getFullYear() - 1, 11, 30);
                        }
                    }
                    function h(e) {
                        var t = kr(new Date(e.tm_year + 1900, 0, 1), e.tm_yday), r = new Date(t.getFullYear(), 0, 4), n = new Date(t.getFullYear() + 1, 0, 4), o = p(r), i = p(n);
                        return m(o, t) <= 0 ? m(i, t) <= 0 ? t.getFullYear() + 1 : t.getFullYear() : t.getFullYear() - 1;
                    }
                    var g = {
                        "%a": function(e) {
                            return c[e.tm_wday].substring(0, 3);
                        },
                        "%A": function(e) {
                            return c[e.tm_wday];
                        },
                        "%b": function(e) {
                            return l[e.tm_mon].substring(0, 3);
                        },
                        "%B": function(e) {
                            return l[e.tm_mon];
                        },
                        "%C": function(e) {
                            return f((e.tm_year + 1900) / 100 | 0, 2);
                        },
                        "%d": function(e) {
                            return f(e.tm_mday, 2);
                        },
                        "%e": function(e) {
                            return d(e.tm_mday, 2, " ");
                        },
                        "%g": function(e) {
                            return h(e).toString().substring(2);
                        },
                        "%G": function(e) {
                            return h(e);
                        },
                        "%H": function(e) {
                            return f(e.tm_hour, 2);
                        },
                        "%I": function(e) {
                            var t = e.tm_hour;
                            return 0 == t ? t = 12 : t > 12 && (t -= 12), f(t, 2);
                        },
                        "%j": function(e) {
                            return f(e.tm_mday + wr(_r(e.tm_year + 1900) ? Er : xr, e.tm_mon - 1), 3);
                        },
                        "%m": function(e) {
                            return f(e.tm_mon + 1, 2);
                        },
                        "%M": function(e) {
                            return f(e.tm_min, 2);
                        },
                        "%n": function() {
                            return "\n";
                        },
                        "%p": function(e) {
                            return e.tm_hour >= 0 && e.tm_hour < 12 ? "AM" : "PM";
                        },
                        "%S": function(e) {
                            return f(e.tm_sec, 2);
                        },
                        "%t": function() {
                            return "\t";
                        },
                        "%u": function(e) {
                            return e.tm_wday || 7;
                        },
                        "%U": function(e) {
                            var t = new Date(e.tm_year + 1900, 0, 1), r = 0 === t.getDay() ? t : kr(t, 7 - t.getDay()), n = new Date(e.tm_year + 1900, e.tm_mon, e.tm_mday);
                            if (m(r, n) < 0) {
                                var o = wr(_r(n.getFullYear()) ? Er : xr, n.getMonth() - 1) - 31, i = 31 - r.getDate() + o + n.getDate();
                                return f(Math.ceil(i / 7), 2);
                            }
                            return 0 === m(r, t) ? "01" : "00";
                        },
                        "%V": function(e) {
                            var t, r = new Date(e.tm_year + 1900, 0, 4), n = new Date(e.tm_year + 1901, 0, 4), o = p(r), i = p(n), a = kr(new Date(e.tm_year + 1900, 0, 1), e.tm_yday);
                            return m(a, o) < 0 ? "53" : m(i, a) <= 0 ? "01" : (t = o.getFullYear() < e.tm_year + 1900 ? e.tm_yday + 32 - o.getDate() : e.tm_yday + 1 - o.getDate(), f(Math.ceil(t / 7), 2));
                        },
                        "%w": function(e) {
                            return e.tm_wday;
                        },
                        "%W": function(e) {
                            var t = new Date(e.tm_year, 0, 1), r = 1 === t.getDay() ? t : kr(t, 0 === t.getDay() ? 1 : 7 - t.getDay() + 1), n = new Date(e.tm_year + 1900, e.tm_mon, e.tm_mday);
                            if (m(r, n) < 0) {
                                var o = wr(_r(n.getFullYear()) ? Er : xr, n.getMonth() - 1) - 31, i = 31 - r.getDate() + o + n.getDate();
                                return f(Math.ceil(i / 7), 2);
                            }
                            return 0 === m(r, t) ? "01" : "00";
                        },
                        "%y": function(e) {
                            return (e.tm_year + 1900).toString().substring(2);
                        },
                        "%Y": function(e) {
                            return e.tm_year + 1900;
                        },
                        "%z": function(e) {
                            var t = e.tm_gmtoff, r = t >= 0;
                            return t = (t = Math.abs(t) / 60) / 60 * 100 + t % 60, (r ? "+" : "-") + String("0000" + t).slice(-4);
                        },
                        "%Z": function(e) {
                            return e.tm_zone;
                        },
                        "%%": function() {
                            return "%";
                        }
                    };
                    for(var u in a = a.replace(/%%/g, "\0\0"), g)a.includes(u) && (a = a.replace(new RegExp(u, "g"), g[u](i)));
                    var v = Pr(a = a.replace(/\0\0/g, "%"), !1);
                    return v.length > t ? 0 : (function(e, t) {
                        j.set(e, t);
                    }(v, e), v.length - 1);
                }(e, t, r, n);
            },
            time: function(e) {
                var t = Date.now() / 1e3 | 0;
                return e && (I[e >> 2] = t), t;
            }
        }, jr = (function() {
            var e = {
                env: Lr,
                wasi_snapshot_preview1: Lr
            };
            function t(e, t) {
                var r, n = e.exports;
                o.asm = n, Q((w = o.asm.memory).buffer), K = o.asm.__indirect_function_table, r = o.asm.__wasm_call_ctors, J.unshift(r), me();
            }
            function r(e) {
                t(e.instance);
            }
            function i(t) {
                return (b || !m && !p || "function" != typeof fetch ? Promise.resolve().then(function() {
                    return ge(ie);
                }) : fetch(ie, {
                    credentials: "same-origin"
                }).then(function(e) {
                    if (!e.ok) throw "failed to load wasm binary file at '" + ie + "'";
                    return e.arrayBuffer();
                }).catch(function() {
                    return ge(ie);
                })).then(function(t) {
                    return WebAssembly.instantiate(t, e);
                }).then(function(e) {
                    return e;
                }).then(t, function(e) {
                    v("failed to asynchronously prepare wasm: " + e), pe(e);
                });
            }
            if (fe(), o.instantiateWasm) try {
                return o.instantiateWasm(e, t);
            } catch (e) {
                return v("Module.instantiateWasm callback failed with error: " + e), !1;
            }
            (b || "function" != typeof WebAssembly.instantiateStreaming || he(ie) || "function" != typeof fetch ? i(r) : fetch(ie, {
                credentials: "same-origin"
            }).then(function(t) {
                return WebAssembly.instantiateStreaming(t, e).then(r, function(e) {
                    return v("wasm streaming compile failed: " + e), v("falling back to ArrayBuffer instantiation"), i(r);
                });
            })).catch(n);
        }(), o.___wasm_call_ctors = function() {
            return (o.___wasm_call_ctors = o.asm.__wasm_call_ctors).apply(null, arguments);
        }, o._malloc = function() {
            return (jr = o._malloc = o.asm.malloc).apply(null, arguments);
        }), Br = (o._main = function() {
            return (o._main = o.asm.main).apply(null, arguments);
        }, o._free = function() {
            return (Br = o._free = o.asm.free).apply(null, arguments);
        }), Mr = o.___errno_location = function() {
            return (Mr = o.___errno_location = o.asm.__errno_location).apply(null, arguments);
        }, Rr = (o._saveSetjmp = function() {
            return (o._saveSetjmp = o.asm.saveSetjmp).apply(null, arguments);
        }, o.___getTypeName = function() {
            return (Rr = o.___getTypeName = o.asm.__getTypeName).apply(null, arguments);
        }), Ir = (o.___embind_register_native_and_builtin_types = function() {
            return (o.___embind_register_native_and_builtin_types = o.asm.__embind_register_native_and_builtin_types).apply(null, arguments);
        }, o.___dl_seterr = function() {
            return (o.___dl_seterr = o.asm.__dl_seterr).apply(null, arguments);
        }, o._emscripten_main_thread_process_queued_calls = function() {
            return (o._emscripten_main_thread_process_queued_calls = o.asm.emscripten_main_thread_process_queued_calls).apply(null, arguments);
        }, o._emscripten_builtin_memalign = function() {
            return (Ir = o._emscripten_builtin_memalign = o.asm.emscripten_builtin_memalign).apply(null, arguments);
        }), Or = o._setThrew = function() {
            return (Or = o._setThrew = o.asm.setThrew).apply(null, arguments);
        }, Ur = o.stackSave = function() {
            return (Ur = o.stackSave = o.asm.stackSave).apply(null, arguments);
        }, qr = o.stackRestore = function() {
            return (qr = o.stackRestore = o.asm.stackRestore).apply(null, arguments);
        }, Gr = o.stackAlloc = function() {
            return (Gr = o.stackAlloc = o.asm.stackAlloc).apply(null, arguments);
        };
        function zr(e) {
            this.name = "ExitStatus", this.message = "Program terminated with exit(" + e + ")", this.status = e;
        }
        function Vr(e) {
            function r() {
                Dr || (Dr = !0, o.calledRun = !0, k || (o.noFSInit || Te.init.initialized || Te.init(), Te.ignorePermissions = !1, Se.init(), ve(J), ve(ee), t(o), o.onRuntimeInitialized && o.onRuntimeInitialized(), Nr && function(e) {
                    var t = o._main, r = (e = e || []).length + 1, n = Gr(4 * (r + 1));
                    I[n >> 2] = Y(d);
                    for(var i = 1; i < r; i++)I[(n >> 2) + i] = Y(e[i - 1]);
                    I[(n >> 2) + r] = 0;
                    try {
                        Wr(t(r, n));
                    } catch (e) {
                        return _e(e);
                    }
                }(e), function() {
                    if (o.postRun) for("function" == typeof o.postRun && (o.postRun = [
                        o.postRun
                    ]); o.postRun.length;)e = o.postRun.shift(), re.unshift(e);
                    var e;
                    ve(re);
                }()));
            }
            e = e || l, ce > 0 || (function() {
                if (o.preRun) for("function" == typeof o.preRun && (o.preRun = [
                    o.preRun
                ]); o.preRun.length;)e = o.preRun.shift(), Z.unshift(e);
                var e;
                ve(Z);
            }(), ce > 0 || (o.setStatus ? (o.setStatus("Running..."), setTimeout(function() {
                setTimeout(function() {
                    o.setStatus("");
                }, 1), r();
            }, 1)) : r()));
        }
        function Wr(e, t) {
            var r;
            x = e, oe() || (ne = !0), x = r = e, oe() || (o.onExit && o.onExit(r), k = !0), f(r, new zr(r));
        }
        if (o.dynCall_jiiji = function() {
            return (o.dynCall_jiiji = o.asm.dynCall_jiiji).apply(null, arguments);
        }, o.dynCall_jj = function() {
            return (o.dynCall_jj = o.asm.dynCall_jj).apply(null, arguments);
        }, o.dynCall_iiij = function() {
            return (o.dynCall_iiij = o.asm.dynCall_iiij).apply(null, arguments);
        }, o.dynCall_jiiiji = function() {
            return (o.dynCall_jiiiji = o.asm.dynCall_jiiiji).apply(null, arguments);
        }, o.dynCall_ji = function() {
            return (o.dynCall_ji = o.asm.dynCall_ji).apply(null, arguments);
        }, o.dynCall_jij = function() {
            return (o.dynCall_jij = o.asm.dynCall_jij).apply(null, arguments);
        }, o.dynCall_iiiijii = function() {
            return (o.dynCall_iiiijii = o.asm.dynCall_iiiijii).apply(null, arguments);
        }, o.dynCall_ijiii = function() {
            return (o.dynCall_ijiii = o.asm.dynCall_ijiii).apply(null, arguments);
        }, o.dynCall_viiij = function() {
            return (o.dynCall_viiij = o.asm.dynCall_viiij).apply(null, arguments);
        }, o.dynCall_viji = function() {
            return (o.dynCall_viji = o.asm.dynCall_viji).apply(null, arguments);
        }, o.dynCall_vijiii = function() {
            return (o.dynCall_vijiii = o.asm.dynCall_vijiii).apply(null, arguments);
        }, o.dynCall_viiiiij = function() {
            return (o.dynCall_viiiiij = o.asm.dynCall_viiiiij).apply(null, arguments);
        }, o.dynCall_jiiiijiiiii = function() {
            return (o.dynCall_jiiiijiiiii = o.asm.dynCall_jiiiijiiiii).apply(null, arguments);
        }, o.dynCall_jii = function() {
            return (o.dynCall_jii = o.asm.dynCall_jii).apply(null, arguments);
        }, o.dynCall_iiiij = function() {
            return (o.dynCall_iiiij = o.asm.dynCall_iiiij).apply(null, arguments);
        }, o.dynCall_viij = function() {
            return (o.dynCall_viij = o.asm.dynCall_viij).apply(null, arguments);
        }, o.dynCall_iij = function() {
            return (o.dynCall_iij = o.asm.dynCall_iij).apply(null, arguments);
        }, o.dynCall_vij = function() {
            return (o.dynCall_vij = o.asm.dynCall_vij).apply(null, arguments);
        }, o.dynCall_jiiii = function() {
            return (o.dynCall_jiiii = o.asm.dynCall_jiiii).apply(null, arguments);
        }, o.dynCall_jiiiiii = function() {
            return (o.dynCall_jiiiiii = o.asm.dynCall_jiiiiii).apply(null, arguments);
        }, o.dynCall_jiiiiji = function() {
            return (o.dynCall_jiiiiji = o.asm.dynCall_jiiiiji).apply(null, arguments);
        }, o.dynCall_iijj = function() {
            return (o.dynCall_iijj = o.asm.dynCall_iijj).apply(null, arguments);
        }, o.dynCall_jiji = function() {
            return (o.dynCall_jiji = o.asm.dynCall_jiji).apply(null, arguments);
        }, o.dynCall_viijii = function() {
            return (o.dynCall_viijii = o.asm.dynCall_viijii).apply(null, arguments);
        }, o.dynCall_iiiiij = function() {
            return (o.dynCall_iiiiij = o.asm.dynCall_iiiiij).apply(null, arguments);
        }, o.dynCall_iiiiijj = function() {
            return (o.dynCall_iiiiijj = o.asm.dynCall_iiiiijj).apply(null, arguments);
        }, o.dynCall_iiiiiijj = function() {
            return (o.dynCall_iiiiiijj = o.asm.dynCall_iiiiiijj).apply(null, arguments);
        }, o.getValue = function(e, t = "i8", r) {
            switch("*" === t.charAt(t.length - 1) && (t = "i32"), t){
                case "i1":
                case "i8":
                    return j[e >> 0];
                case "i16":
                    return M[e >> 1];
                case "i32":
                case "i64":
                    return I[e >> 2];
                case "float":
                    return U[e >> 2];
                case "double":
                    return Number(q[e >> 3]);
                default:
                    pe("invalid type for getValue: " + t);
            }
            return null;
        }, o.UTF8ToString = A, o.addRunDependency = fe, o.removeRunDependency = me, o.FS_createPath = Te.createPath, o.FS_createDataFile = Te.createDataFile, o.FS_createPreloadedFile = Te.createPreloadedFile, o.FS_createLazyFile = Te.createLazyFile, o.FS_createDevice = Te.createDevice, o.FS_unlink = Te.unlink, o.specialHTMLTargets = gr, de = function e() {
            Dr || Vr(), Dr || (de = e);
        }, o.run = Vr, o.preInit) for("function" == typeof o.preInit && (o.preInit = [
            o.preInit
        ]); o.preInit.length > 0;)o.preInit.pop()();
        var Nr = !0;
        return o.noInitialRun && (Nr = !1), Vr(), e.ready;
    });
    const Ze = Ke;
    var Je = r(7984), et = r(2934);
    const tt = Ze, rt = (e, t)=>null != t ? [
            t,
            e.split("/").pop()
        ].join("") : new URL(e, window.location.origin);
    var nt, ot, it = function(e, t, r, n, o) {
        if ("m" === n) throw new TypeError("Private method is not writable");
        if ("a" === n && !o) throw new TypeError("Private accessor was defined without a setter");
        if ("function" == typeof t ? e !== t || !o : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return "a" === n ? o.call(e, r) : o ? o.value = r : t.set(e, r), r;
    }, at = function(e, t, r, n) {
        if ("a" === r && !n) throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
    };
    class st {
        constructor(e){
            nt.set(this, void 0), ot.set(this, void 0), it(this, nt, e, "f"), it(this, ot, new A(e), "f");
        }
        async loadFromString(e) {
            return ve("sceneContent", e, fe()), new Promise((t)=>{
                at(this, nt, "f").loadSceneFromString(e, (e)=>{
                    const r = F(e);
                    t(r);
                });
            });
        }
        async loadFromURL(e) {
            return ve("url", e, fe()), new Promise((t)=>{
                at(this, nt, "f").loadSceneFromURL(e, (e)=>{
                    const r = F(e);
                    t(r);
                });
            });
        }
        async saveToString() {
            return new Promise((e, t)=>{
                const r = this.get();
                null == r ? t(new Error("No scene available.")) : at(this, nt, "f").saveSceneToString(r, (t)=>{
                    const r = F(t);
                    e(r);
                });
            });
        }
        async saveToArchive() {
            return new Promise((e, t)=>{
                const r = this.get();
                null == r ? t(new Error("No scene available.")) : at(this, nt, "f").saveSceneToArchive(r, (r)=>{
                    "error" in r ? t(r.error) : e(new Blob([
                        r
                    ], {
                        type: _e.Zip
                    }));
                });
            });
        }
        create() {
            return F(at(this, nt, "f").createScene({
                layout: v.Free
            }));
        }
        createFromImage(e, t = 300, r = 1) {
            return ve("url", e, fe()), ve("dpi", t, pe(le(), 0)), ve("pixelScaleFactor", r, pe(le(), 0)), new Promise((n)=>{
                at(this, nt, "f").createSceneFromImage(e, t, r, v.Free, 0, !1, (e)=>{
                    const t = F(e);
                    n(t);
                });
            });
        }
        get() {
            const e = F(at(this, nt, "f").findByType(o.Scene)), t = P(e);
            return t.length > 0 ? t[0] : null;
        }
        async applyTemplateFromString(e) {
            return ve("content", e, fe()), new Promise((t)=>{
                at(this, nt, "f").applyTemplateFromString(e, (e)=>{
                    F(e), t();
                });
            });
        }
        async applyTemplateFromURL(e) {
            return ve("url", e, fe()), new Promise((t)=>{
                at(this, nt, "f").applyTemplateFromURL(e, (e)=>{
                    F(e), t();
                });
            });
        }
        setZoomLevel(e = 1) {
            const t = this.get();
            ve("zoomLevel", e, pe(le(), 0)), at(this, nt, "f").setZoomLevel(t, e);
        }
        getZoomLevel() {
            const e = this.get();
            return F(at(this, nt, "f").getZoomLevel(e));
        }
        async zoomToBlock(e, t = 0, r = 0, n = 0, o = 0) {
            return ve("id", e, ce()), new Promise((i)=>{
                at(this, nt, "f").zoomToBlock(e, t, r, n, o, (e)=>{
                    F(e), i();
                });
            });
        }
        unstable_setDesignUnit(e) {
            ve("designUnit", e, fe()), F(at(this, nt, "f").unstable_setDesignUnit(i.fromDesignUnit(e)));
        }
        unstable_getDesignUnit() {
            return i.toDesignUnit(F(at(this, nt, "f").unstable_getDesignUnit()));
        }
    }
    nt = new WeakMap, ot = new WeakMap;
    var ut, ct = function(e, t, r, n) {
        if ("a" === r && !n) throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
    };
    class lt {
        constructor(e){
            ut.set(this, void 0), function(e, t, r, n, o) {
                if ("TURBOPACK compile-time falsy", 0) {
                    "TURBOPACK unreachable";
                }
                if ("TURBOPACK compile-time falsy", 0) {
                    "TURBOPACK unreachable";
                }
                if ("function" == typeof t ? e !== t || !o : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
                ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : o ? o.value = r : t.set(e, r);
            }(this, ut, e, "f");
        }
        findAll() {
            return P(ct(this, ut, "f").findAllVariables());
        }
        setString(e, t) {
            return ve("key", e, fe()), ve("value", t, fe()), F(ct(this, ut, "f").setVariableString(e, t));
        }
        getString(e) {
            return ve("key", e, fe()), F(ct(this, ut, "f").getVariableString(e));
        }
        remove(e) {
            return ve("key", e, fe()), F(ct(this, ut, "f").removeVariable(e));
        }
    }
    ut = new WeakMap;
    var dt, ft, mt, pt, ht, gt, vt, yt, bt, _t, wt = function(e, t, r, n, o) {
        if ("m" === n) throw new TypeError("Private method is not writable");
        if ("a" === n && !o) throw new TypeError("Private accessor was defined without a setter");
        if ("function" == typeof t ? e !== t || !o : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return "a" === n ? o.call(e, r) : o ? o.value = r : t.set(e, r), r;
    }, Et = function(e, t, r, n) {
        if ("a" === r && !n) throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
    };
    class xt {
        constructor(e, t, r){
            dt.add(this), Object.defineProperty(this, "block", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "scene", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "variable", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "editor", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "asset", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), Object.defineProperty(this, "event", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0
            }), ft.set(this, void 0), mt.set(this, void 0), pt.set(this, void 0), ht.set(this, ()=>{
                const e = this.block.findByType(o.Camera)[0];
                if (!e) return;
                if (void 0 === Et(this, mt, "f")) return;
                const { width: t, height: r } = Et(this, mt, "f"), n = Et(this, ft, "f").getValue(e, Ee.Camera, "resolution");
                T(n.width, t, 1e-4) && T(n.height, r, 1e-4) || Et(this, ft, "f").setValue(e, Ee.Camera, "resolution", {
                    width: t,
                    height: r
                }), "undefined" != typeof window && (T(Et(this, ft, "f").getValue(e, Ee.Camera, "pixelRatio"), window.devicePixelRatio, 1e-4) || Et(this, ft, "f").setValue(e, Ee.Camera, "pixelRatio", window.devicePixelRatio));
            }), gt.set(this, void 0), vt.set(this, void 0), wt(this, pt, e, "f"), wt(this, ft, new A(e), "f"), wt(this, mt, t, "f"), this.block = new Te(e), this.scene = new st(e), this.variable = new lt(e), this.editor = new He(e), this.event = new Ye(e), this.asset = new j(e), this.asset.addSource(new class {
                constructor(e, t, r = {}){
                    var n, o, i, a, s;
                    z.add(this), Object.defineProperty(this, "id", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "canManageAssets", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "helper", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), V.set(this, void 0), W.set(this, void 0), N.set(this, void 0), H.set(this, void 0), $.set(this, void 0), this.id = e, this.helper = new A(t), this.canManageAssets = null !== (n = r.canManageAssets) && void 0 !== n && n, Q(this, V, null !== (o = r.getTypes) && void 0 !== o ? o : ()=>[], "f"), Q(this, W, null !== (i = r.hasType) && void 0 !== i ? i : ()=>!1, "f"), Q(this, N, null !== (a = r.getLabel) && void 0 !== a ? a : (e, t)=>t, "f"), Q(this, H, null !== (s = r.getTags) && void 0 !== s ? s : ()=>[], "f"), Q(this, $, r.defaultFont, "f");
                }
                getAsset() {
                    throw new Error("Method not implemented.");
                }
                addAsset() {
                    throw new Error("Method not implemented.");
                }
                updateAsset() {
                    throw new Error("Method not implemented.");
                }
                removeAsset() {
                    throw new Error("Method not implemented.");
                }
                async findAssets(e, t) {
                    const r = await this.getAssets(e, t), n = this.filterAssets(r, t), o = n.length, i = t.page, a = this.sliceAssets(n, t);
                    return {
                        assets: a,
                        total: o,
                        currentPage: i,
                        nextPage: t.page * t.perPage + a.length < o ? i + 1 : void 0
                    };
                }
                getGroups(e) {
                    return this.helper.execute("ubq/assets/getRegisteredCategoryIDsForType", e);
                }
                getTypes() {
                    return [
                        ...K(this, V, "f").call(this),
                        "ly.img.text",
                        "ly.img.video"
                    ];
                }
                hasType(e) {
                    return "ly.img.text" === e || "ly.img.video" === e || K(this, W, "f").call(this, e);
                }
                async getAssetIds(e, { groups: t, excludeGroups: r }) {
                    let n = [];
                    if (t && Array.isArray(t) && t.length > 0) n = await this.getAssetIdsForGroups(e, t, r);
                    else {
                        const t = await this.helper.execute("ubq/assets/getRegisteredAssetIDsForType", e), o = await this.getGroups(e);
                        n = await (o.length > 0 ? this.getAssetIdsForGroups(e, o, r, t) : t);
                    }
                    return n;
                }
                async getAssets(e, t) {
                    if ("ly.img.text" === e) return async function(e, t, r, n = (e)=>e) {
                        return async function(e, t, r) {
                            var n, o;
                            let i = [];
                            const a = null !== (n = Object.values(await async function() {
                                const e = {}, r = await t.execute("ubq/assets/getRegisteredAssetIDsForType", "ly.img.font");
                                return await Promise.all(r.map(async (r)=>{
                                    var n;
                                    const o = await t.execute("ubq/assets/getMetadata", [
                                        r,
                                        "fontFamily"
                                    ]);
                                    (null !== (n = e[o]) && void 0 !== n ? n : e[o] = []).push({
                                        assetId: r
                                    });
                                })), e;
                            }()).find((e)=>(e.length > i.length && (i = e), e.some((e)=>e.assetId === r)))) && void 0 !== n ? n : i, s = null !== (o = a.find((e)=>e.assetId === r)) && void 0 !== o ? o : a[0];
                            if (void 0 === s) return e;
                            await async function(e) {
                                await Promise.all([
                                    ...e.map((e)=>t.execute("ubq/assets/getMetadata", [
                                            e.assetId,
                                            "fontWeight"
                                        ]).then((t)=>{
                                            e.fontWeight = t;
                                        })),
                                    ...e.map((e)=>t.execute("ubq/assets/getMetadata", [
                                            e.assetId,
                                            "fontStyle"
                                        ]).then((t)=>{
                                            e.fontStyle = t;
                                        }))
                                ]);
                            }(a);
                            const u = a.filter((e)=>e.fontStyle === s.fontStyle);
                            if (0 === u.length) return e;
                            const c = await Promise.all(e.map(async (e)=>{
                                var r, n, o;
                                const i = null === (o = (Array.isArray(null === (r = e.meta) || void 0 === r ? void 0 : r.fontWeight) ? null === (n = e.meta) || void 0 === n ? void 0 : n.fontWeight : []).map((e)=>u.find((t)=>t.fontWeight === e)).filter(Boolean)[0]) || void 0 === o ? void 0 : o.assetId, a = null != i ? i : null == s ? void 0 : s.assetId, c = await t.execute("ubq/assets/getMetadata", [
                                    a,
                                    "fontFileUri"
                                ]);
                                return Object.assign(Object.assign({}, e), {
                                    meta: Object.assign(Object.assign({}, e.meta), {
                                        fontId: a,
                                        uri: c
                                    })
                                });
                            }));
                            return c;
                        }([
                            {
                                id: "title",
                                type: "ly.img.text",
                                label: n("title"),
                                thumbUri: "",
                                size: {
                                    width: 1,
                                    height: 1
                                },
                                meta: {
                                    fontScale: 2,
                                    fontWeight: [
                                        700,
                                        800,
                                        900,
                                        600,
                                        500
                                    ]
                                },
                                context: t
                            },
                            {
                                id: "headline",
                                type: "ly.img.text",
                                label: n("headline"),
                                thumbUri: "",
                                size: {
                                    width: 1,
                                    height: 1
                                },
                                meta: {
                                    fontScale: 1.4,
                                    fontWeight: [
                                        500,
                                        600,
                                        700
                                    ]
                                },
                                context: t
                            },
                            {
                                id: "paragraph",
                                type: "ly.img.text",
                                label: n("paragraph"),
                                thumbUri: "",
                                size: {
                                    width: 1,
                                    height: 1
                                },
                                meta: {
                                    fontScale: 1,
                                    fontWeight: [
                                        400,
                                        300,
                                        500
                                    ]
                                },
                                context: t
                            }
                        ], e, r);
                    }(this.helper, {
                        sourceId: this.id
                    }, K(this, $, "f"), (e)=>K(this, N, "f").call(this, "ly.img.text", e));
                    if ("ly.img.vectorpath" === e) {
                        let r = [];
                        t.groups && t.groups.includes("//ly.img.cesdk.vectorpaths/category/vectorpaths") && (r = await async function(e, t = (e)=>e) {
                            return G.map((r)=>({
                                    id: r,
                                    type: "ly.img.vectorpath",
                                    label: t(r),
                                    thumbUri: "",
                                    size: {
                                        width: 1,
                                        height: 1
                                    },
                                    context: e
                                }));
                        }({
                            sourceId: this.id
                        }, (e)=>K(this, N, "f").call(this, "ly.img.vectorpath", e)));
                        const n = await this.getGenericAssets(e, t);
                        return [
                            ...r,
                            ...n
                        ];
                    }
                    return this.getGenericAssets(e, t);
                }
                async getGenericAssets(e, t) {
                    const { groups: r, locale: n } = t, o = await this.getAssetIds(e, t);
                    return await Promise.all(o.map(async (t)=>{
                        const { thumbUri: o, size: i, meta: a } = await this.getAssetMetaData(t, e), s = K(this, N, "f").call(this, e, t), u = K(this, H, "f").call(this, e, t);
                        return {
                            id: t,
                            type: e,
                            groups: r,
                            thumbUri: o,
                            size: i,
                            meta: a,
                            locale: n,
                            label: s,
                            tags: u,
                            context: {
                                sourceId: this.id
                            }
                        };
                    }));
                }
                async getAssetMetaData(e, t) {
                    const [r, n, o, i, a, s, u] = await Promise.all([
                        K(this, z, "m", X).call(this, e, "thumbPath"),
                        K(this, z, "m", X).call(this, e, "width"),
                        K(this, z, "m", X).call(this, e, "height"),
                        "ly.img.vectorpath" === t ? K(this, z, "m", X).call(this, e, "vectorPath") : Promise.resolve(""),
                        "ly.img.image" === t ? K(this, z, "m", X).call(this, e, "imagePath") : Promise.resolve(void 0),
                        "ly.img.video" === t ? K(this, z, "m", X).call(this, e, "videoPath") : Promise.resolve(void 0),
                        "ly.img.sticker" === t ? K(this, z, "m", X).call(this, e, "imageUri") : Promise.resolve(void 0)
                    ]), c = F(this.helper.ubq.getAbsoluteURI(r));
                    return i ? {
                        thumbUri: c,
                        size: {
                            width: n,
                            height: o
                        },
                        meta: {
                            vectorPath: i
                        }
                    } : {
                        thumbUri: c,
                        size: {
                            width: n,
                            height: o
                        },
                        meta: {
                            uri: a || u || s
                        }
                    };
                }
                filterAssets(e, t) {
                    const { query: r } = t;
                    if (!r) return e;
                    const n = O()(r.toLowerCase());
                    return r ? e.filter((e)=>{
                        if (e.label || e.tags) {
                            const t = [
                                e.label || "",
                                e.tags || ""
                            ].join(",").toLowerCase();
                            return n.every((e)=>t.match(e));
                        }
                        if (e.id) {
                            const t = e.id.toLowerCase();
                            return n.every((e)=>t.match(e));
                        }
                        return !0;
                    }) : e;
                }
                sliceAssets(e, { page: t, perPage: r }) {
                    const n = (null != t ? t : 0) * r;
                    return e.slice(n, n + r);
                }
                async getAssetIdsForGroups(e, t, r = [], n = []) {
                    const o = {}, i = {}, a = await Promise.all(t.map(async (t)=>{
                        const n = await K(this, z, "m", Y).call(this, t, e);
                        return r.includes(t) ? (n.forEach((e)=>{
                            i[e] = !0;
                        }), []) : n.filter((e)=>!o[e] && !i[e] && (o[e] = !0, !0));
                    })), s = n.filter((e)=>!o[e] && !i[e]), u = q()(...a, s);
                    return R()(u).filter(Boolean);
                }
            }("local", e, {
                defaultFont: r.defaultFont
            })), (function(e) {
                const t = {
                    assets: [],
                    total: 0,
                    currentPage: 1,
                    nextPage: void 0
                };
                return Object.entries(e).map(([e, r])=>{
                    const n = r.types || [
                        "ly.img.image"
                    ];
                    if (!r.findAssets) throw new Error("New asset source needs to define `findAssets` at least");
                    return Object.assign(Object.assign(Object.assign({
                        id: e
                    }, B), r), {
                        findAssets: async (e, o)=>n.includes(e) && await r.findAssets(e, o) || Promise.resolve(t),
                        getTypes: ()=>n,
                        hasType: (e)=>n.includes(e)
                    });
                });
            })(r.assetSources).forEach((e)=>this.asset.addSource(e)), Et(this, ft, "f").useInternalAPI((e)=>{
                e.setPreUpdateCallback(Et(this, ht, "f"));
            }), Et(this, dt, "m", yt).call(this), "undefined" != typeof window && window.Cypress && (this.config = r, this.helper = Et(this, ft, "f"), this.onPostUpdate = (e)=>{
                Et(this, ft, "f").useInternalAPI((t)=>{
                    t.setPostUpdateCallback(e);
                });
            });
        }
        dispose() {
            Et(this, dt, "m", bt).call(this), Et(this, ft, "f").useInternalAPI((e)=>{
                e.setPreUpdateCallback(null);
            }), wt(this, mt, null, "f"), wt(this, ft, null, "f"), this.block = null, this.scene = null, this.variable = null, Et(this, pt, "f").delete(), wt(this, pt, null, "f");
        }
        static async init(e, t) {
            console.log("[CreativeEngine] Revision 1c174d6b3df1629dfe29d7811e5784e8688d951b"), "undefined" == typeof document || t || (t = document.createElement("canvas"));
            const r = Ge(e);
            return new this(await function(e, t) {
                const r = Ge(t), { core: n } = r, o = null !== (s = null === (a = null == (i = r) ? void 0 : i.callbacks) || void 0 === a ? void 0 : a.log) && void 0 !== s ? s : je;
                var i, a, s;
                return new Promise((t, i)=>{
                    let a, s;
                    return tt({
                        locateFile: (e, t)=>{
                            if (e.endsWith(".wasm")) {
                                const e = rt(et, n.baseURL).toString();
                                return a = e, e;
                            }
                            if (e.endsWith(".data")) {
                                const e = rt(Je, n.baseURL).toString();
                                return s = e, e;
                            }
                            return t + e;
                        },
                        print: (e)=>{
                            e && "undefined" !== e && o(e, Ae.Info);
                        },
                        printErr: (e)=>{
                            e && "undefined" !== e && o(e, Ae.Error);
                        },
                        onRuntimeInitialized: ()=>{
                            o("Engine has been initialized.", Ae.Info);
                        },
                        logReadFiles: !1,
                        printWithColors: !0
                    }).then((n)=>{
                        let o = "";
                        "string" == typeof e ? o = e : void 0 !== e && (n.specialHTMLTargets["!canvas"] = e, o = "!canvas");
                        const a = n.createEngine(o);
                        if (a.isValid()) {
                            const e = a.value();
                            !function(e, t) {
                                var r;
                                const n = new A(e);
                                function o(e, t) {
                                    return n.execute("ubq/settings/set", [
                                        e,
                                        t
                                    ]);
                                }
                                o("ubq://license", t.license || ""), o("ubq://role", w[t.role]), o("ubq://basePath", t.baseURL), o("ubq://touchScrollingEnabled", !(null === (r = t.featureFlags) || void 0 === r ? void 0 : r.preventScrolling)), Object.entries(t.presets.images || {}).forEach(([e, t])=>{
                                    n.execute("ubq/assets/registerImage", [
                                        e,
                                        t.thumbnailURL || t.imageURL,
                                        t.imageURL,
                                        t.width,
                                        t.height
                                    ]);
                                }), Object.entries(t.presets.typefaces || {}).forEach(([e, t])=>{
                                    (t.fonts || []).forEach((r)=>{
                                        const o = `${e}_${r.weight}_${r.style}`;
                                        n.execute("ubq/assets/registerFont", [
                                            o,
                                            r.fontURL,
                                            t.family,
                                            r.weight,
                                            r.style
                                        ]);
                                    });
                                }), function() {
                                    const { imageMattingOnly: e, singlePageMode: r, forceVideoDisabled: n } = t.featureFlags || {};
                                    "undefined" != typeof window && ("VideoFrame" in window && "VideoDecoder" in window && "VideoEncoder" in window || o("ubq://features/videosEnabled", !1)), o("ubq://features/singlePageModeEnabled", r), o("cesdk://trackActivePage", !r), o("ubq://features/effectsEnabled", !0);
                                }(), o("ubq://page/title/fontFileUri", t.page.title.fontFileUri), o("ubq://page/title/show", t.page.title.show), o("ubq://page/dimOutOfPageAreas", t.page.dimOutOfPageAreas), function() {
                                    if (void 0 !== t.scene.maskSpotColor) {
                                        const { rgbApproximation: e } = t.scene.maskSpotColor, r = x.fromRGBA(Object.assign(Object.assign({}, e), {
                                            a: 1
                                        }));
                                        n.execute("cesdk/setSpecialSpotColor", r);
                                    }
                                }(), function() {
                                    var e;
                                    const r = null !== (e = t.extensions) && void 0 !== e ? e : [];
                                    r.entries.forEach((e)=>{
                                        n.execute("ubq/extension/register", `${r.baseURL + e}`);
                                    });
                                }(), function() {
                                    var r;
                                    const n = null !== (r = t.variables) && void 0 !== r ? r : {};
                                    Object.entries(n).forEach(([t, r])=>{
                                        F(e.setVariableString(t, r.value.toString()));
                                    });
                                }();
                            }(e, r), t(e);
                        } else {
                            const e = a.error();
                            i(new Error(e.publicMessage())), e.delete();
                        }
                        a.delete();
                    }).catch((e)=>{
                        e instanceof Error && (e.wasmPath = a, e.dataPath = s), i(e);
                    });
                });
            }(t, r), t, r);
        }
    }
    ft = new WeakMap, mt = new WeakMap, pt = new WeakMap, ht = new WeakMap, gt = new WeakMap, vt = new WeakMap, dt = new WeakSet, yt = function(e = !0) {
        if (Et(this, gt, "f")) return;
        if ("undefined" != typeof HTMLCanvasElement && Et(this, mt, "f") instanceof HTMLCanvasElement) {
            const e = function(e, t, r) {
                const n = (t)=>{
                    var n, o;
                    const i = e.getBoundingClientRect(), a = null !== (n = null == i ? void 0 : i.top) && void 0 !== n ? n : 0, s = null !== (o = null == i ? void 0 : i.left) && void 0 !== o ? o : 0, u = function(e) {
                        return "undefined" != typeof TouchEvent && e instanceof TouchEvent;
                    }(t), c = u ? t.changedTouches[0].clientX : t.clientX, l = u ? t.changedTouches[0].clientY : t.clientY;
                    return u && t.target === e && t.cancelable && "Text" !== r.getEditMode() && t.preventDefault(), {
                        position: {
                            x: (c - s) * window.devicePixelRatio,
                            y: (l - a) * window.devicePixelRatio
                        },
                        isOverUIElement: t.target !== e,
                        isTouch: u,
                        timestamp: Date.now()
                    };
                }, o = (e)=>{
                    const r = n(e);
                    r.isTouch && e.preventDefault(), t.execute("ubq/inputs/mousemove", r);
                }, i = (e)=>{
                    const r = Object.assign(Object.assign({}, n(e)), {
                        button: _(e instanceof MouseEvent ? e.button : l.Left),
                        state: d.Up,
                        shiftIsHeld: e.shiftKey
                    });
                    t.execute("ubq/inputs/mousebutton", r), t.ubq.update();
                }, a = (e)=>{
                    const r = Object.assign(Object.assign({}, n(e)), {
                        button: _(e instanceof MouseEvent ? e.button : l.Left),
                        state: d.Down,
                        shiftIsHeld: e.shiftKey
                    });
                    t.execute("ubq/inputs/mousebutton", r);
                };
                return document.addEventListener("mousemove", o), document.addEventListener("mousedown", a), document.addEventListener("mouseup", i), document.addEventListener("touchmove", o), document.addEventListener("touchstart", a), document.addEventListener("touchend", i), document.addEventListener("touchcancel", i), ()=>{
                    document.removeEventListener("mousemove", o), document.removeEventListener("mousedown", a), document.removeEventListener("mouseup", i), document.removeEventListener("touchmove", o), document.removeEventListener("touchstart", a), document.removeEventListener("touchend", i), document.removeEventListener("touchcancel", i);
                };
            }(Et(this, mt, "f"), Et(this, ft, "f"), this.editor), t = function(e, t, r) {
                let n, o = null;
                const i = r.onStateChanged(()=>{
                    n = r.getEditMode(), "Text" !== n || o ? "Text" !== n && o && (o(), o = null) : o = function() {
                        var n;
                        let o = !1;
                        const i = document.createElement("textarea");
                        i.id = "ubq_internal-inline_text_editing_html_representation", i.autocapitalize = "none", i.spellcheck = !1, i.cols = 4096, i.style.contain = "strict", i.style.opacity = "0", i.style.pointerEvents = "none", i.style.zIndex = "-1", i.style.position = "absolute", i.style.width = "1px", i.style.height = "1px", i.style.padding = "0", i.style.margin = "-1px", i.style.overflow = "hidden", i.style.clip = "rect(0, 0, 0, 0)", i.style.whiteSpace = "nowrap", i.style.border = "0";
                        const a = ()=>{
                            const e = r.getTextCursorPositionInScreenSpaceX(), t = r.getTextCursorPositionInScreenSpaceY();
                            i.style.left = `${e}px`, i.style.top = `${t}px`;
                        };
                        a(), i.addEventListener("input", c), i.addEventListener("keydown", l), i.addEventListener("copy", u), i.addEventListener("compositionstart", d), i.addEventListener("compositionupdate", m), i.addEventListener("compositionend", p), document.addEventListener("touchend", h), document.addEventListener("mousedown", h), document.addEventListener("mouseup", h), document.addEventListener("click", h);
                        const s = r.onStateChanged(a);
                        return null === (n = null == e ? void 0 : e.parentElement) || void 0 === n || n.appendChild(i), i.focus(), ()=>{
                            var t;
                            i.removeEventListener("input", c), i.removeEventListener("keydown", l), i.removeEventListener("copy", u), i.removeEventListener("compositionstart", d), i.removeEventListener("compositionupdate", m), i.removeEventListener("compositionend", p), document.removeEventListener("click", h), document.removeEventListener("mousedown", h), document.removeEventListener("mouseup", h), document.removeEventListener("touchend", h), s(), null === (t = null == e ? void 0 : e.parentElement) || void 0 === t || t.removeChild(i);
                        };
                        "TURBOPACK unreachable";
                        function u(e) {
                            try {
                                t.useInternalAPI({
                                    "t.i.u.useInternalAPI": (t)=>{
                                        const r = F(t.getSelectedText());
                                        "" !== r && e.clipboardData && (e.clipboardData.setData("text/plain", r), e.preventDefault());
                                    }
                                }["t.i.u.useInternalAPI"]);
                            } catch (e) {
                                console.error(e);
                            }
                        }
                        function c(e) {
                            var r, n;
                            const i = e.target, { value: a } = i;
                            let s = a.length;
                            if (o) {
                                s = null !== (n = null !== (r = i.selectionEnd) && void 0 !== r ? r : i.selectionStart) && void 0 !== n ? n : 0;
                                const e = [
                                    ...a
                                ];
                                for(let t = 0; t < e.length; t += 1)t < s && (s -= e[t].length - 1);
                                t.execute("ubq/text/compositionUpdate", {
                                    value: a,
                                    cursorPosition: s
                                });
                            } else if (a.length > 0) {
                                if ("\n" !== a[0]) {
                                    const e = {
                                        key: f.Unknown,
                                        characters: a,
                                        shiftIsHeld: !1,
                                        commandIsHeld: !1,
                                        optionIsHeld: !1,
                                        timestamp: Date.now()
                                    };
                                    t.execute("ubq/inputs/keyboardkey", e);
                                }
                                i.value = "";
                            }
                        }
                        async function l(e) {
                            if ("a" === e.key && (e.metaKey || e.ctrlKey)) return o && (await t.execute("ubq/text/compositionEnd"), o = !1, e.currentTarget && (i.value = "")), void await t.execute("ubq/text/selectAllText");
                            if ("Escape" === e.key) return void async function() {
                                r.setEditMode("Transform");
                            }();
                            if ("Backspace" !== e.key && "Delete" !== e.key && "ArrowLeft" !== e.key && "ArrowRight" !== e.key && "ArrowUp" !== e.key && "ArrowDown" !== e.key && "Enter" !== e.key) return;
                            const n = function(e) {
                                const t = {
                                    key: f.Unknown,
                                    characters: e.key,
                                    shiftIsHeld: e.shiftKey,
                                    commandIsHeld: e.metaKey || e.ctrlKey,
                                    optionIsHeld: e.altKey,
                                    timestamp: Date.now()
                                };
                                switch(e.key.toUpperCase()){
                                    case "0":
                                        t.key = f.Key0;
                                        break;
                                    case "1":
                                        t.key = f.Key1;
                                        break;
                                    case "2":
                                        t.key = f.Key2;
                                        break;
                                    case "3":
                                        t.key = f.Key3;
                                        break;
                                    case "4":
                                        t.key = f.Key4;
                                        break;
                                    case "5":
                                        t.key = f.Key5;
                                        break;
                                    case "6":
                                        t.key = f.Key6;
                                        break;
                                    case "7":
                                        t.key = f.Key7;
                                        break;
                                    case "8":
                                        t.key = f.Key8;
                                        break;
                                    case "9":
                                        t.key = f.Key9;
                                        break;
                                    case "A":
                                        t.key = f.A;
                                        break;
                                    case "B":
                                        t.key = f.B;
                                        break;
                                    case "C":
                                        t.key = f.C;
                                        break;
                                    case "D":
                                        t.key = f.D;
                                        break;
                                    case "E":
                                        t.key = f.E;
                                        break;
                                    case "F":
                                        t.key = f.F;
                                        break;
                                    case "G":
                                        t.key = f.G;
                                        break;
                                    case "H":
                                        t.key = f.H;
                                        break;
                                    case "I":
                                        t.key = f.I;
                                        break;
                                    case "J":
                                        t.key = f.J;
                                        break;
                                    case "K":
                                        t.key = f.K;
                                        break;
                                    case "L":
                                        t.key = f.L;
                                        break;
                                    case "M":
                                        t.key = f.M;
                                        break;
                                    case "N":
                                        t.key = f.N;
                                        break;
                                    case "O":
                                        t.key = f.O;
                                        break;
                                    case "P":
                                        t.key = f.P;
                                        break;
                                    case "Q":
                                        t.key = f.Q;
                                        break;
                                    case "R":
                                        t.key = f.R;
                                        break;
                                    case "S":
                                        t.key = f.S;
                                        break;
                                    case "T":
                                        t.key = f.T;
                                        break;
                                    case "U":
                                        t.key = f.U;
                                        break;
                                    case "V":
                                        t.key = f.V;
                                        break;
                                    case "W":
                                        t.key = f.W;
                                        break;
                                    case "X":
                                        t.key = f.X;
                                        break;
                                    case "Y":
                                        t.key = f.Y;
                                        break;
                                    case "Z":
                                        t.key = f.Z;
                                        break;
                                    case " ":
                                        t.key = f.Space;
                                        break;
                                    case "ESCAPE":
                                        t.key = f.Escape, t.characters = "";
                                        break;
                                    case "BACKSPACE":
                                        t.key = f.Backspace, t.characters = "";
                                        break;
                                    case "DELETE":
                                        t.key = f.Delete, t.characters = "";
                                        break;
                                    case "ENTER":
                                        t.key = f.Enter, t.characters = "\n";
                                        break;
                                    case "CONTROL":
                                        t.key = f.Control, t.characters = "";
                                        break;
                                    case "ALT":
                                        t.key = f.Option, t.characters = "";
                                        break;
                                    case "SHIFT":
                                        t.key = f.Shift, t.characters = "";
                                        break;
                                    case "ARROWLEFT":
                                        t.key = f.ArrowLeft, t.characters = "";
                                        break;
                                    case "ARROWRIGHT":
                                        t.key = f.ArrowRight, t.characters = "";
                                        break;
                                    case "ARROWUP":
                                        t.key = f.ArrowUp, t.characters = "";
                                        break;
                                    case "ARROWDOWN":
                                        t.key = f.ArrowDown, t.characters = "";
                                        break;
                                    case "DEAD":
                                        t.key = f.Unknown, t.characters = "";
                                }
                                return t;
                            }(e);
                            await t.execute("ubq/inputs/keyboardkey", n), e.currentTarget && (i.value = "");
                        }
                        async function d() {
                            o = !0, await t.execute("ubq/text/compositionStart");
                        }
                        function m() {
                            o = !0;
                        }
                        async function p() {
                            o = !1, await t.execute("ubq/text/compositionEnd"), i.value = "";
                        }
                        function h(t) {
                            t.target === e ? "Text" === r.getEditMode() && (i.focus(), t instanceof TouchEvent && t.cancelable && t.preventDefault()) : r.setEditMode("Transform");
                        }
                    }();
                });
                return ()=>{
                    null == o || o(), i();
                };
            }(Et(this, mt, "f"), Et(this, ft, "f"), this.editor);
            wt(this, vt, ()=>{
                e(), t();
            }, "f");
        }
        const t = ()=>{
            Et(this, dt, "m", _t).call(this, e), wt(this, gt, requestAnimationFrame(t), "f");
        };
        wt(this, gt, requestAnimationFrame(t), "f");
    }, bt = function() {
        var e;
        null === (e = Et(this, vt, "f")) || void 0 === e || e.call(this), wt(this, vt, void 0, "f"), Et(this, gt, "f") && (cancelAnimationFrame(Et(this, gt, "f")), wt(this, gt, 0, "f"));
    }, _t = function(e = !0) {
        e && void 0 !== Et(this, mt, "f") && 1 === this.block.findByType(o.Scene).length && Et(this, ft, "f").execute("ubq/render", {
            displayWidth: Et(this, mt, "f").width,
            displayHeight: Et(this, mt, "f").height
        }), Et(this, pt, "f").update();
    };
})();
var o = n.Il, i = n.yQ, a = n.Ju, s = n.in, u = n.HY, c = n.uU, l = n.ZP;
;
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
 //# sourceMappingURL=components.client.js.map
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/next/dist/shared/lib/bloom-filter.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
// minimal implementation MurmurHash2 hash function
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "BloomFilter", {
    enumerable: true,
    get: function() {
        return BloomFilter;
    }
});
function murmurhash2(str) {
    let h = 0;
    for(let i = 0; i < str.length; i++){
        const c = str.charCodeAt(i);
        h = Math.imul(h ^ c, 0x5bd1e995);
        h ^= h >>> 13;
        h = Math.imul(h, 0x5bd1e995);
    }
    return h >>> 0;
}
// default to 0.01% error rate as the filter compresses very well
const DEFAULT_ERROR_RATE = 0.0001;
class BloomFilter {
    static from(items, errorRate) {
        if (errorRate === void 0) errorRate = DEFAULT_ERROR_RATE;
        const filter = new BloomFilter(items.length, errorRate);
        for (const item of items){
            filter.add(item);
        }
        return filter;
    }
    export() {
        const data = {
            numItems: this.numItems,
            errorRate: this.errorRate,
            numBits: this.numBits,
            numHashes: this.numHashes,
            bitArray: this.bitArray
        };
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
        return data;
    }
    import(data) {
        this.numItems = data.numItems;
        this.errorRate = data.errorRate;
        this.numBits = data.numBits;
        this.numHashes = data.numHashes;
        this.bitArray = data.bitArray;
    }
    add(item) {
        const hashValues = this.getHashValues(item);
        hashValues.forEach((hash)=>{
            this.bitArray[hash] = 1;
        });
    }
    contains(item) {
        const hashValues = this.getHashValues(item);
        return hashValues.every((hash)=>this.bitArray[hash]);
    }
    getHashValues(item) {
        const hashValues = [];
        for(let i = 1; i <= this.numHashes; i++){
            const hash = murmurhash2("" + item + i) % this.numBits;
            hashValues.push(hash);
        }
        return hashValues;
    }
    constructor(numItems, errorRate = DEFAULT_ERROR_RATE){
        this.numItems = numItems;
        this.errorRate = errorRate;
        this.numBits = Math.ceil(-(numItems * Math.log(errorRate)) / (Math.log(2) * Math.log(2)));
        this.numHashes = Math.ceil(this.numBits / numItems * Math.log(2));
        this.bitArray = new Array(this.numBits).fill(0);
    }
} //# sourceMappingURL=bloom-filter.js.map
}}),
"[project]/node_modules/next/dist/compiled/react-is/cjs/react-is.development.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
"production" !== ("TURBOPACK compile-time value", "development") && function() {
    function typeOf(object) {
        if ("object" === typeof object && null !== object) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    switch(object = object.type, object){
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                        case REACT_SUSPENSE_LIST_TYPE:
                            return object;
                        default:
                            switch(object = object && object.$$typeof, object){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                    return object;
                                case REACT_CONSUMER_TYPE:
                                    return object;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
    }
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference");
    exports.ContextConsumer = REACT_CONSUMER_TYPE;
    exports.ContextProvider = REACT_CONTEXT_TYPE;
    exports.Element = REACT_ELEMENT_TYPE;
    exports.ForwardRef = REACT_FORWARD_REF_TYPE;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Lazy = REACT_LAZY_TYPE;
    exports.Memo = REACT_MEMO_TYPE;
    exports.Portal = REACT_PORTAL_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
    exports.isContextConsumer = function(object) {
        return typeOf(object) === REACT_CONSUMER_TYPE;
    };
    exports.isContextProvider = function(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    };
    exports.isElement = function(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    };
    exports.isForwardRef = function(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    };
    exports.isFragment = function(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    };
    exports.isLazy = function(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    };
    exports.isMemo = function(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    };
    exports.isPortal = function(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    };
    exports.isProfiler = function(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    };
    exports.isStrictMode = function(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    };
    exports.isSuspense = function(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    };
    exports.isSuspenseList = function(object) {
        return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
    };
    exports.isValidElementType = function(type) {
        return "string" === typeof type || "function" === typeof type || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_OFFSCREEN_TYPE || "object" === typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_CLIENT_REFERENCE || void 0 !== type.getModuleId) ? !0 : !1;
    };
    exports.typeOf = typeOf;
}();
}}),
"[project]/node_modules/next/dist/compiled/react-is/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
if ("TURBOPACK compile-time falsy", 0) {
    "TURBOPACK unreachable";
} else {
    module.exports = __turbopack_require__("[project]/node_modules/next/dist/compiled/react-is/cjs/react-is.development.js [app-client] (ecmascript)");
}
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/get-asset-path-from-route.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
// Translates a logical route into its pages asset path (relative from a common prefix)
// "asset path" being its javascript file, data file, prerendered html,...
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return getAssetPathFromRoute;
    }
});
function getAssetPathFromRoute(route, ext) {
    if (ext === void 0) ext = '';
    const path = route === '/' ? '/index' : /^\/index(\/|$)/.test(route) ? "/index" + route : route;
    return path + ext;
} //# sourceMappingURL=get-asset-path-from-route.js.map
}}),
"[project]/node_modules/next/dist/client/trusted-types.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * Stores the Trusted Types Policy. Starts as undefined and can be set to null
 * if Trusted Types is not supported in the browser.
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "__unsafeCreateTrustedScriptURL", {
    enumerable: true,
    get: function() {
        return __unsafeCreateTrustedScriptURL;
    }
});
let policy;
/**
 * Getter for the Trusted Types Policy. If it is undefined, it is instantiated
 * here or set to null if Trusted Types is not supported in the browser.
 */ function getPolicy() {
    if (typeof policy === 'undefined' && typeof window !== 'undefined') {
        var _window_trustedTypes;
        policy = ((_window_trustedTypes = window.trustedTypes) == null ? void 0 : _window_trustedTypes.createPolicy('nextjs', {
            createHTML: (input)=>input,
            createScript: (input)=>input,
            createScriptURL: (input)=>input
        })) || null;
    }
    return policy;
}
function __unsafeCreateTrustedScriptURL(url) {
    var _getPolicy;
    return ((_getPolicy = getPolicy()) == null ? void 0 : _getPolicy.createScriptURL(url)) || url;
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=trusted-types.js.map
}}),
"[project]/node_modules/next/dist/build/deployment-id.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getDeploymentIdQueryOrEmptyString", {
    enumerable: true,
    get: function() {
        return getDeploymentIdQueryOrEmptyString;
    }
});
function getDeploymentIdQueryOrEmptyString() {
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    return '';
} //# sourceMappingURL=deployment-id.js.map
}}),
"[project]/node_modules/next/dist/client/route-loader.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    createRouteLoader: null,
    getClientBuildManifest: null,
    isAssetError: null,
    markAssetError: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createRouteLoader: function() {
        return createRouteLoader;
    },
    getClientBuildManifest: function() {
        return getClientBuildManifest;
    },
    isAssetError: function() {
        return isAssetError;
    },
    markAssetError: function() {
        return markAssetError;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _getassetpathfromroute = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/get-asset-path-from-route.js [app-client] (ecmascript)"));
const _trustedtypes = __turbopack_require__("[project]/node_modules/next/dist/client/trusted-types.js [app-client] (ecmascript)");
const _requestidlecallback = __turbopack_require__("[project]/node_modules/next/dist/client/request-idle-callback.js [app-client] (ecmascript)");
const _deploymentid = __turbopack_require__("[project]/node_modules/next/dist/build/deployment-id.js [app-client] (ecmascript)");
const _encodeuripath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/encode-uri-path.js [app-client] (ecmascript)");
// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive
// considers as "Good" time-to-interactive. We must assume something went
// wrong beyond this point, and then fall-back to a full page transition to
// show the user something of value.
const MS_MAX_IDLE_DELAY = 3800;
function withFuture(key, map, generator) {
    let entry = map.get(key);
    if (entry) {
        if ('future' in entry) {
            return entry.future;
        }
        return Promise.resolve(entry);
    }
    let resolver;
    const prom = new Promise((resolve)=>{
        resolver = resolve;
    });
    map.set(key, {
        resolve: resolver,
        future: prom
    });
    return generator ? generator().then((value)=>{
        resolver(value);
        return value;
    }).catch((err)=>{
        map.delete(key);
        throw err;
    }) : prom;
}
const ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR');
function markAssetError(err) {
    return Object.defineProperty(err, ASSET_LOAD_ERROR, {});
}
function isAssetError(err) {
    return err && ASSET_LOAD_ERROR in err;
}
function hasPrefetch(link) {
    try {
        link = document.createElement('link');
        return(// with relList.support
        !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports('prefetch'));
    } catch (e) {
        return false;
    }
}
const canPrefetch = hasPrefetch();
const getAssetQueryString = ()=>{
    return (0, _deploymentid.getDeploymentIdQueryOrEmptyString)();
};
function prefetchViaDom(href, as, link) {
    return new Promise((resolve, reject)=>{
        const selector = '\n      link[rel="prefetch"][href^="' + href + '"],\n      link[rel="preload"][href^="' + href + '"],\n      script[src^="' + href + '"]';
        if (document.querySelector(selector)) {
            return resolve();
        }
        link = document.createElement('link');
        // The order of property assignment here is intentional:
        if (as) link.as = as;
        link.rel = "prefetch";
        link.crossOrigin = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env.__NEXT_CROSS_ORIGIN;
        link.onload = resolve;
        link.onerror = ()=>reject(markAssetError(new Error("Failed to prefetch: " + href)));
        // `href` should always be last:
        link.href = href;
        document.head.appendChild(link);
    });
}
function appendScript(src, script) {
    return new Promise((resolve, reject)=>{
        script = document.createElement('script');
        // The order of property assignment here is intentional.
        // 1. Setup success/failure hooks in case the browser synchronously
        //    executes when `src` is set.
        script.onload = resolve;
        script.onerror = ()=>reject(markAssetError(new Error("Failed to load script: " + src)));
        // 2. Configure the cross-origin attribute before setting `src` in case the
        //    browser begins to fetch.
        script.crossOrigin = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env.__NEXT_CROSS_ORIGIN;
        // 3. Finally, set the source and inject into the DOM in case the child
        //    must be appended for fetching to start.
        script.src = src;
        document.body.appendChild(script);
    });
}
// We wait for pages to be built in dev before we start the route transition
// timeout to prevent an un-necessary hard navigation in development.
let devBuildPromise;
// Resolve a promise that times out after given amount of milliseconds.
function resolvePromiseWithTimeout(p, ms, err) {
    return new Promise((resolve, reject)=>{
        let cancelled = false;
        p.then((r)=>{
            // Resolved, cancel the timeout
            cancelled = true;
            resolve(r);
        }).catch(reject);
        // We wrap these checks separately for better dead-code elimination in
        // production bundles.
        if ("TURBOPACK compile-time truthy", 1) {
            (devBuildPromise || Promise.resolve()).then(()=>{
                (0, _requestidlecallback.requestIdleCallback)(()=>setTimeout(()=>{
                        if (!cancelled) {
                            reject(err);
                        }
                    }, ms));
            });
        }
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
    });
}
function getClientBuildManifest() {
    if (self.__BUILD_MANIFEST) {
        return Promise.resolve(self.__BUILD_MANIFEST);
    }
    const onBuildManifest = new Promise((resolve)=>{
        // Mandatory because this is not concurrent safe:
        const cb = self.__BUILD_MANIFEST_CB;
        self.__BUILD_MANIFEST_CB = ()=>{
            resolve(self.__BUILD_MANIFEST);
            cb && cb();
        };
    });
    return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')));
}
function getFilesForRoute(assetPrefix, route) {
    if ("TURBOPACK compile-time truthy", 1) {
        const scriptUrl = assetPrefix + '/_next/static/chunks/pages' + (0, _encodeuripath.encodeURIPath)((0, _getassetpathfromroute.default)(route, '.js')) + getAssetQueryString();
        return Promise.resolve({
            scripts: [
                (0, _trustedtypes.__unsafeCreateTrustedScriptURL)(scriptUrl)
            ],
            // Styles are handled by `style-loader` in development:
            css: []
        });
    }
    "TURBOPACK unreachable";
}
function createRouteLoader(assetPrefix) {
    const entrypoints = new Map();
    const loadedScripts = new Map();
    const styleSheets = new Map();
    const routes = new Map();
    function maybeExecuteScript(src) {
        // With HMR we might need to "reload" scripts when they are
        // disposed and readded. Executing scripts twice has no functional
        // differences
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        } else {
            return appendScript(src);
        }
    }
    function fetchStyleSheet(href) {
        let prom = styleSheets.get(href);
        if (prom) {
            return prom;
        }
        styleSheets.set(href, prom = fetch(href, {
            credentials: 'same-origin'
        }).then((res)=>{
            if (!res.ok) {
                throw new Error("Failed to load stylesheet: " + href);
            }
            return res.text().then((text)=>({
                    href: href,
                    content: text
                }));
        }).catch((err)=>{
            throw markAssetError(err);
        }));
        return prom;
    }
    return {
        whenEntrypoint (route) {
            return withFuture(route, entrypoints);
        },
        onEntrypoint (route, execute) {
            (execute ? Promise.resolve().then(()=>execute()).then((exports1)=>({
                    component: exports1 && exports1.default || exports1,
                    exports: exports1
                }), (err)=>({
                    error: err
                })) : Promise.resolve(undefined)).then((input)=>{
                const old = entrypoints.get(route);
                if (old && 'resolve' in old) {
                    if (input) {
                        entrypoints.set(route, input);
                        old.resolve(input);
                    }
                } else {
                    if (input) {
                        entrypoints.set(route, input);
                    } else {
                        entrypoints.delete(route);
                    }
                    // when this entrypoint has been resolved before
                    // the route is outdated and we want to invalidate
                    // this cache entry
                    routes.delete(route);
                }
            });
        },
        loadRoute (route, prefetch) {
            return withFuture(route, routes, ()=>{
                let devBuildPromiseResolve;
                if ("TURBOPACK compile-time truthy", 1) {
                    devBuildPromise = new Promise((resolve)=>{
                        devBuildPromiseResolve = resolve;
                    });
                }
                return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then((param)=>{
                    let { scripts, css } = param;
                    return Promise.all([
                        entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)),
                        Promise.all(css.map(fetchStyleSheet))
                    ]);
                }).then((res)=>{
                    return this.whenEntrypoint(route).then((entrypoint)=>({
                            entrypoint,
                            styles: res[1]
                        }));
                }), MS_MAX_IDLE_DELAY, markAssetError(new Error("Route did not complete loading: " + route))).then((param)=>{
                    let { entrypoint, styles } = param;
                    const res = Object.assign({
                        styles: styles
                    }, entrypoint);
                    return 'error' in entrypoint ? entrypoint : res;
                }).catch((err)=>{
                    if (prefetch) {
                        // we don't want to cache errors during prefetch
                        throw err;
                    }
                    return {
                        error: err
                    };
                }).finally(()=>devBuildPromiseResolve == null ? void 0 : devBuildPromiseResolve());
            });
        },
        prefetch (route) {
            // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118
            // License: Apache 2.0
            let cn;
            if (cn = navigator.connection) {
                // Don't prefetch if using 2G or if Save-Data is enabled.
                if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();
            }
            return getFilesForRoute(assetPrefix, route).then((output)=>Promise.all(canPrefetch ? output.scripts.map((script)=>prefetchViaDom(script.toString(), 'script')) : [])).then(()=>{
                (0, _requestidlecallback.requestIdleCallback)(()=>this.loadRoute(route, true).catch(()=>{}));
            }).catch(()=>{});
        }
    };
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=route-loader.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/sorted-routes.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    getSortedRouteObjects: null,
    getSortedRoutes: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getSortedRouteObjects: function() {
        return getSortedRouteObjects;
    },
    getSortedRoutes: function() {
        return getSortedRoutes;
    }
});
class UrlNode {
    insert(urlPath) {
        this._insert(urlPath.split('/').filter(Boolean), [], false);
    }
    smoosh() {
        return this._smoosh();
    }
    _smoosh(prefix) {
        if (prefix === void 0) prefix = '/';
        const childrenPaths = [
            ...this.children.keys()
        ].sort();
        if (this.slugName !== null) {
            childrenPaths.splice(childrenPaths.indexOf('[]'), 1);
        }
        if (this.restSlugName !== null) {
            childrenPaths.splice(childrenPaths.indexOf('[...]'), 1);
        }
        if (this.optionalRestSlugName !== null) {
            childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1);
        }
        const routes = childrenPaths.map((c)=>this.children.get(c)._smoosh("" + prefix + c + "/")).reduce((prev, curr)=>[
                ...prev,
                ...curr
            ], []);
        if (this.slugName !== null) {
            routes.push(...this.children.get('[]')._smoosh(prefix + "[" + this.slugName + "]/"));
        }
        if (!this.placeholder) {
            const r = prefix === '/' ? '/' : prefix.slice(0, -1);
            if (this.optionalRestSlugName != null) {
                throw new Error('You cannot define a route with the same specificity as a optional catch-all route ("' + r + '" and "' + r + "[[..." + this.optionalRestSlugName + ']]").');
            }
            routes.unshift(r);
        }
        if (this.restSlugName !== null) {
            routes.push(...this.children.get('[...]')._smoosh(prefix + "[..." + this.restSlugName + "]/"));
        }
        if (this.optionalRestSlugName !== null) {
            routes.push(...this.children.get('[[...]]')._smoosh(prefix + "[[..." + this.optionalRestSlugName + "]]/"));
        }
        return routes;
    }
    _insert(urlPaths, slugNames, isCatchAll) {
        if (urlPaths.length === 0) {
            this.placeholder = false;
            return;
        }
        if (isCatchAll) {
            throw new Error("Catch-all must be the last part of the URL.");
        }
        // The next segment in the urlPaths list
        let nextSegment = urlPaths[0];
        // Check if the segment matches `[something]`
        if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {
            // Strip `[` and `]`, leaving only `something`
            let segmentName = nextSegment.slice(1, -1);
            let isOptional = false;
            if (segmentName.startsWith('[') && segmentName.endsWith(']')) {
                // Strip optional `[` and `]`, leaving only `something`
                segmentName = segmentName.slice(1, -1);
                isOptional = true;
            }
            if (segmentName.startsWith('…')) {
                throw new Error("Detected a three-dot character ('…') at ('" + segmentName + "'). Did you mean ('...')?");
            }
            if (segmentName.startsWith('...')) {
                // Strip `...`, leaving only `something`
                segmentName = segmentName.substring(3);
                isCatchAll = true;
            }
            if (segmentName.startsWith('[') || segmentName.endsWith(']')) {
                throw new Error("Segment names may not start or end with extra brackets ('" + segmentName + "').");
            }
            if (segmentName.startsWith('.')) {
                throw new Error("Segment names may not start with erroneous periods ('" + segmentName + "').");
            }
            function handleSlug(previousSlug, nextSlug) {
                if (previousSlug !== null) {
                    // If the specific segment already has a slug but the slug is not `something`
                    // This prevents collisions like:
                    // pages/[post]/index.js
                    // pages/[id]/index.js
                    // Because currently multiple dynamic params on the same segment level are not supported
                    if (previousSlug !== nextSlug) {
                        // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.
                        throw new Error("You cannot use different slug names for the same dynamic path ('" + previousSlug + "' !== '" + nextSlug + "').");
                    }
                }
                slugNames.forEach((slug)=>{
                    if (slug === nextSlug) {
                        throw new Error('You cannot have the same slug name "' + nextSlug + '" repeat within a single dynamic path');
                    }
                    if (slug.replace(/\W/g, '') === nextSegment.replace(/\W/g, '')) {
                        throw new Error('You cannot have the slug names "' + slug + '" and "' + nextSlug + '" differ only by non-word symbols within a single dynamic path');
                    }
                });
                slugNames.push(nextSlug);
            }
            if (isCatchAll) {
                if (isOptional) {
                    if (this.restSlugName != null) {
                        throw new Error('You cannot use both an required and optional catch-all route at the same level ("[...' + this.restSlugName + ']" and "' + urlPaths[0] + '" ).');
                    }
                    handleSlug(this.optionalRestSlugName, segmentName);
                    // slugName is kept as it can only be one particular slugName
                    this.optionalRestSlugName = segmentName;
                    // nextSegment is overwritten to [[...]] so that it can later be sorted specifically
                    nextSegment = '[[...]]';
                } else {
                    if (this.optionalRestSlugName != null) {
                        throw new Error('You cannot use both an optional and required catch-all route at the same level ("[[...' + this.optionalRestSlugName + ']]" and "' + urlPaths[0] + '").');
                    }
                    handleSlug(this.restSlugName, segmentName);
                    // slugName is kept as it can only be one particular slugName
                    this.restSlugName = segmentName;
                    // nextSegment is overwritten to [...] so that it can later be sorted specifically
                    nextSegment = '[...]';
                }
            } else {
                if (isOptional) {
                    throw new Error('Optional route parameters are not yet supported ("' + urlPaths[0] + '").');
                }
                handleSlug(this.slugName, segmentName);
                // slugName is kept as it can only be one particular slugName
                this.slugName = segmentName;
                // nextSegment is overwritten to [] so that it can later be sorted specifically
                nextSegment = '[]';
            }
        }
        // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode
        if (!this.children.has(nextSegment)) {
            this.children.set(nextSegment, new UrlNode());
        }
        this.children.get(nextSegment)._insert(urlPaths.slice(1), slugNames, isCatchAll);
    }
    constructor(){
        this.placeholder = true;
        this.children = new Map();
        this.slugName = null;
        this.restSlugName = null;
        this.optionalRestSlugName = null;
    }
}
function getSortedRoutes(normalizedPages) {
    // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment
    // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js
    // Only 1 dynamic segment per nesting level
    // So in the case that is test/integration/dynamic-routing it'll be this:
    // pages/[post]/comments.js
    // pages/blog/[post]/comment/[id].js
    // Both are fine because `pages/[post]` and `pages/blog` are on the same level
    // So in this case `UrlNode` created here has `this.slugName === 'post'`
    // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities
    // Instead what has to be passed through is the upwards path's dynamic names
    const root = new UrlNode();
    // Here the `root` gets injected multiple paths, and insert will break them up into sublevels
    normalizedPages.forEach((pagePath)=>root.insert(pagePath));
    // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority
    return root.smoosh();
}
function getSortedRouteObjects(objects, getter) {
    // We're assuming here that all the pathnames are unique, that way we can
    // sort the list and use the index as the key.
    const indexes = {};
    const pathnames = [];
    for(let i = 0; i < objects.length; i++){
        const pathname = getter(objects[i]);
        indexes[pathname] = i;
        pathnames[i] = pathname;
    }
    // Sort the pathnames.
    const sorted = getSortedRoutes(pathnames);
    // Map the sorted pathnames back to the original objects using the new sorted
    // index.
    return sorted.map((pathname)=>objects[indexes[pathname]]);
} //# sourceMappingURL=sorted-routes.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/is-dynamic.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isDynamicRoute", {
    enumerable: true,
    get: function() {
        return isDynamicRoute;
    }
});
const _interceptionroutes = __turbopack_require__("[project]/node_modules/next/dist/server/lib/interception-routes.js [app-client] (ecmascript)");
// Identify /[param]/ in route string
const TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;
function isDynamicRoute(route) {
    if ((0, _interceptionroutes.isInterceptionRouteAppPath)(route)) {
        route = (0, _interceptionroutes.extractInterceptionRouteInformation)(route).interceptedRoute;
    }
    return TEST_ROUTE.test(route);
} //# sourceMappingURL=is-dynamic.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    getSortedRouteObjects: null,
    getSortedRoutes: null,
    isDynamicRoute: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getSortedRouteObjects: function() {
        return _sortedroutes.getSortedRouteObjects;
    },
    getSortedRoutes: function() {
        return _sortedroutes.getSortedRoutes;
    },
    isDynamicRoute: function() {
        return _isdynamic.isDynamicRoute;
    }
});
const _sortedroutes = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/sorted-routes.js [app-client] (ecmascript)");
const _isdynamic = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/is-dynamic.js [app-client] (ecmascript)"); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/page-path/normalize-path-sep.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * For a given page path, this function ensures that there is no backslash
 * escaping slashes in the path. Example:
 *  - `foo\/bar\/baz` -> `foo/bar/baz`
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "normalizePathSep", {
    enumerable: true,
    get: function() {
        return normalizePathSep;
    }
});
function normalizePathSep(path) {
    return path.replace(/\\/g, '/');
} //# sourceMappingURL=normalize-path-sep.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/page-path/denormalize-page-path.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "denormalizePagePath", {
    enumerable: true,
    get: function() {
        return denormalizePagePath;
    }
});
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/index.js [app-client] (ecmascript)");
const _normalizepathsep = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/page-path/normalize-path-sep.js [app-client] (ecmascript)");
function denormalizePagePath(page) {
    let _page = (0, _normalizepathsep.normalizePathSep)(page);
    return _page.startsWith('/index/') && !(0, _utils.isDynamicRoute)(_page) ? _page.slice(6) : _page !== '/index' ? _page : '/';
} //# sourceMappingURL=denormalize-page-path.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "normalizeLocalePath", {
    enumerable: true,
    get: function() {
        return normalizeLocalePath;
    }
});
function normalizeLocalePath(pathname, locales) {
    let detectedLocale;
    // first item will be empty string from splitting at first char
    const pathnameParts = pathname.split('/');
    (locales || []).some((locale)=>{
        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {
            detectedLocale = locale;
            pathnameParts.splice(1, 1);
            pathname = pathnameParts.join('/') || '/';
            return true;
        }
        return false;
    });
    return {
        pathname,
        detectedLocale
    };
} //# sourceMappingURL=normalize-locale-path.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/mitt.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/*
MIT License

Copyright (c) Jason Miller (https://jasonformat.com/)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/ // This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
// It's been edited for the needs of this script
// See the LICENSE at the top of the file
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return mitt;
    }
});
function mitt() {
    const all = Object.create(null);
    return {
        on (type, handler) {
            (all[type] || (all[type] = [])).push(handler);
        },
        off (type, handler) {
            if (all[type]) {
                all[type].splice(all[type].indexOf(handler) >>> 0, 1);
            }
        },
        emit (type) {
            for(var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
                evts[_key - 1] = arguments[_key];
            }
            (all[type] || []).slice().map((handler)=>{
                handler(...evts);
            });
        }
    };
} //# sourceMappingURL=mitt.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    DecodeError: null,
    MiddlewareNotFoundError: null,
    MissingStaticPage: null,
    NormalizeError: null,
    PageNotFoundError: null,
    SP: null,
    ST: null,
    WEB_VITALS: null,
    execOnce: null,
    getDisplayName: null,
    getLocationOrigin: null,
    getURL: null,
    isAbsoluteUrl: null,
    isResSent: null,
    loadGetInitialProps: null,
    normalizeRepeatedSlashes: null,
    stringifyError: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DecodeError: function() {
        return DecodeError;
    },
    MiddlewareNotFoundError: function() {
        return MiddlewareNotFoundError;
    },
    MissingStaticPage: function() {
        return MissingStaticPage;
    },
    NormalizeError: function() {
        return NormalizeError;
    },
    PageNotFoundError: function() {
        return PageNotFoundError;
    },
    SP: function() {
        return SP;
    },
    ST: function() {
        return ST;
    },
    WEB_VITALS: function() {
        return WEB_VITALS;
    },
    execOnce: function() {
        return execOnce;
    },
    getDisplayName: function() {
        return getDisplayName;
    },
    getLocationOrigin: function() {
        return getLocationOrigin;
    },
    getURL: function() {
        return getURL;
    },
    isAbsoluteUrl: function() {
        return isAbsoluteUrl;
    },
    isResSent: function() {
        return isResSent;
    },
    loadGetInitialProps: function() {
        return loadGetInitialProps;
    },
    normalizeRepeatedSlashes: function() {
        return normalizeRepeatedSlashes;
    },
    stringifyError: function() {
        return stringifyError;
    }
});
const WEB_VITALS = [
    'CLS',
    'FCP',
    'FID',
    'INP',
    'LCP',
    'TTFB'
];
function execOnce(fn) {
    let used = false;
    let result;
    return function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        if (!used) {
            used = true;
            result = fn(...args);
        }
        return result;
    };
}
// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
const ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\d+\-.]*?:/;
const isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);
function getLocationOrigin() {
    const { protocol, hostname, port } = window.location;
    return protocol + "//" + hostname + (port ? ':' + port : '');
}
function getURL() {
    const { href } = window.location;
    const origin = getLocationOrigin();
    return href.substring(origin.length);
}
function getDisplayName(Component) {
    return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}
function isResSent(res) {
    return res.finished || res.headersSent;
}
function normalizeRepeatedSlashes(url) {
    const urlParts = url.split('?');
    const urlNoQuery = urlParts[0];
    return urlNoQuery // first we replace any non-encoded backslashes with forward
    // then normalize repeated forward slashes
    .replace(/\\/g, '/').replace(/\/\/+/g, '/') + (urlParts[1] ? "?" + urlParts.slice(1).join('?') : '');
}
async function loadGetInitialProps(App, ctx) {
    if ("TURBOPACK compile-time truthy", 1) {
        var _App_prototype;
        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {
            const message = '"' + getDisplayName(App) + '.getInitialProps()" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';
            throw new Error(message);
        }
    }
    // when called from _app `ctx` is nested in `ctx`
    const res = ctx.res || ctx.ctx && ctx.ctx.res;
    if (!App.getInitialProps) {
        if (ctx.ctx && ctx.Component) {
            // @ts-ignore pageProps default
            return {
                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
            };
        }
        return {};
    }
    const props = await App.getInitialProps(ctx);
    if (res && isResSent(res)) {
        return props;
    }
    if (!props) {
        const message = '"' + getDisplayName(App) + '.getInitialProps()" should resolve to an object. But found "' + props + '" instead.';
        throw new Error(message);
    }
    if ("TURBOPACK compile-time truthy", 1) {
        if (Object.keys(props).length === 0 && !ctx.ctx) {
            console.warn("" + getDisplayName(App) + " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps");
        }
    }
    return props;
}
const SP = typeof performance !== 'undefined';
const ST = SP && [
    'mark',
    'measure',
    'getEntriesByName'
].every((method)=>typeof performance[method] === 'function');
class DecodeError extends Error {
}
class NormalizeError extends Error {
}
class PageNotFoundError extends Error {
    constructor(page){
        super();
        this.code = 'ENOENT';
        this.name = 'PageNotFoundError';
        this.message = "Cannot find module for page: " + page;
    }
}
class MissingStaticPage extends Error {
    constructor(page, message){
        super();
        this.message = "Failed to load static file for page: " + page + " " + message;
    }
}
class MiddlewareNotFoundError extends Error {
    constructor(){
        super();
        this.code = 'ENOENT';
        this.message = "Cannot find the middleware module";
    }
}
function stringifyError(error) {
    return JSON.stringify({
        message: error.message,
        stack: error.stack
    });
} //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    assign: null,
    searchParamsToUrlQuery: null,
    urlQueryToSearchParams: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    assign: function() {
        return assign;
    },
    searchParamsToUrlQuery: function() {
        return searchParamsToUrlQuery;
    },
    urlQueryToSearchParams: function() {
        return urlQueryToSearchParams;
    }
});
function searchParamsToUrlQuery(searchParams) {
    const query = {};
    searchParams.forEach((value, key)=>{
        if (typeof query[key] === 'undefined') {
            query[key] = value;
        } else if (Array.isArray(query[key])) {
            query[key].push(value);
        } else {
            query[key] = [
                query[key],
                value
            ];
        }
    });
    return query;
}
function stringifyUrlQueryParam(param) {
    if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {
        return String(param);
    } else {
        return '';
    }
}
function urlQueryToSearchParams(urlQuery) {
    const result = new URLSearchParams();
    Object.entries(urlQuery).forEach((param)=>{
        let [key, value] = param;
        if (Array.isArray(value)) {
            value.forEach((item)=>result.append(key, stringifyUrlQueryParam(item)));
        } else {
            result.set(key, stringifyUrlQueryParam(value));
        }
    });
    return result;
}
function assign(target) {
    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        searchParamsList[_key - 1] = arguments[_key];
    }
    searchParamsList.forEach((searchParams)=>{
        Array.from(searchParams.keys()).forEach((key)=>target.delete(key));
        searchParams.forEach((value, key)=>target.append(key, value));
    });
    return target;
} //# sourceMappingURL=querystring.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "parseRelativeUrl", {
    enumerable: true,
    get: function() {
        return parseRelativeUrl;
    }
});
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _querystring = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)");
function parseRelativeUrl(url, base, parseQuery) {
    if (parseQuery === void 0) parseQuery = true;
    const globalBase = new URL(typeof window === 'undefined' ? 'http://n' : (0, _utils.getLocationOrigin)());
    const resolvedBase = base ? new URL(base, globalBase) : url.startsWith('.') ? new URL(typeof window === 'undefined' ? 'http://n' : window.location.href) : globalBase;
    const { pathname, searchParams, search, hash, href, origin } = new URL(url, resolvedBase);
    if (origin !== globalBase.origin) {
        throw new Error("invariant: invalid relative URL, router received " + url);
    }
    return {
        pathname,
        query: parseQuery ? (0, _querystring.searchParamsToUrlQuery)(searchParams) : undefined,
        search,
        hash,
        href: href.slice(origin.length)
    };
} //# sourceMappingURL=parse-relative-url.js.map
}}),
"[project]/node_modules/next/dist/compiled/path-to-regexp/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
(()=>{
    "use strict";
    if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = __dirname + "/";
    var e = {};
    (()=>{
        var r = e;
        Object.defineProperty(r, "__esModule", {
            value: true
        });
        function lexer(e) {
            var r = [];
            var n = 0;
            while(n < e.length){
                var t = e[n];
                if (t === "*" || t === "+" || t === "?") {
                    r.push({
                        type: "MODIFIER",
                        index: n,
                        value: e[n++]
                    });
                    continue;
                }
                if (t === "\\") {
                    r.push({
                        type: "ESCAPED_CHAR",
                        index: n++,
                        value: e[n++]
                    });
                    continue;
                }
                if (t === "{") {
                    r.push({
                        type: "OPEN",
                        index: n,
                        value: e[n++]
                    });
                    continue;
                }
                if (t === "}") {
                    r.push({
                        type: "CLOSE",
                        index: n,
                        value: e[n++]
                    });
                    continue;
                }
                if (t === ":") {
                    var i = "";
                    var a = n + 1;
                    while(a < e.length){
                        var o = e.charCodeAt(a);
                        if (o >= 48 && o <= 57 || o >= 65 && o <= 90 || o >= 97 && o <= 122 || o === 95) {
                            i += e[a++];
                            continue;
                        }
                        break;
                    }
                    if (!i) throw new TypeError("Missing parameter name at " + n);
                    r.push({
                        type: "NAME",
                        index: n,
                        value: i
                    });
                    n = a;
                    continue;
                }
                if (t === "(") {
                    var f = 1;
                    var u = "";
                    var a = n + 1;
                    if (e[a] === "?") {
                        throw new TypeError('Pattern cannot start with "?" at ' + a);
                    }
                    while(a < e.length){
                        if (e[a] === "\\") {
                            u += e[a++] + e[a++];
                            continue;
                        }
                        if (e[a] === ")") {
                            f--;
                            if (f === 0) {
                                a++;
                                break;
                            }
                        } else if (e[a] === "(") {
                            f++;
                            if (e[a + 1] !== "?") {
                                throw new TypeError("Capturing groups are not allowed at " + a);
                            }
                        }
                        u += e[a++];
                    }
                    if (f) throw new TypeError("Unbalanced pattern at " + n);
                    if (!u) throw new TypeError("Missing pattern at " + n);
                    r.push({
                        type: "PATTERN",
                        index: n,
                        value: u
                    });
                    n = a;
                    continue;
                }
                r.push({
                    type: "CHAR",
                    index: n,
                    value: e[n++]
                });
            }
            r.push({
                type: "END",
                index: n,
                value: ""
            });
            return r;
        }
        function parse(e, r) {
            if (r === void 0) {
                r = {};
            }
            var n = lexer(e);
            var t = r.prefixes, i = t === void 0 ? "./" : t;
            var a = "[^" + escapeString(r.delimiter || "/#?") + "]+?";
            var o = [];
            var f = 0;
            var u = 0;
            var p = "";
            var tryConsume = function(e) {
                if (u < n.length && n[u].type === e) return n[u++].value;
            };
            var mustConsume = function(e) {
                var r = tryConsume(e);
                if (r !== undefined) return r;
                var t = n[u], i = t.type, a = t.index;
                throw new TypeError("Unexpected " + i + " at " + a + ", expected " + e);
            };
            var consumeText = function() {
                var e = "";
                var r;
                while(r = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR")){
                    e += r;
                }
                return e;
            };
            while(u < n.length){
                var v = tryConsume("CHAR");
                var c = tryConsume("NAME");
                var s = tryConsume("PATTERN");
                if (c || s) {
                    var d = v || "";
                    if (i.indexOf(d) === -1) {
                        p += d;
                        d = "";
                    }
                    if (p) {
                        o.push(p);
                        p = "";
                    }
                    o.push({
                        name: c || f++,
                        prefix: d,
                        suffix: "",
                        pattern: s || a,
                        modifier: tryConsume("MODIFIER") || ""
                    });
                    continue;
                }
                var g = v || tryConsume("ESCAPED_CHAR");
                if (g) {
                    p += g;
                    continue;
                }
                if (p) {
                    o.push(p);
                    p = "";
                }
                var x = tryConsume("OPEN");
                if (x) {
                    var d = consumeText();
                    var l = tryConsume("NAME") || "";
                    var h = tryConsume("PATTERN") || "";
                    var m = consumeText();
                    mustConsume("CLOSE");
                    o.push({
                        name: l || (h ? f++ : ""),
                        pattern: l && !h ? a : h,
                        prefix: d,
                        suffix: m,
                        modifier: tryConsume("MODIFIER") || ""
                    });
                    continue;
                }
                mustConsume("END");
            }
            return o;
        }
        r.parse = parse;
        function compile(e, r) {
            return tokensToFunction(parse(e, r), r);
        }
        r.compile = compile;
        function tokensToFunction(e, r) {
            if (r === void 0) {
                r = {};
            }
            var n = flags(r);
            var t = r.encode, i = t === void 0 ? function(e) {
                return e;
            } : t, a = r.validate, o = a === void 0 ? true : a;
            var f = e.map(function(e) {
                if (typeof e === "object") {
                    return new RegExp("^(?:" + e.pattern + ")$", n);
                }
            });
            return function(r) {
                var n = "";
                for(var t = 0; t < e.length; t++){
                    var a = e[t];
                    if (typeof a === "string") {
                        n += a;
                        continue;
                    }
                    var u = r ? r[a.name] : undefined;
                    var p = a.modifier === "?" || a.modifier === "*";
                    var v = a.modifier === "*" || a.modifier === "+";
                    if (Array.isArray(u)) {
                        if (!v) {
                            throw new TypeError('Expected "' + a.name + '" to not repeat, but got an array');
                        }
                        if (u.length === 0) {
                            if (p) continue;
                            throw new TypeError('Expected "' + a.name + '" to not be empty');
                        }
                        for(var c = 0; c < u.length; c++){
                            var s = i(u[c], a);
                            if (o && !f[t].test(s)) {
                                throw new TypeError('Expected all "' + a.name + '" to match "' + a.pattern + '", but got "' + s + '"');
                            }
                            n += a.prefix + s + a.suffix;
                        }
                        continue;
                    }
                    if (typeof u === "string" || typeof u === "number") {
                        var s = i(String(u), a);
                        if (o && !f[t].test(s)) {
                            throw new TypeError('Expected "' + a.name + '" to match "' + a.pattern + '", but got "' + s + '"');
                        }
                        n += a.prefix + s + a.suffix;
                        continue;
                    }
                    if (p) continue;
                    var d = v ? "an array" : "a string";
                    throw new TypeError('Expected "' + a.name + '" to be ' + d);
                }
                return n;
            };
        }
        r.tokensToFunction = tokensToFunction;
        function match(e, r) {
            var n = [];
            var t = pathToRegexp(e, n, r);
            return regexpToFunction(t, n, r);
        }
        r.match = match;
        function regexpToFunction(e, r, n) {
            if (n === void 0) {
                n = {};
            }
            var t = n.decode, i = t === void 0 ? function(e) {
                return e;
            } : t;
            return function(n) {
                var t = e.exec(n);
                if (!t) return false;
                var a = t[0], o = t.index;
                var f = Object.create(null);
                var _loop_1 = function(e) {
                    if (t[e] === undefined) return "continue";
                    var n = r[e - 1];
                    if (n.modifier === "*" || n.modifier === "+") {
                        f[n.name] = t[e].split(n.prefix + n.suffix).map(function(e) {
                            return i(e, n);
                        });
                    } else {
                        f[n.name] = i(t[e], n);
                    }
                };
                for(var u = 1; u < t.length; u++){
                    _loop_1(u);
                }
                return {
                    path: a,
                    index: o,
                    params: f
                };
            };
        }
        r.regexpToFunction = regexpToFunction;
        function escapeString(e) {
            return e.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
        }
        function flags(e) {
            return e && e.sensitive ? "" : "i";
        }
        function regexpToRegexp(e, r) {
            if (!r) return e;
            var n = e.source.match(/\((?!\?)/g);
            if (n) {
                for(var t = 0; t < n.length; t++){
                    r.push({
                        name: t,
                        prefix: "",
                        suffix: "",
                        modifier: "",
                        pattern: ""
                    });
                }
            }
            return e;
        }
        function arrayToRegexp(e, r, n) {
            var t = e.map(function(e) {
                return pathToRegexp(e, r, n).source;
            });
            return new RegExp("(?:" + t.join("|") + ")", flags(n));
        }
        function stringToRegexp(e, r, n) {
            return tokensToRegexp(parse(e, n), r, n);
        }
        function tokensToRegexp(e, r, n) {
            if (n === void 0) {
                n = {};
            }
            var t = n.strict, i = t === void 0 ? false : t, a = n.start, o = a === void 0 ? true : a, f = n.end, u = f === void 0 ? true : f, p = n.encode, v = p === void 0 ? function(e) {
                return e;
            } : p;
            var c = "[" + escapeString(n.endsWith || "") + "]|$";
            var s = "[" + escapeString(n.delimiter || "/#?") + "]";
            var d = o ? "^" : "";
            for(var g = 0, x = e; g < x.length; g++){
                var l = x[g];
                if (typeof l === "string") {
                    d += escapeString(v(l));
                } else {
                    var h = escapeString(v(l.prefix));
                    var m = escapeString(v(l.suffix));
                    if (l.pattern) {
                        if (r) r.push(l);
                        if (h || m) {
                            if (l.modifier === "+" || l.modifier === "*") {
                                var E = l.modifier === "*" ? "?" : "";
                                d += "(?:" + h + "((?:" + l.pattern + ")(?:" + m + h + "(?:" + l.pattern + "))*)" + m + ")" + E;
                            } else {
                                d += "(?:" + h + "(" + l.pattern + ")" + m + ")" + l.modifier;
                            }
                        } else {
                            d += "(" + l.pattern + ")" + l.modifier;
                        }
                    } else {
                        d += "(?:" + h + m + ")" + l.modifier;
                    }
                }
            }
            if (u) {
                if (!i) d += s + "?";
                d += !n.endsWith ? "$" : "(?=" + c + ")";
            } else {
                var T = e[e.length - 1];
                var y = typeof T === "string" ? s.indexOf(T[T.length - 1]) > -1 : T === undefined;
                if (!i) {
                    d += "(?:" + s + "(?=" + c + "))?";
                }
                if (!y) {
                    d += "(?=" + s + "|" + c + ")";
                }
            }
            return new RegExp(d, flags(n));
        }
        r.tokensToRegexp = tokensToRegexp;
        function pathToRegexp(e, r, n) {
            if (e instanceof RegExp) return regexpToRegexp(e, r);
            if (Array.isArray(e)) return arrayToRegexp(e, r, n);
            return stringToRegexp(e, r, n);
        }
        r.pathToRegexp = pathToRegexp;
    })();
    module.exports = e;
})();
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/path-match.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getPathMatch", {
    enumerable: true,
    get: function() {
        return getPathMatch;
    }
});
const _pathtoregexp = __turbopack_require__("[project]/node_modules/next/dist/compiled/path-to-regexp/index.js [app-client] (ecmascript)");
function getPathMatch(path, options) {
    const keys = [];
    const regexp = (0, _pathtoregexp.pathToRegexp)(path, keys, {
        delimiter: '/',
        sensitive: typeof (options == null ? void 0 : options.sensitive) === 'boolean' ? options.sensitive : false,
        strict: options == null ? void 0 : options.strict
    });
    const matcher = (0, _pathtoregexp.regexpToFunction)((options == null ? void 0 : options.regexModifier) ? new RegExp(options.regexModifier(regexp.source), regexp.flags) : regexp, keys);
    /**
   * A matcher function that will check if a given pathname matches the path
   * given in the builder function. When the path does not match it will return
   * `false` but if it does it will return an object with the matched params
   * merged with the params provided in the second argument.
   */ return (pathname, params)=>{
        // If no pathname is provided it's not a match.
        if (typeof pathname !== 'string') return false;
        const match = matcher(pathname);
        // If the path did not match `false` will be returned.
        if (!match) return false;
        /**
     * If unnamed params are not allowed they must be removed from
     * the matched parameters. path-to-regexp uses "string" for named and
     * "number" for unnamed parameters.
     */ if (options == null ? void 0 : options.removeUnnamedParams) {
            for (const key of keys){
                if (typeof key.name === 'number') {
                    delete match.params[key.name];
                }
            }
        }
        return {
            ...params,
            ...match.params
        };
    };
} //# sourceMappingURL=path-match.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/escape-regexp.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
// regexp is based on https://github.com/sindresorhus/escape-string-regexp
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "escapeStringRegexp", {
    enumerable: true,
    get: function() {
        return escapeStringRegexp;
    }
});
const reHasRegExp = /[|\\{}()[\]^$+*?.-]/;
const reReplaceRegExp = /[|\\{}()[\]^$+*?.-]/g;
function escapeStringRegexp(str) {
    // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23
    if (reHasRegExp.test(str)) {
        return str.replace(reReplaceRegExp, '\\$&');
    }
    return str;
} //# sourceMappingURL=escape-regexp.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/parse-url.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "parseUrl", {
    enumerable: true,
    get: function() {
        return parseUrl;
    }
});
const _querystring = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)");
const _parserelativeurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js [app-client] (ecmascript)");
function parseUrl(url) {
    if (url.startsWith('/')) {
        return (0, _parserelativeurl.parseRelativeUrl)(url);
    }
    const parsedURL = new URL(url);
    return {
        hash: parsedURL.hash,
        hostname: parsedURL.hostname,
        href: parsedURL.href,
        pathname: parsedURL.pathname,
        port: parsedURL.port,
        protocol: parsedURL.protocol,
        query: (0, _querystring.searchParamsToUrlQuery)(parsedURL.searchParams),
        search: parsedURL.search
    };
} //# sourceMappingURL=parse-url.js.map
}}),
"[project]/node_modules/next/dist/compiled/cookie/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
(()=>{
    "use strict";
    if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = __dirname + "/";
    var e = {};
    (()=>{
        var r = e;
        /*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */ r.parse = parse;
        r.serialize = serialize;
        var i = decodeURIComponent;
        var t = encodeURIComponent;
        var a = /; */;
        var n = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
        function parse(e, r) {
            if (typeof e !== "string") {
                throw new TypeError("argument str must be a string");
            }
            var t = {};
            var n = r || {};
            var o = e.split(a);
            var s = n.decode || i;
            for(var p = 0; p < o.length; p++){
                var f = o[p];
                var u = f.indexOf("=");
                if (u < 0) {
                    continue;
                }
                var v = f.substr(0, u).trim();
                var c = f.substr(++u, f.length).trim();
                if ('"' == c[0]) {
                    c = c.slice(1, -1);
                }
                if (undefined == t[v]) {
                    t[v] = tryDecode(c, s);
                }
            }
            return t;
        }
        function serialize(e, r, i) {
            var a = i || {};
            var o = a.encode || t;
            if (typeof o !== "function") {
                throw new TypeError("option encode is invalid");
            }
            if (!n.test(e)) {
                throw new TypeError("argument name is invalid");
            }
            var s = o(r);
            if (s && !n.test(s)) {
                throw new TypeError("argument val is invalid");
            }
            var p = e + "=" + s;
            if (null != a.maxAge) {
                var f = a.maxAge - 0;
                if (isNaN(f) || !isFinite(f)) {
                    throw new TypeError("option maxAge is invalid");
                }
                p += "; Max-Age=" + Math.floor(f);
            }
            if (a.domain) {
                if (!n.test(a.domain)) {
                    throw new TypeError("option domain is invalid");
                }
                p += "; Domain=" + a.domain;
            }
            if (a.path) {
                if (!n.test(a.path)) {
                    throw new TypeError("option path is invalid");
                }
                p += "; Path=" + a.path;
            }
            if (a.expires) {
                if (typeof a.expires.toUTCString !== "function") {
                    throw new TypeError("option expires is invalid");
                }
                p += "; Expires=" + a.expires.toUTCString();
            }
            if (a.httpOnly) {
                p += "; HttpOnly";
            }
            if (a.secure) {
                p += "; Secure";
            }
            if (a.sameSite) {
                var u = typeof a.sameSite === "string" ? a.sameSite.toLowerCase() : a.sameSite;
                switch(u){
                    case true:
                        p += "; SameSite=Strict";
                        break;
                    case "lax":
                        p += "; SameSite=Lax";
                        break;
                    case "strict":
                        p += "; SameSite=Strict";
                        break;
                    case "none":
                        p += "; SameSite=None";
                        break;
                    default:
                        throw new TypeError("option sameSite is invalid");
                }
            }
            return p;
        }
        function tryDecode(e, r) {
            try {
                return r(e);
            } catch (r) {
                return e;
            }
        }
    })();
    module.exports = e;
})();
}}),
"[project]/node_modules/next/dist/server/api-utils/get-cookie-parser.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getCookieParser", {
    enumerable: true,
    get: function() {
        return getCookieParser;
    }
});
function getCookieParser(headers) {
    return function parseCookie() {
        const { cookie } = headers;
        if (!cookie) {
            return {};
        }
        const { parse: parseCookieFn } = __turbopack_require__("[project]/node_modules/next/dist/compiled/cookie/index.js [app-client] (ecmascript)");
        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);
    };
} //# sourceMappingURL=get-cookie-parser.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/prepare-destination.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    compileNonPath: null,
    matchHas: null,
    prepareDestination: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    compileNonPath: function() {
        return compileNonPath;
    },
    matchHas: function() {
        return matchHas;
    },
    prepareDestination: function() {
        return prepareDestination;
    }
});
const _pathtoregexp = __turbopack_require__("[project]/node_modules/next/dist/compiled/path-to-regexp/index.js [app-client] (ecmascript)");
const _escaperegexp = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/escape-regexp.js [app-client] (ecmascript)");
const _parseurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-url.js [app-client] (ecmascript)");
const _interceptionroutes = __turbopack_require__("[project]/node_modules/next/dist/server/lib/interception-routes.js [app-client] (ecmascript)");
const _approuterheaders = __turbopack_require__("[project]/node_modules/next/dist/client/components/app-router-headers.js [app-client] (ecmascript)");
const _getcookieparser = __turbopack_require__("[project]/node_modules/next/dist/server/api-utils/get-cookie-parser.js [app-client] (ecmascript)");
/**
 * Ensure only a-zA-Z are used for param names for proper interpolating
 * with path-to-regexp
 */ function getSafeParamName(paramName) {
    let newParamName = '';
    for(let i = 0; i < paramName.length; i++){
        const charCode = paramName.charCodeAt(i);
        if (charCode > 64 && charCode < 91 || // A-Z
        charCode > 96 && charCode < 123 // a-z
        ) {
            newParamName += paramName[i];
        }
    }
    return newParamName;
}
function escapeSegment(str, segmentName) {
    return str.replace(new RegExp(":" + (0, _escaperegexp.escapeStringRegexp)(segmentName), 'g'), "__ESC_COLON_" + segmentName);
}
function unescapeSegments(str) {
    return str.replace(/__ESC_COLON_/gi, ':');
}
function matchHas(req, query, has, missing) {
    if (has === void 0) has = [];
    if (missing === void 0) missing = [];
    const params = {};
    const hasMatch = (hasItem)=>{
        let value;
        let key = hasItem.key;
        switch(hasItem.type){
            case 'header':
                {
                    key = key.toLowerCase();
                    value = req.headers[key];
                    break;
                }
            case 'cookie':
                {
                    if ('cookies' in req) {
                        value = req.cookies[hasItem.key];
                    } else {
                        const cookies = (0, _getcookieparser.getCookieParser)(req.headers)();
                        value = cookies[hasItem.key];
                    }
                    break;
                }
            case 'query':
                {
                    value = query[key];
                    break;
                }
            case 'host':
                {
                    const { host } = (req == null ? void 0 : req.headers) || {};
                    // remove port from host if present
                    const hostname = host == null ? void 0 : host.split(':', 1)[0].toLowerCase();
                    value = hostname;
                    break;
                }
            default:
                {
                    break;
                }
        }
        if (!hasItem.value && value) {
            params[getSafeParamName(key)] = value;
            return true;
        } else if (value) {
            const matcher = new RegExp("^" + hasItem.value + "$");
            const matches = Array.isArray(value) ? value.slice(-1)[0].match(matcher) : value.match(matcher);
            if (matches) {
                if (Array.isArray(matches)) {
                    if (matches.groups) {
                        Object.keys(matches.groups).forEach((groupKey)=>{
                            params[groupKey] = matches.groups[groupKey];
                        });
                    } else if (hasItem.type === 'host' && matches[0]) {
                        params.host = matches[0];
                    }
                }
                return true;
            }
        }
        return false;
    };
    const allMatch = has.every((item)=>hasMatch(item)) && !missing.some((item)=>hasMatch(item));
    if (allMatch) {
        return params;
    }
    return false;
}
function compileNonPath(value, params) {
    if (!value.includes(':')) {
        return value;
    }
    for (const key of Object.keys(params)){
        if (value.includes(":" + key)) {
            value = value.replace(new RegExp(":" + key + "\\*", 'g'), ":" + key + "--ESCAPED_PARAM_ASTERISKS").replace(new RegExp(":" + key + "\\?", 'g'), ":" + key + "--ESCAPED_PARAM_QUESTION").replace(new RegExp(":" + key + "\\+", 'g'), ":" + key + "--ESCAPED_PARAM_PLUS").replace(new RegExp(":" + key + "(?!\\w)", 'g'), "--ESCAPED_PARAM_COLON" + key);
        }
    }
    value = value.replace(/(:|\*|\?|\+|\(|\)|\{|\})/g, '\\$1').replace(/--ESCAPED_PARAM_PLUS/g, '+').replace(/--ESCAPED_PARAM_COLON/g, ':').replace(/--ESCAPED_PARAM_QUESTION/g, '?').replace(/--ESCAPED_PARAM_ASTERISKS/g, '*');
    // the value needs to start with a forward-slash to be compiled
    // correctly
    return (0, _pathtoregexp.compile)("/" + value, {
        validate: false
    })(params).slice(1);
}
function prepareDestination(args) {
    const query = Object.assign({}, args.query);
    delete query.__nextLocale;
    delete query.__nextDefaultLocale;
    delete query.__nextDataReq;
    delete query.__nextInferredLocaleFromDefault;
    delete query[_approuterheaders.NEXT_RSC_UNION_QUERY];
    let escapedDestination = args.destination;
    for (const param of Object.keys({
        ...args.params,
        ...query
    })){
        escapedDestination = param ? escapeSegment(escapedDestination, param) : escapedDestination;
    }
    const parsedDestination = (0, _parseurl.parseUrl)(escapedDestination);
    const destQuery = parsedDestination.query;
    const destPath = unescapeSegments("" + parsedDestination.pathname + (parsedDestination.hash || ''));
    const destHostname = unescapeSegments(parsedDestination.hostname || '');
    const destPathParamKeys = [];
    const destHostnameParamKeys = [];
    (0, _pathtoregexp.pathToRegexp)(destPath, destPathParamKeys);
    (0, _pathtoregexp.pathToRegexp)(destHostname, destHostnameParamKeys);
    const destParams = [];
    destPathParamKeys.forEach((key)=>destParams.push(key.name));
    destHostnameParamKeys.forEach((key)=>destParams.push(key.name));
    const destPathCompiler = (0, _pathtoregexp.compile)(destPath, // have already validated before we got to this point and validating
    // breaks compiling destinations with named pattern params from the source
    // e.g. /something:hello(.*) -> /another/:hello is broken with validation
    // since compile validation is meant for reversing and not for inserting
    // params from a separate path-regex into another
    {
        validate: false
    });
    const destHostnameCompiler = (0, _pathtoregexp.compile)(destHostname, {
        validate: false
    });
    // update any params in query values
    for (const [key, strOrArray] of Object.entries(destQuery)){
        // the value needs to start with a forward-slash to be compiled
        // correctly
        if (Array.isArray(strOrArray)) {
            destQuery[key] = strOrArray.map((value)=>compileNonPath(unescapeSegments(value), args.params));
        } else if (typeof strOrArray === 'string') {
            destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params);
        }
    }
    // add path params to query if it's not a redirect and not
    // already defined in destination query or path
    let paramKeys = Object.keys(args.params).filter((name)=>name !== 'nextInternalLocale');
    if (args.appendParamsToQuery && !paramKeys.some((key)=>destParams.includes(key))) {
        for (const key of paramKeys){
            if (!(key in destQuery)) {
                destQuery[key] = args.params[key];
            }
        }
    }
    let newUrl;
    // The compiler also that the interception route marker is an unnamed param, hence '0',
    // so we need to add it to the params object.
    if ((0, _interceptionroutes.isInterceptionRouteAppPath)(destPath)) {
        for (const segment of destPath.split('/')){
            const marker = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));
            if (marker) {
                if (marker === '(..)(..)') {
                    args.params['0'] = '(..)';
                    args.params['1'] = '(..)';
                } else {
                    args.params['0'] = marker;
                }
                break;
            }
        }
    }
    try {
        newUrl = destPathCompiler(args.params);
        const [pathname, hash] = newUrl.split('#', 2);
        parsedDestination.hostname = destHostnameCompiler(args.params);
        parsedDestination.pathname = pathname;
        parsedDestination.hash = "" + (hash ? '#' : '') + (hash || '');
        delete parsedDestination.search;
    } catch (err) {
        if (err.message.match(/Expected .*? to not repeat, but got an array/)) {
            throw new Error("To use a multi-match in the destination you must add `*` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match");
        }
        throw err;
    }
    // Query merge order lowest priority to highest
    // 1. initial URL query values
    // 2. path segment values
    // 3. destination specified query values
    parsedDestination.query = {
        ...query,
        ...parsedDestination.query
    };
    return {
        newUrl,
        destQuery,
        parsedDestination
    };
} //# sourceMappingURL=prepare-destination.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/resolve-rewrites.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return resolveRewrites;
    }
});
const _pathmatch = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/path-match.js [app-client] (ecmascript)");
const _preparedestination = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/prepare-destination.js [app-client] (ecmascript)");
const _removetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js [app-client] (ecmascript)");
const _normalizelocalepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js [app-client] (ecmascript)");
const _removebasepath = __turbopack_require__("[project]/node_modules/next/dist/client/remove-base-path.js [app-client] (ecmascript)");
const _parserelativeurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js [app-client] (ecmascript)");
function resolveRewrites(asPath, pages, rewrites, query, resolveHref, locales) {
    let matchedPage = false;
    let externalDest = false;
    let parsedAs = (0, _parserelativeurl.parseRelativeUrl)(asPath);
    let fsPathname = (0, _removetrailingslash.removeTrailingSlash)((0, _normalizelocalepath.normalizeLocalePath)((0, _removebasepath.removeBasePath)(parsedAs.pathname), locales).pathname);
    let resolvedHref;
    const handleRewrite = (rewrite)=>{
        const matcher = (0, _pathmatch.getPathMatch)(rewrite.source + (("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : ''), {
            removeUnnamedParams: true,
            strict: true
        });
        let params = matcher(parsedAs.pathname);
        if ((rewrite.has || rewrite.missing) && params) {
            const hasParams = (0, _preparedestination.matchHas)({
                headers: {
                    host: document.location.hostname,
                    'user-agent': navigator.userAgent
                },
                cookies: document.cookie.split('; ').reduce((acc, item)=>{
                    const [key, ...value] = item.split('=');
                    acc[key] = value.join('=');
                    return acc;
                }, {})
            }, parsedAs.query, rewrite.has, rewrite.missing);
            if (hasParams) {
                Object.assign(params, hasParams);
            } else {
                params = false;
            }
        }
        if (params) {
            if (!rewrite.destination) {
                // this is a proxied rewrite which isn't handled on the client
                externalDest = true;
                return true;
            }
            const destRes = (0, _preparedestination.prepareDestination)({
                appendParamsToQuery: true,
                destination: rewrite.destination,
                params: params,
                query: query
            });
            parsedAs = destRes.parsedDestination;
            asPath = destRes.newUrl;
            Object.assign(query, destRes.parsedDestination.query);
            fsPathname = (0, _removetrailingslash.removeTrailingSlash)((0, _normalizelocalepath.normalizeLocalePath)((0, _removebasepath.removeBasePath)(asPath), locales).pathname);
            if (pages.includes(fsPathname)) {
                // check if we now match a page as this means we are done
                // resolving the rewrites
                matchedPage = true;
                resolvedHref = fsPathname;
                return true;
            }
            // check if we match a dynamic-route, if so we break the rewrites chain
            resolvedHref = resolveHref(fsPathname);
            if (resolvedHref !== asPath && pages.includes(resolvedHref)) {
                matchedPage = true;
                return true;
            }
        }
    };
    let finished = false;
    for(let i = 0; i < rewrites.beforeFiles.length; i++){
        // we don't end after match in beforeFiles to allow
        // continuing through all beforeFiles rewrites
        handleRewrite(rewrites.beforeFiles[i]);
    }
    matchedPage = pages.includes(fsPathname);
    if (!matchedPage) {
        if (!finished) {
            for(let i = 0; i < rewrites.afterFiles.length; i++){
                if (handleRewrite(rewrites.afterFiles[i])) {
                    finished = true;
                    break;
                }
            }
        }
        // check dynamic route before processing fallback rewrites
        if (!finished) {
            resolvedHref = resolveHref(fsPathname);
            matchedPage = pages.includes(resolvedHref);
            finished = matchedPage;
        }
        if (!finished) {
            for(let i = 0; i < rewrites.fallback.length; i++){
                if (handleRewrite(rewrites.fallback[i])) {
                    finished = true;
                    break;
                }
            }
        }
    }
    return {
        asPath,
        parsedAs,
        matchedPage,
        resolvedHref,
        externalDest
    };
} //# sourceMappingURL=resolve-rewrites.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/route-matcher.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getRouteMatcher", {
    enumerable: true,
    get: function() {
        return getRouteMatcher;
    }
});
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
function getRouteMatcher(param) {
    let { re, groups } = param;
    return (pathname)=>{
        const routeMatch = re.exec(pathname);
        if (!routeMatch) {
            return false;
        }
        const decode = (param)=>{
            try {
                return decodeURIComponent(param);
            } catch (_) {
                throw new _utils.DecodeError('failed to decode param');
            }
        };
        const params = {};
        Object.keys(groups).forEach((slugName)=>{
            const g = groups[slugName];
            const m = routeMatch[g.pos];
            if (m !== undefined) {
                params[slugName] = ~m.indexOf('/') ? m.split('/').map((entry)=>decode(entry)) : g.repeat ? [
                    decode(m)
                ] : decode(m);
            }
        });
        return params;
    };
} //# sourceMappingURL=route-matcher.js.map
}}),
"[project]/node_modules/next/dist/lib/constants.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    ACTION_SUFFIX: null,
    APP_DIR_ALIAS: null,
    CACHE_ONE_YEAR: null,
    DOT_NEXT_ALIAS: null,
    ESLINT_DEFAULT_DIRS: null,
    GSP_NO_RETURNED_VALUE: null,
    GSSP_COMPONENT_MEMBER_ERROR: null,
    GSSP_NO_RETURNED_VALUE: null,
    INFINITE_CACHE: null,
    INSTRUMENTATION_HOOK_FILENAME: null,
    MATCHED_PATH_HEADER: null,
    MIDDLEWARE_FILENAME: null,
    MIDDLEWARE_LOCATION_REGEXP: null,
    NEXT_BODY_SUFFIX: null,
    NEXT_CACHE_IMPLICIT_TAG_ID: null,
    NEXT_CACHE_REVALIDATED_TAGS_HEADER: null,
    NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: null,
    NEXT_CACHE_SOFT_TAGS_HEADER: null,
    NEXT_CACHE_SOFT_TAG_MAX_LENGTH: null,
    NEXT_CACHE_TAGS_HEADER: null,
    NEXT_CACHE_TAG_MAX_ITEMS: null,
    NEXT_CACHE_TAG_MAX_LENGTH: null,
    NEXT_DATA_SUFFIX: null,
    NEXT_INTERCEPTION_MARKER_PREFIX: null,
    NEXT_META_SUFFIX: null,
    NEXT_QUERY_PARAM_PREFIX: null,
    NEXT_RESUME_HEADER: null,
    NON_STANDARD_NODE_ENV: null,
    PAGES_DIR_ALIAS: null,
    PRERENDER_REVALIDATE_HEADER: null,
    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: null,
    PUBLIC_DIR_MIDDLEWARE_CONFLICT: null,
    ROOT_DIR_ALIAS: null,
    RSC_ACTION_CLIENT_WRAPPER_ALIAS: null,
    RSC_ACTION_ENCRYPTION_ALIAS: null,
    RSC_ACTION_PROXY_ALIAS: null,
    RSC_ACTION_VALIDATE_ALIAS: null,
    RSC_CACHE_WRAPPER_ALIAS: null,
    RSC_MOD_REF_PROXY_ALIAS: null,
    RSC_PREFETCH_SUFFIX: null,
    RSC_SEGMENTS_DIR_SUFFIX: null,
    RSC_SEGMENT_SUFFIX: null,
    RSC_SUFFIX: null,
    SERVER_PROPS_EXPORT_ERROR: null,
    SERVER_PROPS_GET_INIT_PROPS_CONFLICT: null,
    SERVER_PROPS_SSG_CONFLICT: null,
    SERVER_RUNTIME: null,
    SSG_FALLBACK_EXPORT_ERROR: null,
    SSG_GET_INITIAL_PROPS_CONFLICT: null,
    STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: null,
    UNSTABLE_REVALIDATE_RENAME_ERROR: null,
    WEBPACK_LAYERS: null,
    WEBPACK_RESOURCE_QUERIES: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ACTION_SUFFIX: function() {
        return ACTION_SUFFIX;
    },
    APP_DIR_ALIAS: function() {
        return APP_DIR_ALIAS;
    },
    CACHE_ONE_YEAR: function() {
        return CACHE_ONE_YEAR;
    },
    DOT_NEXT_ALIAS: function() {
        return DOT_NEXT_ALIAS;
    },
    ESLINT_DEFAULT_DIRS: function() {
        return ESLINT_DEFAULT_DIRS;
    },
    GSP_NO_RETURNED_VALUE: function() {
        return GSP_NO_RETURNED_VALUE;
    },
    GSSP_COMPONENT_MEMBER_ERROR: function() {
        return GSSP_COMPONENT_MEMBER_ERROR;
    },
    GSSP_NO_RETURNED_VALUE: function() {
        return GSSP_NO_RETURNED_VALUE;
    },
    INFINITE_CACHE: function() {
        return INFINITE_CACHE;
    },
    INSTRUMENTATION_HOOK_FILENAME: function() {
        return INSTRUMENTATION_HOOK_FILENAME;
    },
    MATCHED_PATH_HEADER: function() {
        return MATCHED_PATH_HEADER;
    },
    MIDDLEWARE_FILENAME: function() {
        return MIDDLEWARE_FILENAME;
    },
    MIDDLEWARE_LOCATION_REGEXP: function() {
        return MIDDLEWARE_LOCATION_REGEXP;
    },
    NEXT_BODY_SUFFIX: function() {
        return NEXT_BODY_SUFFIX;
    },
    NEXT_CACHE_IMPLICIT_TAG_ID: function() {
        return NEXT_CACHE_IMPLICIT_TAG_ID;
    },
    NEXT_CACHE_REVALIDATED_TAGS_HEADER: function() {
        return NEXT_CACHE_REVALIDATED_TAGS_HEADER;
    },
    NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: function() {
        return NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER;
    },
    NEXT_CACHE_SOFT_TAGS_HEADER: function() {
        return NEXT_CACHE_SOFT_TAGS_HEADER;
    },
    NEXT_CACHE_SOFT_TAG_MAX_LENGTH: function() {
        return NEXT_CACHE_SOFT_TAG_MAX_LENGTH;
    },
    NEXT_CACHE_TAGS_HEADER: function() {
        return NEXT_CACHE_TAGS_HEADER;
    },
    NEXT_CACHE_TAG_MAX_ITEMS: function() {
        return NEXT_CACHE_TAG_MAX_ITEMS;
    },
    NEXT_CACHE_TAG_MAX_LENGTH: function() {
        return NEXT_CACHE_TAG_MAX_LENGTH;
    },
    NEXT_DATA_SUFFIX: function() {
        return NEXT_DATA_SUFFIX;
    },
    NEXT_INTERCEPTION_MARKER_PREFIX: function() {
        return NEXT_INTERCEPTION_MARKER_PREFIX;
    },
    NEXT_META_SUFFIX: function() {
        return NEXT_META_SUFFIX;
    },
    NEXT_QUERY_PARAM_PREFIX: function() {
        return NEXT_QUERY_PARAM_PREFIX;
    },
    NEXT_RESUME_HEADER: function() {
        return NEXT_RESUME_HEADER;
    },
    NON_STANDARD_NODE_ENV: function() {
        return NON_STANDARD_NODE_ENV;
    },
    PAGES_DIR_ALIAS: function() {
        return PAGES_DIR_ALIAS;
    },
    PRERENDER_REVALIDATE_HEADER: function() {
        return PRERENDER_REVALIDATE_HEADER;
    },
    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: function() {
        return PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER;
    },
    PUBLIC_DIR_MIDDLEWARE_CONFLICT: function() {
        return PUBLIC_DIR_MIDDLEWARE_CONFLICT;
    },
    ROOT_DIR_ALIAS: function() {
        return ROOT_DIR_ALIAS;
    },
    RSC_ACTION_CLIENT_WRAPPER_ALIAS: function() {
        return RSC_ACTION_CLIENT_WRAPPER_ALIAS;
    },
    RSC_ACTION_ENCRYPTION_ALIAS: function() {
        return RSC_ACTION_ENCRYPTION_ALIAS;
    },
    RSC_ACTION_PROXY_ALIAS: function() {
        return RSC_ACTION_PROXY_ALIAS;
    },
    RSC_ACTION_VALIDATE_ALIAS: function() {
        return RSC_ACTION_VALIDATE_ALIAS;
    },
    RSC_CACHE_WRAPPER_ALIAS: function() {
        return RSC_CACHE_WRAPPER_ALIAS;
    },
    RSC_MOD_REF_PROXY_ALIAS: function() {
        return RSC_MOD_REF_PROXY_ALIAS;
    },
    RSC_PREFETCH_SUFFIX: function() {
        return RSC_PREFETCH_SUFFIX;
    },
    RSC_SEGMENTS_DIR_SUFFIX: function() {
        return RSC_SEGMENTS_DIR_SUFFIX;
    },
    RSC_SEGMENT_SUFFIX: function() {
        return RSC_SEGMENT_SUFFIX;
    },
    RSC_SUFFIX: function() {
        return RSC_SUFFIX;
    },
    SERVER_PROPS_EXPORT_ERROR: function() {
        return SERVER_PROPS_EXPORT_ERROR;
    },
    SERVER_PROPS_GET_INIT_PROPS_CONFLICT: function() {
        return SERVER_PROPS_GET_INIT_PROPS_CONFLICT;
    },
    SERVER_PROPS_SSG_CONFLICT: function() {
        return SERVER_PROPS_SSG_CONFLICT;
    },
    SERVER_RUNTIME: function() {
        return SERVER_RUNTIME;
    },
    SSG_FALLBACK_EXPORT_ERROR: function() {
        return SSG_FALLBACK_EXPORT_ERROR;
    },
    SSG_GET_INITIAL_PROPS_CONFLICT: function() {
        return SSG_GET_INITIAL_PROPS_CONFLICT;
    },
    STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: function() {
        return STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR;
    },
    UNSTABLE_REVALIDATE_RENAME_ERROR: function() {
        return UNSTABLE_REVALIDATE_RENAME_ERROR;
    },
    WEBPACK_LAYERS: function() {
        return WEBPACK_LAYERS;
    },
    WEBPACK_RESOURCE_QUERIES: function() {
        return WEBPACK_RESOURCE_QUERIES;
    }
});
const NEXT_QUERY_PARAM_PREFIX = 'nxtP';
const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';
const MATCHED_PATH_HEADER = 'x-matched-path';
const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';
const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';
const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';
const RSC_SEGMENTS_DIR_SUFFIX = '.segments';
const RSC_SEGMENT_SUFFIX = '.segment.rsc';
const RSC_SUFFIX = '.rsc';
const ACTION_SUFFIX = '.action';
const NEXT_DATA_SUFFIX = '.json';
const NEXT_META_SUFFIX = '.meta';
const NEXT_BODY_SUFFIX = '.body';
const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';
const NEXT_CACHE_SOFT_TAGS_HEADER = 'x-next-cache-soft-tags';
const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';
const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';
const NEXT_RESUME_HEADER = 'next-resume';
const NEXT_CACHE_TAG_MAX_ITEMS = 64;
const NEXT_CACHE_TAG_MAX_LENGTH = 256;
const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;
const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';
const CACHE_ONE_YEAR = 31536000;
const INFINITE_CACHE = 0xfffffffe;
const MIDDLEWARE_FILENAME = 'middleware';
const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;
const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';
const PAGES_DIR_ALIAS = 'private-next-pages';
const DOT_NEXT_ALIAS = 'private-dot-next';
const ROOT_DIR_ALIAS = 'private-next-root-dir';
const APP_DIR_ALIAS = 'private-next-app-dir';
const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy';
const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';
const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';
const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';
const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';
const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';
const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;
const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;
const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;
const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;
const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;
const SERVER_PROPS_EXPORT_ERROR = `pages with \`getServerSideProps\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;
const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';
const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';
const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\n' + 'Please use `revalidate` instead.';
const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;
const NON_STANDARD_NODE_ENV = `You are using a non-standard "NODE_ENV" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;
const SSG_FALLBACK_EXPORT_ERROR = `Pages with \`fallback\` enabled in \`getStaticPaths\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;
const ESLINT_DEFAULT_DIRS = [
    'app',
    'pages',
    'components',
    'lib',
    'src'
];
const SERVER_RUNTIME = {
    edge: 'edge',
    experimentalEdge: 'experimental-edge',
    nodejs: 'nodejs'
};
/**
 * The names of the webpack layers. These layers are the primitives for the
 * webpack chunks.
 */ const WEBPACK_LAYERS_NAMES = {
    /**
   * The layer for the shared code between the client and server bundles.
   */ shared: 'shared',
    /**
   * The layer for server-only runtime and picking up `react-server` export conditions.
   * Including app router RSC pages and app router custom routes and metadata routes.
   */ reactServerComponents: 'rsc',
    /**
   * Server Side Rendering layer for app (ssr).
   */ serverSideRendering: 'ssr',
    /**
   * The browser client bundle layer for actions.
   */ actionBrowser: 'action-browser',
    /**
   * The layer for the API routes.
   */ api: 'api',
    /**
   * The layer for the middleware code.
   */ middleware: 'middleware',
    /**
   * The layer for the instrumentation hooks.
   */ instrument: 'instrument',
    /**
   * The layer for assets on the edge.
   */ edgeAsset: 'edge-asset',
    /**
   * The browser client bundle layer for App directory.
   */ appPagesBrowser: 'app-pages-browser'
};
const WEBPACK_LAYERS = {
    ...WEBPACK_LAYERS_NAMES,
    GROUP: {
        builtinReact: [
            WEBPACK_LAYERS_NAMES.reactServerComponents,
            WEBPACK_LAYERS_NAMES.actionBrowser
        ],
        serverOnly: [
            WEBPACK_LAYERS_NAMES.reactServerComponents,
            WEBPACK_LAYERS_NAMES.actionBrowser,
            WEBPACK_LAYERS_NAMES.instrument,
            WEBPACK_LAYERS_NAMES.middleware
        ],
        neutralTarget: [
            // pages api
            WEBPACK_LAYERS_NAMES.api
        ],
        clientOnly: [
            WEBPACK_LAYERS_NAMES.serverSideRendering,
            WEBPACK_LAYERS_NAMES.appPagesBrowser
        ],
        bundled: [
            WEBPACK_LAYERS_NAMES.reactServerComponents,
            WEBPACK_LAYERS_NAMES.actionBrowser,
            WEBPACK_LAYERS_NAMES.serverSideRendering,
            WEBPACK_LAYERS_NAMES.appPagesBrowser,
            WEBPACK_LAYERS_NAMES.shared,
            WEBPACK_LAYERS_NAMES.instrument
        ],
        appPages: [
            // app router pages and layouts
            WEBPACK_LAYERS_NAMES.reactServerComponents,
            WEBPACK_LAYERS_NAMES.serverSideRendering,
            WEBPACK_LAYERS_NAMES.appPagesBrowser,
            WEBPACK_LAYERS_NAMES.actionBrowser
        ]
    }
};
const WEBPACK_RESOURCE_QUERIES = {
    edgeSSREntry: '__next_edge_ssr_entry__',
    metadata: '__next_metadata__',
    metadataRoute: '__next_metadata_route__',
    metadataImageMeta: '__next_metadata_image_meta__'
}; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/route-regex.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    getNamedMiddlewareRegex: null,
    getNamedRouteRegex: null,
    getRouteRegex: null,
    parseParameter: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getNamedMiddlewareRegex: function() {
        return getNamedMiddlewareRegex;
    },
    getNamedRouteRegex: function() {
        return getNamedRouteRegex;
    },
    getRouteRegex: function() {
        return getRouteRegex;
    },
    parseParameter: function() {
        return parseParameter;
    }
});
const _constants = __turbopack_require__("[project]/node_modules/next/dist/lib/constants.js [app-client] (ecmascript)");
const _interceptionroutes = __turbopack_require__("[project]/node_modules/next/dist/server/lib/interception-routes.js [app-client] (ecmascript)");
const _escaperegexp = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/escape-regexp.js [app-client] (ecmascript)");
const _removetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js [app-client] (ecmascript)");
/**
 * Regular expression pattern used to match route parameters.
 * Matches both single parameters and parameter groups.
 * Examples:
 *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true
 *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false
 *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true
 *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false
 */ const PARAMETER_PATTERN = /\[((?:\[.*\])|.+)\]/;
function parseParameter(param) {
    const match = param.match(PARAMETER_PATTERN);
    if (!match) {
        return parseMatchedParameter(param);
    }
    return parseMatchedParameter(match[1]);
}
/**
 * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used
 * to generate the parametrized route.
 * Examples:
 *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`
 *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`
 *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`
 *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`
 * @param param - The matched parameter to parse.
 * @returns The parsed parameter as a data structure.
 */ function parseMatchedParameter(param) {
    const optional = param.startsWith('[') && param.endsWith(']');
    if (optional) {
        param = param.slice(1, -1);
    }
    const repeat = param.startsWith('...');
    if (repeat) {
        param = param.slice(3);
    }
    return {
        key: param,
        repeat,
        optional
    };
}
function getParametrizedRoute(route) {
    const segments = (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split('/');
    const groups = {};
    let groupIndex = 1;
    return {
        parameterizedRoute: segments.map((segment)=>{
            const markerMatch = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));
            const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters
            ;
            if (markerMatch && paramMatches) {
                const { key, optional, repeat } = parseMatchedParameter(paramMatches[1]);
                groups[key] = {
                    pos: groupIndex++,
                    repeat,
                    optional
                };
                return "/" + (0, _escaperegexp.escapeStringRegexp)(markerMatch) + "([^/]+?)";
            } else if (paramMatches) {
                const { key, repeat, optional } = parseMatchedParameter(paramMatches[1]);
                groups[key] = {
                    pos: groupIndex++,
                    repeat,
                    optional
                };
                return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
            } else {
                return "/" + (0, _escaperegexp.escapeStringRegexp)(segment);
            }
        }).join(''),
        groups
    };
}
function getRouteRegex(normalizedRoute) {
    const { parameterizedRoute, groups } = getParametrizedRoute(normalizedRoute);
    return {
        re: new RegExp("^" + parameterizedRoute + "(?:/)?$"),
        groups: groups
    };
}
/**
 * Builds a function to generate a minimal routeKey using only a-z and minimal
 * number of characters.
 */ function buildGetSafeRouteKey() {
    let i = 0;
    return ()=>{
        let routeKey = '';
        let j = ++i;
        while(j > 0){
            routeKey += String.fromCharCode(97 + (j - 1) % 26);
            j = Math.floor((j - 1) / 26);
        }
        return routeKey;
    };
}
function getSafeKeyFromSegment(param) {
    let { interceptionMarker, getSafeRouteKey, segment, routeKeys, keyPrefix } = param;
    const { key, optional, repeat } = parseMatchedParameter(segment);
    // replace any non-word characters since they can break
    // the named regex
    let cleanedKey = key.replace(/\W/g, '');
    if (keyPrefix) {
        cleanedKey = "" + keyPrefix + cleanedKey;
    }
    let invalidKey = false;
    // check if the key is still invalid and fallback to using a known
    // safe key
    if (cleanedKey.length === 0 || cleanedKey.length > 30) {
        invalidKey = true;
    }
    if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {
        invalidKey = true;
    }
    if (invalidKey) {
        cleanedKey = getSafeRouteKey();
    }
    if (keyPrefix) {
        routeKeys[cleanedKey] = "" + keyPrefix + key;
    } else {
        routeKeys[cleanedKey] = key;
    }
    // if the segment has an interception marker, make sure that's part of the regex pattern
    // this is to ensure that the route with the interception marker doesn't incorrectly match
    // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])
    const interceptionPrefix = interceptionMarker ? (0, _escaperegexp.escapeStringRegexp)(interceptionMarker) : '';
    return repeat ? optional ? "(?:/" + interceptionPrefix + "(?<" + cleanedKey + ">.+?))?" : "/" + interceptionPrefix + "(?<" + cleanedKey + ">.+?)" : "/" + interceptionPrefix + "(?<" + cleanedKey + ">[^/]+?)";
}
function getNamedParametrizedRoute(route, prefixRouteKeys) {
    const segments = (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split('/');
    const getSafeRouteKey = buildGetSafeRouteKey();
    const routeKeys = {};
    return {
        namedParameterizedRoute: segments.map((segment)=>{
            const hasInterceptionMarker = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.some((m)=>segment.startsWith(m));
            const paramMatches = segment.match(/\[((?:\[.*\])|.+)\]/) // Check for parameters
            ;
            if (hasInterceptionMarker && paramMatches) {
                const [usedMarker] = segment.split(paramMatches[0]);
                return getSafeKeyFromSegment({
                    getSafeRouteKey,
                    interceptionMarker: usedMarker,
                    segment: paramMatches[1],
                    routeKeys,
                    keyPrefix: prefixRouteKeys ? _constants.NEXT_INTERCEPTION_MARKER_PREFIX : undefined
                });
            } else if (paramMatches) {
                return getSafeKeyFromSegment({
                    getSafeRouteKey,
                    segment: paramMatches[1],
                    routeKeys,
                    keyPrefix: prefixRouteKeys ? _constants.NEXT_QUERY_PARAM_PREFIX : undefined
                });
            } else {
                return "/" + (0, _escaperegexp.escapeStringRegexp)(segment);
            }
        }).join(''),
        routeKeys
    };
}
function getNamedRouteRegex(normalizedRoute, prefixRouteKey) {
    const result = getNamedParametrizedRoute(normalizedRoute, prefixRouteKey);
    return {
        ...getRouteRegex(normalizedRoute),
        namedRegex: "^" + result.namedParameterizedRoute + "(?:/)?$",
        routeKeys: result.routeKeys
    };
}
function getNamedMiddlewareRegex(normalizedRoute, options) {
    const { parameterizedRoute } = getParametrizedRoute(normalizedRoute);
    const { catchAll = true } = options;
    if (parameterizedRoute === '/') {
        let catchAllRegex = catchAll ? '.*' : '';
        return {
            namedRegex: "^/" + catchAllRegex + "$"
        };
    }
    const { namedParameterizedRoute } = getNamedParametrizedRoute(normalizedRoute, false);
    let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : '';
    return {
        namedRegex: "^" + namedParameterizedRoute + catchAllGroupedRegex + "$"
    };
} //# sourceMappingURL=route-regex.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/format-url.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
// Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    formatUrl: null,
    formatWithValidation: null,
    urlObjectKeys: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    formatUrl: function() {
        return formatUrl;
    },
    formatWithValidation: function() {
        return formatWithValidation;
    },
    urlObjectKeys: function() {
        return urlObjectKeys;
    }
});
const _interop_require_wildcard = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _querystring = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)"));
const slashedProtocols = /https?|ftp|gopher|file/;
function formatUrl(urlObj) {
    let { auth, hostname } = urlObj;
    let protocol = urlObj.protocol || '';
    let pathname = urlObj.pathname || '';
    let hash = urlObj.hash || '';
    let query = urlObj.query || '';
    let host = false;
    auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';
    if (urlObj.host) {
        host = auth + urlObj.host;
    } else if (hostname) {
        host = auth + (~hostname.indexOf(':') ? "[" + hostname + "]" : hostname);
        if (urlObj.port) {
            host += ':' + urlObj.port;
        }
    }
    if (query && typeof query === 'object') {
        query = String(_querystring.urlQueryToSearchParams(query));
    }
    let search = urlObj.search || query && "?" + query || '';
    if (protocol && !protocol.endsWith(':')) protocol += ':';
    if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
        host = '//' + (host || '');
        if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
    } else if (!host) {
        host = '';
    }
    if (hash && hash[0] !== '#') hash = '#' + hash;
    if (search && search[0] !== '?') search = '?' + search;
    pathname = pathname.replace(/[?#]/g, encodeURIComponent);
    search = search.replace('#', '%23');
    return "" + protocol + host + pathname + search + hash;
}
const urlObjectKeys = [
    'auth',
    'hash',
    'host',
    'hostname',
    'href',
    'path',
    'pathname',
    'port',
    'protocol',
    'query',
    'search',
    'slashes'
];
function formatWithValidation(url) {
    if ("TURBOPACK compile-time truthy", 1) {
        if (url !== null && typeof url === 'object') {
            Object.keys(url).forEach((key)=>{
                if (!urlObjectKeys.includes(key)) {
                    console.warn("Unknown key passed via urlObject into url.format: " + key);
                }
            });
        }
    }
    return formatUrl(url);
} //# sourceMappingURL=format-url.js.map
}}),
"[project]/node_modules/next/dist/client/detect-domain-locale.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "detectDomainLocale", {
    enumerable: true,
    get: function() {
        return detectDomainLocale;
    }
});
const detectDomainLocale = function() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
        args[_key] = arguments[_key];
    }
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
};
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=detect-domain-locale.js.map
}}),
"[project]/node_modules/next/dist/client/add-locale.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "addLocale", {
    enumerable: true,
    get: function() {
        return addLocale;
    }
});
const _normalizetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/client/normalize-trailing-slash.js [app-client] (ecmascript)");
const addLocale = function(path) {
    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        args[_key - 1] = arguments[_key];
    }
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    return path;
};
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=add-locale.js.map
}}),
"[project]/node_modules/next/dist/client/remove-locale.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "removeLocale", {
    enumerable: true,
    get: function() {
        return removeLocale;
    }
});
const _parsepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-path.js [app-client] (ecmascript)");
function removeLocale(path, locale) {
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    return path;
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=remove-locale.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/omit.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "omit", {
    enumerable: true,
    get: function() {
        return omit;
    }
});
function omit(object, keys) {
    const omitted = {};
    Object.keys(object).forEach((key)=>{
        if (!keys.includes(key)) {
            omitted[key] = object[key];
        }
    });
    return omitted;
} //# sourceMappingURL=omit.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/is-local-url.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isLocalURL", {
    enumerable: true,
    get: function() {
        return isLocalURL;
    }
});
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _hasbasepath = __turbopack_require__("[project]/node_modules/next/dist/client/has-base-path.js [app-client] (ecmascript)");
function isLocalURL(url) {
    // prevent a hydration mismatch on href for url with anchor refs
    if (!(0, _utils.isAbsoluteUrl)(url)) return true;
    try {
        // absolute urls can be local if they are on the same origin
        const locationOrigin = (0, _utils.getLocationOrigin)();
        const resolved = new URL(url, locationOrigin);
        return resolved.origin === locationOrigin && (0, _hasbasepath.hasBasePath)(resolved.pathname);
    } catch (_) {
        return false;
    }
} //# sourceMappingURL=is-local-url.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/interpolate-as.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "interpolateAs", {
    enumerable: true,
    get: function() {
        return interpolateAs;
    }
});
const _routematcher = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/route-matcher.js [app-client] (ecmascript)");
const _routeregex = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/route-regex.js [app-client] (ecmascript)");
function interpolateAs(route, asPathname, query) {
    let interpolatedRoute = '';
    const dynamicRegex = (0, _routeregex.getRouteRegex)(route);
    const dynamicGroups = dynamicRegex.groups;
    const dynamicMatches = (asPathname !== route ? (0, _routematcher.getRouteMatcher)(dynamicRegex)(asPathname) : '') || // Fall back to reading the values from the href
    // TODO: should this take priority; also need to change in the router.
    query;
    interpolatedRoute = route;
    const params = Object.keys(dynamicGroups);
    if (!params.every((param)=>{
        let value = dynamicMatches[param] || '';
        const { repeat, optional } = dynamicGroups[param];
        // support single-level catch-all
        // TODO: more robust handling for user-error (passing `/`)
        let replaced = "[" + (repeat ? '...' : '') + param + "]";
        if (optional) {
            replaced = (!value ? '/' : '') + "[" + replaced + "]";
        }
        if (repeat && !Array.isArray(value)) value = [
            value
        ];
        return (optional || param in dynamicMatches) && // Interpolate group into data URL if present
        (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted
        // into the URL and we expect URL encoded segments
        // when parsing dynamic route params
        (segment)=>encodeURIComponent(segment)).join('/') : encodeURIComponent(value)) || '/');
    })) {
        interpolatedRoute = '' // did not satisfy all requirements
        ;
    // n.b. We ignore this error because we handle warning for this case in
    // development in the `<Link>` component directly.
    }
    return {
        params,
        result: interpolatedRoute
    };
} //# sourceMappingURL=interpolate-as.js.map
}}),
"[project]/node_modules/next/dist/client/resolve-href.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "resolveHref", {
    enumerable: true,
    get: function() {
        return resolveHref;
    }
});
const _querystring = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)");
const _formaturl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/format-url.js [app-client] (ecmascript)");
const _omit = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/omit.js [app-client] (ecmascript)");
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _normalizetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/client/normalize-trailing-slash.js [app-client] (ecmascript)");
const _islocalurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/is-local-url.js [app-client] (ecmascript)");
const _utils1 = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/index.js [app-client] (ecmascript)");
const _interpolateas = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/interpolate-as.js [app-client] (ecmascript)");
function resolveHref(router, href, resolveAs) {
    // we use a dummy base url for relative urls
    let base;
    let urlAsString = typeof href === 'string' ? href : (0, _formaturl.formatWithValidation)(href);
    // repeated slashes and backslashes in the URL are considered
    // invalid and will never match a Next.js page/file
    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\/\//);
    const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;
    const urlParts = urlAsStringNoProto.split('?', 1);
    if ((urlParts[0] || '').match(/(\/\/|\\)/)) {
        console.error("Invalid href '" + urlAsString + "' passed to next/router in page: '" + router.pathname + "'. Repeated forward-slashes (//) or backslashes \\ are not valid in the href.");
        const normalizedUrl = (0, _utils.normalizeRepeatedSlashes)(urlAsStringNoProto);
        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl;
    }
    // Return because it cannot be routed by the Next.js router
    if (!(0, _islocalurl.isLocalURL)(urlAsString)) {
        return resolveAs ? [
            urlAsString
        ] : urlAsString;
    }
    try {
        base = new URL(urlAsString.startsWith('#') ? router.asPath : router.pathname, 'http://n');
    } catch (_) {
        // fallback to / for invalid asPath values e.g. //
        base = new URL('/', 'http://n');
    }
    try {
        const finalUrl = new URL(urlAsString, base);
        finalUrl.pathname = (0, _normalizetrailingslash.normalizePathTrailingSlash)(finalUrl.pathname);
        let interpolatedAs = '';
        if ((0, _utils1.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {
            const query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);
            const { result, params } = (0, _interpolateas.interpolateAs)(finalUrl.pathname, finalUrl.pathname, query);
            if (result) {
                interpolatedAs = (0, _formaturl.formatWithValidation)({
                    pathname: result,
                    hash: finalUrl.hash,
                    query: (0, _omit.omit)(query, params)
                });
            }
        }
        // if the origin didn't change, it means we received a relative href
        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;
        return resolveAs ? [
            resolvedHref,
            interpolatedAs || resolvedHref
        ] : resolvedHref;
    } catch (_) {
        return resolveAs ? [
            urlAsString
        ] : urlAsString;
    }
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=resolve-href.js.map
}}),
"[project]/node_modules/next/dist/lib/is-api-route.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isAPIRoute", {
    enumerable: true,
    get: function() {
        return isAPIRoute;
    }
});
function isAPIRoute(value) {
    return value === '/api' || Boolean(value == null ? void 0 : value.startsWith('/api/'));
} //# sourceMappingURL=is-api-route.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "removePathPrefix", {
    enumerable: true,
    get: function() {
        return removePathPrefix;
    }
});
const _pathhasprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js [app-client] (ecmascript)");
function removePathPrefix(path, prefix) {
    // If the path doesn't start with the prefix we can return it as is. This
    // protects us from situations where the prefix is a substring of the path
    // prefix such as:
    //
    // For prefix: /blog
    //
    //   /blog -> true
    //   /blog/ -> true
    //   /blog/1 -> true
    //   /blogging -> false
    //   /blogging/ -> false
    //   /blogging/1 -> false
    if (!(0, _pathhasprefix.pathHasPrefix)(path, prefix)) {
        return path;
    }
    // Remove the prefix from the path via slicing.
    const withoutPrefix = path.slice(prefix.length);
    // If the path without the prefix starts with a `/` we can return it as is.
    if (withoutPrefix.startsWith('/')) {
        return withoutPrefix;
    }
    // If the path without the prefix doesn't start with a `/` we need to add it
    // back to the path to make sure it's a valid path.
    return "/" + withoutPrefix;
} //# sourceMappingURL=remove-path-prefix.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getNextPathnameInfo", {
    enumerable: true,
    get: function() {
        return getNextPathnameInfo;
    }
});
const _normalizelocalepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js [app-client] (ecmascript)");
const _removepathprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js [app-client] (ecmascript)");
const _pathhasprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js [app-client] (ecmascript)");
function getNextPathnameInfo(pathname, options) {
    var _options_nextConfig;
    const { basePath, i18n, trailingSlash } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};
    const info = {
        pathname,
        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash
    };
    if (basePath && (0, _pathhasprefix.pathHasPrefix)(info.pathname, basePath)) {
        info.pathname = (0, _removepathprefix.removePathPrefix)(info.pathname, basePath);
        info.basePath = basePath;
    }
    let pathnameNoDataPrefix = info.pathname;
    if (info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {
        const paths = info.pathname.replace(/^\/_next\/data\//, '').replace(/\.json$/, '').split('/');
        const buildId = paths[0];
        info.buildId = buildId;
        pathnameNoDataPrefix = paths[1] !== 'index' ? "/" + paths.slice(1).join('/') : '/';
        // update pathname with normalized if enabled although
        // we use normalized to populate locale info still
        if (options.parseData === true) {
            info.pathname = pathnameNoDataPrefix;
        }
    }
    // If provided, use the locale route normalizer to detect the locale instead
    // of the function below.
    if (i18n) {
        let result = options.i18nProvider ? options.i18nProvider.analyze(info.pathname) : (0, _normalizelocalepath.normalizeLocalePath)(info.pathname, i18n.locales);
        info.locale = result.detectedLocale;
        var _result_pathname;
        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;
        if (!result.detectedLocale && info.buildId) {
            result = options.i18nProvider ? options.i18nProvider.analyze(pathnameNoDataPrefix) : (0, _normalizelocalepath.normalizeLocalePath)(pathnameNoDataPrefix, i18n.locales);
            if (result.detectedLocale) {
                info.locale = result.detectedLocale;
            }
        }
    }
    return info;
} //# sourceMappingURL=get-next-pathname-info.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "addPathSuffix", {
    enumerable: true,
    get: function() {
        return addPathSuffix;
    }
});
const _parsepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-path.js [app-client] (ecmascript)");
function addPathSuffix(path, suffix) {
    if (!path.startsWith('/') || !suffix) {
        return path;
    }
    const { pathname, query, hash } = (0, _parsepath.parsePath)(path);
    return "" + pathname + suffix + query + hash;
} //# sourceMappingURL=add-path-suffix.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/add-locale.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "addLocale", {
    enumerable: true,
    get: function() {
        return addLocale;
    }
});
const _addpathprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js [app-client] (ecmascript)");
const _pathhasprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js [app-client] (ecmascript)");
function addLocale(path, locale, defaultLocale, ignorePrefix) {
    // If no locale was given or the locale is the default locale, we don't need
    // to prefix the path.
    if (!locale || locale === defaultLocale) return path;
    const lower = path.toLowerCase();
    // If the path is an API path or the path already has the locale prefix, we
    // don't need to prefix the path.
    if (!ignorePrefix) {
        if ((0, _pathhasprefix.pathHasPrefix)(lower, '/api')) return path;
        if ((0, _pathhasprefix.pathHasPrefix)(lower, "/" + locale.toLowerCase())) return path;
    }
    // Add the locale prefix to the path.
    return (0, _addpathprefix.addPathPrefix)(path, "/" + locale);
} //# sourceMappingURL=add-locale.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "formatNextPathnameInfo", {
    enumerable: true,
    get: function() {
        return formatNextPathnameInfo;
    }
});
const _removetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js [app-client] (ecmascript)");
const _addpathprefix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js [app-client] (ecmascript)");
const _addpathsuffix = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js [app-client] (ecmascript)");
const _addlocale = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/add-locale.js [app-client] (ecmascript)");
function formatNextPathnameInfo(info) {
    let pathname = (0, _addlocale.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);
    if (info.buildId || !info.trailingSlash) {
        pathname = (0, _removetrailingslash.removeTrailingSlash)(pathname);
    }
    if (info.buildId) {
        pathname = (0, _addpathsuffix.addPathSuffix)((0, _addpathprefix.addPathPrefix)(pathname, "/_next/data/" + info.buildId), info.pathname === '/' ? 'index.json' : '.json');
    }
    pathname = (0, _addpathprefix.addPathPrefix)(pathname, info.basePath);
    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? (0, _addpathsuffix.addPathSuffix)(pathname, '/') : pathname : (0, _removetrailingslash.removeTrailingSlash)(pathname);
} //# sourceMappingURL=format-next-pathname-info.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/compare-states.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "compareRouterStates", {
    enumerable: true,
    get: function() {
        return compareRouterStates;
    }
});
function compareRouterStates(a, b) {
    const stateKeys = Object.keys(a);
    if (stateKeys.length !== Object.keys(b).length) return false;
    for(let i = stateKeys.length; i--;){
        const key = stateKeys[i];
        if (key === 'query') {
            const queryKeys = Object.keys(a.query);
            if (queryKeys.length !== Object.keys(b.query).length) {
                return false;
            }
            for(let j = queryKeys.length; j--;){
                const queryKey = queryKeys[j];
                if (!b.query.hasOwnProperty(queryKey) || a.query[queryKey] !== b.query[queryKey]) {
                    return false;
                }
            }
        } else if (!b.hasOwnProperty(key) || a[key] !== b[key]) {
            return false;
        }
    }
    return true;
} //# sourceMappingURL=compare-states.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/utils/handle-smooth-scroll.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * Run function with `scroll-behavior: auto` applied to `<html/>`.
 * This css change will be reverted after the function finishes.
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "handleSmoothScroll", {
    enumerable: true,
    get: function() {
        return handleSmoothScroll;
    }
});
function handleSmoothScroll(fn, options) {
    if (options === void 0) options = {};
    // if only the hash is changed, we don't need to disable smooth scrolling
    // we only care to prevent smooth scrolling when navigating to a new page to avoid jarring UX
    if (options.onlyHashChange) {
        fn();
        return;
    }
    const htmlElement = document.documentElement;
    const existing = htmlElement.style.scrollBehavior;
    htmlElement.style.scrollBehavior = 'auto';
    if (!options.dontForceLayout) {
        // In Chrome-based browsers we need to force reflow before calling `scrollTo`.
        // Otherwise it will not pickup the change in scrollBehavior
        // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042
        htmlElement.getClientRects();
    }
    fn();
    htmlElement.style.scrollBehavior = existing;
} //# sourceMappingURL=handle-smooth-scroll.js.map
}}),
"[project]/node_modules/next/dist/shared/lib/router/router.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
// tslint:disable:no-console
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    createKey: null,
    default: null,
    matchesMiddleware: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createKey: function() {
        return createKey;
    },
    default: function() {
        return Router;
    },
    matchesMiddleware: function() {
        return matchesMiddleware;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _interop_require_wildcard = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _removetrailingslash = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js [app-client] (ecmascript)");
const _routeloader = __turbopack_require__("[project]/node_modules/next/dist/client/route-loader.js [app-client] (ecmascript)");
const _script = __turbopack_require__("[project]/node_modules/next/dist/client/script.js [app-client] (ecmascript)");
const _iserror = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_require__("[project]/node_modules/next/dist/lib/is-error.js [app-client] (ecmascript)"));
const _denormalizepagepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/page-path/denormalize-page-path.js [app-client] (ecmascript)");
const _normalizelocalepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js [app-client] (ecmascript)");
const _mitt = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/mitt.js [app-client] (ecmascript)"));
const _utils = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _isdynamic = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/is-dynamic.js [app-client] (ecmascript)");
const _parserelativeurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js [app-client] (ecmascript)");
const _resolverewrites = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/resolve-rewrites.js [app-client] (ecmascript)"));
const _routematcher = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/route-matcher.js [app-client] (ecmascript)");
const _routeregex = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/route-regex.js [app-client] (ecmascript)");
const _formaturl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/format-url.js [app-client] (ecmascript)");
const _detectdomainlocale = __turbopack_require__("[project]/node_modules/next/dist/client/detect-domain-locale.js [app-client] (ecmascript)");
const _parsepath = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/parse-path.js [app-client] (ecmascript)");
const _addlocale = __turbopack_require__("[project]/node_modules/next/dist/client/add-locale.js [app-client] (ecmascript)");
const _removelocale = __turbopack_require__("[project]/node_modules/next/dist/client/remove-locale.js [app-client] (ecmascript)");
const _removebasepath = __turbopack_require__("[project]/node_modules/next/dist/client/remove-base-path.js [app-client] (ecmascript)");
const _addbasepath = __turbopack_require__("[project]/node_modules/next/dist/client/add-base-path.js [app-client] (ecmascript)");
const _hasbasepath = __turbopack_require__("[project]/node_modules/next/dist/client/has-base-path.js [app-client] (ecmascript)");
const _resolvehref = __turbopack_require__("[project]/node_modules/next/dist/client/resolve-href.js [app-client] (ecmascript)");
const _isapiroute = __turbopack_require__("[project]/node_modules/next/dist/lib/is-api-route.js [app-client] (ecmascript)");
const _getnextpathnameinfo = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js [app-client] (ecmascript)");
const _formatnextpathnameinfo = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js [app-client] (ecmascript)");
const _comparestates = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/compare-states.js [app-client] (ecmascript)");
const _islocalurl = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/is-local-url.js [app-client] (ecmascript)");
const _isbot = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/is-bot.js [app-client] (ecmascript)");
const _omit = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/omit.js [app-client] (ecmascript)");
const _interpolateas = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/interpolate-as.js [app-client] (ecmascript)");
const _handlesmoothscroll = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/utils/handle-smooth-scroll.js [app-client] (ecmascript)");
const _constants = __turbopack_require__("[project]/node_modules/next/dist/lib/constants.js [app-client] (ecmascript)");
function buildCancellationError() {
    return Object.assign(new Error('Route Cancelled'), {
        cancelled: true
    });
}
async function matchesMiddleware(options) {
    const matchers = await Promise.resolve(options.router.pageLoader.getMiddleware());
    if (!matchers) return false;
    const { pathname: asPathname } = (0, _parsepath.parsePath)(options.asPath);
    // remove basePath first since path prefix has to be in the order of `/${basePath}/${locale}`
    const cleanedAs = (0, _hasbasepath.hasBasePath)(asPathname) ? (0, _removebasepath.removeBasePath)(asPathname) : asPathname;
    const asWithBasePathAndLocale = (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(cleanedAs, options.locale));
    // Check only path match on client. Matching "has" should be done on server
    // where we can access more info such as headers, HttpOnly cookie, etc.
    return matchers.some((m)=>new RegExp(m.regexp).test(asWithBasePathAndLocale));
}
function stripOrigin(url) {
    const origin = (0, _utils.getLocationOrigin)();
    return url.startsWith(origin) ? url.substring(origin.length) : url;
}
function prepareUrlAs(router, url, as) {
    // If url and as provided as an object representation,
    // we'll format them into the string version here.
    let [resolvedHref, resolvedAs] = (0, _resolvehref.resolveHref)(router, url, true);
    const origin = (0, _utils.getLocationOrigin)();
    const hrefWasAbsolute = resolvedHref.startsWith(origin);
    const asWasAbsolute = resolvedAs && resolvedAs.startsWith(origin);
    resolvedHref = stripOrigin(resolvedHref);
    resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;
    const preparedUrl = hrefWasAbsolute ? resolvedHref : (0, _addbasepath.addBasePath)(resolvedHref);
    const preparedAs = as ? stripOrigin((0, _resolvehref.resolveHref)(router, as)) : resolvedAs || resolvedHref;
    return {
        url: preparedUrl,
        as: asWasAbsolute ? preparedAs : (0, _addbasepath.addBasePath)(preparedAs)
    };
}
function resolveDynamicRoute(pathname, pages) {
    const cleanPathname = (0, _removetrailingslash.removeTrailingSlash)((0, _denormalizepagepath.denormalizePagePath)(pathname));
    if (cleanPathname === '/404' || cleanPathname === '/_error') {
        return pathname;
    }
    // handle resolving href for dynamic routes
    if (!pages.includes(cleanPathname)) {
        // eslint-disable-next-line array-callback-return
        pages.some((page)=>{
            if ((0, _isdynamic.isDynamicRoute)(page) && (0, _routeregex.getRouteRegex)(page).re.test(cleanPathname)) {
                pathname = page;
                return true;
            }
        });
    }
    return (0, _removetrailingslash.removeTrailingSlash)(pathname);
}
function getMiddlewareData(source, response, options) {
    const nextConfig = {
        basePath: options.router.basePath,
        i18n: {
            locales: options.router.locales
        },
        trailingSlash: Boolean(("TURBOPACK compile-time value", false))
    };
    const rewriteHeader = response.headers.get('x-nextjs-rewrite');
    let rewriteTarget = rewriteHeader || response.headers.get('x-nextjs-matched-path');
    const matchedPath = response.headers.get(_constants.MATCHED_PATH_HEADER);
    if (matchedPath && !rewriteTarget && !matchedPath.includes('__next_data_catchall') && !matchedPath.includes('/_error') && !matchedPath.includes('/404')) {
        // leverage x-matched-path to detect next.config.js rewrites
        rewriteTarget = matchedPath;
    }
    if (rewriteTarget) {
        if (rewriteTarget.startsWith('/') || ("TURBOPACK compile-time value", false)) {
            const parsedRewriteTarget = (0, _parserelativeurl.parseRelativeUrl)(rewriteTarget);
            const pathnameInfo = (0, _getnextpathnameinfo.getNextPathnameInfo)(parsedRewriteTarget.pathname, {
                nextConfig,
                parseData: true
            });
            let fsPathname = (0, _removetrailingslash.removeTrailingSlash)(pathnameInfo.pathname);
            return Promise.all([
                options.router.pageLoader.getPageList(),
                (0, _routeloader.getClientBuildManifest)()
            ]).then((param)=>{
                let [pages, { __rewrites: rewrites }] = param;
                let as = (0, _addlocale.addLocale)(pathnameInfo.pathname, pathnameInfo.locale);
                if ((0, _isdynamic.isDynamicRoute)(as) || !rewriteHeader && pages.includes((0, _normalizelocalepath.normalizeLocalePath)((0, _removebasepath.removeBasePath)(as), options.router.locales).pathname)) {
                    const parsedSource = (0, _getnextpathnameinfo.getNextPathnameInfo)((0, _parserelativeurl.parseRelativeUrl)(source).pathname, {
                        nextConfig: ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : nextConfig,
                        parseData: true
                    });
                    as = (0, _addbasepath.addBasePath)(parsedSource.pathname);
                    parsedRewriteTarget.pathname = as;
                }
                if ("TURBOPACK compile-time falsy", 0) {
                    "TURBOPACK unreachable";
                } else if (!pages.includes(fsPathname)) {
                    const resolvedPathname = resolveDynamicRoute(fsPathname, pages);
                    if (resolvedPathname !== fsPathname) {
                        fsPathname = resolvedPathname;
                    }
                }
                const resolvedHref = !pages.includes(fsPathname) ? resolveDynamicRoute((0, _normalizelocalepath.normalizeLocalePath)((0, _removebasepath.removeBasePath)(parsedRewriteTarget.pathname), options.router.locales).pathname, pages) : fsPathname;
                if ((0, _isdynamic.isDynamicRoute)(resolvedHref)) {
                    const matches = (0, _routematcher.getRouteMatcher)((0, _routeregex.getRouteRegex)(resolvedHref))(as);
                    Object.assign(parsedRewriteTarget.query, matches || {});
                }
                return {
                    type: 'rewrite',
                    parsedAs: parsedRewriteTarget,
                    resolvedHref
                };
            });
        }
        const src = (0, _parsepath.parsePath)(source);
        const pathname = (0, _formatnextpathnameinfo.formatNextPathnameInfo)({
            ...(0, _getnextpathnameinfo.getNextPathnameInfo)(src.pathname, {
                nextConfig,
                parseData: true
            }),
            defaultLocale: options.router.defaultLocale,
            buildId: ''
        });
        return Promise.resolve({
            type: 'redirect-external',
            destination: "" + pathname + src.query + src.hash
        });
    }
    const redirectTarget = response.headers.get('x-nextjs-redirect');
    if (redirectTarget) {
        if (redirectTarget.startsWith('/')) {
            const src = (0, _parsepath.parsePath)(redirectTarget);
            const pathname = (0, _formatnextpathnameinfo.formatNextPathnameInfo)({
                ...(0, _getnextpathnameinfo.getNextPathnameInfo)(src.pathname, {
                    nextConfig,
                    parseData: true
                }),
                defaultLocale: options.router.defaultLocale,
                buildId: ''
            });
            return Promise.resolve({
                type: 'redirect-internal',
                newAs: "" + pathname + src.query + src.hash,
                newUrl: "" + pathname + src.query + src.hash
            });
        }
        return Promise.resolve({
            type: 'redirect-external',
            destination: redirectTarget
        });
    }
    return Promise.resolve({
        type: 'next'
    });
}
async function withMiddlewareEffects(options) {
    const matches = await matchesMiddleware(options);
    if (!matches || !options.fetchData) {
        return null;
    }
    const data = await options.fetchData();
    const effect = await getMiddlewareData(data.dataHref, data.response, options);
    return {
        dataHref: data.dataHref,
        json: data.json,
        response: data.response,
        text: data.text,
        cacheKey: data.cacheKey,
        effect
    };
}
const manualScrollRestoration = ("TURBOPACK compile-time value", false) && typeof window !== 'undefined' && 'scrollRestoration' in window.history && !!function() {
    try {
        let v = '__next';
        // eslint-disable-next-line no-sequences
        return sessionStorage.setItem(v, v), sessionStorage.removeItem(v), true;
    } catch (n) {}
}();
const SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');
function fetchRetry(url, attempts, options) {
    return fetch(url, {
        // Cookies are required to be present for Next.js' SSG "Preview Mode".
        // Cookies may also be required for `getServerSideProps`.
        //
        // > `fetch` won’t send cookies, unless you set the credentials init
        // > option.
        // https://developer.mozilla.org/docs/Web/API/Fetch_API/Using_Fetch
        //
        // > For maximum browser compatibility when it comes to sending &
        // > receiving cookies, always supply the `credentials: 'same-origin'`
        // > option instead of relying on the default.
        // https://github.com/github/fetch#caveats
        credentials: 'same-origin',
        method: options.method || 'GET',
        headers: Object.assign({}, options.headers, {
            'x-nextjs-data': '1'
        })
    }).then((response)=>{
        return !response.ok && attempts > 1 && response.status >= 500 ? fetchRetry(url, attempts - 1, options) : response;
    });
}
function tryToParseAsJSON(text) {
    try {
        return JSON.parse(text);
    } catch (error) {
        return null;
    }
}
function fetchNextData(param) {
    let { dataHref, inflightCache, isPrefetch, hasMiddleware, isServerRender, parseJSON, persistCache, isBackground, unstable_skipClientCache } = param;
    const { href: cacheKey } = new URL(dataHref, window.location.href);
    const getData = (params)=>{
        var _params_method;
        return fetchRetry(dataHref, isServerRender ? 3 : 1, {
            headers: Object.assign({}, isPrefetch ? {
                purpose: 'prefetch'
            } : {}, isPrefetch && hasMiddleware ? {
                'x-middleware-prefetch': '1'
            } : {}),
            method: (_params_method = params == null ? void 0 : params.method) != null ? _params_method : 'GET'
        }).then((response)=>{
            if (response.ok && (params == null ? void 0 : params.method) === 'HEAD') {
                return {
                    dataHref,
                    response,
                    text: '',
                    json: {},
                    cacheKey
                };
            }
            return response.text().then((text)=>{
                if (!response.ok) {
                    /**
             * When the data response is a redirect because of a middleware
             * we do not consider it an error. The headers must bring the
             * mapped location.
             * TODO: Change the status code in the handler.
             */ if (hasMiddleware && [
                        301,
                        302,
                        307,
                        308
                    ].includes(response.status)) {
                        return {
                            dataHref,
                            response,
                            text,
                            json: {},
                            cacheKey
                        };
                    }
                    if (response.status === 404) {
                        var _tryToParseAsJSON;
                        if ((_tryToParseAsJSON = tryToParseAsJSON(text)) == null ? void 0 : _tryToParseAsJSON.notFound) {
                            return {
                                dataHref,
                                json: {
                                    notFound: SSG_DATA_NOT_FOUND
                                },
                                response,
                                text,
                                cacheKey
                            };
                        }
                    }
                    const error = new Error("Failed to load static props");
                    /**
             * We should only trigger a server-side transition if this was
             * caused on a client-side transition. Otherwise, we'd get into
             * an infinite loop.
             */ if (!isServerRender) {
                        (0, _routeloader.markAssetError)(error);
                    }
                    throw error;
                }
                return {
                    dataHref,
                    json: parseJSON ? tryToParseAsJSON(text) : null,
                    response,
                    text,
                    cacheKey
                };
            });
        }).then((data)=>{
            if ("TURBOPACK compile-time truthy", 1) {
                delete inflightCache[cacheKey];
            }
            return data;
        }).catch((err)=>{
            if (!unstable_skipClientCache) {
                delete inflightCache[cacheKey];
            }
            if (err.message === 'Failed to fetch' || // firefox
            err.message === 'NetworkError when attempting to fetch resource.' || // safari
            err.message === 'Load failed') {
                (0, _routeloader.markAssetError)(err);
            }
            throw err;
        });
    };
    // when skipping client cache we wait to update
    // inflight cache until successful data response
    // this allows racing click event with fetching newer data
    // without blocking navigation when stale data is available
    if (unstable_skipClientCache && persistCache) {
        return getData({}).then((data)=>{
            if (data.response.headers.get('x-middleware-cache') !== 'no-cache') {
                // only update cache if not marked as no-cache
                inflightCache[cacheKey] = Promise.resolve(data);
            }
            return data;
        });
    }
    if (inflightCache[cacheKey] !== undefined) {
        return inflightCache[cacheKey];
    }
    return inflightCache[cacheKey] = getData(isBackground ? {
        method: 'HEAD'
    } : {});
}
function createKey() {
    return Math.random().toString(36).slice(2, 10);
}
function handleHardNavigation(param) {
    let { url, router } = param;
    // ensure we don't trigger a hard navigation to the same
    // URL as this can end up with an infinite refresh
    if (url === (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(router.asPath, router.locale))) {
        throw new Error("Invariant: attempted to hard navigate to the same URL " + url + " " + location.href);
    }
    window.location.href = url;
}
const getCancelledHandler = (param)=>{
    let { route, router } = param;
    let cancelled = false;
    const cancel = router.clc = ()=>{
        cancelled = true;
    };
    const handleCancelled = ()=>{
        if (cancelled) {
            const error = new Error('Abort fetching component for route: "' + route + '"');
            error.cancelled = true;
            throw error;
        }
        if (cancel === router.clc) {
            router.clc = null;
        }
    };
    return handleCancelled;
};
class Router {
    reload() {
        window.location.reload();
    }
    /**
   * Go back in history
   */ back() {
        window.history.back();
    }
    /**
   * Go forward in history
   */ forward() {
        window.history.forward();
    }
    /**
   * Performs a `pushState` with arguments
   * @param url of the route
   * @param as masks `url` for the browser
   * @param options object you can define `shallow` and other options
   */ push(url, as, options) {
        if (options === void 0) options = {};
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
        ({ url, as } = prepareUrlAs(this, url, as));
        return this.change('pushState', url, as, options);
    }
    /**
   * Performs a `replaceState` with arguments
   * @param url of the route
   * @param as masks `url` for the browser
   * @param options object you can define `shallow` and other options
   */ replace(url, as, options) {
        if (options === void 0) options = {};
        ({ url, as } = prepareUrlAs(this, url, as));
        return this.change('replaceState', url, as, options);
    }
    async _bfl(as, resolvedAs, locale, skipNavigate) {
        if ("TURBOPACK compile-time truthy", 1) {
            if (!this._bfl_s && !this._bfl_d) {
                const { BloomFilter } = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/bloom-filter.js [app-client] (ecmascript)");
                let staticFilterData;
                let dynamicFilterData;
                try {
                    ({ __routerFilterStatic: staticFilterData, __routerFilterDynamic: dynamicFilterData } = await (0, _routeloader.getClientBuildManifest)());
                } catch (err) {
                    // failed to load build manifest hard navigate
                    // to be safe
                    console.error(err);
                    if (skipNavigate) {
                        return true;
                    }
                    handleHardNavigation({
                        url: (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, locale || this.locale, this.defaultLocale)),
                        router: this
                    });
                    return new Promise(()=>{});
                }
                const routerFilterSValue = ("TURBOPACK compile-time value", JSON.parse('{"numItems":6,"errorRate":0.0001,"numBits":116,"numHashes":14,"bitArray":[1,0,1,0,1,0,1,0,0,1,1,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,0,1,1,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,1,1,0,0,0,1,0,0,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,0,1,1,1]}'));
                if (!staticFilterData && routerFilterSValue) {
                    staticFilterData = routerFilterSValue ? routerFilterSValue : undefined;
                }
                const routerFilterDValue = ("TURBOPACK compile-time value", JSON.parse('{"numItems":1,"errorRate":0.0001,"numBits":20,"numHashes":14,"bitArray":[0,0,0,0,1,1,1,1,1,0,1,0,0,1,0,1,1,1,0,0]}'));
                if (!dynamicFilterData && routerFilterDValue) {
                    dynamicFilterData = routerFilterDValue ? routerFilterDValue : undefined;
                }
                if (staticFilterData == null ? void 0 : staticFilterData.numHashes) {
                    this._bfl_s = new BloomFilter(staticFilterData.numItems, staticFilterData.errorRate);
                    this._bfl_s.import(staticFilterData);
                }
                if (dynamicFilterData == null ? void 0 : dynamicFilterData.numHashes) {
                    this._bfl_d = new BloomFilter(dynamicFilterData.numItems, dynamicFilterData.errorRate);
                    this._bfl_d.import(dynamicFilterData);
                }
            }
            let matchesBflStatic = false;
            let matchesBflDynamic = false;
            const pathsToCheck = [
                {
                    as
                },
                {
                    as: resolvedAs
                }
            ];
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            }
            for (const { as: curAs, allowMatchCurrent } of pathsToCheck){
                if (curAs) {
                    const asNoSlash = (0, _removetrailingslash.removeTrailingSlash)(new URL(curAs, 'http://n').pathname);
                    const asNoSlashLocale = (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(asNoSlash, locale || this.locale));
                    if (allowMatchCurrent || asNoSlash !== (0, _removetrailingslash.removeTrailingSlash)(new URL(this.asPath, 'http://n').pathname)) {
                        var _this__bfl_s, _this__bfl_s1;
                        matchesBflStatic = matchesBflStatic || !!((_this__bfl_s = this._bfl_s) == null ? void 0 : _this__bfl_s.contains(asNoSlash)) || !!((_this__bfl_s1 = this._bfl_s) == null ? void 0 : _this__bfl_s1.contains(asNoSlashLocale));
                        for (const normalizedAS of [
                            asNoSlash,
                            asNoSlashLocale
                        ]){
                            // if any sub-path of as matches a dynamic filter path
                            // it should be hard navigated
                            const curAsParts = normalizedAS.split('/');
                            for(let i = 0; !matchesBflDynamic && i < curAsParts.length + 1; i++){
                                var _this__bfl_d;
                                const currentPart = curAsParts.slice(0, i).join('/');
                                if (currentPart && ((_this__bfl_d = this._bfl_d) == null ? void 0 : _this__bfl_d.contains(currentPart))) {
                                    matchesBflDynamic = true;
                                    break;
                                }
                            }
                        }
                        // if the client router filter is matched then we trigger
                        // a hard navigation
                        if (matchesBflStatic || matchesBflDynamic) {
                            if (skipNavigate) {
                                return true;
                            }
                            handleHardNavigation({
                                url: (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, locale || this.locale, this.defaultLocale)),
                                router: this
                            });
                            return new Promise(()=>{});
                        }
                    }
                }
            }
        }
        return false;
    }
    async change(method, url, as, options, forcedScroll) {
        var _this_components_pathname;
        if (!(0, _islocalurl.isLocalURL)(url)) {
            handleHardNavigation({
                url,
                router: this
            });
            return false;
        }
        // WARNING: `_h` is an internal option for handing Next.js client-side
        // hydration. Your app should _never_ use this property. It may change at
        // any time without notice.
        const isQueryUpdating = options._h === 1;
        if (!isQueryUpdating && !options.shallow) {
            await this._bfl(as, undefined, options.locale);
        }
        let shouldResolveHref = isQueryUpdating || options._shouldResolveHref || (0, _parsepath.parsePath)(url).pathname === (0, _parsepath.parsePath)(as).pathname;
        const nextState = {
            ...this.state
        };
        // for static pages with query params in the URL we delay
        // marking the router ready until after the query is updated
        // or a navigation has occurred
        const readyStateChange = this.isReady !== true;
        this.isReady = true;
        const isSsr = this.isSsr;
        if (!isQueryUpdating) {
            this.isSsr = false;
        }
        // if a route transition is already in progress before
        // the query updating is triggered ignore query updating
        if (isQueryUpdating && this.clc) {
            return false;
        }
        const prevLocale = nextState.locale;
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
            var _this_locales;
        }
        // marking route changes as a navigation start entry
        if (_utils.ST) {
            performance.mark('routeChange');
        }
        const { shallow = false, scroll = true } = options;
        const routeProps = {
            shallow
        };
        if (this._inFlightRoute && this.clc) {
            if (!isSsr) {
                Router.events.emit('routeChangeError', buildCancellationError(), this._inFlightRoute, routeProps);
            }
            this.clc();
            this.clc = null;
        }
        as = (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)((0, _hasbasepath.hasBasePath)(as) ? (0, _removebasepath.removeBasePath)(as) : as, options.locale, this.defaultLocale));
        const cleanedAs = (0, _removelocale.removeLocale)((0, _hasbasepath.hasBasePath)(as) ? (0, _removebasepath.removeBasePath)(as) : as, nextState.locale);
        this._inFlightRoute = as;
        const localeChange = prevLocale !== nextState.locale;
        // If the url change is only related to a hash change
        // We should not proceed. We should only change the state.
        if (!isQueryUpdating && this.onlyAHashChange(cleanedAs) && !localeChange) {
            nextState.asPath = cleanedAs;
            Router.events.emit('hashChangeStart', as, routeProps);
            // TODO: do we need the resolved href when only a hash change?
            this.changeState(method, url, as, {
                ...options,
                scroll: false
            });
            if (scroll) {
                this.scrollToHash(cleanedAs);
            }
            try {
                await this.set(nextState, this.components[nextState.route], null);
            } catch (err) {
                if ((0, _iserror.default)(err) && err.cancelled) {
                    Router.events.emit('routeChangeError', err, cleanedAs, routeProps);
                }
                throw err;
            }
            Router.events.emit('hashChangeComplete', as, routeProps);
            return true;
        }
        let parsed = (0, _parserelativeurl.parseRelativeUrl)(url);
        let { pathname, query } = parsed;
        // The build manifest needs to be loaded before auto-static dynamic pages
        // get their query parameters to allow ensuring they can be parsed properly
        // when rewritten to
        let pages, rewrites;
        try {
            [pages, { __rewrites: rewrites }] = await Promise.all([
                this.pageLoader.getPageList(),
                (0, _routeloader.getClientBuildManifest)(),
                this.pageLoader.getMiddleware()
            ]);
        } catch (err) {
            // If we fail to resolve the page list or client-build manifest, we must
            // do a server-side transition:
            handleHardNavigation({
                url: as,
                router: this
            });
            return false;
        }
        // If asked to change the current URL we should reload the current page
        // (not location.reload() but reload getInitialProps and other Next.js stuffs)
        // We also need to set the method = replaceState always
        // as this should not go into the history (That's how browsers work)
        // We should compare the new asPath to the current asPath, not the url
        if (!this.urlIsNew(cleanedAs) && !localeChange) {
            method = 'replaceState';
        }
        // we need to resolve the as value using rewrites for dynamic SSG
        // pages to allow building the data URL correctly
        let resolvedAs = as;
        // url and as should always be prefixed with basePath by this
        // point by either next/link or router.push/replace so strip the
        // basePath from the pathname to match the pages dir 1-to-1
        pathname = pathname ? (0, _removetrailingslash.removeTrailingSlash)((0, _removebasepath.removeBasePath)(pathname)) : pathname;
        let route = (0, _removetrailingslash.removeTrailingSlash)(pathname);
        const parsedAsPathname = as.startsWith('/') && (0, _parserelativeurl.parseRelativeUrl)(as).pathname;
        // if we detected the path as app route during prefetching
        // trigger hard navigation
        if ((_this_components_pathname = this.components[pathname]) == null ? void 0 : _this_components_pathname.__appRouter) {
            handleHardNavigation({
                url: as,
                router: this
            });
            return new Promise(()=>{});
        }
        const isMiddlewareRewrite = !!(parsedAsPathname && route !== parsedAsPathname && (!(0, _isdynamic.isDynamicRoute)(route) || !(0, _routematcher.getRouteMatcher)((0, _routeregex.getRouteRegex)(route))(parsedAsPathname)));
        // we don't attempt resolve asPath when we need to execute
        // middleware as the resolving will occur server-side
        const isMiddlewareMatch = !options.shallow && await matchesMiddleware({
            asPath: as,
            locale: nextState.locale,
            router: this
        });
        if (isQueryUpdating && isMiddlewareMatch) {
            shouldResolveHref = false;
        }
        if (shouldResolveHref && pathname !== '/_error') {
            options._shouldResolveHref = true;
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            } else {
                parsed.pathname = resolveDynamicRoute(pathname, pages);
                if (parsed.pathname !== pathname) {
                    pathname = parsed.pathname;
                    parsed.pathname = (0, _addbasepath.addBasePath)(pathname);
                    if (!isMiddlewareMatch) {
                        url = (0, _formaturl.formatWithValidation)(parsed);
                    }
                }
            }
        }
        if (!(0, _islocalurl.isLocalURL)(as)) {
            if ("TURBOPACK compile-time truthy", 1) {
                throw new Error('Invalid href: "' + url + '" and as: "' + as + '", received relative href and external as' + "\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as");
            }
            handleHardNavigation({
                url: as,
                router: this
            });
            return false;
        }
        resolvedAs = (0, _removelocale.removeLocale)((0, _removebasepath.removeBasePath)(resolvedAs), nextState.locale);
        route = (0, _removetrailingslash.removeTrailingSlash)(pathname);
        let routeMatch = false;
        if ((0, _isdynamic.isDynamicRoute)(route)) {
            const parsedAs = (0, _parserelativeurl.parseRelativeUrl)(resolvedAs);
            const asPathname = parsedAs.pathname;
            const routeRegex = (0, _routeregex.getRouteRegex)(route);
            routeMatch = (0, _routematcher.getRouteMatcher)(routeRegex)(asPathname);
            const shouldInterpolate = route === asPathname;
            const interpolatedAs = shouldInterpolate ? (0, _interpolateas.interpolateAs)(route, asPathname, query) : {};
            if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {
                const missingParams = Object.keys(routeRegex.groups).filter((param)=>!query[param] && !routeRegex.groups[param].optional);
                if (missingParams.length > 0 && !isMiddlewareMatch) {
                    if ("TURBOPACK compile-time truthy", 1) {
                        console.warn("" + (shouldInterpolate ? "Interpolating href" : "Mismatching `as` and `href`") + " failed to manually provide " + ("the params: " + missingParams.join(', ') + " in the `href`'s `query`"));
                    }
                    throw new Error((shouldInterpolate ? "The provided `href` (" + url + ") value is missing query values (" + missingParams.join(', ') + ") to be interpolated properly. " : "The provided `as` value (" + asPathname + ") is incompatible with the `href` value (" + route + "). ") + ("Read more: https://nextjs.org/docs/messages/" + (shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as')));
                }
            } else if (shouldInterpolate) {
                as = (0, _formaturl.formatWithValidation)(Object.assign({}, parsedAs, {
                    pathname: interpolatedAs.result,
                    query: (0, _omit.omit)(query, interpolatedAs.params)
                }));
            } else {
                // Merge params into `query`, overwriting any specified in search
                Object.assign(query, routeMatch);
            }
        }
        if (!isQueryUpdating) {
            Router.events.emit('routeChangeStart', as, routeProps);
        }
        const isErrorRoute = this.pathname === '/404' || this.pathname === '/_error';
        try {
            var _self___NEXT_DATA___props_pageProps, _self___NEXT_DATA___props, _routeInfo_props;
            let routeInfo = await this.getRouteInfo({
                route,
                pathname,
                query,
                as,
                resolvedAs,
                routeProps,
                locale: nextState.locale,
                isPreview: nextState.isPreview,
                hasMiddleware: isMiddlewareMatch,
                unstable_skipClientCache: options.unstable_skipClientCache,
                isQueryUpdating: isQueryUpdating && !this.isFallback,
                isMiddlewareRewrite
            });
            if (!isQueryUpdating && !options.shallow) {
                await this._bfl(as, 'resolvedAs' in routeInfo ? routeInfo.resolvedAs : undefined, nextState.locale);
            }
            if ('route' in routeInfo && isMiddlewareMatch) {
                pathname = routeInfo.route || route;
                route = pathname;
                if (!routeProps.shallow) {
                    query = Object.assign({}, routeInfo.query || {}, query);
                }
                const cleanedParsedPathname = (0, _hasbasepath.hasBasePath)(parsed.pathname) ? (0, _removebasepath.removeBasePath)(parsed.pathname) : parsed.pathname;
                if (routeMatch && pathname !== cleanedParsedPathname) {
                    Object.keys(routeMatch).forEach((key)=>{
                        if (routeMatch && query[key] === routeMatch[key]) {
                            delete query[key];
                        }
                    });
                }
                if ((0, _isdynamic.isDynamicRoute)(pathname)) {
                    const prefixedAs = !routeProps.shallow && routeInfo.resolvedAs ? routeInfo.resolvedAs : (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(new URL(as, location.href).pathname, nextState.locale), true);
                    let rewriteAs = prefixedAs;
                    if ((0, _hasbasepath.hasBasePath)(rewriteAs)) {
                        rewriteAs = (0, _removebasepath.removeBasePath)(rewriteAs);
                    }
                    if ("TURBOPACK compile-time falsy", 0) {
                        "TURBOPACK unreachable";
                    }
                    const routeRegex = (0, _routeregex.getRouteRegex)(pathname);
                    const curRouteMatch = (0, _routematcher.getRouteMatcher)(routeRegex)(new URL(rewriteAs, location.href).pathname);
                    if (curRouteMatch) {
                        Object.assign(query, curRouteMatch);
                    }
                }
            }
            // If the routeInfo brings a redirect we simply apply it.
            if ('type' in routeInfo) {
                if (routeInfo.type === 'redirect-internal') {
                    return this.change(method, routeInfo.newUrl, routeInfo.newAs, options);
                } else {
                    handleHardNavigation({
                        url: routeInfo.destination,
                        router: this
                    });
                    return new Promise(()=>{});
                }
            }
            const component = routeInfo.Component;
            if (component && component.unstable_scriptLoader) {
                const scripts = [].concat(component.unstable_scriptLoader());
                scripts.forEach((script)=>{
                    (0, _script.handleClientScriptLoad)(script.props);
                });
            }
            // handle redirect on client-transition
            if ((routeInfo.__N_SSG || routeInfo.__N_SSP) && routeInfo.props) {
                if (routeInfo.props.pageProps && routeInfo.props.pageProps.__N_REDIRECT) {
                    // Use the destination from redirect without adding locale
                    options.locale = false;
                    const destination = routeInfo.props.pageProps.__N_REDIRECT;
                    // check if destination is internal (resolves to a page) and attempt
                    // client-navigation if it is falling back to hard navigation if
                    // it's not
                    if (destination.startsWith('/') && routeInfo.props.pageProps.__N_REDIRECT_BASE_PATH !== false) {
                        const parsedHref = (0, _parserelativeurl.parseRelativeUrl)(destination);
                        parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);
                        const { url: newUrl, as: newAs } = prepareUrlAs(this, destination, destination);
                        return this.change(method, newUrl, newAs, options);
                    }
                    handleHardNavigation({
                        url: destination,
                        router: this
                    });
                    return new Promise(()=>{});
                }
                nextState.isPreview = !!routeInfo.props.__N_PREVIEW;
                // handle SSG data 404
                if (routeInfo.props.notFound === SSG_DATA_NOT_FOUND) {
                    let notFoundRoute;
                    try {
                        await this.fetchComponent('/404');
                        notFoundRoute = '/404';
                    } catch (_) {
                        notFoundRoute = '/_error';
                    }
                    routeInfo = await this.getRouteInfo({
                        route: notFoundRoute,
                        pathname: notFoundRoute,
                        query,
                        as,
                        resolvedAs,
                        routeProps: {
                            shallow: false
                        },
                        locale: nextState.locale,
                        isPreview: nextState.isPreview,
                        isNotFound: true
                    });
                    if ('type' in routeInfo) {
                        throw new Error("Unexpected middleware effect on /404");
                    }
                }
            }
            if (isQueryUpdating && this.pathname === '/_error' && ((_self___NEXT_DATA___props = self.__NEXT_DATA__.props) == null ? void 0 : (_self___NEXT_DATA___props_pageProps = _self___NEXT_DATA___props.pageProps) == null ? void 0 : _self___NEXT_DATA___props_pageProps.statusCode) === 500 && ((_routeInfo_props = routeInfo.props) == null ? void 0 : _routeInfo_props.pageProps)) {
                // ensure statusCode is still correct for static 500 page
                // when updating query information
                routeInfo.props.pageProps.statusCode = 500;
            }
            var _routeInfo_route;
            // shallow routing is only allowed for same page URL changes.
            const isValidShallowRoute = options.shallow && nextState.route === ((_routeInfo_route = routeInfo.route) != null ? _routeInfo_route : route);
            var _options_scroll;
            const shouldScroll = (_options_scroll = options.scroll) != null ? _options_scroll : !isQueryUpdating && !isValidShallowRoute;
            const resetScroll = shouldScroll ? {
                x: 0,
                y: 0
            } : null;
            const upcomingScrollState = forcedScroll != null ? forcedScroll : resetScroll;
            // the new state that the router gonna set
            const upcomingRouterState = {
                ...nextState,
                route,
                pathname,
                query,
                asPath: cleanedAs,
                isFallback: false
            };
            // When the page being rendered is the 404 page, we should only update the
            // query parameters. Route changes here might add the basePath when it
            // wasn't originally present. This is also why this block is before the
            // below `changeState` call which updates the browser's history (changing
            // the URL).
            if (isQueryUpdating && isErrorRoute) {
                var _self___NEXT_DATA___props_pageProps1, _self___NEXT_DATA___props1, _routeInfo_props1;
                routeInfo = await this.getRouteInfo({
                    route: this.pathname,
                    pathname: this.pathname,
                    query,
                    as,
                    resolvedAs,
                    routeProps: {
                        shallow: false
                    },
                    locale: nextState.locale,
                    isPreview: nextState.isPreview,
                    isQueryUpdating: isQueryUpdating && !this.isFallback
                });
                if ('type' in routeInfo) {
                    throw new Error("Unexpected middleware effect on " + this.pathname);
                }
                if (this.pathname === '/_error' && ((_self___NEXT_DATA___props1 = self.__NEXT_DATA__.props) == null ? void 0 : (_self___NEXT_DATA___props_pageProps1 = _self___NEXT_DATA___props1.pageProps) == null ? void 0 : _self___NEXT_DATA___props_pageProps1.statusCode) === 500 && ((_routeInfo_props1 = routeInfo.props) == null ? void 0 : _routeInfo_props1.pageProps)) {
                    // ensure statusCode is still correct for static 500 page
                    // when updating query information
                    routeInfo.props.pageProps.statusCode = 500;
                }
                try {
                    await this.set(upcomingRouterState, routeInfo, upcomingScrollState);
                } catch (err) {
                    if ((0, _iserror.default)(err) && err.cancelled) {
                        Router.events.emit('routeChangeError', err, cleanedAs, routeProps);
                    }
                    throw err;
                }
                return true;
            }
            Router.events.emit('beforeHistoryChange', as, routeProps);
            this.changeState(method, url, as, options);
            // for query updates we can skip it if the state is unchanged and we don't
            // need to scroll
            // https://github.com/vercel/next.js/issues/37139
            const canSkipUpdating = isQueryUpdating && !upcomingScrollState && !readyStateChange && !localeChange && (0, _comparestates.compareRouterStates)(upcomingRouterState, this.state);
            if (!canSkipUpdating) {
                try {
                    await this.set(upcomingRouterState, routeInfo, upcomingScrollState);
                } catch (e) {
                    if (e.cancelled) routeInfo.error = routeInfo.error || e;
                    else throw e;
                }
                if (routeInfo.error) {
                    if (!isQueryUpdating) {
                        Router.events.emit('routeChangeError', routeInfo.error, cleanedAs, routeProps);
                    }
                    throw routeInfo.error;
                }
                if ("TURBOPACK compile-time falsy", 0) {
                    "TURBOPACK unreachable";
                }
                if (!isQueryUpdating) {
                    Router.events.emit('routeChangeComplete', as, routeProps);
                }
                // A hash mark # is the optional last part of a URL
                const hashRegex = /#.+$/;
                if (shouldScroll && hashRegex.test(as)) {
                    this.scrollToHash(as);
                }
            }
            return true;
        } catch (err) {
            if ((0, _iserror.default)(err) && err.cancelled) {
                return false;
            }
            throw err;
        }
    }
    changeState(method, url, as, options) {
        if (options === void 0) options = {};
        if ("TURBOPACK compile-time truthy", 1) {
            if (typeof window.history === 'undefined') {
                console.error("Warning: window.history is not available.");
                return;
            }
            if (typeof window.history[method] === 'undefined') {
                console.error("Warning: window.history." + method + " is not available");
                return;
            }
        }
        if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
            this._shallow = options.shallow;
            window.history[method]({
                url,
                as,
                options,
                __N: true,
                key: this._key = method !== 'pushState' ? this._key : createKey()
            }, // Passing the empty string here should be safe against future changes to the method.
            // https://developer.mozilla.org/docs/Web/API/History/replaceState
            '', as);
        }
    }
    async handleRouteInfoError(err, pathname, query, as, routeProps, loadErrorFail) {
        if (err.cancelled) {
            // bubble up cancellation errors
            throw err;
        }
        if ((0, _routeloader.isAssetError)(err) || loadErrorFail) {
            Router.events.emit('routeChangeError', err, as, routeProps);
            // If we can't load the page it could be one of following reasons
            //  1. Page doesn't exists
            //  2. Page does exist in a different zone
            //  3. Internal error while loading the page
            // So, doing a hard reload is the proper way to deal with this.
            handleHardNavigation({
                url: as,
                router: this
            });
            // Changing the URL doesn't block executing the current code path.
            // So let's throw a cancellation error stop the routing logic.
            throw buildCancellationError();
        }
        console.error(err);
        try {
            let props;
            const { page: Component, styleSheets } = await this.fetchComponent('/_error');
            const routeInfo = {
                props,
                Component,
                styleSheets,
                err,
                error: err
            };
            if (!routeInfo.props) {
                try {
                    routeInfo.props = await this.getInitialProps(Component, {
                        err,
                        pathname,
                        query
                    });
                } catch (gipErr) {
                    console.error('Error in error page `getInitialProps`: ', gipErr);
                    routeInfo.props = {};
                }
            }
            return routeInfo;
        } catch (routeInfoErr) {
            return this.handleRouteInfoError((0, _iserror.default)(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + ''), pathname, query, as, routeProps, true);
        }
    }
    async getRouteInfo(param) {
        let { route: requestedRoute, pathname, query, as, resolvedAs, routeProps, locale, hasMiddleware, isPreview, unstable_skipClientCache, isQueryUpdating, isMiddlewareRewrite, isNotFound } = param;
        /**
     * This `route` binding can change if there's a rewrite
     * so we keep a reference to the original requested route
     * so we can store the cache for it and avoid re-requesting every time
     * for shallow routing purposes.
     */ let route = requestedRoute;
        try {
            var _data_effect, _data_effect1, _data_effect2, _data_response;
            let existingInfo = this.components[route];
            if (routeProps.shallow && existingInfo && this.route === route) {
                return existingInfo;
            }
            const handleCancelled = getCancelledHandler({
                route,
                router: this
            });
            if (hasMiddleware) {
                existingInfo = undefined;
            }
            let cachedRouteInfo = ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : undefined;
            const isBackground = isQueryUpdating;
            const fetchNextDataParams = {
                dataHref: this.pageLoader.getDataHref({
                    href: (0, _formaturl.formatWithValidation)({
                        pathname,
                        query
                    }),
                    skipInterpolation: true,
                    asPath: isNotFound ? '/404' : resolvedAs,
                    locale
                }),
                hasMiddleware: true,
                isServerRender: this.isSsr,
                parseJSON: true,
                inflightCache: isBackground ? this.sbc : this.sdc,
                persistCache: !isPreview,
                isPrefetch: false,
                unstable_skipClientCache,
                isBackground
            };
            let data = isQueryUpdating && !isMiddlewareRewrite ? null : await withMiddlewareEffects({
                fetchData: ()=>fetchNextData(fetchNextDataParams),
                asPath: isNotFound ? '/404' : resolvedAs,
                locale: locale,
                router: this
            }).catch((err)=>{
                // we don't hard error during query updating
                // as it's un-necessary and doesn't need to be fatal
                // unless it is a fallback route and the props can't
                // be loaded
                if (isQueryUpdating) {
                    return null;
                }
                throw err;
            });
            // when rendering error routes we don't apply middleware
            // effects
            if (data && (pathname === '/_error' || pathname === '/404')) {
                data.effect = undefined;
            }
            if (isQueryUpdating) {
                if (!data) {
                    data = {
                        json: self.__NEXT_DATA__.props
                    };
                } else {
                    data.json = self.__NEXT_DATA__.props;
                }
            }
            handleCancelled();
            if ((data == null ? void 0 : (_data_effect = data.effect) == null ? void 0 : _data_effect.type) === 'redirect-internal' || (data == null ? void 0 : (_data_effect1 = data.effect) == null ? void 0 : _data_effect1.type) === 'redirect-external') {
                return data.effect;
            }
            if ((data == null ? void 0 : (_data_effect2 = data.effect) == null ? void 0 : _data_effect2.type) === 'rewrite') {
                const resolvedRoute = (0, _removetrailingslash.removeTrailingSlash)(data.effect.resolvedHref);
                const pages = await this.pageLoader.getPageList();
                // during query updating the page must match although during
                // client-transition a redirect that doesn't match a page
                // can be returned and this should trigger a hard navigation
                // which is valid for incremental migration
                if (!isQueryUpdating || pages.includes(resolvedRoute)) {
                    route = resolvedRoute;
                    pathname = data.effect.resolvedHref;
                    query = {
                        ...query,
                        ...data.effect.parsedAs.query
                    };
                    resolvedAs = (0, _removebasepath.removeBasePath)((0, _normalizelocalepath.normalizeLocalePath)(data.effect.parsedAs.pathname, this.locales).pathname);
                    // Check again the cache with the new destination.
                    existingInfo = this.components[route];
                    if (routeProps.shallow && existingInfo && this.route === route && !hasMiddleware) {
                        // If we have a match with the current route due to rewrite,
                        // we can copy the existing information to the rewritten one.
                        // Then, we return the information along with the matched route.
                        return {
                            ...existingInfo,
                            route
                        };
                    }
                }
            }
            if ((0, _isapiroute.isAPIRoute)(route)) {
                handleHardNavigation({
                    url: as,
                    router: this
                });
                return new Promise(()=>{});
            }
            const routeInfo = cachedRouteInfo || await this.fetchComponent(route).then((res)=>({
                    Component: res.page,
                    styleSheets: res.styleSheets,
                    __N_SSG: res.mod.__N_SSG,
                    __N_SSP: res.mod.__N_SSP
                }));
            if ("TURBOPACK compile-time truthy", 1) {
                const { isValidElementType } = __turbopack_require__("[project]/node_modules/next/dist/compiled/react-is/index.js [app-client] (ecmascript)");
                if (!isValidElementType(routeInfo.Component)) {
                    throw new Error('The default export is not a React Component in page: "' + pathname + '"');
                }
            }
            const wasBailedPrefetch = data == null ? void 0 : (_data_response = data.response) == null ? void 0 : _data_response.headers.get('x-middleware-skip');
            const shouldFetchData = routeInfo.__N_SSG || routeInfo.__N_SSP;
            // For non-SSG prefetches that bailed before sending data
            // we clear the cache to fetch full response
            if (wasBailedPrefetch && (data == null ? void 0 : data.dataHref)) {
                delete this.sdc[data.dataHref];
            }
            const { props, cacheKey } = await this._getData(async ()=>{
                if (shouldFetchData) {
                    if ((data == null ? void 0 : data.json) && !wasBailedPrefetch) {
                        return {
                            cacheKey: data.cacheKey,
                            props: data.json
                        };
                    }
                    const dataHref = (data == null ? void 0 : data.dataHref) ? data.dataHref : this.pageLoader.getDataHref({
                        href: (0, _formaturl.formatWithValidation)({
                            pathname,
                            query
                        }),
                        asPath: resolvedAs,
                        locale
                    });
                    const fetched = await fetchNextData({
                        dataHref,
                        isServerRender: this.isSsr,
                        parseJSON: true,
                        inflightCache: wasBailedPrefetch ? {} : this.sdc,
                        persistCache: !isPreview,
                        isPrefetch: false,
                        unstable_skipClientCache
                    });
                    return {
                        cacheKey: fetched.cacheKey,
                        props: fetched.json || {}
                    };
                }
                return {
                    headers: {},
                    props: await this.getInitialProps(routeInfo.Component, {
                        pathname,
                        query,
                        asPath: as,
                        locale,
                        locales: this.locales,
                        defaultLocale: this.defaultLocale
                    })
                };
            });
            // Only bust the data cache for SSP routes although
            // middleware can skip cache per request with
            // x-middleware-cache: no-cache as well
            if (routeInfo.__N_SSP && fetchNextDataParams.dataHref && cacheKey) {
                delete this.sdc[cacheKey];
            }
            // we kick off a HEAD request in the background
            // when a non-prefetch request is made to signal revalidation
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            }
            props.pageProps = Object.assign({}, props.pageProps);
            routeInfo.props = props;
            routeInfo.route = route;
            routeInfo.query = query;
            routeInfo.resolvedAs = resolvedAs;
            this.components[route] = routeInfo;
            return routeInfo;
        } catch (err) {
            return this.handleRouteInfoError((0, _iserror.getProperError)(err), pathname, query, as, routeProps);
        }
    }
    set(state, data, resetScroll) {
        this.state = state;
        return this.sub(data, this.components['/_app'].Component, resetScroll);
    }
    /**
   * Callback to execute before replacing router state
   * @param cb callback to be executed
   */ beforePopState(cb) {
        this._bps = cb;
    }
    onlyAHashChange(as) {
        if (!this.asPath) return false;
        const [oldUrlNoHash, oldHash] = this.asPath.split('#', 2);
        const [newUrlNoHash, newHash] = as.split('#', 2);
        // Makes sure we scroll to the provided hash if the url/hash are the same
        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
            return true;
        }
        // If the urls are change, there's more than a hash change
        if (oldUrlNoHash !== newUrlNoHash) {
            return false;
        }
        // If the hash has changed, then it's a hash only change.
        // This check is necessary to handle both the enter and
        // leave hash === '' cases. The identity case falls through
        // and is treated as a next reload.
        return oldHash !== newHash;
    }
    scrollToHash(as) {
        const [, hash = ''] = as.split('#', 2);
        (0, _handlesmoothscroll.handleSmoothScroll)(()=>{
            // Scroll to top if the hash is just `#` with no value or `#top`
            // To mirror browsers
            if (hash === '' || hash === 'top') {
                window.scrollTo(0, 0);
                return;
            }
            // Decode hash to make non-latin anchor works.
            const rawHash = decodeURIComponent(hash);
            // First we check if the element by id is found
            const idEl = document.getElementById(rawHash);
            if (idEl) {
                idEl.scrollIntoView();
                return;
            }
            // If there's no element with the id, we check the `name` property
            // To mirror browsers
            const nameEl = document.getElementsByName(rawHash)[0];
            if (nameEl) {
                nameEl.scrollIntoView();
            }
        }, {
            onlyHashChange: this.onlyAHashChange(as)
        });
    }
    urlIsNew(asPath) {
        return this.asPath !== asPath;
    }
    /**
   * Prefetch page code, you may wait for the data during page rendering.
   * This feature only works in production!
   * @param url the href of prefetched page
   * @param asPath the as path of the prefetched page
   */ async prefetch(url, asPath, options) {
        if (asPath === void 0) asPath = url;
        if (options === void 0) options = {};
        // Prefetch is not supported in development mode because it would trigger on-demand-entries
        if ("TURBOPACK compile-time truthy", 1) {
            return;
        }
        "TURBOPACK unreachable";
        let parsed;
        const urlPathname = undefined;
        let pathname, query;
        const originalPathname = undefined;
        const pages = undefined;
        let resolvedAs;
        const locale = undefined;
        const isMiddlewareMatch = undefined;
        const data = undefined;
        const route = undefined;
    }
    async fetchComponent(route) {
        const handleCancelled = getCancelledHandler({
            route,
            router: this
        });
        try {
            const componentResult = await this.pageLoader.loadPage(route);
            handleCancelled();
            return componentResult;
        } catch (err) {
            handleCancelled();
            throw err;
        }
    }
    _getData(fn) {
        let cancelled = false;
        const cancel = ()=>{
            cancelled = true;
        };
        this.clc = cancel;
        return fn().then((data)=>{
            if (cancel === this.clc) {
                this.clc = null;
            }
            if (cancelled) {
                const err = new Error('Loading initial props cancelled');
                err.cancelled = true;
                throw err;
            }
            return data;
        });
    }
    getInitialProps(Component, ctx) {
        const { Component: App } = this.components['/_app'];
        const AppTree = this._wrapApp(App);
        ctx.AppTree = AppTree;
        return (0, _utils.loadGetInitialProps)(App, {
            AppTree,
            Component,
            router: this,
            ctx
        });
    }
    get route() {
        return this.state.route;
    }
    get pathname() {
        return this.state.pathname;
    }
    get query() {
        return this.state.query;
    }
    get asPath() {
        return this.state.asPath;
    }
    get locale() {
        return this.state.locale;
    }
    get isFallback() {
        return this.state.isFallback;
    }
    get isPreview() {
        return this.state.isPreview;
    }
    constructor(pathname, query, as, { initialProps, pageLoader, App, wrapApp, Component, err, subscription, isFallback, locale, locales, defaultLocale, domainLocales, isPreview }){
        // Server Data Cache (full data requests)
        this.sdc = {};
        // Server Background Cache (HEAD requests)
        this.sbc = {};
        this.isFirstPopStateEvent = true;
        this._key = createKey();
        this.onPopState = (e)=>{
            const { isFirstPopStateEvent } = this;
            this.isFirstPopStateEvent = false;
            const state = e.state;
            if (!state) {
                // We get state as undefined for two reasons.
                //  1. With older safari (< 8) and older chrome (< 34)
                //  2. When the URL changed with #
                //
                // In the both cases, we don't need to proceed and change the route.
                // (as it's already changed)
                // But we can simply replace the state with the new changes.
                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
                // So, doing the following for (1) does no harm.
                const { pathname, query } = this;
                this.changeState('replaceState', (0, _formaturl.formatWithValidation)({
                    pathname: (0, _addbasepath.addBasePath)(pathname),
                    query
                }), (0, _utils.getURL)());
                return;
            }
            // __NA is used to identify if the history entry can be handled by the app-router.
            if (state.__NA) {
                window.location.reload();
                return;
            }
            if (!state.__N) {
                return;
            }
            // Safari fires popstateevent when reopening the browser.
            if (isFirstPopStateEvent && this.locale === state.options.locale && state.as === this.asPath) {
                return;
            }
            let forcedScroll;
            const { url, as, options, key } = state;
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            }
            this._key = key;
            const { pathname } = (0, _parserelativeurl.parseRelativeUrl)(url);
            // Make sure we don't re-render on initial load,
            // can be caused by navigating back from an external site
            if (this.isSsr && as === (0, _addbasepath.addBasePath)(this.asPath) && pathname === (0, _addbasepath.addBasePath)(this.pathname)) {
                return;
            }
            // If the downstream application returns falsy, return.
            // They will then be responsible for handling the event.
            if (this._bps && !this._bps(state)) {
                return;
            }
            this.change('replaceState', url, as, Object.assign({}, options, {
                shallow: options.shallow && this._shallow,
                locale: options.locale || this.defaultLocale,
                // @ts-ignore internal value not exposed on types
                _h: 0
            }), forcedScroll);
        };
        // represents the current component key
        const route = (0, _removetrailingslash.removeTrailingSlash)(pathname);
        // set up the component cache (by route keys)
        this.components = {};
        // We should not keep the cache, if there's an error
        // Otherwise, this cause issues when when going back and
        // come again to the errored page.
        if (pathname !== '/_error') {
            this.components[route] = {
                Component,
                initial: true,
                props: initialProps,
                err,
                __N_SSG: initialProps && initialProps.__N_SSG,
                __N_SSP: initialProps && initialProps.__N_SSP
            };
        }
        this.components['/_app'] = {
            Component: App,
            styleSheets: []
        };
        // Backwards compat for Router.router.events
        // TODO: Should be remove the following major version as it was never documented
        this.events = Router.events;
        this.pageLoader = pageLoader;
        // if auto prerendered and dynamic route wait to update asPath
        // until after mount to prevent hydration mismatch
        const autoExportDynamic = (0, _isdynamic.isDynamicRoute)(pathname) && self.__NEXT_DATA__.autoExport;
        this.basePath = ("TURBOPACK compile-time value", "") || '';
        this.sub = subscription;
        this.clc = null;
        this._wrapApp = wrapApp;
        // make sure to ignore extra popState in safari on navigating
        // back from external site
        this.isSsr = true;
        this.isLocaleDomain = false;
        this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.isExperimentalCompile || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !("TURBOPACK compile-time value", false));
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
        this.state = {
            route,
            pathname,
            query,
            asPath: autoExportDynamic ? pathname : as,
            isPreview: !!isPreview,
            locale: ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : undefined,
            isFallback
        };
        this._initialMatchesMiddlewarePromise = Promise.resolve(false);
        if (typeof window !== 'undefined') {
            // make sure "as" doesn't start with double slashes or else it can
            // throw an error as it's considered invalid
            if (!as.startsWith('//')) {
                // in order for `e.state` to work on the `onpopstate` event
                // we have to register the initial route upon initialization
                const options = {
                    locale
                };
                const asPath = (0, _utils.getURL)();
                this._initialMatchesMiddlewarePromise = matchesMiddleware({
                    router: this,
                    locale,
                    asPath
                }).then((matches)=>{
                    options._shouldResolveHref = as !== pathname;
                    this.changeState('replaceState', matches ? asPath : (0, _formaturl.formatWithValidation)({
                        pathname: (0, _addbasepath.addBasePath)(pathname),
                        query
                    }), asPath, options);
                    return matches;
                });
            }
            window.addEventListener('popstate', this.onPopState);
            // enable custom scroll restoration handling when available
            // otherwise fallback to browser's default handling
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            }
        }
    }
}
Router.events = (0, _mitt.default)(); //# sourceMappingURL=router.js.map
}}),
"[project]/node_modules/next/dist/client/with-router.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return withRouter;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _jsxruntime = __turbopack_require__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _router = __turbopack_require__("[project]/node_modules/next/dist/client/router.js [app-client] (ecmascript)");
function withRouter(ComposedComponent) {
    function WithRouterWrapper(props) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(ComposedComponent, {
            router: (0, _router.useRouter)(),
            ...props
        });
    }
    WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps;
    WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;
    if ("TURBOPACK compile-time truthy", 1) {
        const name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
        WithRouterWrapper.displayName = "withRouter(" + name + ")";
    }
    return WithRouterWrapper;
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=with-router.js.map
}}),
"[project]/node_modules/next/dist/client/router.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/* global window */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    Router: null,
    createRouter: null,
    default: null,
    makePublicRouterInstance: null,
    useRouter: null,
    withRouter: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    Router: function() {
        return _router.default;
    },
    createRouter: function() {
        return createRouter;
    },
    // Export the singletonRouter and this is the public API.
    default: function() {
        return _default;
    },
    makePublicRouterInstance: function() {
        return makePublicRouterInstance;
    },
    useRouter: function() {
        return useRouter;
    },
    withRouter: function() {
        return _withrouter.default;
    }
});
const _interop_require_default = __turbopack_require__("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _router = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/shared/lib/router/router.js [app-client] (ecmascript)"));
const _routercontextsharedruntime = __turbopack_require__("[project]/node_modules/next/dist/shared/lib/router-context.shared-runtime.js [app-client] (ecmascript)");
const _iserror = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/lib/is-error.js [app-client] (ecmascript)"));
const _withrouter = /*#__PURE__*/ _interop_require_default._(__turbopack_require__("[project]/node_modules/next/dist/client/with-router.js [app-client] (ecmascript)"));
const singletonRouter = {
    router: null,
    readyCallbacks: [],
    ready (callback) {
        if (this.router) return callback();
        if (typeof window !== 'undefined') {
            this.readyCallbacks.push(callback);
        }
    }
};
// Create public properties and methods of the router in the singletonRouter
const urlPropertyFields = [
    'pathname',
    'route',
    'query',
    'asPath',
    'components',
    'isFallback',
    'basePath',
    'locale',
    'locales',
    'defaultLocale',
    'isReady',
    'isPreview',
    'isLocaleDomain',
    'domainLocales'
];
const routerEvents = [
    'routeChangeStart',
    'beforeHistoryChange',
    'routeChangeComplete',
    'routeChangeError',
    'hashChangeStart',
    'hashChangeComplete'
];
const coreMethodFields = [
    'push',
    'replace',
    'reload',
    'back',
    'prefetch',
    'beforePopState'
];
// Events is a static property on the router, the router doesn't have to be initialized to use it
Object.defineProperty(singletonRouter, 'events', {
    get () {
        return _router.default.events;
    }
});
function getRouter() {
    if (!singletonRouter.router) {
        const message = 'No router instance found.\n' + 'You should only use "next/router" on the client side of your app.\n';
        throw new Error(message);
    }
    return singletonRouter.router;
}
urlPropertyFields.forEach((field)=>{
    // Here we need to use Object.defineProperty because we need to return
    // the property assigned to the actual router
    // The value might get changed as we change routes and this is the
    // proper way to access it
    Object.defineProperty(singletonRouter, field, {
        get () {
            const router = getRouter();
            return router[field];
        }
    });
});
coreMethodFields.forEach((field)=>{
    singletonRouter[field] = function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        const router = getRouter();
        return router[field](...args);
    };
});
routerEvents.forEach((event)=>{
    singletonRouter.ready(()=>{
        _router.default.events.on(event, function() {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                args[_key] = arguments[_key];
            }
            const eventField = "on" + event.charAt(0).toUpperCase() + event.substring(1);
            const _singletonRouter = singletonRouter;
            if (_singletonRouter[eventField]) {
                try {
                    _singletonRouter[eventField](...args);
                } catch (err) {
                    console.error("Error when running the Router event: " + eventField);
                    console.error((0, _iserror.default)(err) ? err.message + "\n" + err.stack : err + '');
                }
            }
        });
    });
});
const _default = singletonRouter;
function useRouter() {
    const router = _react.default.useContext(_routercontextsharedruntime.RouterContext);
    if (!router) {
        throw new Error('NextRouter was not mounted. https://nextjs.org/docs/messages/next-router-not-mounted');
    }
    return router;
}
function createRouter() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
        args[_key] = arguments[_key];
    }
    singletonRouter.router = new _router.default(...args);
    singletonRouter.readyCallbacks.forEach((cb)=>cb());
    singletonRouter.readyCallbacks = [];
    return singletonRouter.router;
}
function makePublicRouterInstance(router) {
    const scopedRouter = router;
    const instance = {};
    for (const property of urlPropertyFields){
        if (typeof scopedRouter[property] === 'object') {
            instance[property] = Object.assign(Array.isArray(scopedRouter[property]) ? [] : {}, scopedRouter[property]) // makes sure query is not stateful
            ;
            continue;
        }
        instance[property] = scopedRouter[property];
    }
    // Events is a static property on the router, the router doesn't have to be initialized to use it
    instance.events = _router.default.events;
    coreMethodFields.forEach((field)=>{
        instance[field] = function() {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
                args[_key] = arguments[_key];
            }
            return scopedRouter[field](...args);
        };
    });
    return instance;
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=router.js.map
}}),
"[project]/node_modules/next/router.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
module.exports = __turbopack_require__("[project]/node_modules/next/dist/client/router.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/utils/invalidateNextRouterCache.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "invalidateNextRouterCache": (()=>invalidateNextRouterCache)
});
;
const invalidateNextRouterCache = ()=>{
    if (typeof window === "undefined") {
        return;
    }
    const invalidate = (cache)=>{
        Object.keys(cache).forEach((key)=>{
            delete cache[key];
        });
    };
    try {
        invalidate(window.next.router.sdc);
        invalidate(window.next.router.sbc);
    } catch (e) {
        return;
    }
};
;
 //# sourceMappingURL=invalidateNextRouterCache.js.map
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/pages/ClerkProvider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "ClerkProvider": (()=>ClerkProvider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/clerk-react/dist/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$internal$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/clerk-react/dist/internal.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$router$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/router.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/clerk-react/dist/chunk-JLDN3CXN.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$shared$2f$dist$2f$chunk$2d$TEIBNOQP$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/shared/dist/chunk-TEIBNOQP.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/clerk-react/dist/index.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$hooks$2f$useSafeLayoutEffect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/client-boundary/hooks/useSafeLayoutEffect.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$invalidateNextRouterCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/utils/invalidateNextRouterCache.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$removeBasePath$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/utils/removeBasePath.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$mergeNextClerkPropsWithEnv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/utils/mergeNextClerkPropsWithEnv.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$NextOptionsContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/client-boundary/NextOptionsContext.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$clerk$2d$js$2d$script$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/utils/clerk-js-script.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["setErrorThrowerOptions"])({
    packageName: "@clerk/nextjs"
});
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$shared$2f$dist$2f$chunk$2d$TEIBNOQP$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setClerkJsLoadingErrorPackageName"])("@clerk/nextjs");
function ClerkProvider({ children, ...props }) {
    var _a;
    const { __unstable_invokeMiddlewareOnAuthStateChange = true } = props;
    const { push, replace } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$router$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRouter"])();
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["ClerkProvider"].displayName = "ReactClerkProvider";
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$hooks$2f$useSafeLayoutEffect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSafeLayoutEffect"])({
        "ClerkProvider.useSafeLayoutEffect": ()=>{
            window.__unstable__onBeforeSetActive = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$invalidateNextRouterCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["invalidateNextRouterCache"];
        }
    }["ClerkProvider.useSafeLayoutEffect"], []);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$hooks$2f$useSafeLayoutEffect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSafeLayoutEffect"])({
        "ClerkProvider.useSafeLayoutEffect": ()=>{
            window.__unstable__onAfterSetActive = ({
                "ClerkProvider.useSafeLayoutEffect": ()=>{
                    if (__unstable_invokeMiddlewareOnAuthStateChange) {
                        void push(window.location.href);
                    }
                }
            })["ClerkProvider.useSafeLayoutEffect"];
        }
    }["ClerkProvider.useSafeLayoutEffect"], []);
    const navigate = (to)=>push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$removeBasePath$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["removeBasePath"])(to));
    const replaceNavigate = (to)=>replace((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$removeBasePath$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["removeBasePath"])(to));
    const mergedProps = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$mergeNextClerkPropsWithEnv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mergeNextClerkPropsWithEnv"])({
        ...props,
        routerPush: navigate,
        routerReplace: replaceNavigate
    });
    const initialState = ((_a = props.authServerSideProps) == null ? void 0 : _a.__clerk_ssr_state) || props.__clerk_ssr_state;
    return /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$NextOptionsContext$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClerkNextOptionsProvider"], {
        options: mergedProps
    }, /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["ClerkProvider"], {
        ...mergedProps,
        initialState
    }, /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$utils$2f$clerk$2d$js$2d$script$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClerkJSScript"], {
        router: "pages"
    }), children));
}
;
 //# sourceMappingURL=ClerkProvider.js.map
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/client-boundary/ClerkProvider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "ClerkProvider": (()=>ClerkProvider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$compat$2f$router$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/compat/router.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$app$2d$router$2f$client$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/app-router/client/ClerkProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$pages$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/pages/ClerkProvider.js [app-client] (ecmascript)");
"use client";
;
;
;
;
;
function ClerkProvider(props) {
    const router = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$compat$2f$router$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRouter"])();
    const Provider = router ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$pages$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClerkProvider"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$app$2d$router$2f$client$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClientClerkProvider"];
    return /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(Provider, {
        ...props
    });
}
;
 //# sourceMappingURL=ClerkProvider.js.map
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({
    "ClerkProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ClerkProvider"]),
    "Protect": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["Protect"]),
    "SignedIn": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["SignedIn"]),
    "SignedOut": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["SignedOut"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$client$2d$boundary$2f$ClerkProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/client-boundary/ClerkProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$clerk$2d$react$2f$dist$2f$chunk$2d$JLDN3CXN$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/clerk-react/dist/chunk-JLDN3CXN.mjs [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({
    "ClerkProvider": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["ClerkProvider"]),
    "Protect": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["Protect"]),
    "SignedIn": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["SignedIn"]),
    "SignedOut": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["SignedOut"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript) <exports>");
}}),
"[project]/node_modules/@clerk/nextjs/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "ClerkProvider": (()=>ClerkProvider),
    "Protect": (()=>Protect),
    "SignedIn": (()=>SignedIn),
    "SignedOut": (()=>SignedOut)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@clerk/nextjs/dist/esm/components.client.js [app-client] (ecmascript)");
;
;
;
;
;
const ClerkProvider = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.ClerkProvider;
const SignedIn = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.SignedIn;
const SignedOut = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.SignedOut;
const Protect = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$clerk$2f$nextjs$2f$dist$2f$esm$2f$components$2e$client$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__.Protect;
;
 //# sourceMappingURL=index.js.map
}}),
}]);

//# sourceMappingURL=node_modules_1c1d82._.js.map