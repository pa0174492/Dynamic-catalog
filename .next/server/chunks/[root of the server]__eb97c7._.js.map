{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pammi/Desktop/MERN/Dynamic-catalog/combination/PromptVision/app/api/generate-image/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { prompt } = await req.json();\r\n\r\n    const response = await fetch('https://api.stability.ai/v1/generation/stable-diffusion-xl-1024-v1-0/text-to-image', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${process.env.NEXT_PUBLIC_STABILITY_API_KEY}`,\r\n      },\r\n      body: JSON.stringify({\r\n        text_prompts: [\r\n          {\r\n            text: prompt,\r\n            weight: 1\r\n          }\r\n        ],\r\n        cfg_scale: 7,\r\n        height: 1024,\r\n        width: 1024,\r\n        steps: 30,\r\n        samples: 1\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Stability AI API error: ${response.statusText}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    const imageUrl = `data:image/png;base64,${result.artifacts[0].base64}`;\r\n\r\n    return NextResponse.json({ imageUrl });\r\n  } catch (error) {\r\n    console.error('Error generating image:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to generate image' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,IAAI;QAEjC,MAAM,WAAW,MAAM,MAAM,sFAAsF;YACjH,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,eAAe,CAAC,OAAO,2FAA6C;YACtE;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,cAAc;oBACZ;wBACE,MAAM;wBACN,QAAQ;oBACV;iBACD;gBACD,WAAW;gBACX,QAAQ;gBACR,OAAO;gBACP,OAAO;gBACP,SAAS;YACX;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,wBAAwB,EAAE,SAAS,UAAU,EAAE;QAClE;QAEA,MAAM,SAAS,MAAM,SAAS,IAAI;QAClC,MAAM,WAAW,CAAC,sBAAsB,EAAE,OAAO,SAAS,CAAC,EAAE,CAAC,MAAM,EAAE;QAEtE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAS;IACtC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}