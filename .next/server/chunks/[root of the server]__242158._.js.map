{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pammi/Desktop/MERN/Dynamic-catalog/combination/PromptVision/app/api/catalog/save/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const data = await req.json();\r\n    \r\n    // Ensure the catalogs directory exists\r\n    const catalogsDir = path.join(process.cwd(), 'public', 'catalogs');\r\n    try {\r\n      await fs.access(catalogsDir);\r\n    } catch {\r\n      await fs.mkdir(catalogsDir, { recursive: true });\r\n    }\r\n    \r\n    // Generate a unique filename for the catalog\r\n    const filename = `catalog-${Date.now()}.json`;\r\n    const filePath = path.join(catalogsDir, filename);\r\n    \r\n    // Save catalog data as JSON\r\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2), 'utf-8');\r\n    \r\n    return NextResponse.json({ \r\n      url: `/catalogs/${filename}`,\r\n      success: true \r\n    });\r\n  } catch (error) {\r\n    console.error('Error saving catalog:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to save catalog', details: error instanceof Error ? error.message : String(error) },\r\n      { status: 500 }\r\n    );\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,uCAAuC;QACvC,MAAM,cAAc,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU;QACvD,IAAI;YACF,MAAM,uGAAA,CAAA,UAAE,CAAC,MAAM,CAAC;QAClB,EAAE,OAAM;YACN,MAAM,uGAAA,CAAA,UAAE,CAAC,KAAK,CAAC,aAAa;gBAAE,WAAW;YAAK;QAChD;QAEA,6CAA6C;QAC7C,MAAM,WAAW,CAAC,QAAQ,EAAE,KAAK,GAAG,GAAG,KAAK,CAAC;QAC7C,MAAM,WAAW,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,aAAa;QAExC,4BAA4B;QAC5B,MAAM,uGAAA,CAAA,UAAE,CAAC,SAAS,CAAC,UAAU,KAAK,SAAS,CAAC,MAAM,MAAM,IAAI;QAE5D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,KAAK,CAAC,UAAU,EAAE,UAAU;YAC5B,SAAS;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAA0B,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;QAAO,GACnG;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}