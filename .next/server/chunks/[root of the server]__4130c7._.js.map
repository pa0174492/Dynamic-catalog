{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pammi/Desktop/MERN/Dynamic-catalog/combination/PromptVision/app/api/catalog/export/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\nimport puppeteer from 'puppeteer';\r\n\r\ninterface CatalogContent {\r\n  title?: string;\r\n  description?: string;\r\n  image?: string;\r\n  price?: string;\r\n  layout?: 'single' | 'grid' | 'featured';\r\n}\r\n\r\ninterface CatalogSection {\r\n  id: string;\r\n  type: 'header' | 'product' | 'grid' | 'featured';\r\n  content: CatalogContent;\r\n}\r\n\r\ninterface CatalogData {\r\n  id: string;\r\n  sections: CatalogSection[];\r\n  metadata: {\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    version: string;\r\n  };\r\n}\r\n\r\nfunction generateHtml(data: CatalogData) {\r\n  const sections = data.sections.map((section) => {\r\n    switch (section.type) {\r\n      case 'header':\r\n        return `\r\n          <div class=\"text-center my-8\">\r\n            <h1 class=\"text-4xl font-bold\">${section.content.title || ''}</h1>\r\n            <p class=\"text-gray-600 mt-4\">${section.content.description || ''}</p>\r\n          </div>\r\n        `;\r\n      case 'product':\r\n        return `\r\n          <div class=\"flex gap-8 my-8 p-6 border rounded-lg\">\r\n            <div class=\"w-1/2\">\r\n              ${section.content.image ? \r\n                `<img src=\"${section.content.image}\" alt=\"${section.content.title}\" class=\"w-full h-64 object-cover rounded\"/>` :\r\n                '<div class=\"w-full h-64 bg-gray-200 rounded\"></div>'\r\n              }\r\n            </div>\r\n            <div class=\"w-1/2 space-y-4\">\r\n              <h2 class=\"text-2xl font-bold\">${section.content.title || ''}</h2>\r\n              <p class=\"text-gray-600\">${section.content.description || ''}</p>\r\n              <p class=\"text-xl font-bold text-green-600\">${section.content.price || ''}</p>\r\n            </div>\r\n          </div>\r\n        `;\r\n      case 'grid':\r\n        return `\r\n          <div class=\"grid grid-cols-2 gap-4 my-8\">\r\n            ${[1, 2, 3, 4].map(() => `\r\n              <div class=\"border p-4 rounded\">\r\n                <div class=\"w-full h-32 bg-gray-200 rounded mb-2\"></div>\r\n                <h3 class=\"text-lg font-semibold\">Product Title</h3>\r\n                <p class=\"text-sm text-green-600\">$0.00</p>\r\n              </div>\r\n            `).join('')}\r\n          </div>\r\n        `;\r\n      default:\r\n        return '';\r\n    }\r\n  }).join('');\r\n\r\n  return `\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n      <title>Catalog - ${data.metadata?.createdAt ? new Date(data.metadata.createdAt).toLocaleDateString() : 'Generated'}</title>\r\n      <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\r\n      <style>\r\n        @page {\r\n          margin: 20px;\r\n          size: A4;\r\n        }\r\n        body {\r\n          margin: 0;\r\n          padding: 20px;\r\n          font-family: Arial, sans-serif;\r\n        }\r\n        .container {\r\n          max-width: 800px;\r\n          margin: 0 auto;\r\n        }\r\n        img {\r\n          max-width: 100%;\r\n          height: auto;\r\n        }\r\n        .page-break {\r\n          page-break-after: always;\r\n        }\r\n        @media print {\r\n          .page-break {\r\n            page-break-after: always;\r\n          }\r\n        }\r\n      </style>\r\n    </head>\r\n    <body class=\"bg-white\">\r\n      <div class=\"container\">\r\n        ${sections}\r\n      </div>\r\n    </body>\r\n    </html>\r\n  `;\r\n}\r\n\r\nasync function generatePDF(html: string, outputPath: string) {\r\n  const browser = await puppeteer.launch({\r\n    headless: 'new'\r\n  });\r\n  const page = await browser.newPage();\r\n  \r\n  // Set content and wait for network idle to ensure all resources are loaded\r\n  await page.setContent(html, { waitUntil: 'networkidle0' });\r\n  \r\n  // Set viewport and PDF options\r\n  await page.setViewport({ width: 1200, height: 800 });\r\n  \r\n  // Generate PDF\r\n  await page.pdf({\r\n    path: outputPath,\r\n    format: 'A4',\r\n    printBackground: true,\r\n    margin: {\r\n      top: '20px',\r\n      right: '20px',\r\n      bottom: '20px',\r\n      left: '20px'\r\n    }\r\n  });\r\n\r\n  await browser.close();\r\n}\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const data = await req.json() as CatalogData;\r\n    \r\n    // Ensure the exports directory exists\r\n    const exportsDir = path.join(process.cwd(), 'public', 'exports');\r\n    try {\r\n      await fs.access(exportsDir);\r\n    } catch {\r\n      await fs.mkdir(exportsDir, { recursive: true });\r\n    }\r\n\r\n    // Generate HTML content\r\n    const html = generateHtml(data);\r\n    const timestamp = Date.now();\r\n\r\n    // Save HTML version\r\n    const htmlFilename = `catalog-${timestamp}.html`;\r\n    const htmlPath = path.join(exportsDir, htmlFilename);\r\n    await fs.writeFile(htmlPath, html, 'utf-8');\r\n\r\n    // Generate and save PDF version\r\n    const pdfFilename = `catalog-${timestamp}.pdf`;\r\n    const pdfPath = path.join(exportsDir, pdfFilename);\r\n    await generatePDF(html, pdfPath);\r\n\r\n    return NextResponse.json({ \r\n      htmlUrl: `/exports/${htmlFilename}`,\r\n      pdfUrl: `/exports/${pdfFilename}`,\r\n      success: true \r\n    });\r\n  } catch (error) {\r\n    console.error('Error exporting catalog:', error);\r\n    return NextResponse.json(\r\n      { error: 'Failed to export catalog', details: error instanceof Error ? error.message : String(error) },\r\n      { status: 500 }\r\n    );\r\n  }\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}